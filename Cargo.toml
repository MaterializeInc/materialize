[workspace]
members = [
    "src/adapter",
    "src/alloc",
    "src/audit-log",
    "src/avro",
    "src/avro-derive",
    "src/aws-s3-util",
    "src/build-id",
    "src/build-info",
    "src/ccsr",
    "src/cloud-api",
    "src/cluster",
    "src/clusterd",
    "src/cluster-client",
    "src/compute",
    "src/compute-client",
    "src/controller",
    "src/environmentd",
    "src/expr",
    "src/expr-test-util",
    "src/frontegg-auth",
    "src/frontegg-client",
    "src/http-util",
    "src/interchange",
    "src/kafka-util",
    "src/lowertest",
    "src/lowertest-derive",
    "src/metabase",
    "src/mz",
    "src/npm",
    "src/orchestrator",
    "src/orchestrator-kubernetes",
    "src/orchestrator-process",
    "src/orchestrator-tracing",
    "src/ore",
    "src/persist",
    "src/persist-client",
    "src/persist-types",
    "src/pgcopy",
    "src/pgrepr",
    "src/pgrepr-consts",
    "src/pgtest",
    "src/pgwire",
    "src/pid-file",
    "src/postgres-util",
    "src/prof",
    "src/proto",
    "src/repr",
    "src/repr-test-util",
    "src/rocksdb",
    "src/s3-datagen",
    "src/secrets",
    "src/segment",
    "src/service",
    "src/ssh-util",
    "src/sql",
    "src/sql-parser",
    "src/sqllogictest",
    "src/stash",
    "src/stash-debug",
    "src/storage",
    "src/storage-client",
    "src/testdrive",
    "src/timely-util",
    "src/transform",
    "src/cloud-resources",
    "src/walkabout",
    "src/workspace-hack",
    "test/metabase/smoketest",
    "test/test-util",
]
# Use Cargo's new feature resolver, which can handle target-specific features.
# Explicit opt-in is required even with the 2021 edition because we use a
# virtual workspace.
# See: https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html#cargos-new-feature-resolver
resolver = "2"

[workspace.package]
edition = "2021"
rust-version = "1.68.2"

[workspace.dependencies]
aho-corasick = "0.7.20"
anyhow = "1.0.66"
arrow2 = "0.16.0"
askama = { version = "0.11.1", default-features = false }
assert_cmd = "2.0.5"
async-compression = "0.3.15"
async-stream = "0.3.3"
async-trait = "0.1.68"
atty = "0.2.14"
aws-config = { version = "0.55", default-features = false }
aws-credential-types = "0.55"
aws-sdk-s3 = { version = "0.26", default-features = false }
aws-sdk-sts = { version = "0.26", default-features = false }
aws-types = "0.55"
axum = "0.6.7"
backtrace = "0.3.66"
base64 = "0.13.1"
bincode = "1.3.3"
bitflags = "1.3.2"
bytefmt = "0.1.7"
byteorder = "1.4.3"
bytes = "1.3.0"
bytesize = "1.1.0"
cc = "1.0.78"
cfg-if = "1.0.0"
chrono = { version = "0.4.23", default-features = false }
chrono-tz = "0.8.1"
clap = "3.2.24"
columnation = { git = "https://github.com/frankmcsherry/columnation" }
compile-time-run = "0.2.12"
console-subscriber = { git = "https://github.com/MaterializeInc/tokio-console.git" }
const_format = "0.2.30"
crc32fast = "1.3.2"
criterion = "0.4.0"
crossbeam = "0.8.2"
crossbeam-channel = "0.5.8"
csv = "1.1.6"
csv-core = "0.1.10"
ctor = "0.1.26"
datadriven = "0.6.0"
deadpool-postgres = "0.10.3"
dec = "0.4.8"
derivative = "2.2.0"
differential-dataflow = { git = "https://github.com/TimelyDataflow/differential-dataflow.git" }
digest = "0.10.6"
dirs = "4.0.0"
either = "1.8.0"
encoding = "0.2.0"
enum_dispatch = "0.3.11"
enum-iterator = "1.2.0"
enum-kinds = "0.5.1"
fail = "0.5.1"
fallible-iterator = "0.2.0"
fast-float = "0.2.0"
flate2 = "1.0.24"
futures = "0.3.25"
futures-core = "0.3.25"
futures-task = "0.3.25"
futures-util = "0.3.25"
globset = "0.4.9"
h2 = "0.3.13"
headers = "0.3.8"
hex = "0.4.3"
hex-literal = "0.3.4"
hmac = "0.12.1"
http = "0.2.8"
humantime = "2.1.0"
hyper = "0.14.23"
hyper-openssl = "0.9.2"
hyper-tls = "0.5.0"
include_dir = "0.7.3"
indexmap = { version = "1.9.1", default-features = false }
indicatif = "0.17.2"
itertools = "0.10.5"
jsonwebtoken = "8.2.0"
junit-report = "0.7.1"
k8s-openapi = "0.16.0"
kube = "0.77.0"
launchdarkly-server-sdk = { git = "https://github.com/MaterializeInc/rust-server-sdk", default_features = false }
libc = "0.2.138"
maplit = "1.0.2"
md-5 = "0.10.5"
mime = "0.3.16"
mysql_async = "0.31.2"
native-tls = "0.2.11"
nix = "0.26.1"
num = "0.4.0"
num_cpus = "1.14.0"
num_enum = "0.5.7"
num-derive = "0.3"
num-traits = "0.2.15"
once_cell = "1.16.0"
open = "3.2.0"
openssh = { version = "0.9.8", default-features = false }
openssh-mux-client = "0.15.5"
openssl = "0.10.48"
openssl-probe = "0.1.2"
openssl-sys = "0.9.80"
opentelemetry = { git = "https://github.com/MaterializeInc/opentelemetry-rust.git" }
opentelemetry-otlp = { git = "https://github.com/MaterializeInc/opentelemetry-rust.git" }
ordered-float = "3.4.0"
os_info = "3.5.1"
parquet2 = { version = "0.17.1", default-features = false }
paste = "1.0.11"
phf = "0.11.1"
phf_codegen = "0.11.1"
pin-project = "1.0.12"
polonius-the-crab = "0.3.1"
postgres = { git = "https://github.com/MaterializeInc/rust-postgres" }
postgres_array = { git = "https://github.com/MaterializeInc/rust-postgres-array" }
postgres-openssl = { git = "https://github.com/MaterializeInc/rust-postgres" }
postgres-protocol = { git = "https://github.com/MaterializeInc/rust-postgres" }
pprof = "0.11.1"
predicates = "2.1.4"
proc-macro2 = "1.0.47"
prometheus = { version = "0.13.3", default-features = false }
proptest = { git = "https://github.com/MaterializeInc/proptest.git", default-features = false, features = ["std"] }
proptest-derive = { git = "https://github.com/MaterializeInc/proptest.git" }
prost = "0.11.9"
prost-build = "0.11.9"
prost-reflect = "0.9.2"
protobuf-native = "0.2.1"
protobuf-src = "1.1.0"
quote = "1.0.23"
rand = "0.8.5"
rdkafka = { git = "https://github.com/MaterializeInc/rust-rdkafka.git" }
rdkafka-sys = { git = "https://github.com/MaterializeInc/rust-rdkafka.git" }
regex = "1.7.0"
regex-syntax = "0.6.28"
reqwest = "0.11.13"
rlimit = "0.8.3"
rocksdb = { version = "0.21.0", default-features = false }
rpassword = "7.2.0"
ryu = "1.0.12"
schemars = "0.8.11"
scopeguard = "1.1.0"
security-framework = "2.7.0"
segment = { version = "0.2.1", default-features = false }
semver = "1.0.16"
sentry = "0.29.1"
sentry-tracing = "0.29.1"
serde = "1.0.152"
serde_json = "1.0.89"
serde_plain = "1.0.1"
serde_regex = "1.1.0"
serde_urlencoded = "0.7.1"
sha1 = "0.10.5"
sha2 = "0.10.6"
shell-words = "1.1.0"
similar = "2.2.1"
smallvec = "1.10.0"
snap = "1.1.0"
socket2 = "0.4.7"
ssh-key = "0.4.3"
stacker = "0.1.15"
syn = "1.0.107"
sysctl = "0.5.4"
sysinfo = "0.27.2"
tar = "0.4.38"
tempfile = "3.3.0"
termcolor = "1.1.3"
thiserror = "1.0.37"
tiberius = { version = "0.11.3", default-features = false }
tikv-jemalloc-ctl = "0.5.0"
tikv-jemallocator = "0.5.0"
time = "0.3.17"
timely = { git = "https://github.com/TimelyDataflow/timely-dataflow", default-features = false }
tokio = "1.27.0"
tokio-native-tls = "0.3.0"
tokio-openssl = "0.6.3"
tokio-postgres = { git = "https://github.com/MaterializeInc/rust-postgres" }
tokio-stream = "0.1.11"
tokio-test = "0.4.2"
tokio-util = "0.7.4"
toml = "0.5.9"
tonic = "0.8.2"
tonic-build = "0.8.2"
tower = "0.4.13"
tower-http = "0.3.5"
tracing = "0.1.37"
tracing-core = "0.1.30"
tracing-opentelemetry = { git = "https://github.com/MaterializeInc/tracing.git", branch = "v0.1.x" }
tracing-subscriber = "0.3.16"
tungstenite = "0.18.0"
typemap_rev = "0.3.0"
uncased = "0.9.7"
unicode-width = "0.1.10"
url = "2.3.1"
uuid = "1.2.2"
walkdir = "2.3.2"
yansi = "0.5.1"
zeroize = "1.5.7"

mz-adapter = { path = "src/adapter" }
mz-alloc = { path = "src/alloc" }
mz-audit-log = { path = "src/audit-log" }
mz-avro = { path = "src/avro" }
mz-avro-derive = { path = "src/avro-derive" }
mz-aws-s3-util = { path = "src/aws-s3-util" }
mz-build-id = { path = "src/build-id" }
mz-build-info = { path = "src/build-info" }
mz-ccsr = { path = "src/ccsr" }
mz-cloud-api = { path = "src/cloud-api" }
mz-cloud-resources = { path = "src/cloud-resources" }
mz-cluster = { path = "src/cluster" }
mz-cluster-client = { path = "src/cluster-client" }
mz-clusterd = { path = "src/clusterd" }
mz-compute = { path = "src/compute" }
mz-compute-client = { path = "src/compute-client" }
mz-controller = { path = "src/controller" }
mz-environmentd = { path = "src/environmentd" }
mz-expr = { path = "src/expr" }
mz-expr-test-util = { path = "src/expr-test-util" }
mz-frontegg-auth = { path = "src/frontegg-auth" }
mz-frontegg-client = { path = "src/frontegg-client" }
mz-http-util = { path = "src/http-util" }
mz-interchange = { path = "src/interchange" }
mz-kafka-util = { path = "src/kafka-util" }
mz-lowertest = { path = "src/lowertest" }
mz-lowertest-derive = { path = "src/lowertest-derive" }
mz-metabase = { path = "src/metabase" }
mz-mz = { path = "src/mz" }
mz-npm = { path = "src/npm" }
mz-orchestrator = { path = "src/orchestrator" }
mz-orchestrator-kubernetes = { path = "src/orchestrator-kubernetes" }
mz-orchestrator-process = { path = "src/orchestrator-process" }
mz-orchestrator-tracing = { path = "src/orchestrator-tracing" }
mz-ore = { path = "src/ore" }
mz-persist = { path = "src/persist" }
mz-persist-client = { path = "src/persist-client" }
mz-persist-types = { path = "src/persist-types" }
mz-pgcopy = { path = "src/pgcopy" }
mz-pgrepr = { path = "src/pgrepr" }
mz-pgrepr-consts = { path = "src/pgrepr-consts" }
mz-pgtest = { path = "src/pgtest" }
mz-pgwire = { path = "src/pgwire" }
mz-pid-file = { path = "src/pid-file" }
mz-postgres-util = { path = "src/postgres-util" }
mz-prof = { path = "src/prof" }
mz-proto = { path = "src/proto" }
mz-repr = { path = "src/repr" }
mz-repr-test-util = { path = "src/repr-test-util" }
mz-rocksdb = { path = "src/rocksdb" }
mz-s3-datagen = { path = "src/s3-datagen" }
mz-secrets = { path = "src/secrets" }
mz-segment = { path = "src/segment" }
mz-service = { path = "src/service" }
mz-sql = { path = "src/sql" }
mz-sql-parser = { path = "src/sql-parser" }
mz-sqllogictest = { path = "src/sqllogictest" }
mz-ssh-util = { path = "src/ssh-util" }
mz-stash = { path = "src/stash" }
mz-stash-debug = { path = "src/stash-debug" }
mz-storage = { path = "src/storage" }
mz-storage-client = { path = "src/storage-client" }
mz-testdrive = { path = "src/testdrive" }
mz-timely-util = { path = "src/timely-util" }
mz-transform = { path = "src/transform" }
mz-walkabout = { path = "src/walkabout" }

[profile.dev]
# TODO(gusywnn|benesch): remove this when incremental ice's are improved
incremental = false

[profile.dev.package]
# Compile the backtrace crate and its dependencies with all optimizations, even
# in dev builds, since otherwise backtraces can take 20s+ to symbolize. With
# optimizations enabled, symbolizing a backtrace takes less than 1s.
addr2line = { opt-level = 3 }
adler = { opt-level = 3 }
backtrace = { opt-level = 3 }
gimli = { opt-level = 3 }
miniz_oxide = { opt-level = 3 }
object = { opt-level = 3 }
rustc-demangle = { opt-level = 3 }

[profile.release]
# Emit only the line info tables, not full debug info, in release builds, to
# substantially reduce the size of the debug info. Line info tables are enough
# to correctly symbolicate a backtrace, but do not produce an ideal interactive
# debugger experience. This seems to be the right tradeoff for release builds:
# it's unlikely we're going to get interactive access to a debugger in
# production installations, but we still want useful crash reports.
debug = 1

# Use this section only to change the source of dependencies that appear as
# transitive dependencies of other external dependencies in the dependency
# graph. For everything else (e.g. rust-postgres, rdkafka,
# differential-dataflow, proptest, timely), use a `git` source directly in each
# Cargo.toml.
#
# The reasons for each of these overrides are listed in deny.toml.
[patch.crates-io]
chrono = { git = "https://github.com/chronotope/chrono.git", branch = "0.4.x" }
hashbrown = { git = "https://github.com/MaterializeInc/hashbrown.git" }
postgres-protocol = { git = "https://github.com/MaterializeInc/rust-postgres" }
tokio-postgres = { git = "https://github.com/MaterializeInc/rust-postgres" }
serde-value = { git = "https://github.com/MaterializeInc/serde-value.git" }
vte = { git = "https://github.com/alacritty/vte" }
prost = { git = "https://github.com/MaterializeInc/prost", branch = "btv" }
prost-build = { git = "https://github.com/MaterializeInc/prost", branch = "btv" }
prost-derive = { git = "https://github.com/MaterializeInc/prost", branch = "btv" }
prost-types = { git = "https://github.com/MaterializeInc/prost", branch = "btv" }
tonic-build = { git = "https://github.com/umanwizard/tonic" }
