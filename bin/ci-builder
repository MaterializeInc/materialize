#!/usr/bin/env bash

# Copyright Materialize, Inc. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.
#
# ci-builder â€” builds and releases CI builder image.

set -euo pipefail

cd "$(dirname "$0")/.."

if [[ $# -lt 2 ]]
then
    echo "usage: $0 <build|push|run> <stable|nightly> [<args>...]"
    exit 1
fi

cmd=$1 && shift
channel=$1 && shift

rust_date=
case "$channel" in
    stable) rust_version=$(<rust-toolchain) ;;
    nightly) rust_version=nightly ;;
    nightly-*)
        rust_date=/${channel#nightly-}
        rust_version=nightly
        ;;
    *)
        printf "unknown rust channel %q\n" "$channel"
        exit 1
        ;;
esac

tag_file=ci/builder/${channel%%-*}.stamp

rust_components=rustc,cargo,rust-std-x86_64-unknown-linux-gnu
if [[ $rust_version = nightly ]]; then
    rust_components+=,miri-preview
else
    rust_components+=,clippy-preview,rustfmt-preview
fi

uid=$(id -u)
gid=$(id -g)
[[ "$uid" -lt 500 ]] && uid=501
[[ "$gid" -lt 500 ]] && gid=$uid

build() {
    cp misc/python/requirements{,-dev,-ci}.txt ci/builder
    docker build --pull \
        --build-arg "RUST_VERSION=$rust_version" \
        --build-arg "RUST_DATE=$rust_date" \
        --build-arg "RUST_COMPONENTS=$rust_components" \
        --tag materialize/ci-builder \
        "$@" ci/builder
}

case "$cmd" in
    build)
        build
        ;;
    push)
        tag=$rust_version-$(date +%Y%m%d-%H%M%S)
        build --tag materialize/ci-builder:"$tag"
        docker push materialize/ci-builder:"$tag"
        echo "$tag" > "$tag_file"
        ;;
    run)
        args=(
            --rm --interactive --tty
            --volume "$(pwd):$(pwd)"
            --workdir "$(pwd)"
            --env CI
            --env BUILDKITE
            --env BUILDKITE_BRANCH
            --env BUILDKITE_BUILD_NUMBER
            --env BUILDKITE_TAG
        )
        if [[ "$(uname -s)" = Linux ]]; then
            args+=(
                --volume "/var/run/docker.sock:/var/run/docker.sock"
                --volume "$HOME/.cargo:/cargo"
                --volume "$HOME/.docker/config.json:/docker/config.json"
                --env "CARGO_HOME=/cargo"
                --env "DOCKER_CONFIG=/docker"
                --user "$(id -u):$(stat -c %g /var/run/docker.sock)"
            )
            if [[ "${SSH_AUTH_SOCK:-}" ]]; then
                args+=(
                    --volume "$SSH_AUTH_SOCK:/tmp/ssh-agent.sock"
                    --env "SSH_AUTH_SOCK=/tmp/ssh-agent.sock"
                )
            fi
        else
            args+=(--user "$(id -u):1001")
        fi
        docker run "${args[@]}" "materialize/ci-builder:$(<"$tag_file")" "$@"
        ;;
    *)
        printf "unknown command %q\n" "$cmd"
        exit 1
        ;;
esac
