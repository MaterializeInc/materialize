#!/usr/bin/env bash

# Copyright Materialize, Inc. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.
#
# lint â€” complains about misformatted files.

set -euo pipefail

cd "$(dirname "$0")/.."

. misc/shlib/shlib.bash

failed=false

try() {
    if ! "$@"; then
        failed=true
    fi
}

if [[ ! "${MZDEV_NO_SHELLCHECK:-}" ]]; then
    if ! command_exists shellcheck; then
        printf "lint: fatal: unable to find \`shellcheck\` command on your system\n" >&2
        printf "hint: https://github.com/koalaman/shellcheck#installing\n" >&2
        printf "hint: you can disable shellcheck locally by setting \$MZDEV_NO_SHELLCHECK=1\n" >&2
        exit 1
    fi
    version=$(shellcheck --version | grep version: | grep -oE "[0-9]\.[0-9]\.[0-9]" || echo "0.0.0+unknown")
    if ! version_compat "0.7.0" "$version"; then
        printf "lint: fatal: shellcheck v0.7.0+ is required\n" >&2
        printf "hint: detected version %q\n" "$version" >&2
        printf "hint: you can disable shellcheck locally by setting \$MZDEV_NO_SHELLCHECK=1\n" >&2
        exit 1
    fi
fi

# This Git incantation lists the source files in this repository. If you change
# it, please preserve the following properties:
#
#     1. files matched by a gitignore rule are excluded,
#     2. deleted but unstaged files are excluded,
#     3. symlinks are excluded.
#
empty_tree=$(git hash-object -t tree /dev/null)
files=$(git diff --ignore-submodules=all --raw "$empty_tree" \
    | awk '$2 != 120000 {print $6}')

copyright_files=$(grep -vE \
    -e '(^|/)LICENSE$' \
    -e '(^|/)\.(git|vscode)ignore$' \
    -e '(^|/)\.git(modules|attributes)$' \
    -e '(^|/).lfsconfig$' \
    -e '(^|/)go\.sum$' \
    -e '(^|/)Cargo\.toml$' \
    -e '^Cargo\.lock$' \
    -e '^netlify.toml$' \
    -e '^rust-toolchain$' \
    -e '^rustfmt.toml$' \
    -e '(^|/)requirements.*\.txt$' \
    -e '\.(md|json|asc|png|jpe?g|svg|eot|ttf|woff2?)$' \
    -e '^www/.*(\.html|\.scss|\.bnf|\.toml|\.yml)$' \
    -e '^misc/docker/ci-builder/ssh_known_hosts$' \
    -e '\.(protospec|pb)$' \
    -e '\.in$' \
    -e 'demo/chbench/chbench' \
    <<< "$files"
)

newline_files=$(grep -vE '\.(png|jpe?g|eot|ttf|woff2?|protospec|pb|in|svg)$' <<< "$files")

shell_files=$(sort -u <(git ls-files '*.sh' '*.bash') <(git grep -l '#!.*bash' -- ':!*.md'))

try xargs -n1 awk -f misc/lint/copyright.awk <<< "$copyright_files"
try xargs misc/lint/trailing-newline.sh <<< "$newline_files"
try xargs git --no-pager diff --check "$empty_tree" <<< "$newline_files"

if [[ ! "${MZDEV_NO_SHELLCHECK:-}" ]]; then
    try xargs shellcheck -P SCRIPTDIR <<< "$shell_files"
fi

if $failed; then
    exit 1
fi
