# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

steps:
  - id: build-x86_64
    label: Build x86_64
    command: bin/ci-builder run stable bin/pyactivate -m ci.test.build x86_64
    timeout_in_minutes: 60
    # For releases we trigger nightly from the test job directly, no need to build again
    branches: "!v*.*"
    agents:
      queue: builder-linux-x86_64

  - wait: ~

  - command: bin/ci-builder run stable bin/pyactivate -m materialize.ci_util.trim_pipeline nightly
    timeout_in_minutes: 10
    if: build.source == "ui"
    agents:
      queue: linux

  - wait: ~

  - group: Linters
    key: linters
    steps:
    - id: closed-issues-detect
      timeout_in_minutes: 10
      label: Detect references to already closed issues
      command: bin/ci-builder run stable bin/ci-closed-issues-detect
      agents:
        queue: linux-x86_64

    - id: unused-deps
      label: Unused dependencies
      command: bin/ci-builder run nightly bin/unused-deps
      timeout_in_minutes: 30
      agents:
        queue: linux-x86_64


  - id: miri-test
    label: Miri test (full)
    timeout_in_minutes: 600
    artifact_paths: [junit_*.xml, target/nextest/ci/junit_cargo-test.xml]
    plugins:
      - ./ci/plugins/scratch-aws-access: ~
      - ./ci/plugins/mzcompose:
          composition: cargo-test
          args: [--miri-full]
    agents:
      queue: builder-linux-x86_64

  - group: Benchmarks
    key: benchmark
    steps:
    - id: feature-benchmark
      label: "Feature benchmark against merge base or 'latest'"
      timeout_in_minutes: 720
      agents:
        queue: linux-x86_64-large
      artifact_paths: junit_*.xml
      plugins:
        - ./ci/plugins/mzcompose:
            composition: feature-benchmark
            args:
               - --other-tag
               # common-ancestor will default to latest if not in a PR
               - common-ancestor
    - id: scalability-benchmark
      label: "Scalability benchmark against merge base or 'latest'"
      timeout_in_minutes: 180
      agents:
        queue: linux-x86_64-large
      artifact_paths: junit_*.xml
      plugins:
        - ./ci/plugins/mzcompose:
            composition: scalability
            args:
              - --target
              - HEAD
              - --target
              - common-ancestor
              - --regression-against
              - common-ancestor
              - --max-concurrency
              - "256"

  - group: Kafka
    key: kafka
    steps:
    - id: kafka-matrix
      label: Kafka smoke test against previous Kafka versions
      timeout_in_minutes: 60
      agents:
        queue: linux-x86_64
      artifact_paths: junit_*.xml
      plugins:
        - ./ci/plugins/mzcompose:
            composition: kafka-matrix

    - id: kafka-multi-broker
      label: Kafka multi-broker test
      timeout_in_minutes: 10
      agents:
        queue: linux-x86_64
      artifact_paths: junit_*.xml
      plugins:
        - ./ci/plugins/mzcompose:
            composition: kafka-multi-broker

  - group: Testdrive
    key: testdrive
    steps:
      - id: redpanda-testdrive
        label: ":panda_face: :racing_car: testdrive"
        timeout_in_minutes: 180
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--redpanda, --aws-region=us-east-1]

      - id: redpanda-testdrive-aarch64
        label: ":panda_face: :racing_car: testdrive aarch64"
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--redpanda, --aws-region=us-east-1]
        skip: "Disabled due to taking too long for the value provided"

      - id: testdrive-partitions-5
        label: ":racing_car: testdrive with --kafka-default-partitions 5"
        timeout_in_minutes: 180
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--aws-region=us-east-1, --kafka-default-partitions=5]

      - id: testdrive-replicas-4
        label: ":racing_car: testdrive 4 replicas"
        timeout_in_minutes: 180
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--aws-region=us-east-1, --replicas=4]

      - id: testdrive-size-1
        label: ":racing_car: testdrive with SIZE 1"
        timeout_in_minutes: 180
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--aws-region=us-east-1, --default-size=1]

      - id: testdrive-size-8
        label: ":racing_car: testdrive with SIZE 8"
        timeout_in_minutes: 180
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--aws-region=us-east-1, --default-size=8]

      - id: testdrive-in-cloudtest
        label: Full Testdrive in Cloudtest (K8s)
        timeout_in_minutes: 300
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/cloudtest:
              args: [-m=long, --aws-region=us-east-1, test/cloudtest/test_full_testdrive.py]

      - id: persistence-testdrive
        label: ":racing_car: testdrive with --persistent-user-tables"
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--aws-region=us-east-1, --persistent-user-tables]
        skip: "Persistence tests disabled"

  - group: Limits
    key: limits-group
    steps:
    - id: limits
      label: "Product limits"
      agents:
        queue: linux-x86_64
      artifact_paths: junit_*.xml
      plugins:
        - ./ci/plugins/mzcompose:
            composition: limits
      timeout_in_minutes: 90

    - id: limits-instance-size
      label: "Instance size limits"
      agents:
        # A larger instance is needed due to the
        # many containers that are being created
        queue: builder-linux-x86_64
      artifact_paths: junit_*.xml
      plugins:
        - ./ci/plugins/mzcompose:
            composition: limits
            run: instance-size
      timeout_in_minutes: 50

    - id: bounded-memory
      label: "Bounded Memory"
      artifact_paths: junit_*.xml
      timeout_in_minutes: 3600
      agents:
        queue: builder-linux-x86_64
      plugins:
        - ./ci/plugins/mzcompose:
            composition: bounded-memory

  - group: Upsert
    key: upsert
    steps:
    - id: upsert-compaction-enabled
      label: Upsert (compaction enabled)
      timeout_in_minutes: 30
      artifact_paths: junit_*.xml
      plugins:
        - ./ci/plugins/mzcompose:
            composition: upsert
      agents:
        queue: linux-x86_64

    - id: upsert-compaction-disabled
      label: Upsert (compaction disabled)
      timeout_in_minutes: 30
      artifact_paths: junit_*.xml
      plugins:
        - ./ci/plugins/mzcompose:
            composition: upsert
            args: [--compaction-disabled]
      agents:
        queue: linux-x86_64

  - id: ssh-connection-extended
    label: Extended SSH connection tests
    timeout_in_minutes: 45
    artifact_paths: junit_*.xml
    plugins:
      - ./ci/plugins/mzcompose:
          composition: ssh-connection
          args: [--extended]
    agents:
      queue: linux-x86_64

  - group: Zippy
    key: zippy
    steps:
      - id: zippy-kafka-sources
        label: "Zippy Kafka Sources"
        timeout_in_minutes: 120
        agents:
          # Workload takes slightly more than 8Gb, so it OOMs
          # on the instances from the linux-x86_64 queue
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=KafkaSources, --actions=10000, --max-execution-time=30m]

      - id: zippy-kafka-parallel-insert
        label: "Zippy Kafka Parallel Insert"
        timeout_in_minutes: 120
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=KafkaParallelInsert, --transaction-isolation=serializable, --actions=10000, --max-execution-time=30m]

      - id: zippy-user-tables
        label: "Zippy User Tables"
        timeout_in_minutes: 180
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=UserTables, --actions=10000, --max-execution-time=30m]

      - id: zippy-user-tables-persist-txn
        label: "Zippy User Tables + toggle persist-txn"
        timeout_in_minutes: 180
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=UserTablesTogglePersistTxn, --actions=10000, --max-execution-time=30m]

      - id: zippy-postgres-cdc
        label: "Zippy Postgres CDC"
        timeout_in_minutes: 120
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=PostgresCdc, --actions=10000, --max-execution-time=30m]

      - id: zippy-debezium-postgres
        label: "Zippy Debezium Postgres"
        timeout_in_minutes: 120
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=DebeziumPostgres, --actions=10000, --max-execution-time=30m]

      - id: zippy-cluster-replicas
        label: "Zippy Cluster Replicas"
        timeout_in_minutes: 120
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=ClusterReplicas, --actions=10000, --max-execution-time=30m]

      - id: zippy-crdb-latest
        label: "Zippy w/ latest CRDB"
        timeout_in_minutes: 120
        agents:
          # Workload takes slightly more than 8Gb, so it OOMs
          # on the instances from the linux-x86_64 queue
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=KafkaSources, --actions=10000, --cockroach-tag=latest, --max-execution-time=30m]

      - id: zippy-alter-connection
        label: "Zippy w/ alter connection"
        timeout_in_minutes: 120
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=AlterConnectionWithKafkaSources, --actions=10000, --max-execution-time=30m]

  - group: AWS
    key: aws
    steps:
      - id: aws-real
        label: AWS (Real)
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: aws

      - id: aws-localstack
        label: AWS (Localstack)
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: aws-localstack

      - id: secrets-local-file
        label: "Secrets Local File"
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: secrets-local-file

  - group: "Platform checks"
    key: platform-checks
    steps:
      - id: checks-restart-cockroach
        label: "Checks + restart Cockroach"
        timeout_in_minutes: 60
        artifact_paths: junit_*.xml
        agents:
          # A larger instance is needed due to frequent OOMs
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartCockroach, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-restart-entire-mz
        label: "Checks + restart of the entire Mz"
        timeout_in_minutes: 60
        artifact_paths: junit_*.xml
        agents:
          # A larger instance is needed due to frequent OOMs
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartEntireMz, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-restore-before-manipulate
        label: "Checks backup + restore between the two manipulate()"
        timeout_in_minutes: 60
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreBeforeManipulate, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-restore-after-manipulate
        label: "Checks backup + restore after manipulate()"
        timeout_in_minutes: 60
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreAfterManipulate, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-multi
        label: "Checks + multiple backups/restores"
        timeout_in_minutes: 60
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreMulti, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-rollback
        label: "Checks + backup + rollback to previous"
        timeout_in_minutes: 60
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreToPreviousState, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-parallel-drop-create-default-replica
        label: "Checks parallel + DROP/CREATE replica"
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=DropCreateDefaultReplica, --execution-mode=parallel]

      - id: checks-parallel-restart-clusterd-compute
        label: "Checks parallel + restart compute clusterd"
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartClusterdCompute, --execution-mode=parallel]

      - id: checks-parallel-restart-entire-mz
        label: "Checks parallel + restart of the entire Mz"
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartEntireMz, --execution-mode=parallel]

      - id: checks-parallel-restart-environmentd-clusterd-storage
        label: "Checks parallel + restart of environmentd & storage clusterd"
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartEnvironmentdClusterdStorage, --execution-mode=parallel]

      - id: checks-parallel-kill-clusterd-storage
        label: "Checks parallel + kill storage clusterd"
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=KillClusterdStorage, --execution-mode=parallel]

      - id: checks-parallel-restart-redpanda
        label: "Checks parallel + restart Redpanda & Debezium"
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartRedpandaDebezium, --execution-mode=parallel]

      - id: checks-upgrade-entire-mz
        label: "Checks upgrade, whole-Mz restart"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeEntireMz]

      - id: checks-upgrade-entire-mz-previous-version
        label: "Checks upgrade from previous version, whole-Mz restart"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeEntireMzPreviousVersion]

      - id: checks-upgrade-entire-mz-two-versions
        label: "Checks upgrade across two versions"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeEntireMzTwoVersions]

      - id: checks-upgrade-entire-mz-skip-version
        label: "Checks upgrade from X-2 directly to HEAD"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeEntireMzSkipVersion]

      - id: checks-upgrade-entire-mz-four-versions
        label: "Checks upgrade across four versions"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeEntireMzFourVersions]

      - id: checks-upgrade-clusterd-compute-first
        label: "Platform checks upgrade, restarting compute clusterd first"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeClusterdComputeFirst]

      - id: checks-upgrade-clusterd-compute-last
        label: "Platform checks upgrade, restarting compute clusterd last"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeClusterdComputeLast]

      - id: checks-kill-clusterd-storage
        label: "Checks + kill storage clusterd"
        timeout_in_minutes: 45
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=KillClusterdStorage, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-restart-source-postgres
        label: "Checks + restart source Postgres"
        timeout_in_minutes: 45
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartSourcePostgres, --check=PgCdc, --check=PgCdcNoWait, --check=PgCdcMzNow, --check=SshPg]

      - id: checks-restart-clusterd-compute
        label: "Checks + restart clusterd compute"
        timeout_in_minutes: 45
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartClusterdCompute, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-drop-create-default-replica
        label: "Checks + DROP/CREATE replica"
        timeout_in_minutes: 45
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=DropCreateDefaultReplica, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-persist-txn-toggle
        label: "Checks + Toggle persist_txn"
        timeout_in_minutes: 45
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=PersistTxnToggle, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-persist-txn-fencing
        label: "Checks + persist_txn fencing"
        timeout_in_minutes: 45
        artifact_paths: junit_*.xml
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=PersistTxnFencing, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-upgrade-matrix
        label: "Random upgrades over the entire matrix"
        timeout_in_minutes: 600
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: upgrade-matrix
              args: ["--seed=$BUILDKITE_JOB_ID"]

      - id: cloudtest-upgrade
        label: "Platform checks upgrade in Cloudtest/K8s"
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/cloudtest:
              args: [-m=long,  --aws-region=us-east-1, test/cloudtest/test_upgrade.py]

  - group: Maelstrom
    key: maelstrom
    steps:
      - id: persist-maelstrom
        label: Maelstrom coverage of persist
        timeout_in_minutes: 10
        artifact_paths: [test/persist/maelstrom/**/*.log, junit_*.xml]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: persist
              args: [--consensus=mem, --blob=mem]
        agents:
          queue: linux-x86_64

      - id: persist-maelstrom-single-node
        label: Long single-node Maelstrom coverage of persist
        timeout_in_minutes: 20
        agents:
          queue: linux-x86_64
        artifact_paths: [test/persist/maelstrom/**/*.log, junit_*.xml]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: persist
              args: [--node-count=1, --consensus=mem, --blob=mem, --time-limit=600, --concurrency=4, --rate=500, --max-txn-length=16, --unreliability=0.1]

      - id: persist-maelstrom-multi-node
        label: Long multi-node Maelstrom coverage of persist with postgres consensus
        timeout_in_minutes: 20
        agents:
          queue: linux-x86_64
        artifact_paths: [test/persist/maelstrom/**/*.log, junit_*.xml]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: persist
              args: [--node-count=4, --consensus=cockroach, --blob=maelstrom, --time-limit=300, --concurrency=4, --rate=500, --max-txn-length=16, --unreliability=0.1]

      - id: persist-txn-maelstrom
        label: Maelstrom coverage of persist-txn
        timeout_in_minutes: 10
        agents:
          queue: linux-x86_64
        artifact_paths: [test/persist/maelstrom/**/*.log, junit_*.xml]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: persist
              args: [--consensus=mem, --blob=mem, --persist-txn]

  - id: persistence-failpoints
    label: Persistence failpoints
    timeout_in_minutes: 30
    artifact_paths: junit_*.xml
    agents:
      queue: linux-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: persistence
          run: failpoints
    skip: Persistence tests disabled

  - group: LD
    key: ld
    steps:
    - id: sql-feature-flags
      label: "SQL-level feature flags"
      artifact_paths: junit_*.xml
      timeout_in_minutes: 30
      agents:
        queue: linux-x86_64
      plugins:
        - ./ci/plugins/mzcompose:
            composition: sql-feature-flags

    - id: launchdarkly
      label: "LaunchDarkly"
      artifact_paths: junit_*.xml
      timeout_in_minutes: 30
      agents:
        queue: linux-x86_64
      plugins:
        - ./ci/plugins/mzcompose:
            composition: launchdarkly

  - id: cloud-canary
    label: "Canary Deploy in Staging Cloud"
    artifact_paths: junit_*.xml
    timeout_in_minutes: 1200
    concurrency: 1
    concurrency_group: 'cloud-canary'
    agents:
      queue: linux-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: cloud-canary
    branches: "main v*.*"

  - id: mz-e2e
    label: "Mz E2E Test"
    artifact_paths: junit_*.xml
    timeout_in_minutes: 1200
    concurrency: 1
    concurrency_group: 'mz-e2e'
    agents:
      queue: linux-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: mz-e2e

  - group: "Output consistency"
    key: output-consistency
    steps:
      - id: output-consistency-internal
        label: "Output consistency (internal)"
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: output-consistency
              args: ["--seed=$BUILDKITE_JOB_ID", "--max-runtime-in-sec=1200"]

      - id: output-consistency-postgres
        label: "Output consistency (Postgres)"
        timeout_in_minutes: 58
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: postgres-consistency
              args: ["--seed=$BUILDKITE_JOB_ID", "--max-runtime-in-sec=1200"]

      - id: output-consistency-version
        label: "Output consistency (version)"
        timeout_in_minutes: 58
        agents:
          queue: linux-x86_64
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: version-consistency
              args: ["--seed=$BUILDKITE_JOB_ID", "--max-runtime-in-sec=1200"]

  - group: SQLsmith
    key: sqlsmith-group
    steps:
      - id: sqlsmith
        label: "SQLsmith"
        artifact_paths: junit_*.xml
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlsmith
              args: [--max-joins=2, --runtime=1500]

      - id: sqlsmith-explain
        label: "SQLsmith explain"
        artifact_paths: junit_*.xml
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlsmith
              args: [--max-joins=15, --explain-only, --runtime=1500]

  - group: SQLancer
    key: sqlancer
    steps:
      - id: sqlancer-pqs
        label: "SQLancer PQS"
        artifact_paths: junit_*.xml
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlancer
              args: [--runtime=1500, --oracle=PQS, --no-qpg]

      - id: sqlancer-norec
        label: "SQLancer NoREC"
        artifact_paths: junit_*.xml
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlancer
              args: [--runtime=1500, --oracle=NOREC]

      - id: sqlancer-query-partitioning
        label: "SQLancer QueryPartitioning"
        artifact_paths: junit_*.xml
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlancer
              args: [--runtime=1500, --oracle=QUERY_PARTITIONING]

      - id: sqlancer-having
        label: "SQLancer Having"
        artifact_paths: junit_*.xml
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlancer
              args: [--runtime=1500, --oracle=HAVING]

  - id: crdb-restarts
    label: "CRDB rolling restarts"
    timeout_in_minutes: 15
    artifact_paths: junit_*.xml
    agents:
      queue: linux-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: crdb-restarts

  - id: pubsub-disruption
    label: "PubSub disruption"
    timeout_in_minutes: 15
    artifact_paths: junit_*.xml
    agents:
      queue: builder-linux-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: pubsub-disruption

  - id: data-ingest
    label: "Data Ingest"
    artifact_paths: junit_*.xml
    timeout_in_minutes: 60
    agents:
      queue: linux-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: data-ingest

  - group: "Parallel Workload"
    key: parallel-workload
    steps:
      - id: parallel-workload-dml
        label: "Parallel Workload (DML)"
        artifact_paths: [junit_*.xml, parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --complexity=dml, --threads=8]

      - id: parallel-workload-ddl
        label: "Parallel Workload (DDL)"
        artifact_paths: [junit_*.xml, parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500]

      - id: parallel-workload-100-threads
        label: "Parallel Workload (100 threads)"
        artifact_paths: [junit_*.xml, parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --threads=100]

      - id: parallel-workload-rename-naughty
        label: "Parallel Workload (rename + naughty identifiers)"
        artifact_paths: [junit_*.xml, parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=rename, --naughty-identifiers]

      - id: parallel-workload-rename
        label: "Parallel Workload (rename)"
        artifact_paths: [junit_*.xml, parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=rename]

      - id: parallel-workload-cancel
        label: "Parallel Workload (cancel)"
        artifact_paths: [junit_*.xml, parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        skip: "TODO(def-): Reenable when #2392 is fixed"
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=cancel]

      - id: parallel-workload-kill
        label: "Parallel Workload (kill)"
        artifact_paths: [junit_*.xml, parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=kill]

      - id: parallel-workload-backup-restore
        label: "Parallel Workload (backup & restore)"
        artifact_paths: [junit_*.xml, parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        skip: "TODO(def-): Properly stop all db actions during backup & restore"
        agents:
          queue: builder-linux-x86_64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=backup-restore, --naughty-identifiers]

  - id: incident-70
    label: "Test for incident 70"
    timeout_in_minutes: 15
    skip: "Affected by #15209"
    agents:
      queue: linux-x86_64-large
    artifact_paths: junit_*.xml
    plugins:
      - ./ci/plugins/mzcompose:
          composition: cluster
          run: test-incident-70

  - id: balancerd
    label: "Tests for balancerd"
    timeout_in_minutes: 15
    agents:
      queue: linux-x86_64
    artifact_paths: junit_*.xml
    plugins:
      - ./ci/plugins/mzcompose:
          composition: balancerd

  - id: restarts
    label: Restart test
    timeout_in_minutes: 30
    artifact_paths: junit_*.xml
    plugins:
      - ./ci/plugins/mzcompose:
          composition: restart
    agents:
      queue: linux-x86_64

  - id: legacy-upgrade
    label: Legacy upgrade tests (last version from git)
    timeout_in_minutes: 60
    artifact_paths: junit_*.xml
    plugins:
      - ./ci/plugins/mzcompose:
          composition: legacy-upgrade
          args: ["--versions-source=git"]
    agents:
      queue: linux-x86_64

  - id: persist-txn-fencing
    label: Persist-txn fencing
    timeout_in_minutes: 60
    artifact_paths: junit_*.xml
    plugins:
      - ./ci/plugins/mzcompose:
          composition: persist-txn-fencing

    agents:
      queue: linux-x86_64

  - group: "Language tests"
    key: language-tests
    steps:
      - id: lang-csharp
        label: ":csharp: tests"
        timeout_in_minutes: 10
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: csharp
        agents:
          queue: linux-x86_64

      - id: lang-js
        label: ":js: tests"
        timeout_in_minutes: 10
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: js
        agents:
          queue: linux-x86_64

      - id: lang-java
        label: ":java: tests"
        timeout_in_minutes: 10
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: java
        agents:
          queue: linux-x86_64

      - id: lang-python
        label: ":python: tests"
        timeout_in_minutes: 10
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: python
        agents:
          queue: linux-x86_64

      - id: lang-ruby
        label: ":ruby: tests"
        timeout_in_minutes: 10
        artifact_paths: junit_*.xml
        plugins:
          - ./ci/plugins/mzcompose:
              composition: ruby
        agents:
          queue: linux-x86_64

  - wait: ~
    continue_on_failure: true

  - id: analyze
    label: Analyze tests
    timeout_in_minutes: 15
    plugins:
      - junit-annotate#v2.0.2:
          artifacts: "*junit_*.xml"
          job-uuid-file-pattern: _([^_]*).xml
    priority: 1
    agents:
      queue: linux-x86_64
