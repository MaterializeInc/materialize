# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

steps:
  - group: Builds
    key: builds
    steps:
      - id: build-aarch64
        label: Build aarch64
        command: bin/ci-builder run stable bin/pyactivate -m ci.test.build
        depends_on: []
        timeout_in_minutes: 60
        # For releases we trigger nightly from the test job directly, no need to build again
        branches: "!v*.*"
        agents:
          queue: builder-linux-aarch64

  - group: Linters
    key: linters
    steps:
      - id: closed-issues-detect
        timeout_in_minutes: 10
        label: Detect references to already closed issues
        command: bin/ci-builder run stable bin/ci-closed-issues-detect
        depends_on: []
        agents:
          queue: linux-aarch64-small
        branches: "!v*.*"
        sanitizer: skip

      - id: unused-deps
        label: Unused dependencies
        command: bin/ci-builder run nightly bin/unused-deps
        depends_on: []
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64
        sanitizer: skip

  - id: miri-test
    label: Miri test (full)
    depends_on: []
    timeout_in_minutes: 600
    plugins:
      - ./ci/plugins/scratch-aws-access: ~
      - ./ci/plugins/mzcompose:
          composition: cargo-test
          args: [--miri-full]
    agents:
      queue: builder-linux-aarch64
    sanitizer: skip

  - group: Benchmarks
    key: benchmark
    steps:
      - id: feature-benchmark
        label: "Feature benchmark against merge base or 'latest' %N"
        depends_on: build-aarch64
        timeout_in_minutes: 720
        parallelism: 8
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: feature-benchmark
              args:
                - --other-tag
                # common-ancestor will default to latest if not in a PR
                - common-ancestor
      - id: scalability-benchmark-dml-dql
        label: "Scalability benchmark (read & write) against merge base or 'latest'"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: scalability
              args:
                - --target
                - HEAD
                - --target
                - common-ancestor
                - --regression-against
                - common-ancestor
                - --workload-group-marker
                - "DmlDqlWorkload"
                - --max-concurrency
                - "256"
      - id: scalability-benchmark-ddl
        label: "Scalability benchmark (DDL) against merge base or 'latest'"
        depends_on: build-aarch64
        timeout_in_minutes: 1200
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: scalability
              args:
                - --target
                - HEAD
                - --target
                - common-ancestor
                - --regression-against
                - common-ancestor
                - --workload-group-marker
                - "DdlWorkload"
                - --count
                - "128"
                - --exponent-base
                - "4"
                - --max-concurrency
                - "64"
      - id: scalability-benchmark-connection
        label: "Scalability benchmark (connection) against merge base or 'latest'"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: scalability
              args:
                - --target
                - HEAD
                - --target
                - common-ancestor
                - --regression-against
                - common-ancestor
                - --workload-group-marker
                - "ConnectionWorkload"
                - --exponent-base
                - "2.5"
                - --max-concurrency
                - "2048"

  - group: Kafka
    key: kafka
    steps:
      - id: kafka-matrix
        label: Kafka smoke test against previous Kafka versions
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: kafka-matrix

      - id: kafka-multi-broker
        label: Kafka multi-broker test
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: kafka-multi-broker

  - group: Testdrive
    key: testdrive
    steps:
      - id: redpanda-testdrive
        label: ":panda_face: :racing_car: testdrive"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--redpanda]

      - id: redpanda-testdrive-aarch64
        label: ":panda_face: :racing_car: testdrive aarch64"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--redpanda]
        skip: "Disabled due to taking too long for the value provided"

      - id: testdrive-partitions-5
        label: ":racing_car: testdrive with --kafka-default-partitions 5"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--kafka-default-partitions=5]

      - id: testdrive-replicas-4
        label: ":racing_car: testdrive 4 replicas"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--replicas=4]

      - id: testdrive-size-1
        label: ":racing_car: testdrive with SIZE 1"
        depends_on: build-aarch64
        timeout_in_minutes: 360
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--default-size=1]

      - id: testdrive-size-8
        label: ":racing_car: testdrive with SIZE 8"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--default-size=8]

      - id: testdrive-structured-persist
        label: ":racing_car: testdrive with Structured Persist"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [
                --system-param=persist_part_decode_format=row_with_validate,
                --system-param=persist_batch_columnar_format=both_v2,
              ]

      - id: testdrive-in-cloudtest
        label: Full Testdrive in Cloudtest (K8s)
        depends_on: build-aarch64
        timeout_in_minutes: 300
        env:
          CLOUDTEST_CLUSTER_DEFINITION_FILE: "misc/kind/cluster.yaml"
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/cloudtest:
              args: [-m=long, test/cloudtest/test_full_testdrive.py]
        sanitizer: skip

      - id: persistence-testdrive
        label: ":racing_car: testdrive with --persistent-user-tables"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: testdrive
              args: [--persistent-user-tables]
        skip: "Persistence tests disabled"

  - group: Limits
    key: limits-group
    steps:
      - id: limits
        label: "Product limits"
        depends_on: build-aarch64
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: limits
              run: main
        timeout_in_minutes: 120

      - id: limits-instance-size
        label: "Instance size limits"
        depends_on: build-aarch64
        agents:
          # A larger instance is needed due to the
          # many containers that are being created
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: limits
              run: instance-size
        timeout_in_minutes: 50

      - id: bounded-memory
        label: "Bounded Memory"
        depends_on: build-aarch64
        timeout_in_minutes: 90
        parallelism: 2
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: bounded-memory

  - group: Upsert
    key: upsert
    steps:
      - id: upsert-compaction-enabled
        label: Upsert (compaction enabled)
        depends_on: build-aarch64
        timeout_in_minutes: 60
        plugins:
          - ./ci/plugins/mzcompose:
              composition: upsert
        agents:
          queue: linux-aarch64-small

      - id: upsert-compaction-disabled
        label: Upsert (compaction disabled)
        depends_on: build-aarch64
        timeout_in_minutes: 60
        plugins:
          - ./ci/plugins/mzcompose:
              composition: upsert
              args: [--compaction-disabled]
        agents:
          queue: linux-aarch64-small

  - id: ssh-connection-extended
    label: Extended SSH connection tests
    depends_on: build-aarch64
    timeout_in_minutes: 45
    plugins:
      - ./ci/plugins/mzcompose:
          composition: ssh-connection
          args: [--extended]
    agents:
      queue: linux-aarch64-small

  - group: Zippy
    key: zippy
    steps:
      - id: zippy-kafka-sources
        label: "Zippy Kafka Sources"
        depends_on: build-aarch64
        timeout_in_minutes: 120
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=KafkaSources, --actions=10000, --max-execution-time=30m]

      - id: zippy-kafka-parallel-insert
        label: "Zippy Kafka Parallel Insert"
        depends_on: build-aarch64
        timeout_in_minutes: 120
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=KafkaParallelInsert, --transaction-isolation=serializable, --actions=10000, --max-execution-time=30m]

      - id: zippy-user-tables
        label: "Zippy User Tables"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=UserTables, --actions=10000, --max-execution-time=30m]

      - id: zippy-postgres-cdc
        label: "Zippy Postgres CDC"
        depends_on: build-aarch64
        timeout_in_minutes: 120
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=PostgresCdc, --actions=10000, --max-execution-time=30m]

      - id: zippy-mysql-cdc
        label: "Zippy MySQL CDC"
        depends_on: build-aarch64
        timeout_in_minutes: 120
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=MySqlCdc, --actions=10000, --max-execution-time=30m]

      - id: zippy-debezium-postgres
        label: "Zippy Debezium Postgres"
        depends_on: build-aarch64
        timeout_in_minutes: 120
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=DebeziumPostgres, --actions=10000, --max-execution-time=30m]

      - id: zippy-cluster-replicas
        label: "Zippy Cluster Replicas"
        depends_on: build-aarch64
        timeout_in_minutes: 120
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=ClusterReplicas, --actions=10000, --max-execution-time=30m]

      - id: zippy-crdb-latest
        label: "Zippy w/ latest CRDB"
        depends_on: build-aarch64
        timeout_in_minutes: 120
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=KafkaSources, --actions=10000, --cockroach-tag=latest, --max-execution-time=30m]

      - id: zippy-alter-connection
        label: "Zippy w/ alter connection"
        depends_on: build-aarch64
        timeout_in_minutes: 120
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: zippy
              args: [--scenario=AlterConnectionWithKafkaSources, --actions=10000, --max-execution-time=30m]

  - group: AWS
    key: aws
    steps:
      - id: aws-real
        label: AWS (Real)
        depends_on: build-aarch64
        timeout_in_minutes: 30
        retry:
          automatic:
            - exit_status: 1
              limit: 1
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/mzcompose:
              composition: aws

      - id: aws-localstack
        label: AWS (Localstack)
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: aws-localstack

      - id: secrets-local-file
        label: "Secrets Local File"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: secrets-local-file

  - group: "Platform checks"
    key: platform-checks
    steps:
      - id: checks-restart-cockroach
        label: "Checks + restart Cockroach"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          # A larger instance is needed due to frequent OOMs, same in all other platform-checks
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartCockroach, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-restart-entire-mz
        label: "Checks + restart of the entire Mz"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartEntireMz, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-restore-before-manipulate
        label: "Checks backup + restore between the two manipulate()"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreBeforeManipulate, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-restore-after-manipulate
        label: "Checks backup + restore after manipulate()"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreAfterManipulate, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-multi
        label: "Checks + multiple backups/restores"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreMulti, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-rollback
        label: "Checks + backup + rollback to previous"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreToPreviousState, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-parallel-drop-create-default-replica
        label: "Checks parallel + DROP/CREATE replica"
        depends_on: build-aarch64
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=DropCreateDefaultReplica, --execution-mode=parallel, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-parallel-restart-clusterd-compute
        label: "Checks parallel + restart compute clusterd"
        depends_on: build-aarch64
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartClusterdCompute, --execution-mode=parallel, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-parallel-restart-entire-mz
        label: "Checks parallel + restart of the entire Mz"
        depends_on: build-aarch64
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartEntireMz, --execution-mode=parallel, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-parallel-restart-environmentd-clusterd-storage
        label: "Checks parallel + restart of environmentd & storage clusterd"
        depends_on: build-aarch64
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartEnvironmentdClusterdStorage, --execution-mode=parallel, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-parallel-kill-clusterd-storage
        label: "Checks parallel + kill storage clusterd"
        depends_on: build-aarch64
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=KillClusterdStorage, --execution-mode=parallel, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-parallel-restart-redpanda
        label: "Checks parallel + restart Redpanda & Debezium"
        depends_on: build-aarch64
        skip: "Affected by #23882"
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartRedpandaDebezium, --execution-mode=parallel, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-upgrade-entire-mz
        label: "Checks upgrade, whole-Mz restart"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeEntireMz, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-preflight-check-continue
        label: "Checks preflight-check and continue upgrade"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=PreflightCheckContinue, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-preflight-check-rollback
        label: "Checks preflight-check and roll back upgrade"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=PreflightCheckRollback, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-upgrade-entire-mz-two-versions
        label: "Checks upgrade across two versions"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeEntireMzTwoVersions, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-upgrade-entire-mz-four-versions
        label: "Checks upgrade across four versions"
        depends_on: build-aarch64
        timeout_in_minutes: 90
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeEntireMzFourVersions, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-upgrade-clusterd-compute-first
        label: "Platform checks upgrade, restarting compute clusterd first"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeClusterdComputeFirst, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-upgrade-clusterd-compute-last
        label: "Platform checks upgrade, restarting compute clusterd last"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeClusterdComputeLast, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-kill-clusterd-storage
        label: "Checks + kill storage clusterd"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=KillClusterdStorage, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-restart-source-postgres
        label: "Checks + restart source Postgres"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartSourcePostgres, --check=PgCdc, --check=PgCdcNoWait, --check=PgCdcMzNow, --check=SshPg]

      - id: checks-restart-clusterd-compute
        label: "Checks + restart clusterd compute"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartClusterdCompute, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-drop-create-default-replica
        label: "Checks + DROP/CREATE replica"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          # Seems to require more memory on aarch64
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=DropCreateDefaultReplica, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-toggle-persist-batch-columnar-format
        label: "Checks toggling persist batch columnar format"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=TogglePersistBatchColumnarFormat, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-0dt-restart-entire-mz
        label: "Checks 0dt restart of the entire Mz"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=ZeroDowntimeRestartEntireMz, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-0dt-upgrade-entire-mz
        label: "Checks 0dt upgrade, whole-Mz restart"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=ZeroDowntimeUpgradeEntireMz, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-0dt-upgrade-entire-mz-two-versions
        label: "Checks 0dt upgrade across two versions"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=ZeroDowntimeUpgradeEntireMzTwoVersions, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-0dt-upgrade-entire-mz-four-versions
        label: "Checks 0dt upgrade across four versions"
        depends_on: build-aarch64
        timeout_in_minutes: 90
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=ZeroDowntimeUpgradeEntireMzFourVersions, "--seed=$BUILDKITE_JOB_ID"]

      - id: cloudtest-upgrade
        label: "Platform checks upgrade in Cloudtest/K8s"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        env:
          CLOUDTEST_CLUSTER_DEFINITION_FILE: "misc/kind/cluster.yaml"
        agents:
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/cloudtest:
              args: [-m=long, test/cloudtest/test_upgrade.py]
        sanitizer: skip

  - group: "K8s node recovery cloudtest"
    key: k8s-node-recovery
    steps:
      - id: k8s-node-recovery-storage-on-failing
        label: "K8s recovery: storage on failing node"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        # TODO: #25108 (k8s node recovery tests flaky)
        retry:
          automatic:
            - exit_status: 1
              limit: 2
        agents:
          queue: linux-aarch64
        inputs:
          - test/cloudtest
          - misc/python/materialize/cloudtest
          - misc/kind
        env:
          CLOUDTEST_CLUSTER_DEFINITION_FILE: "misc/kind/cluster-node-recovery-test.yaml"
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/cloudtest:
              args: [--exitfirst, -k=test_unreplicated_storage_cluster_on_failing_node, --aws-region=us-east-1, --apply-node-selectors, test/cloudtest]
        sanitizer: skip

      - id: k8s-node-recovery-compute-on-failing
        label: "K8s recovery: compute on failing node"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        # TODO: #25108 (k8s node recovery tests flaky)
        retry:
          automatic:
            - exit_status: 1
              limit:
                1
        agents:
          queue: linux-aarch64
        inputs:
          - test/cloudtest
          - misc/python/materialize/cloudtest
          - misc/kind
        env:
          CLOUDTEST_CLUSTER_DEFINITION_FILE: "misc/kind/cluster-node-recovery-test.yaml"
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/cloudtest:
              args: [--exitfirst, -k=test_unreplicated_compute_cluster_on_failing_node, --aws-region=us-east-1, --apply-node-selectors, test/cloudtest]
        sanitizer: skip

      - id: k8s-node-recovery-replicated-compute-on-failing
        label: "K8s recovery: replicated compute on failing node"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        # TODO: #25108 (k8s node recovery tests flaky)
        retry:
          automatic:
            - exit_status: 1
              limit: 1
        agents:
          queue: linux-aarch64
        inputs:
          - test/cloudtest
          - misc/python/materialize/cloudtest
          - misc/kind
        env:
          CLOUDTEST_CLUSTER_DEFINITION_FILE: "misc/kind/cluster-node-recovery-test.yaml"
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/cloudtest:
              args: [--exitfirst, -k=test_replicated_compute_cluster_on_failing_node, --aws-region=us-east-1, --apply-node-selectors, test/cloudtest]
        sanitizer: skip

      - id: k8s-node-recovery-envd-on-failing
        label: "K8s recovery: envd on failing node"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        # TODO: #25108 (k8s node recovery tests flaky)
        retry:
          automatic:
            - exit_status: 1
              limit: 1
        agents:
          queue: linux-aarch64
        inputs:
          - test/cloudtest
          - misc/python/materialize/cloudtest
          - misc/kind
        env:
          CLOUDTEST_CLUSTER_DEFINITION_FILE: "misc/kind/cluster-node-recovery-test.yaml"
        plugins:
          - ./ci/plugins/scratch-aws-access: ~
          - ./ci/plugins/cloudtest:
              args: [--exitfirst, -k=test_envd_on_failing_node, --aws-region=us-east-1, --apply-node-selectors, test/cloudtest]
        sanitizer: skip

  - group: Persist
    key: persist
    steps:
      - id: persist-maelstrom
        label: Maelstrom coverage of persist
        depends_on: build-aarch64
        timeout_in_minutes: 30
        artifact_paths: [test/persist/maelstrom/**/*.log]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: persist
              args: [--consensus=mem, --blob=mem]
        agents:
          queue: linux-aarch64-small

      - id: persist-maelstrom-single-node
        label: Long single-node Maelstrom coverage of persist
        depends_on: build-aarch64
        timeout_in_minutes: 20
        agents:
          queue: linux-aarch64-small
        artifact_paths: [test/persist/maelstrom/**/*.log]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: persist
              args: [--node-count=1, --consensus=mem, --blob=mem, --time-limit=600, --concurrency=4, --rate=500, --max-txn-length=16, --unreliability=0.1]

      - id: persist-maelstrom-multi-node
        label: Long multi-node Maelstrom coverage of persist with postgres consensus
        depends_on: build-aarch64
        timeout_in_minutes: 20
        agents:
          queue: linux-aarch64-small
        artifact_paths: [test/persist/maelstrom/**/*.log]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: persist
              args: [--node-count=4, --consensus=cockroach, --blob=maelstrom, --time-limit=300, --concurrency=4, --rate=500, --max-txn-length=16, --unreliability=0.1]

      - id: txn-wal-maelstrom
        label: Maelstrom coverage of txn-wal
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64-small
        artifact_paths: [test/persist/maelstrom/**/*.log]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: persist
              args: [--node-count=4, --consensus=cockroach, --blob=maelstrom, --time-limit=300, --rate=500, --txn-wal]

      - id: persistence-failpoints
        label: Persistence failpoints
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: persistence
              run: failpoints
        skip: Persistence tests disabled

  - group: LD
    key: ld
    steps:
      - id: sql-feature-flags
        label: "SQL-level feature flags"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sql-feature-flags

      - id: launchdarkly
        label: "LaunchDarkly"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: launchdarkly

  - id: cloud-canary
    label: "Canary Deploy in Staging Cloud"
    depends_on: build-aarch64
    timeout_in_minutes: 1200
    concurrency: 1
    concurrency_group: 'cloud-canary'
    agents:
      queue: linux-aarch64-small
    plugins:
      - ./ci/plugins/mzcompose:
          composition: cloud-canary
    branches: "main v*.*"

  - id: mz-e2e
    label: "Mz E2E Test"
    depends_on: build-aarch64
    timeout_in_minutes: 1200
    concurrency: 1
    concurrency_group: 'mz-e2e'
    agents:
      queue: linux-aarch64-small
    plugins:
      - ./ci/plugins/mzcompose:
          composition: mz-e2e

  - group: "Output consistency"
    key: output-consistency
    steps:
      - id: output-consistency-internal
        label: "Output consistency (internal)"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: output-consistency
              args: ["--seed=$BUILDKITE_JOB_ID", "--max-runtime-in-sec=1200"]

      - id: output-consistency-postgres
        label: "Output consistency (Postgres)"
        depends_on: build-aarch64
        timeout_in_minutes: 58
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: postgres-consistency
              args: ["--seed=$BUILDKITE_JOB_ID", "--max-runtime-in-sec=1200"]

      - id: output-consistency-version-dfr
        label: "Output consistency (version for DFR)"
        depends_on: build-aarch64
        timeout_in_minutes: 58
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: version-consistency
              args: ["--seed=$BUILDKITE_JOB_ID", "--max-runtime-in-sec=1200", "--evaluation-strategy=dataflow_rendering"]

      - id: output-consistency-version-ctf
        label: "Output consistency (version for CTF)"
        depends_on: build-aarch64
        timeout_in_minutes: 58
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: version-consistency
              args: ["--seed=$BUILDKITE_JOB_ID", "--max-runtime-in-sec=1200", "--evaluation-strategy=constant_folding"]


  - group: SQLsmith
    key: sqlsmith-group
    steps:
      - id: sqlsmith
        label: "SQLsmith"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlsmith
              # TODO(def-) Increase number of joins when #23451 is fixed
              args: [--max-joins=1, --runtime=1500]

      - id: sqlsmith-explain
        label: "SQLsmith explain"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlsmith
              # TODO(def-) Increase number of joins when #23451 is fixed
              args: [--max-joins=5, --explain-only, --runtime=1500]

  - group: SQLancer
    key: sqlancer
    steps:
      - id: sqlancer-pqs
        label: "SQLancer PQS"
        depends_on: build-aarch64
        timeout_in_minutes: 40
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlancer
              args: [--runtime=1500, --oracle=PQS, --no-qpg]

      - id: sqlancer-norec
        label: "SQLancer NoREC"
        depends_on: build-aarch64
        timeout_in_minutes: 40
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlancer
              args: [--runtime=1500, --oracle=NOREC]

      - id: sqlancer-query-partitioning
        label: "SQLancer QueryPartitioning"
        depends_on: build-aarch64
        timeout_in_minutes: 40
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlancer
              args: [--runtime=1500, --oracle=QUERY_PARTITIONING]

      - id: sqlancer-having
        label: "SQLancer Having"
        depends_on: build-aarch64
        timeout_in_minutes: 40
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: sqlancer
              args: [--runtime=1500, --oracle=HAVING]

  - group: RQG
    key: rqg
    steps:
      - id: rqg-simple-aggregates
        label: "RQG simple-aggregates workload"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: rqg
              args: ["simple-aggregates", "--seed=$BUILDKITE_JOB_ID"]

      - id: rqg-db3-joins
        label: "RQG dbt3-joins workload"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          # Runs into timeout on small agents
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: rqg
              args: ["dbt3-joins", "--seed=$BUILDKITE_JOB_ID"]

      - id: rqg-lateral-joins
        label: "RQG lateral-joins workload"
        depends_on: build-aarch64
        skip: "flaky until #25865 is fixed"
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: rqg
              args: ["lateral-joins", "--seed=$BUILDKITE_JOB_ID"]

      - id: rqg-subqueries
        label: "RQG subqueries workload"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: rqg
              args: ["subqueries", "--seed=$BUILDKITE_JOB_ID"]

      - id: rqg-window-functions
        label: "RQG window functions workload"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: rqg
              args: ["window-functions", "--seed=$BUILDKITE_JOB_ID"]

      - id: rqg-wmr
        label: "RQG WMR workload"
        depends_on: build-aarch64
        skip: "flaky until #24904 is fixed"
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: rqg
              # Postgres does not support WMR, so our only hope for a comparison
              # test is to use a previous Mz version via --other-tag=...
              args: ["wmr", "--seed=$BUILDKITE_JOB_ID", "--other-tag=common-ancestor"]

      - id: rqg-banking
        label: "RQG banking workload"
        depends_on: build-aarch64
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: rqg
              args: ["banking", "--seed=$BUILDKITE_JOB_ID"]

      - id: rqg-left-join-stacks
        label: "RQG left join stacks workload"
        depends_on: build-aarch64
        timeout_in_minutes: 45
        agents:
          queue: linux-aarch64-small
        plugins:
          - ./ci/plugins/mzcompose:
              composition: rqg
              args: ["left-join-stacks", "--seed=$BUILDKITE_JOB_ID"]

  - id: crdb-restarts
    label: "CRDB rolling restarts"
    depends_on: build-aarch64
    timeout_in_minutes: 30
    agents:
      queue: linux-aarch64-small
    plugins:
      - ./ci/plugins/mzcompose:
          composition: crdb-restarts

  - id: pubsub-disruption
    label: "PubSub disruption"
    depends_on: build-aarch64
    timeout_in_minutes: 15
    agents:
      queue: linux-aarch64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: pubsub-disruption

  - id: retain-history
    label: "Check retain history"
    depends_on: build-aarch64
    skip: "#24479"
    timeout_in_minutes: 15
    agents:
      queue: linux-aarch64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: retain-history

  - id: data-ingest
    label: "Data Ingest"
    depends_on: build-aarch64
    timeout_in_minutes: 60
    retry:
      automatic:
        - exit_status: 75
          limit: 1
    agents:
      queue: linux-aarch64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: data-ingest

  - group: "Parallel Workload"
    key: parallel-workload
    steps:
      - id: parallel-workload-dml
        label: "Parallel Workload (DML)"
        depends_on: build-aarch64
        artifact_paths: [parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --complexity=dml, --threads=16]

      - id: parallel-workload-ddl
        label: "Parallel Workload (DDL)"
        depends_on: build-aarch64
        artifact_paths: [parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --threads=16]

      - id: parallel-workload-ddl-only
        label: "Parallel Workload (DDL Only)"
        depends_on: build-aarch64
        artifact_paths: [parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --complexity=ddl-only, --threads=2]

      - id: parallel-workload-many-threads
        label: "Parallel Workload (many threads)"
        depends_on: build-aarch64
        artifact_paths: [parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          # Sporadic OoM otherwise
          queue: linux-aarch64-large
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --threads=50]

      - id: parallel-workload-rename-naughty
        label: "Parallel Workload (rename + naughty identifiers)"
        depends_on: build-aarch64
        artifact_paths: [parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=rename, --naughty-identifiers, --threads=16]

      - id: parallel-workload-rename
        label: "Parallel Workload (rename)"
        depends_on: build-aarch64
        artifact_paths: [parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=rename, --threads=16]

      - id: parallel-workload-cancel
        label: "Parallel Workload (cancel)"
        depends_on: build-aarch64
        artifact_paths: [parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        skip: "TODO(def-): Reenable when #2392 is fixed"
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=cancel, --threads=16]

      - id: parallel-workload-kill
        label: "Parallel Workload (kill)"
        depends_on: build-aarch64
        artifact_paths: [parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=kill, --threads=16]

      - id: parallel-workload-backup-restore
        label: "Parallel Workload (backup & restore)"
        depends_on: build-aarch64
        artifact_paths: [parallel-workload-queries.log.zst]
        timeout_in_minutes: 60
        skip: "TODO(def-): Properly stop all db actions during backup & restore"
        agents:
          queue: linux-aarch64
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-workload
              args: [--runtime=1500, --scenario=backup-restore, --naughty-identifiers, --threads=16]

  - id: incident-70
    label: "Test for incident 70"
    depends_on: build-aarch64
    timeout_in_minutes: 15
    skip: "Affected by #15209"
    agents:
      queue: linux-aarch64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: cluster
          run: test-incident-70

  - id: balancerd
    label: "Tests for balancerd"
    depends_on: build-aarch64
    timeout_in_minutes: 15
    agents:
      queue: linux-aarch64-small
    plugins:
      - ./ci/plugins/mzcompose:
          composition: balancerd

  - id: restarts
    label: Restart test
    depends_on: build-aarch64
    timeout_in_minutes: 30
    plugins:
      - ./ci/plugins/mzcompose:
          composition: restart
    agents:
      queue: linux-aarch64-small

  - id: legacy-upgrade
    label: Legacy upgrade tests (last version from git)
    depends_on: build-aarch64
    timeout_in_minutes: 60
    plugins:
      - ./ci/plugins/mzcompose:
          composition: legacy-upgrade
          args: ["--versions-source=git"]
    agents:
      queue: linux-aarch64-small

  - id: cloudtest-slow
    label: "Slow Cloudtest"
    depends_on: build-aarch64
    timeout_in_minutes: 45
    env:
      CLOUDTEST_CLUSTER_DEFINITION_FILE: "misc/kind/cluster.yaml"
    agents:
      queue: linux-aarch64
    plugins:
      - ./ci/plugins/scratch-aws-access: ~
      - ./ci/plugins/cloudtest:
          args: [-m=long, test/cloudtest/test_storage_shared_fate.py]
    sanitizer: skip

  - id: txn-wal-fencing
    label: Txn-wal fencing
    depends_on: build-aarch64
    timeout_in_minutes: 120
    plugins:
      - ./ci/plugins/mzcompose:
          composition: txn-wal-fencing
    agents:
      queue: linux-aarch64

  - group: "Copy To S3"
    key: copy-to-s3
    steps:
    - id: copy-to-s3-1-replica
      label: "Copy To S3 (1 replica)"
      depends_on: build-aarch64
      timeout_in_minutes: 60
      plugins:
        - ./ci/plugins/mzcompose:
            composition: copy-to-s3
            run: nightly
      agents:
        queue: linux-aarch64-large

    - id: copy-to-s3-2-replicas
      label: "Copy To S3 (2 replicas)"
      depends_on: build-aarch64
      timeout_in_minutes: 60
      plugins:
        - ./ci/plugins/mzcompose:
            composition: copy-to-s3
            run: nightly
            args: [--default-size=2]
      agents:
        queue: linux-aarch64-large

  - group: "Language tests"
    key: language-tests
    steps:
      - id: lang-csharp
        label: ":csharp: tests"
        depends_on: build-aarch64
        timeout_in_minutes: 10
        plugins:
          - ./ci/plugins/mzcompose:
              composition: csharp
        agents:
          queue: linux-aarch64-small

      - id: lang-js
        label: ":js: tests"
        depends_on: build-aarch64
        timeout_in_minutes: 10
        plugins:
          - ./ci/plugins/mzcompose:
              composition: js
        agents:
          queue: linux-aarch64-small

      - id: lang-java
        label: ":java: tests"
        depends_on: build-aarch64
        timeout_in_minutes: 10
        plugins:
          - ./ci/plugins/mzcompose:
              composition: java
        agents:
          queue: linux-aarch64-small

      - id: lang-python
        label: ":python: tests"
        depends_on: build-aarch64
        timeout_in_minutes: 10
        plugins:
          - ./ci/plugins/mzcompose:
              composition: python
        agents:
          queue: linux-aarch64-small

      - id: lang-ruby
        label: ":ruby: tests"
        depends_on: build-aarch64
        timeout_in_minutes: 10
        plugins:
          - ./ci/plugins/mzcompose:
              composition: ruby
        agents:
          queue: linux-aarch64-small

  - group: ":bazel: Bazel"
    key: bazel
    steps:
      - id: bazel-test-x86_64
        label: ":bazel: Build (x86_64)"
        command: bin/ci-builder run stable bin/bazel-temp
        depends_on: []
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64

      - id: bazel-test-aarch64
        label: ":bazel: Build (aarch64)"
        command: bin/ci-builder run stable bin/bazel-temp
        depends_on: []
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-aarch64
