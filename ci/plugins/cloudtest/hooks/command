#!/usr/bin/env bash

# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

set -euo pipefail

. misc/shlib/shlib.bash
. test/cloudtest/config.bash

run_args=(
    "--junitxml=junit_cloudtest_$BUILDKITE_JOB_ID.xml"
)

test_parallelism=true
if read_list BUILDKITE_PLUGIN_CLOUDTEST_ARGS; then
    for arg in "${result[@]}"; do
        if [[ "$arg" == "--no-test-parallelism" ]]; then
            test_parallelism=false
        else
          run_args+=("$arg")
        fi
    done
fi

if [[ "$test_parallelism" == true ]]; then
    run_args+=(
        "--splits=${BUILDKITE_PARALLEL_JOB_COUNT:-1}"
        "--group=$((${BUILDKITE_PARALLEL_JOB:-0}+1))"
    )
fi

date +"%Y-%m-%d %H:%M:%S" > step_start_timestamp

ci_collapsed_heading ":docker: Purging all existing docker containers and volumes, regardless of origin"
sudo systemctl restart docker
docker ps --all --quiet | xargs --no-run-if-empty docker rm --force --volumes
killall -9 clusterd || true # There might be remaining processes from a previous cargo-test run
rm -rf ~/.kube # Remove potential state from E2E Terraform tests

ci_collapsed_heading "kind: Increase system limits..."
sudo sysctl fs.inotify.max_user_watches=524288
sudo sysctl fs.inotify.max_user_instances=512

ci_collapsed_heading "kind: Make sure kind is running..."
bin/ci-builder run stable test/cloudtest/setup

# Sometimes build cancellations prevent us from properly cleaning up the last
# cloudtest run, so force a cleanup just in case.
ci_collapsed_heading "kind: Purging state from previous builds..."
bin/ci-builder run stable test/cloudtest/reset
rm -f kubectl-*.log

ci_collapsed_heading "kail: Start a new instance"
NO_COLOR=1 bin/ci-builder run stable --detach --name "kail" kail --context "$K8S_CONTEXT" --log-level info

TEST_CMD="bin/pytest ${run_args[*]}"
echo "$TEST_CMD" > test_cmd

ci_uncollapsed_heading "cloudtest: Running \`$TEST_CMD\`"
stdbuf --output=L --error=L bin/ci-builder run stable bin/pytest "${run_args[@]}" |& tee run.log
