# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Runs long, but can block a release
priority: 40

env:
  CI_BUILD_WITH_BAZEL: 1
  CI_BAZEL_REMOTE_CACHE: "https://bazel-remote.dev.materialize.com"

steps:
  - group: Builds
    key: builds
    steps:
      - id: build-aarch64
        label: ":bazel: Build aarch64"
        command: bin/ci-builder run stable bin/pyactivate -m ci.test.build
        inputs:
          - "*"
        artifact_paths: bazel-explain.log
        depends_on: []
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-aarch64
        # Don't build for "trigger_job" source, which indicates that this release
        # qualification pipeline was triggered automatically by the tests pipeline
        # because there is a new tag on a v* branch. In this case we want to make
        # sure we use the exact same version for testing here as was tagged and
        # will be released, and don't build our own version just for the tests.
        if: build.source == "ui" || build.source == "schedule" || build.source == "api"

      - id: build-x86_64
        label: ":bazel: Build x86_64"
        env:
          CI_BUILD_WITH_BAZEL: "1"
        command: bin/ci-builder run stable bin/pyactivate -m ci.test.build
        inputs:
          - "*"
        artifact_paths: bazel-explain.log
        depends_on: []
        timeout_in_minutes: 60
        agents:
          queue: builder-linux-x86_64


  - group: Zippy
    key: zippy
    steps:
    - id: zippy-kafka-sources-large
      label: "Large Zippy Kafka Sources"
      depends_on: build-aarch64
      # 48h
      timeout_in_minutes: 2880
      agents:
        # TODO: Move back to Hetzner when agent lost issues are fixed
        queue: linux-aarch64-medium
      plugins:
        - ./ci/plugins/mzcompose:
            composition: zippy
            # Fewer actions because of OoM
            args: [--scenario=KafkaSourcesLarge, --actions=12500]

    - id: zippy-dataflows-large
      label: "Large Zippy w/ complex dataflows"
      depends_on: build-aarch64
      # 24h
      timeout_in_minutes: 1440
      agents:
        # TODO: Move back to Hetzner when agent lost issues are fixed
        queue: linux-aarch64-medium
      plugins:
        - ./ci/plugins/mzcompose:
            composition: zippy
            # OoM and out of disk
            args: [--scenario=DataflowsLarge, --actions=15000]

    - id: zippy-pg-cdc-large
      label: "Large Zippy PostgresCdc"
      depends_on: build-aarch64
      timeout_in_minutes: 2880
      agents:
        # TODO: Move back to Hetzner when agent lost issues are fixed
        queue: linux-aarch64-medium
      plugins:
        - ./ci/plugins/mzcompose:
            composition: zippy
            # Runs into upload size limits of Buildkite
            args: [--scenario=PostgresCdcLarge, --actions=100000]

    - id: zippy-mysql-cdc-large
      label: "Large Zippy MySqlCdc"
      depends_on: build-aarch64
      timeout_in_minutes: 1440
      agents:
        # TODO: Move back to Hetzner when agent lost issues are fixed
        queue: linux-aarch64-medium
      plugins:
        - ./ci/plugins/mzcompose:
            composition: zippy
            args: [--scenario=MySqlCdcLarge, --actions=100000, --max-execution-time=4h]

    - id: zippy-cluster-replicas-long
      label: "Longer Zippy ClusterReplicas"
      depends_on: build-aarch64
      timeout_in_minutes: 2880
      agents:
        # TODO: Move back to Hetzner when agent lost issues are fixed
        queue: linux-aarch64-medium
      plugins:
        - ./ci/plugins/mzcompose:
            composition: zippy
            # Execution times longer than 4h are apparently not feasible at this time due to #17845
            args: [--scenario=ClusterReplicas, --actions=10000, --max-execution-time=4h]

    - id: zippy-user-tables-large
      label: "Large Zippy w/ user tables"
      depends_on: build-aarch64
      timeout_in_minutes: 2880
      agents:
        # TODO: Move back to Hetzner when agent lost issues are fixed
        queue: linux-aarch64-medium
      plugins:
        - ./ci/plugins/mzcompose:
            composition: zippy
            args: [--scenario=UserTablesLarge, --actions=200000]

    - id: zippy-debezium-postgres-long
      label: "Longer Zippy Debezium Postgres"
      depends_on: build-aarch64
      timeout_in_minutes: 1440
      agents:
        # TODO: Move back to Hetzner when agent lost issues are fixed
        queue: linux-aarch64-medium
      plugins:
        - ./ci/plugins/mzcompose:
            composition: zippy
            # Runs into upload size limits of Buildkite
            args: [--scenario=DebeziumPostgres, --actions=500000, --max-execution-time=4h]

    - id: zippy-backup-and-restore-large
      label: "Large-scale backup+restore"
      depends_on: build-aarch64
      timeout_in_minutes: 2880
      agents:
        # TODO: Move back to Hetzner when agent lost issues are fixed
        queue: linux-aarch64
      plugins:
        - ./ci/plugins/mzcompose:
            composition: zippy
            # Runs out of disk
            args: [--scenario=BackupAndRestoreLarge, --actions=500000]

    - id: zippy-kafka-parallel-insert
      label: "Longer Zippy Kafka Parallel Insert"
      depends_on: build-aarch64
      timeout_in_minutes: 1440
      agents:
        # TODO: Move back to Hetzner when agent lost issues are fixed
        queue: linux-aarch64-medium
      plugins:
        - ./ci/plugins/mzcompose:
            composition: zippy
            # TODO(def-) Increase number of actions when #24250 is fixed
            args: [--scenario=KafkaParallelInsert, --transaction-isolation=serializable, --actions=50000, --max-execution-time=4h]

  - group: Benchmarks
    key: benchmark
    steps:
      - id: feature-benchmark-scale-plus-one
        label: "Feature benchmark against 'common-ancestor' with --scale=+1 %N"
        depends_on: build-aarch64
        timeout_in_minutes: 2880
        parallelism: 8
        agents:
          # TODO(def-) Switch back to Hetzner? Might not have as consistent performance
          queue: linux-aarch64-medium
          # queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: feature-benchmark
              args: [--other-tag=common-ancestor, --scale=+1]

      - id: long-parallel-benchmark
        label: "Long Parallel Benchmark"
        depends_on: build-aarch64
        timeout_in_minutes: 1200
        agents:
          # TODO(def-) Switch back to Hetzner? Might not have as consistent performance
          queue: linux-aarch64-medium
          # queue: hetzner-aarch64-4cpu-8gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: parallel-benchmark
              args:
                - --other-tag
                - common-ancestor
                - --load-phase-duration
                - 1200

  - group: SQLsmith
    key: sqlsmith
    steps:
    - id: sqlsmith-long
      label: "Longer SQLsmith"
      depends_on: build-aarch64
      timeout_in_minutes: 120
      agents:
        queue: hetzner-aarch64-8cpu-16gb
      plugins:
        - ./ci/plugins/mzcompose:
            composition: sqlsmith
            args: [--max-joins=2, --runtime=6000]
      skip: "Reenable when #23451 is fixed"

    - id: sqlsmith-explain-long
      label: "Longer SQLsmith explain"
      depends_on: build-aarch64
      timeout_in_minutes: 120
      agents:
        queue: hetzner-aarch64-8cpu-16gb
      plugins:
        - ./ci/plugins/mzcompose:
            composition: sqlsmith
            args: [--max-joins=15, --explain-only, --runtime=6000]
      skip: "Reenable when #23451 is fixed"

  - id: test-preflight-check-rollback
    label: Test with preflight check and rollback
    depends_on: []
    skip: "TODO(def-): Too complex to adapt for all mzcompose-based tests"
    trigger: test
    async: false
    build:
      env:
        CI_FINAL_PREFLIGHT_CHECK_VERSION: "${BUILDKITE_TAG}"
        CI_FINAL_PREFLIGHT_CHECK_ROLLBACK: 1

  - id: nightly-preflight-check-rollback
    label: Nightly with preflight check and rollback
    depends_on: []
    skip: "TODO(def-): Too complex to adapt for all mzcompose-based tests"
    trigger: nightly
    async: false
    build:
      env:
        CI_FINAL_PREFLIGHT_CHECK_VERSION: "${BUILDKITE_TAG}"
        CI_FINAL_PREFLIGHT_CHECK_ROLLBACK: 1

  - group: "MySQL: other versions"
    key: mysql-versions
    steps:
      - id: mysql-cdc-5_7_44
        label: "MySQL CDC w/ 5.7.44"
        depends_on: build-x86_64
        timeout_in_minutes: 30
        agents:
          # no matching manifest of MySQL 5.7.x for linux/arm64/v8 in the manifest list entries
          # TODO(def-) Switch back to Hetzner when we have increased server limit
          queue: linux-x86_64-small
          # queue: hetzner-x86-64-4cpu-8gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: mysql-cdc
              args: [ "--mysql-version=5.7.44" ]
      - id: mysql-cdc-8_0_36
        label: "MySQL CDC w/ 8.0.36"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        agents:
          queue: hetzner-aarch64-4cpu-8gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: mysql-cdc
              args: [ "--mysql-version=8.0.36" ]

  - group: "Postgres: other versions"
    key: postgres-versions
    steps:
      - id: pg-cdc-15_6
        label: "Postgres CDC w/ 15.6"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        inputs: [test/pg-cdc]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: pg-cdc
              args: [ "--pg-version=15.6" ]
        agents:
          queue: hetzner-aarch64-4cpu-8gb
      - id: pg-cdc-14_11
        label: "Postgres CDC w/ 14.11"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        inputs: [test/pg-cdc]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: pg-cdc
              args: [ "--pg-version=14.11" ]
        agents:
          queue: hetzner-aarch64-4cpu-8gb
      - id: pg-cdc-13_14
        label: "Postgres CDC w/ 13.14"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        inputs: [test/pg-cdc]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: pg-cdc
              args: [ "--pg-version=13.14" ]
        agents:
          queue: hetzner-aarch64-4cpu-8gb
      - id: pg-cdc-12_18
        label: "Postgres CDC w/ 12.18"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        inputs: [test/pg-cdc]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: pg-cdc
              args: [ "--pg-version=12.18" ]
        agents:
          queue: hetzner-aarch64-4cpu-8gb
      - id: pg-cdc-11_22
        label: "Postgres CDC w/ 11.22"
        depends_on: build-aarch64
        timeout_in_minutes: 30
        inputs: [test/pg-cdc]
        plugins:
          - ./ci/plugins/mzcompose:
              composition: pg-cdc
              args: [ "--pg-version=11.22" ]
        agents:
          queue: hetzner-aarch64-4cpu-8gb

  - group: "Platform checks"
    key: platform-checks
    steps:
      - id: checks-restart-cockroach
        label: "Checks + restart Cockroach %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        # Sometimes runs into query timeouts or entire test timeouts with parallelism 1, too much state, same in all other platform-checks
        parallelism: 2
        agents:
          # A larger instance is needed due to frequent OOMs, same in all other platform-checks
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartCockroach, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-restore-before-manipulate
        label: "Checks backup + restore between the two manipulate() %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreBeforeManipulate, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-restore-after-manipulate
        label: "Checks backup + restore after manipulate() %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreAfterManipulate, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-backup-rollback
        label: "Checks + backup + rollback to previous %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=BackupAndRestoreToPreviousState, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-preflight-check-continue
        label: "Checks preflight-check and continue upgrade %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=PreflightCheckContinue, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-upgrade-clusterd-compute-first
        label: "Platform checks upgrade, restarting compute clusterd first %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeClusterdComputeFirst, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-upgrade-clusterd-compute-last
        label: "Platform checks upgrade, restarting compute clusterd last %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=UpgradeClusterdComputeLast, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-kill-clusterd-storage
        label: "Checks + kill storage clusterd %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=KillClusterdStorage, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-restart-source-postgres
        label: "Checks + restart source Postgres %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartSourcePostgres, --check=PgCdc, --check=PgCdcNoWait, --check=PgCdcMzNow, --check=SshPg]

      - id: checks-restart-clusterd-compute
        label: "Checks + restart clusterd compute %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=RestartClusterdCompute, "--seed=$BUILDKITE_JOB_ID"]

      - id: checks-drop-create-default-replica
        label: "Checks + DROP/CREATE replica %N"
        depends_on: build-aarch64
        timeout_in_minutes: 180
        parallelism: 2
        agents:
          # Seems to require more memory on aarch64
          queue: hetzner-aarch64-16cpu-32gb
        plugins:
          - ./ci/plugins/mzcompose:
              composition: platform-checks
              args: [--scenario=DropCreateDefaultReplica, "--seed=$BUILDKITE_JOB_ID"]
