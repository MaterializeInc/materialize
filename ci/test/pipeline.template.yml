# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# This file is processed by mkpipeline.py to trim unnecessary steps in PR
# builds. The inputs for steps using the `mzcompose` plugin are computed
# automatically. Inputs for other steps need to be manually listed in the
# `inputs` key.

dag: true

steps:
  - id: build-x86_64
    label: ":docker: build x86_64"
    command: bin/ci-builder run stable bin/pyactivate --dev -m ci.test.build x86_64
    inputs:
      - "*"
    timeout_in_minutes: 60
    agents:
      queue: builder

  - id: build-aarch64
    label: ":docker: build aarch64"
    command: bin/ci-builder run stable bin/pyactivate --dev -m ci.test.build aarch64
    inputs:
      - "*"
    timeout_in_minutes: 60
    agents:
      queue: builder-aarch64

  - id: lint-fast
    label: ":bath: lint and rustfmt"
    command: bin/ci-builder run stable ci/test/lint-fast.sh
    inputs:
      - "*"
    timeout_in_minutes: 10

  - id: lint-slow
    label: ":paperclip: clippy and doctests"
    command: bin/ci-builder run stable ci/test/lint-slow.sh
    inputs:
      - Cargo.lock
      - "**/Cargo.toml"
      - "**/*.rs"
    timeout_in_minutes: 30
    agents:
      queue: builder

  - id: lint-macos
    label: ":mac: clippy"
    command: bin/check
    env:
      CARGO_INCREMENTAL: "0"
      RUSTUP_TOOLCHAIN: $MATERIALIZED_RUST_VERSION
    inputs:
      - Cargo.lock
      - "**/Cargo.toml"
      - "**/*.rs"
    timeout_in_minutes: 30
    agents:
      queue: mac

  - id: lint-docs
    label: ":briefcase: lint docs"
    command: bin/ci-builder run stable ci/test/lint-docs.sh
    inputs: [doc/user]
    timeout_in_minutes: 30

  - id: preview-docs
    label: preview docs
    command: bin/ci-builder run stable ci/test/preview-docs.sh
    inputs: [doc/user]
    timeout_in_minutes: 30

  - id: cargo-test
    label: ":cargo: test"
    depends_on: build-x86_64
    timeout_in_minutes: 30
    plugins:
      - ./ci/plugins/scratch-aws-access: ~
      - ./ci/plugins/mzcompose:
          composition: cargo-test
          run: app

  - id: miri-test
    label: ":face_with_monocle: miri test"
    command: bin/ci-builder run nightly ci/test/cargo-test-miri.sh
    inputs: [src/repr]
    timeout_in_minutes: 30
    agents:
      queue: builder

  - id: testdrive
    label: ":racing_car: testdrive %n"
    depends_on: build-x86_64
    timeout_in_minutes: 30
    inputs: [test/testdrive]
    parallelism: 4
    plugins:
      - ./ci/plugins/scratch-aws-access: ~
      - ./ci/plugins/mzcompose:
          composition: testdrive
          args: [--aws-region=us-east-2]

  - id: cluster-smoke
    label: "Cluster smoke test"
    depends_on: build-x86_64
    inputs: [test/cluster]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: cluster

  - id: kafka-ssl
    label: ":lock: Kafka SSL smoke test"
    depends_on: build-x86_64
    timeout_in_minutes: 30
    inputs: [test/kafka-ssl/smoketest.td]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: kafka-ssl

  - id: kafka-krb5
    label: ":hotdog: Kafka Kerberos smoke test"
    depends_on: build-x86_64
    timeout_in_minutes: 30
    inputs: [test/kafka-krb5/smoketest.td]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: kafka-krb5
          run: testdrive

  - id: kafka-sasl-plain
    label: ":hotdog: Kafka SASL PLAIN smoke test"
    depends_on: build-x86_64
    timeout_in_minutes: 30
    inputs: [test/kafka-sasl-plain/smoketest.td]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: kafka-sasl-plain
          run: testdrive

  - id: sqllogictest-fast
    label: ":bulb: Fast SQL logic tests"
    depends_on: build-x86_64
    timeout_in_minutes: 10
    inputs: [test/sqllogictest]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: sqllogictest

  - id: streaming-demo
    label: ":credit_card: billing demo"
    depends_on: build-x86_64
    timeout_in_minutes: 30
    plugins:
      - ./ci/plugins/mzcompose:
          composition: billing
          args: [--message-count=100, --partitions=10, --check-sink]

  - id: perf-kinesis
    label: ":shower: kinesis streaming demo"
    depends_on: build-x86_64
    timeout_in_minutes: 30
    plugins:
      - ./ci/plugins/scratch-aws-access: ~
      - ./ci/plugins/mzcompose:
          composition: perf-kinesis

  - id: chbench-demo
    label: "chbench sanity check"
    depends_on: build-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: chbench
          args: [--run-seconds=10, --wait]
    timeout_in_minutes: 30

  - id: catalog-compat
    label: ":book: catalog compatibility check"
    depends_on: build-x86_64
    timeout_in_minutes: 30
    plugins:
      - ./ci/plugins/mzcompose:
          composition: catalog-compat
          run: catalog-compat

  - id: restarts
    label: ":arrows_clockwise: restarts"
    depends_on: build-x86_64
    timeout_in_minutes: 30
    plugins:
      - ./ci/plugins/mzcompose:
          composition: restart

  - id: upgrade
    label: "Upgrade testing"
    depends_on: build-x86_64
    timeout_in_minutes: 60
    plugins:
      - ./ci/plugins/mzcompose:
          composition: upgrade
          args: [--most-recent, "3"]

  - id: metabase-demo
    label: "metabase-demo"
    depends_on: build-x86_64
    timeout_in_minutes: 10
    plugins:
      - ./ci/plugins/mzcompose:
          composition: metabase
          run: smoketest

  - id: dbt-materialize
    label: "dbt-materialize"
    depends_on: build-x86_64
    timeout_in_minutes: 10
    plugins:
      - ./ci/plugins/mzcompose:
          composition: dbt-materialize

  - id: debezium-postgres
    label: "Debezium test (Postgres)"
    depends_on: build-x86_64
    inputs: [test/debezium-avro]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: debezium
          run: postgres

  - id: debezium-sql-server
    label: "Debezium test (SQL Server)"
    depends_on: build-x86_64
    inputs: [test/debezium-avro]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: debezium
          run: sql-server

  - id: pg-cdc
    label: "Postgres CDC test"
    depends_on: build-x86_64
    inputs: [test/pg-cdc]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: pg-cdc

  - id: pg-cdc-resumption
    label: "Postgres CDC test (Resumption logic)"
    depends_on: build-x86_64
    inputs: [test/pg-cdc-resumption]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: pg-cdc-resumption

  - id: s3-resumption
    label: "S3 Retry/Resumption test"
    depends_on: build-x86_64
    inputs: [test/s3-resumption]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: s3-resumption

  - id: kafka-exactly-once
    label: "Test for the Kafka exactly-once sink"
    depends_on: build-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: kafka-exactly-once

  - id: persistence
    label: "Tests for persistence"
    depends_on: build-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: persistence

  - id: lang-csharp
    label: ":csharp: tests"
    depends_on: build-x86_64
    timeout_in_minutes: 10
    inputs: [test/lang/csharp]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: csharp
          run: csharp

  - id: lang-js
    label: ":javascript: tests"
    depends_on: build-x86_64
    timeout_in_minutes: 10
    inputs: [test/lang/js]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: js
          run: js

  - id: lang-java
    label: ":java: tests"
    depends_on: build-x86_64
    timeout_in_minutes: 10
    inputs: [test/lang/java]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: java
          run: java-smoketest

  - id: lang-python
    label: ":python: tests"
    depends_on: build-x86_64
    timeout_in_minutes: 10
    inputs: [test/lang/python]
    plugins:
      - ./ci/plugins/mzcompose:
          composition: python
          run: python

  - wait: ~

  - id: deploy
    label: ":rocket: Deploy"
    trigger: deploy
    async: true
    branches: "main v*.*"
    build:
      commit: "$BUILDKITE_COMMIT"
      branch: "$BUILDKITE_BRANCH"
      env:
        BUILDKITE_TAG: "$BUILDKITE_TAG"
