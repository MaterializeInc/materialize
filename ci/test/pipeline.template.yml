# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# This file is processed by mkpipeline.py to trim unnecessary steps in PR
# builds. The inputs for steps using the `mzcompose` plugin are computed
# automatically. Inputs for other steps need to be manually listed in the
# `inputs` key.

dag: true

env:
  CI_BUILDER_SCCACHE: 1
  # TODO(def-): Reenable when we upgrade to Rust >= 1.72
  # Note: In .cargo/config we set the default build jobs to -1 so on developer machines we keep
  # a single core open when compiling. But we want to use all of CI's resources, hence setting the
  # build jobs to "default" which will use all cores.
  # CARGO_BUILD_JOBS: "default"

steps:
  - group: Builds
    key: builds
    steps:
      - id: build-x86_64
        label: Build x86_64
        command: bin/ci-builder run stable bin/pyactivate -m ci.test.build
        inputs:
          - "*"
        timeout_in_minutes: 60
        priority: 1
        agents:
          queue: builder-linux-x86_64

      - id: build-aarch64
        label: Build aarch64
        command: bin/ci-builder run stable bin/pyactivate -m ci.test.build
        inputs:
          - "*"
        priority: 1
        timeout_in_minutes: 60
        branches: "main v*.*"
        agents:
          queue: builder-linux-aarch64
        coverage: skip

      - id: build-wasm
        label: Build WASM
        command: bin/ci-builder run stable bin/pyactivate -m ci.deploy.npm --no-release
        inputs:
          - "*"
        timeout_in_minutes: 10
        agents:
          queue: linux-x86_64
        coverage: skip

      - id: check-merge-with-target
        label: Merge skew cargo check
        command: ci/test/check-merge-with-target.sh
        inputs:
          - Cargo.lock
          - "**/Cargo.toml"
          - "**/*.rs"
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        if: "build.pull_request.id != null"
        coverage: skip

      - id: devel-docker-tags
        label: Tag development docker images
        command: bin/ci-builder run stable bin/pyactivate -m ci.test.dev_tag
        inputs:
          - "*"
        depends_on:
          - build-x86_64
          - build-aarch64
        timeout_in_minutes: 10
        agents:
          queue: linux-x86_64
        coverage: skip
        # Fortify against intermittent DockerHub issues
        retry:
          automatic:
            - exit_status: 1
              limit: 2

  - group: Lints
    key: lints
    steps:
      - id: lint-fast
        label: Lint and rustfmt
        command: bin/ci-builder run stable ci/test/lint-fast.sh
        inputs:
          - "*"
        timeout_in_minutes: 10
        agents:
          queue: linux-x86_64
        coverage: skip

      - id: lint-slow
        label: Clippy and doctests
        command: bin/ci-builder run stable ci/test/lint-slow.sh
        inputs:
          - Cargo.lock
          - "**/Cargo.toml"
          - "**/*.rs"
        timeout_in_minutes: 30
        agents:
          queue: builder-linux-x86_64
        coverage: skip

      - id: lint-macos
        label: macOS Clippy
        command: cargo clippy --all-targets -- -D warnings
        env:
          CARGO_INCREMENTAL: "0"
          RUSTUP_TOOLCHAIN: $RUST_VERSION
        inputs:
          - Cargo.lock
          - "**/Cargo.toml"
          - "**/*.rs"
        timeout_in_minutes: 30
        agents:
          queue: mac
        coverage: skip

      - id: lint-deps
        label: Lint dependencies
        command: bin/ci-builder run stable ci/test/lint-deps.sh
        inputs:
          - Cargo.lock
          - "**/Cargo.toml"
          - "**/*.rs"
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        coverage: skip

      - id: vet-check
        label: Cargo vet Check
        command: bin/ci-builder run stable cargo vet check --locked
        inputs:
          - Cargo.lock
          - misc/cargo-vet/config.toml
        timeout_in_minutes: 5
        agents:
          queue: linux-x86_64
        coverage: skip

      - id: lint-docs
        label: Lint docs
        command: bin/ci-builder run stable ci/test/lint-docs.sh
        inputs:
          - doc/user
          - src/adapter/src/catalog
          - test/sqllogictest/autogenerated
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        coverage: skip

      - id: preview-docs
        label: Preview docs
        command: bin/ci-builder run stable ci/test/preview-docs.sh
        inputs: [doc/user]
        timeout_in_minutes: 30
        agents:
          queue: linux-x86_64
        coverage: skip

  - id: zippy-kafka-sources-short
    label: "Short Zippy"
    depends_on: build-x86_64
    inputs: [misc/python/materialize/zippy]
    timeout_in_minutes: 30
    artifact_paths: junit_*.xml
    agents:
      queue: linux-x86_64
    plugins:
      - ./ci/plugins/mzcompose:
          composition: zippy
          args: [--scenario=UserTables, --actions=10000]


  - id: deploy-website
    label: Deploy website
    depends_on: lint-docs
    trigger: deploy-website
    async: true
    branches: main
    build:
      commit: "$BUILDKITE_COMMIT"
      branch: "$BUILDKITE_BRANCH"
      env:
        BUILDKITE_TAG: "$BUILDKITE_TAG"
    coverage: skip

  - id: release-qualification
    label: Release qualification
    depends_on: devel-docker-tags
    trigger: release-qualification
    async: true
    build:
      commit: "$BUILDKITE_COMMIT"
      branch: "$BUILDKITE_BRANCH"
      env:
        BUILDKITE_TAG: "$BUILDKITE_TAG"
    if: build.tag != "" && build.branch =~ /^v.*\..*\$/
    coverage: skip

  - id: nightly-if-release
    label: Nightly for releases
    depends_on: devel-docker-tags
    trigger: nightlies
    async: true
    build:
      commit: "$BUILDKITE_COMMIT"
      branch: "$BUILDKITE_BRANCH"
      env:
        BUILDKITE_TAG: "$BUILDKITE_TAG"
    if: build.tag != "" && build.branch =~ /^v.*\..*\$/
    coverage: skip

  - id: nightly-if-risky
    label: Nightly for risky PRs
    skip: "Temporary disabled until a cost/beneft analysis"
    depends_on: devel-docker-tags
    trigger: nightlies
    async: true
    build:
      commit: "$BUILDKITE_COMMIT"
      branch: "$BUILDKITE_BRANCH"
      env:
        BUILDKITE_TAG: "$BUILDKITE_TAG"
        BUILDKITE_PULL_REQUEST: "${BUILDKITE_PULL_REQUEST}"
        BUILDKITE_PULL_REQUEST_BASE_BRANCH: "${BUILDKITE_PULL_REQUEST_BASE_BRANCH}"
        BUILDKITE_PULL_REQUEST_REPO: "${BUILDKITE_PULL_REQUEST_REPO}"
    if: build.tag != "" && build.branch != "main" && build.branch !~ /^v.*\..*\$/

    inputs:
      # Changes to dependencies
      - Cargo.lock
      # Changes to the SQL syntax
      - src/sql-parser/src
      - src/expr-parser/src
      # Changes to SHOW
      - src/sql/src/plan/statement/show.rs
      # Changes to feature flags and other settings
      - src/adapter/src/flags.rs
      - src/persist-client/src/cfg*
      - src/compute-client/src/protocol/command*
      - src/sql/src/session/vars.rs
      # Changes to command-line options
      - src/environmentd/src/bin/environmentd/
      - src/clusterd/src/bin/
      # Changes to test frameworks
      - src/testdrive/src
      - misc/python/materialize
      - test/feature-benchmark
      - test/limits
      # Changes to the CI inputs
      - "**/Dockerfile"
      - misc/images
      - ci/builder
      - bin/ci-builder
      - ci/nightly
      - ci/plugins
    coverage: skip

  - wait: ~
    continue_on_failure: true

  - id: coverage-pr-analyze
    label: Analyze code coverage for PR
    timeout_in_minutes: 20
    command: bin/ci-builder run stable ci/test/coverage_report.sh
    inputs: ["*"]
    priority: 1
    agents:
      queue: builder-linux-x86_64
    coverage: only

  - wait: ~
    continue_on_failure: true

  - id: analyze
    label: Analyze tests
    timeout_in_minutes: 15
    inputs: ["*"]
    plugins:
      - junit-annotate#v2.0.2:
          artifacts: "*junit_*.xml"
          job-uuid-file-pattern: _([^_]*).xml
    priority: 1
    agents:
      queue: linux-x86_64

  - wait: ~

  - id: deploy
    label: Deploy
    trigger: deploy
    async: true
    branches: "main v*.*"
    build:
      commit: "$BUILDKITE_COMMIT"
      branch: "$BUILDKITE_BRANCH"
      env:
        BUILDKITE_TAG: "$BUILDKITE_TAG"
    coverage: skip
