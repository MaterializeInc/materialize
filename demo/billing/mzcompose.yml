# Copyright Materialize, Inc. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

x-port-mappings:
  - &grafana 3000:3000
  - &kafka ${KAFKA_PORT:-9092:9092}
  - &materialized ${MZ_PORT:-6875:6875}
  - &schema-registry ${SR_PORT:-8081:8081}

version: '3.7'
services:
  kdc:
    mzbuild: kdc
    volumes:
      - secrets:/var/lib/secret
      - ../../test/krb5/kdc/krb5.conf:/etc/krb5.conf
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    depends_on:
      - kdc
    volumes:
      - secrets:/var/lib/secret
      - ../../test/krb5/kdc/krb5.conf:/etc/krb5.conf
      - ../../test/krb5/sasl.jaas.config:/etc/zookeeper/sasl.jaas.config
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      # Despite the environment variable name, these are JVM options that are
      # passed through to Zookeeper.
      KAFKA_OPTS: >-
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.sessionRequireClientSASLAuth=true
        -Djava.security.auth.login.config=/etc/zookeeper/sasl.jaas.config
        -Djava.security.krb5.conf=/etc/krb5.conf
        -Dsun.security.krb5.debug=true

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kdc
      - zookeeper
    volumes:
      - secrets:/var/lib/secret
      - ../../test/krb5/kdc/krb5.conf:/etc/krb5.conf
      - ../../test/krb5/sasl.jaas.config:/etc/kafka/sasl.jaas.config
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_JMX_PORT: 9991
      KAFKA_OPTS: >-
        -Dzookeeper.sasl.client.canonicalize.hostname=false
        -Djava.security.auth.login.config=/etc/kafka/sasl.jaas.config
        -Djava.security.krb5.conf=/etc/krb5.conf
  materialized:
    mzbuild: materialized
    volumes:
      - db-data:/share/billing-demo/data
    ports:
     - *materialized
    init: true
    command: --threads 1
    environment:
      - MZ_LOG=dataflow=error,info
      - DIFFERENTIAL_EAGER_MERGE=1000
  billing-demo:
    mzbuild: billing-demo
    volumes:
      - db-data:/share/billing-demo/data
    environment:
      - RUST_LOG=billing-demo=debug,info
    command: >-
      --message-count 30000000
      --materialized-host materialized
      --kafka-host kafka
      --schema-registry-url http://schema-registry:8081
      --csv-file-name /share/billing-demo/data/prices.csv
      --krb5-keytab=/share/secrets/billing.key
      --krb5-principal=billing@CI.MATERIALIZE.IO
    depends_on: [kafka, materialized]
  dashboard:
    mzbuild: dashboard
    propagate-uid-gid: true
    environment:
      - 'MATERIALIZED_URL=materialized:6875'
    ports:
      - *grafana
    volumes:
      # ensure that data doesn't get lost across restarts
      - ./data/prometheus:/prometheus
      - ./data/grafana:/var/lib/grafana
  prometheus_sql_exporter_mz:
    mzbuild: ci-mz-sql-exporter
    ports:
      - ${MZ_SQL_EXPORTER_PORT:-9399}

volumes:
  db-data:
  secrets:

mzconduct:
  workflows:
    ci:
      env:
        MZ_PORT: 6875
        KAFKA_PORT: 9092
      steps:
      - step: workflow
        workflow: start-everything
      - step: run
        service: billing-demo
        daemon: false
        command: >-
          --message-count 30000000
          --materialized-host materialized
          --kafka-host kafka
          --schema-registry-url http://schema-registry:8081
          --csv-file-name /share/billing-demo/data/prices.csv
          --krb5-keytab=/share/secrets/billing.key
          --krb5-principal=billing@CI.MATERIALIZE.IO
          --kafka-topic thirtymil
          --partitions 30

    cloud-load-test:
      env:
        MZ_SQL_EXPORTER_PORT: "9400:9399"
      steps:
      - step: workflow
        workflow: start-everything
      - step: start-services
        services: [prometheus_sql_exporter_mz]
      - step: run
        service: billing-demo
        daemon: true
        command: >-
          --message-count 10000000
          --materialized-host materialized
          --kafka-host kafka
          --schema-registry-url http://schema-registry:8081
          --csv-file-name /share/billing-demo/data/prices.csv
          --partitions 10

    # Helper workflows

    start-everything:
      steps:
      - step: start-services
        services: [kdc, materialized, kafka, dashboard]
      - step: wait-for-tcp
        host: kafka
        port: 9092
      - step: wait-for-tcp
        host: materialized
        port: 6875
