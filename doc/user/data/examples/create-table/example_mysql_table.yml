- name: "create-table"
  description: |
    To create new **read-only** tables from a source table, use the `CREATE
    TABLE ... FROM SOURCE ... (REFERENCE <upstream_table>)` statement. The following example creates **read-only** tables `items` and `orders` from
    the MySQL source `mz_source`'s `items` and `orders` tables.

    {{< note >}}

    - Although the example creates the tables with the same names as the
    upstream tables, the tables in Materialize can have names that differ from
    the referenced table names.

    - For supported MySQL data types, refer to [supported
    types](#upstream-sources-and-supported-data-types).

    - You can create multiple tables that reference the same upstream table.

    {{< /note >}}

  code: |
    /* This example assumes:
      - In the upstream MySQL, you have:
        - Enabled GTID-based binlog replication
        - Defined a replication user and password with the appropriate access.
      - In Materialize,
        - You have created a secret for the MySQL password.
        - You have defined the connection to the upstream MySQL.
        - You have used the connection to create a source.

        For example (substitute with your configuration):
          CREATE SECRET mysql_password AS '<replication user password>'; -- substitute
          CREATE CONNECTION mysql_connection TO MYSQL (
            HOST '<hostname>',          -- substitute
            USER <replication user>,    -- substitute
            PASSWORD SECRET mysql_password
            -- [, <network security configuration> ]
          );

          CREATE SOURCE mz_source
          FROM MYSQL CONNECTION mysql_connection;
    */

    CREATE TABLE items
    FROM SOURCE mz_source(REFERENCE public.items)
    ;
    CREATE TABLE orders
    FROM SOURCE mz_source(REFERENCE public.orders)
    ;

- name: "show-tables"
  description: |
    To verify that the table has been created, you can run [`SHOW
    TABLES`](/sql/show-tables/) to list all tables in the current [schema](/sql/namespaces/#namespace-hierarchy):
  code: |
    SHOW TABLES;
  results: |
    The results should include the tables `items` and `orders`:

    ```hc {hl_lines="3-4"}
    | name        | comment |
    | ----------- | ------- |
    | items       |         |
    | orders      |         |
    ```

- name: "show-columns"
  description: |
    Inspect the table columns using the [`SHOW COLUMNS`](/sql/show-columns/) command:
  code: |
    SHOW COLUMNS FROM items;
    SHOW COLUMNS FROM orders;
  results: |
    The results should display information on the table columns. The types
    should match those from the upstream table as the example assumes the
    upstream table only contains columns with data types that are supported in
    Materialize.

    For the list of supported MySQL data types, refer to [supported
    types](#upstream-sources-and-supported-data-types).

- name: "read-from-table"
  code: |
    SELECT * FROM items;

- name: "create-view-from-tables"
  code: |
    CREATE VIEW orders_view AS
    SELECT o.*,i.price,o.quantity * i.price as subtotal
    FROM orders as o
    JOIN items as i
    ON o.item = i.item;
