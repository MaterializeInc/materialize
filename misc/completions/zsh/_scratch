#compdef scratch

# AUTOMATCALLY GENERATED by `shtab`

_shtab_scratch_options_=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_scratch_commands_() {
  local _commands=(
    "completion:Generate shell completion script"
    "create:Create a new scratch instance"
    "destroy:Destroy a scratch instance"
    "login:Log in to AWS SSO"
    "mine:Show active scratch instance"
    "push:Push current HEAD (or a specific git commit) to scratch instance"
    "sftp:Connect to scratch instance via sftp"
    "ssh:Connect to scratch instance via ssh"
  )

  _describe 'scratch commands' _commands
}

_shtab_scratch_completion=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  ":print shell completion script:(bash zsh tcsh)"
)

_shtab_scratch_create=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--subnet-id[EC2 Subnet ID. Defaults to Materialize scratch account.]:subnet_id:"
  "--key-name[Optional EC2 Key Pair name]:key_name:"
  "--security-group-id[EC2 Security Group ID. Defaults to Materialize scratch account.]:security_group_id:"
  "--extra-tags[Additional EC2 tags for created instance. Format\: \{\"key\", \"value\"\}]:extra_tags:"
  "--instance-profile[EC2 instance profile \/ IAM role. Defaults to \`admin-instance\`.]:instance_profile:"
  "--output-format[]:output_format:(table csv)"
  "--git-rev[Git revision of \`materialize\` codebase to push to scratch instance. Defaults to \`HEAD\`]:git_rev:"
  "--ssh[ssh into the machine after the launch script is run. Only works if a single instance was started]"
  "--max-age-days[Maximum age for scratch instance in days. Defaults to 1.5]:max_age_days:"
  ":Use a config from \{machine\}.json in \`misc\/scratch\`. Hint\: \`dev-box\` is a good starter\!:"
)

_shtab_scratch_destroy=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--all-mine[Destroy all of your instances (incompatible with specifying instance IDs)]"
  {-y,--yes}"[Don\'t ask for confirmation before destroying]"
  "--output-format[]:output_format:(table csv)"
  "(*)::Instance IDs to destroy:"
)

_shtab_scratch_login=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_scratch_mine=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--all[Show all instances]"
  "--output-format[]:output_format:(table csv)"
  "(*)::Whose instances to show (defaults to yourself):"
)

_shtab_scratch_push=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--rev[The git rev to checkout]:rev:"
  ":The ID of the instance to connect to:"
)

_shtab_scratch_sftp=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  ":The ID of the instance to connect to:"
)

_shtab_scratch_ssh=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  ":The ID of the instance to connect to:"
  "(*)::The command to run via SSH, if any:"
)

typeset -A opt_args
local context state line curcontext="$curcontext"

_arguments \
  $_shtab_scratch_options_ \
   \
  ': :_shtab_scratch_commands_' \
  '*::args:->args'

case $words[1] in
  completion) _arguments $_shtab_scratch_completion ;;
  create) _arguments $_shtab_scratch_create ;;
  destroy) _arguments $_shtab_scratch_destroy ;;
  login) _arguments $_shtab_scratch_login ;;
  mine) _arguments $_shtab_scratch_mine ;;
  push) _arguments $_shtab_scratch_push ;;
  sftp) _arguments $_shtab_scratch_sftp ;;
  ssh) _arguments $_shtab_scratch_ssh ;;
esac
