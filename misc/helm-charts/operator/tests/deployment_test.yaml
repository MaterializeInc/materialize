# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

suite: test deployment
templates:
  - deployment.yaml
tests:
  - it: should create a deployment
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].image
          value: materialize/orchestratord:v0.125.0-dev.0--pr.gd3deb07aa502a84ebd024517344f0aa861f857df
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent
      - equal:
          path: spec.template.spec.serviceAccountName
          value: orchestratord

  - it: should set ephemeral volume class when storage class is configured
    set:
      storage.storageClass.name: "my-storage-class"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].args
          content: "--ephemeral-volume-class=my-storage-class"

  - it: should not set ephemeral volume class when storage class is not configured
    set:
      storage.storageClass.name: ""
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].args
          content: "--ephemeral-volume-class"

  - it: should set correct base arguments
    asserts:
      - contains:
          path: spec.template.spec.containers[0].args
          content: "--startup-log-filter=INFO,mz_orchestratord=TRACE"
      - contains:
          path: spec.template.spec.containers[0].args
          content: "--cloud-provider=local"
      - contains:
          path: spec.template.spec.containers[0].args
          content: "--region=kind"

  - it: should set resources correctly
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 100m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 512Mi
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 512Mi

  - it: should set disk limit to 0 when no storage class is configured
    set:
      storage.storageClass.name: ""
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].args[7]  # Index of the environmentd-cluster-replica-sizes argument
          pattern: disk_limit":"0"
      - matchRegex:
          path: spec.template.spec.containers[0].args[7]
          pattern: is_cc":true

  - it: should have a cluster with disk limit to 1552MiB when storage class is configured
    set:
      storage.storageClass.name: "my-storage-class"
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].args[7]
          pattern: disk_limit":"1552MiB"
      - matchRegex:
          path: spec.template.spec.containers[0].args[7]
          pattern: is_cc":true
