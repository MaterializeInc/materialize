# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.
#
# ci_logged_errors_detect.py - Detect errors in log files during CI and find
# associated open GitHub issues in Materialize repository.

import argparse
import mmap
import os
import re
import sys
from typing import Any

import requests

from materialize import ci_util, spawn, ui

CI_RE = re.compile("ci-regexp: (.*)")
CI_APPLY_TO = re.compile("ci-apply-to: (.*)")

# Unexpected failures, report them
ERROR_RE = re.compile(
    rb"""
    ^ .*
    ( segfault\ at
    | trap\ invalid\ opcode
    | general\ protection
    | has\ overflowed\ its\ stack
    | Attempting\ to\ connect
    | Applying\ configuration\ update
    | internal\ error:
    | \*\ FATAL:
    | [Oo]ut\ [Oo]f\ [Mm]emory
    | cannot\ migrate\ from\ catalog
    | halting\ process: # Rust unwrap
    | fatal runtime error: # stack overflow
    | \[SQLsmith\] # Unknown errors are logged
    | \[SQLancer\] # Unknown errors are logged
    # From src/testdrive/src/action/sql.rs
    | column\ name\ mismatch
    | non-matching\ rows:
    | do\ not\ match
    | wrong\ row\ count:
    | wrong\ hash\ value:
    | expected\ one\ statement
    | query\ succeeded,\ but\ expected
    | expected\ .*,\ got\ .*
    | expected\ .*,\ but\ found\ none
    | unsupported\ SQL\ type\ in\ testdrive:
    | environmentd:\ fatal: # startup failure
    | clusterd:\ fatal: # startup failure
    | error:\ Found\ argument\ '.*'\ which\ wasn't\ expected,\ or\ isn't\ valid\ in\ this\ context
    | environmentd .* unrecognized\ configuration\ parameter
    | cannot\ load\ unknown\ system\ parameter\ from\ catalog\ storage
    )
    .* $
    """,
    re.VERBOSE | re.MULTILINE,
)

# Panics are multiline and our log lines of multiple services are interleaved,
# making them complex to handle in regular expressions, thus handle them
# separately.
PANIC_START_RE = re.compile(rb"^(?P<service>[^ ]*) *\| thread '.*' panicked at ")
SERVICES_LOG_LINE_RE = re.compile(rb"^(?P<service>[^ ]*) *\| (?P<msg>.*)$")

# Expected failures, don't report them
IGNORE_RE = re.compile(
    rb"""
    # Expected in restart test
    ( restart-materialized-1\ \ \|\ thread\ 'coordinator'\ panicked\ at\ 'can't\ persist\ timestamp
    # Expected in restart test
    | restart-materialized-1\ *|\ thread\ 'coordinator'\ panicked\ at\ 'external\ operation\ .*\ failed\ unrecoverably.*
    # Expected in cluster test
    | cluster-clusterd[12]-1\ .*\ halting\ process:\ new\ timely\ configuration\ does\ not\ match\ existing\ timely\ configuration
    # Emitted by tests employing explicit mz_panic()
    | forced\ panic
    # Emitted by broken_statements.slt in order to stop panic propagation, as 'forced panic' will unwantedly panic the `environmentd` thread.
    | forced\ optimizer\ panic
    # Expected once compute cluster has panicked, brings no new information
    | timely\ communication\ error:
    # Expected once compute cluster has panicked, only happens in CI
    | aborting\ because\ propagate_crashes\ is\ enabled
    # Expected when CRDB is corrupted
    | restart-materialized-1\ .*relation\ \\"fence\\"\ does\ not\ exist
    # Expected when CRDB is corrupted
    | restart-materialized-1\ .*relation\ "consensus"\ does\ not\ exist
    # Will print a separate panic line which will be handled and contains the relevant information (new style)
    | internal\ error:\ unexpected\ panic\ during\ query\ optimization
    # redpanda INFO logging
    | larger\ sizes\ prevent\ running\ out\ of\ memory
    # Old versions won't support new parameters
    | (platform-checks|legacy-upgrade|upgrade-matrix|feature-benchmark)-materialized-.* \| .*cannot\ load\ unknown\ system\ parameter\ from\ catalog\ storage
    # Fencing warnings are OK in fencing tests
    | persist-txn-fencing-mz_first-.* \| .*unexpected\ fence\ epoch
    | persist-txn-fencing-mz_first-.* \| .*fenced\ by\ new\ catalog\ upper
    | platform-checks-mz_txn_tables.* \| .*unexpected\ fence\ epoch
    # For platform-checks upgrade tests
    | platform-checks-clusterd.* \| .* received\ persist\ state\ from\ the\ future
    | cannot\ load\ unknown\ system\ parameter\ from\ catalog\ storage(\ to\ set\ (default|configured)\ parameter)?
    | internal\ error:\ no\ AWS\ external\ ID\ prefix\ configured
    # For persist-catalog-migration ignore failpoint panics
    | persist-catalog-migration-materialized.* \| .* failpoint\ .* panic
    )
    """,
    re.VERBOSE | re.MULTILINE,
)

WALL_OF_TEXT = """
platform-checks-materialized-1      | assertion `left == right` failed: stash and persist result variant do not match. stash: Err(Durable(IncompatibleDataVersion { found_version: 46, min_catalog_version: 42, catalog_version: 45 })). persist: Ok(PersistCatalogState { mode: Writable, since_handle: SinceHandle { machine: Machine { applier: Applier { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, shard_metrics: ShardMetrics { shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), since: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_since", help: "since by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 15579663059153072772, dim_hash: 13414171350431820200 }, val: AtomicI64 { inner: 1688 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, upper: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_upper", help: "upper by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 4092965619647097614, dim_hash: 14717199528981430922 }, val: AtomicI64 { inner: 2826 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, largest_batch_size: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_largest_batch_size", help: "largest encoded batch size by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 15668483818539198391, dim_hash: 762317046610672469 }, val: AtomicU64 { inner: 1207754 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, latest_rollup_size: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_rollup_size_bytes", help: "total encoded rollup size by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 9414154508029371128, dim_hash: 4833994461610112783 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, encoded_diff_size: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_diff_size_bytes", help: "total encoded diff size by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 14502594083303268037, dim_hash: 1365161818160524766 }, val: AtomicU64 { inner: 1600 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, hollow_batch_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_hollow_batch_count", help: "count of hollow batches by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 14684318548278768644, dim_hash: 75193424216019475 }, val: AtomicU64 { inner: 17 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, spine_batch_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_spine_batch_count", help: "count of spine batches by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 1834377188952327142, dim_hash: 6921476859480867789 }, val: AtomicU64 { inner: 11 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, batch_part_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_batch_part_count", help: "count of batch parts by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 13216778592044176664, dim_hash: 16019206780975659922 }, val: AtomicU64 { inner: 14 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, update_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_update_count", help: "count of updates by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 7201010553483319027, dim_hash: 3207660398020241426 }, val: AtomicU64 { inner: 9440 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, rollup_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_rollup_count", help: "count of rollups by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 761323467353979114, dim_hash: 13652204320360785253 }, val: AtomicU64 { inner: 11 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, seqnos_held: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_seqnos_held", help: "maximum count of gc-ineligible states by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 18145239766834940793, dim_hash: 11478181703025892121 }, val: AtomicU64 { inner: 1255 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, seqnos_since_last_rollup: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_seqnos_since_last_rollup", help: "count of seqnos since last rollup", const_label_pairs: [], variable_labels: ["shard", "name"], id: 2107250884985778976, dim_hash: 15568809609072952668 }, val: AtomicU64 { inner: 68 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, gc_seqno_held_parts: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_gc_seqno_held_parts", help: "count of parts referenced by some live state but not the current state (ie. parts kept only to satisfy seqno holds) at GC time", const_label_pairs: [], variable_labels: ["shard", "name"], id: 2238147055521178878, dim_hash: 15750595762996577850 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, gc_live_diffs: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_gc_live_diffs", help: "the number of diffs (or, alternatively, the number of seqnos) present in consensus state at GC time", const_label_pairs: [], variable_labels: ["shard", "name"], id: 5323643795709673096, dim_hash: 11590076963202753598 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_current_state_batches_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_current_state_batches_bytes", help: "data in batches/parts referenced by current version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3279591310009417810, dim_hash: 7937710227632532598 }, val: AtomicU64 { inner: 3064654 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_current_state_rollups_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_current_state_rollups_bytes", help: "data in rollups referenced by current version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 4135899224773587867, dim_hash: 16953217991877088784 }, val: AtomicU64 { inner: 1964778 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_referenced_not_current_state_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_referenced_not_current_state_bytes", help: "data referenced only by a previous version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 8860279577640344739, dim_hash: 4734146256861850509 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_not_leaked_not_referenced_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_not_leaked_not_referenced_bytes", help: "data written by an active writer but not referenced by any version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3971338148143162002, dim_hash: 15755584254241826595 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_leaked_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_leaked_bytes", help: "data reclaimable by a leaked blob detector", const_label_pairs: [], variable_labels: ["shard", "name"], id: 5961984655599123694, dim_hash: 8129389392712653163 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, gc_finished: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_gc_finished", help: "count of garbage collections finished by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 16108139496898868437, dim_hash: 8791973059662090958 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, compaction_applied: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_compaction_applied", help: "count of compactions applied to state by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 14484314251919878373, dim_hash: 13017191921448359429 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, cmd_succeeded: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_cmd_succeeded", help: "count of commands succeeded by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 10797154667241731600, dim_hash: 16324596663402955655 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, pubsub_push_diff_applied: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_pubsub_diff_applied", help: "number of diffs received via pubsub that applied", const_label_pairs: [], variable_labels: ["shard", "name"], id: 6149802747756645293, dim_hash: 14786888662052453603 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, pubsub_push_diff_not_applied_stale: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_pubsub_diff_not_applied_stale", help: "number of diffs received via pubsub that did not apply due to staleness", const_label_pairs: [], variable_labels: ["shard", "name"], id: 9822600743613485093, dim_hash: 6762868055283466351 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, pubsub_push_diff_not_applied_out_of_order: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_pubsub_diff_not_applied_out_of_order", help: "number of diffs received via pubsub that did not apply due to out-of-order delivery", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3095479296188055697, dim_hash: 414638876947755160 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, blob_gets: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_blob_gets", help: "number of Blob::get calls for this shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 11805774610219427637, dim_hash: 12747536327527772772 }, val: AtomicU64 { inner: 15 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, blob_sets: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_blob_sets", help: "number of Blob::set calls for this shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 6029037067254610913, dim_hash: 13682091196689249352 }, val: AtomicU64 { inner: 1 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, live_writers: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_live_writers", help: "number of writers that have recently appended updates to this shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3330112869755887895, dim_hash: 7606848744961885162 }, val: AtomicU64 { inner: 5 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, unconsolidated_snapshot: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_unconsolidated_snapshot", help: "in snapshot_and_read, the number of times consolidating the raw data wasn't enough to produce consolidated output", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3489618564379694061, dim_hash: 15896153323152729066 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, backpressure_emitted_bytes: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_backpressure_emitted_bytes", help: "A counter with the number of emitted bytes.", const_label_pairs: [], variable_labels: ["shard", "name"], id: 16555277652228604942, dim_hash: 5797152631786761966 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, backpressure_last_backpressured_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_backpressure_last_backpressured_bytes", help: "The last count of bytes we are waiting to be retired in the operator. This cannot be directly compared to `retired_bytes`, but CAN indicate that backpressure is happening.", const_label_pairs: [], variable_labels: ["shard", "name"], id: 7645515782867585441, dim_hash: 4389401406915477735 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, backpressure_retired_bytes: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_backpressure_retired_bytes", help: "A counter with the number of bytes retired by downstream processing.", const_label_pairs: [], variable_labels: ["shard", "name"], id: 7686365884611191225, dim_hash: 8304061614795921789 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> } }, state_versions: StateVersions { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, consensus: Tasked(MetricsConsensus { consensus: PostgresConsensus { .. }, metrics: Metrics { .. } }), blob: BlobMemCache { cfg: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, metrics: Metrics { .. }, cache: Mutex { data: Lru { capacity: Weight(1048576), total_weight: Weight(713973), next_time: Time(16), by_time: {Time(0): "s86892608-7ff3-82f8-1090-7584b4945aaa/v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a", Time(1): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e", Time(2): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8", Time(3): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332", Time(4): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e", Time(5): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pf591c6af-7eed-41d0-8001-d885178a7202", Time(6): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9", Time(7): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p1c55a321-6540-4c90-901c-637ff92177fa", Time(8): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151", Time(9): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7", Time(10): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d", Time(13): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8", Time(14): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2", Time(15): "s22a24146-7b1f-77f7-642a-6af59cd33da2/v1/r2d1db83b-b346-45ea-8ecc-9ffe0e6c671c"}, .. }, poisoned: false, .. }, blob: Tasked(MetricsBlob { blob: S3Blob { metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } }, client: Client { handle: Handle { conf: Config { config: FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), cloneable: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }, runtime_plugins: [], behavior_version: Some(BehaviorVersion) }, runtime_plugins: RuntimePlugins { client_plugins: [SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_identity_cache_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: Some(Tracked { _origin: "default_identity_cache_plugin", value: SharedIdentityCache(LazyCache { partitions: CachePartitions { partitions: RwLock { data: {IdentityCachePartition(0): ExpiringCache { buffer_time: 10s, value: RwLock { data: OnceCell { value: Some((Identity { data: Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }, expiration: None }, SystemTime { tv_sec: 1707219427, tv_nsec: 457524028 })) } }, _phantom: PhantomData<alloc::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>> }}, poisoned: false, .. }, buffer_time: 10s }, load_timeout: 5s, buffer_time: 10s, buffer_time_jitter_fraction: 0xaaaadc458b90, default_expiration: 900s }) }), identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_retry_config", items: [TypeErasedBox[!Clone]:Set(RetryConfig { mode: Standard, max_attempts: 1, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[!Clone]:Set(RetryPartition { name: "s3" })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_retry_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: Some(Tracked { _origin: "default_retry_config_plugin", value: SharedRetryStrategy(StandardRetryStrategy { retry_permit: Mutex { data: None, poisoned: false, .. } }) }), time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_retry_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_sleep_impl_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: Some(Tracked { _origin: "default_sleep_impl_plugin", value: SharedAsyncSleep(TokioSleep) }), config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_time_source_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "default_time_source_plugin", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_timeout_config", items: [TypeErasedBox[!Clone]:Set(TimeoutConfig { connect_timeout: None, read_timeout: None, operation_timeout: None, operation_attempt_timeout: None })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_timeout_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_timeout_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_stalled_stream_protection_config", items: [TypeErasedBox[!Clone]:Set(StalledStreamProtectionConfig { is_enabled: true, grace_period: 5s })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_stalled_stream_protection_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_stalled_stream_protection_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(ServiceRuntimePlugin { config: None, runtime_components: RuntimeComponentsBuilder { builder_name: "ServiceRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: Some(Tracked { _origin: "ServiceRuntimePlugin", value: SharedEndpointResolver(DowncastParams(DefaultResolver { partition_resolver: PartitionResolver { partitions: [PartitionMetadata { id: "aws", region_regex: Regex("^(us|eu|ap|sa|ca|me|af)-\\w+-\\d+$"), regions: {"sa-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "af-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ca-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-us-gov", region_regex: Regex("^us\\-gov\\-\\w+\\-\\d+$"), regions: {"aws-us-gov-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-us-gov", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-cn", region_regex: Regex("^cn\\-\\w+\\-\\d+$"), regions: {"cn-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "cn-northwest-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-cn-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-cn", dns_suffix: "amazonaws.com.cn", dual_stack_dns_suffix: "api.amazonwebservices.com.cn", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-iso", region_regex: Regex("^us\\-iso\\-\\w+\\-\\d+$"), regions: {"us-iso-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-iso-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso", dns_suffix: "c2s.ic.gov", dual_stack_dns_suffix: "c2s.ic.gov", supports_fips: true, supports_dual_stack: false } }, PartitionMetadata { id: "aws-iso-b", region_regex: Regex("^us\\-isob\\-\\w+\\-\\d+$"), regions: {"us-isob-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-b-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso-b", dns_suffix: "sc2s.sgov.gov", dual_stack_dns_suffix: "sc2s.sgov.gov", supports_fips: true, supports_dual_stack: false } }] } })) }), auth_schemes: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedAuthScheme(SigV4AuthScheme { signer: SigV4Signer }) }], identity_cache: None, identity_resolvers: [], interceptors: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ConnectionPoisoningInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ServiceClockSkewInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RequestInfoInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: UserAgentInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: InvocationIdInterceptor { default: DefaultInvocationIdGenerator { rng: Mutex { data: Rng(3679849605353857549), poisoned: false, .. } } } } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RecursionDetectionInterceptor { env: Env(Real) } } }], retry_classifiers: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedRetryClassifier(HttpStatusCodeClassifier { retryable_status_codes: [500, 502, 503, 504] }) }], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] } }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }), order: None }), SharedRuntimePlugin(NoAuthRuntimePlugin(RuntimeComponentsBuilder { builder_name: "NoAuthRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [Tracked { _origin: "NoAuthRuntimePlugin", value: SharedAuthScheme(NoAuthScheme { signer: NoAuthSigner }) }], identity_cache: None, identity_resolvers: [Tracked { _origin: "NoAuthRuntimePlugin", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "no_auth" }, identity_resolver: SharedIdentityResolver { inner: NoAuthIdentityResolver, cache_partition: IdentityCachePartition(1) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }))], operation_plugins: [] } } }, bucket: "persist", prefix: "persist", max_keys: 1000, multipart_config: MultipartConfig { multipart_threshold: 8388608, multipart_chunk_size: 8388608 } }, metrics: Metrics { .. } }) }, metrics: Metrics { .. } }, shared_states: StateCache { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, states: Mutex { data: {ShardId(22a24146-7b1f-77f7-642a-6af59cd33da2): OnceCell { value: Some((Weak)) }, ShardId(86892608-7ff3-82f8-1090-7584b4945aaa): OnceCell { value: Some((Weak)) }}, poisoned: false, .. }, pubsub_sender: MetricsSameProcessPubSubSender { metrics: Metrics { .. }, delegate: SubscriptionTrackingSender { delegate: PubSubConnection { connection_id: 0, notifier: Sender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aa5d800, tail_position: 0 }, semaphore: Semaphore { semaphore: Semaphore { permits: 25 }, bound: 25 }, rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, state: PubSubState { connection_id_counter: 1, shard_subscribers: RwLock { data: {}, poisoned: false, .. }, connections: RwLock { data: HashSet({0}), poisoned: false, .. }, metrics: PubSubServerMetrics { active_connections: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_active_connections", help: "number of active connections to server", const_label_pairs: [], variable_labels: [], id: 11106074761997215763, dim_hash: 3108382538162212977 }, val: AtomicU64 { inner: 1 }, val_type: Gauge, label_pairs: [] } }, broadcasted_diff_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_count", help: "count of total broadcast diff messages sent", const_label_pairs: [], variable_labels: [], id: 13085877342429723307, dim_hash: 1606030166613010534 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_bytes: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_bytes", help: "count of total broadcast diff bytes sent", const_label_pairs: [], variable_labels: [], id: 16407848502932309983, dim_hash: 8652677384771939155 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_dropped_channel_full: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_dropped_channel_full", help: "count of diffs dropped due to full connection channel", const_label_pairs: [], variable_labels: [], id: 4577479958553503670, dim_hash: 6703876575886109795 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, push_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 4528001026548059179 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "push" }] } }, subscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "subscribe" }] } }, unsubscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "unsubscribe" }] } }, connection_cleanup_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "cleanup" }] } }, push_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "push" }] } }, subscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "subscribe" }] } }, unsubscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "unsubscribe" }] } } } } }, subscribes: Mutex { data: {}, poisoned: false, .. } } } }, pubsub_sender: MetricsSameProcessPubSubSender { metrics: Metrics { .. }, delegate: SubscriptionTrackingSender { delegate: PubSubConnection { connection_id: 0, notifier: Sender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aa5d800, tail_position: 0 }, semaphore: Semaphore { semaphore: Semaphore { permits: 25 }, bound: 25 }, rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, state: PubSubState { connection_id_counter: 1, shard_subscribers: RwLock { data: {}, poisoned: false, .. }, connections: RwLock { data: HashSet({0}), poisoned: false, .. }, metrics: PubSubServerMetrics { active_connections: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_active_connections", help: "number of active connections to server", const_label_pairs: [], variable_labels: [], id: 11106074761997215763, dim_hash: 3108382538162212977 }, val: AtomicU64 { inner: 1 }, val_type: Gauge, label_pairs: [] } }, broadcasted_diff_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_count", help: "count of total broadcast diff messages sent", const_label_pairs: [], variable_labels: [], id: 13085877342429723307, dim_hash: 1606030166613010534 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_bytes: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_bytes", help: "count of total broadcast diff bytes sent", const_label_pairs: [], variable_labels: [], id: 16407848502932309983, dim_hash: 8652677384771939155 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_dropped_channel_full: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_dropped_channel_full", help: "count of diffs dropped due to full connection channel", const_label_pairs: [], variable_labels: [], id: 4577479958553503670, dim_hash: 6703876575886109795 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, push_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 4528001026548059179 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "push" }] } }, subscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "subscribe" }] } }, unsubscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "unsubscribe" }] } }, connection_cleanup_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "cleanup" }] } }, push_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "push" }] } }, subscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "subscribe" }] } }, unsubscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "unsubscribe" }] } } } } }, subscribes: Mutex { data: {}, poisoned: false, .. } } }, shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), state: LockingTypedState { shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), state: RwLock { data: TypedState { state: State { applier_version: Version { major: 0, minor: 86, patch: 1 }, shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), seqno: SeqNo(3141), walltime_ms: 1707218521642, hostname: "materialized", collections: StateCollections { last_gc_req: SeqNo(1886), rollups: {SeqNo(1793): HollowRollup { key: PartialRollupKey("v1793/rb8d76d37-da9f-4bca-b4bc-7bcd554f3561"), encoded_size_bytes: Some(235911) }, SeqNo(1921): HollowRollup { key: PartialRollupKey("v1921/r8c84a9b0-1dd6-4d5f-8d58-42fdf9c562fd"), encoded_size_bytes: Some(240378) }, SeqNo(2049): HollowRollup { key: PartialRollupKey("v2049/r0ee9aed8-f53e-4a0f-a6bf-a602230c9b8c"), encoded_size_bytes: Some(244978) }, SeqNo(2177): HollowRollup { key: PartialRollupKey("v2177/rd00a60e1-1751-4706-aabb-d7c91c953581"), encoded_size_bytes: Some(185861) }, SeqNo(2305): HollowRollup { key: PartialRollupKey("v2305/rb0db6ea8-22ba-499b-8142-56ea12c8b77d"), encoded_size_bytes: Some(61636) }, SeqNo(2433): HollowRollup { key: PartialRollupKey("v2433/rcbeee0cd-1eed-4a2a-a2d5-3bbf07c57c42"), encoded_size_bytes: Some(96041) }, SeqNo(2561): HollowRollup { key: PartialRollupKey("v2561/rfa7236ef-b673-4d31-9285-88e8f05d4967"), encoded_size_bytes: Some(230501) }, SeqNo(2689): HollowRollup { key: PartialRollupKey("v2689/r94e8eb0c-a345-4071-93c6-5e3ff533ffaa"), encoded_size_bytes: Some(260709) }, SeqNo(2817): HollowRollup { key: PartialRollupKey("v2817/r95c2f512-97fb-4683-bed9-705611c0bf15"), encoded_size_bytes: Some(249707) }, SeqNo(2945): HollowRollup { key: PartialRollupKey("v2945/rc1988a58-d94e-40fe-a427-5819dde159d0"), encoded_size_bytes: Some(104587) }, SeqNo(3073): HollowRollup { key: PartialRollupKey("v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a"), encoded_size_bytes: Some(54469) }}, leased_readers: {LeasedReaderId(74e41d6b-2e4f-4eb5-a344-c38098967f86): LeasedReaderState { seqno: SeqNo(2850), since: Antichain { elements: [2548] }, last_heartbeat_timestamp_ms: 1707218372628, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(aaca235d-d8a3-43af-896a-be238b047b5c): LeasedReaderState { seqno: SeqNo(2532), since: Antichain { elements: [2275] }, last_heartbeat_timestamp_ms: 1707218189893, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(bea4f920-abe3-4a28-99f4-18f2cfbe63dc): LeasedReaderState { seqno: SeqNo(3138), since: Antichain { elements: [2823] }, last_heartbeat_timestamp_ms: 1707218521515, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(c9661bfc-a45d-41ad-a032-2fab185ba9fe): LeasedReaderState { seqno: SeqNo(1886), since: Antichain { elements: [1688] }, last_heartbeat_timestamp_ms: 1707217833912, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }}, critical_readers: {CriticalReaderId(00000000-1111-2222-3333-444444444444): CriticalReaderState { since: Antichain { elements: [2824] }, opaque: OpaqueState([0, 0, 0, 0, 0, 0, 0, 128]), opaque_codec: "i64", debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state critical since" } }}, writers: {WriterId(3e93343d-747a-4635-88e5-af657e166bf4): WriterState { last_heartbeat_timestamp_ms: 1707217568863, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(134822b8-f584-410a-9dec-87e3ca75c255), most_recent_write_upper: Antichain { elements: [1133] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(7f30a168-902e-4664-b241-e8904ebb3605): WriterState { last_heartbeat_timestamp_ms: 1707218521642, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(e259f488-6fd6-4be6-b873-e9c7d009442e), most_recent_write_upper: Antichain { elements: [2826] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(82ea1362-2f7c-4500-b780-20c5c14a7c4f): WriterState { last_heartbeat_timestamp_ms: 1707217920958, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(b4e2f669-5113-4813-8c44-227768ab1465), most_recent_write_upper: Antichain { elements: [1901] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(8485069b-76af-40a2-95c3-5f2512ffa583): WriterState { last_heartbeat_timestamp_ms: 1707218337916, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(1b2eb734-60a4-4c83-a53a-014d19b089bc), most_recent_write_upper: Antichain { elements: [2549] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(863457b3-28f8-48c0-b79a-3d1ccaa32bf0): WriterState { last_heartbeat_timestamp_ms: 1707218516383, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(89f621b0-57de-452e-ae59-14c87d5b7c5e), most_recent_write_upper: Antichain { elements: [2824] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }}, trace: Trace { spine: Spine { effort: 1, next_id: 71, since: Antichain { elements: [1688] }, upper: Antichain { elements: [2826] }, merging: [Single(Some(Merged(IdHollowBatch { id: SpineId(70, 71), batch: HollowBatch { desc: ([2825], [2826], [0]), parts: [], len: 0, runs: [] } }))), Vacant, Double(InProgress(Fueled { id: SpineId(66, 68), desc: Description { lower: Antichain { elements: [2821] }, upper: Antichain { elements: [2823] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(66, 67), batch: HollowBatch { desc: ([2821], [2822], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7"), encoded_size_bytes: 1192, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 156], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 156], upper: [194, 1, 15, 10, 2, 6, 108, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(67, 68), batch: HollowBatch { desc: ([2822], [2823], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d"), encoded_size_bytes: 1192, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 102, 28], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 15, 10, 2, 6, 108, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 4, 10, 2, 102, 28] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 4 }, Fueled { id: SpineId(68, 70), desc: Description { lower: Antichain { elements: [2823] }, upper: Antichain { elements: [2825] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(68, 69), batch: HollowBatch { desc: ([2823], [2824], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 102, 28], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 102, 28], upper: [194, 1, 4, 10, 2, 102, 44] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(69, 70), batch: HollowBatch { desc: ([2824], [2825], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2"), encoded_size_bytes: 1087, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 92, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "epoch", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 92], upper: [194, 1, 3, 10, 1, 108] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("Epoch")), upper: Some(UpperString("Epoch")) })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 4 }, FuelingMerge { since: Antichain { elements: [1688] }, remaining_work: 0 })), Single(Some(Fueled { id: SpineId(8, 66), desc: Description { lower: Antichain { elements: [2554] }, upper: Antichain { elements: [2821] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(8, 63), batch: HollowBatch { desc: ([2554], [2818], [1688]), parts: [], len: 0, runs: [] } }, IdHollowBatch { id: SpineId(63, 64), batch: HollowBatch { desc: ([2818], [2819], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 108], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 108], upper: [194, 1, 4, 10, 2, 101, 124] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(64, 65), batch: HollowBatch { desc: ([2819], [2820], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p1c55a321-6540-4c90-901c-637ff92177fa"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 124], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 124], upper: [194, 1, 4, 10, 2, 101, 140] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(65, 66), batch: HollowBatch { desc: ([2820], [2821], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 140], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 140], upper: [194, 1, 4, 10, 2, 101, 156] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 6 })), Single(Some(Fueled { id: SpineId(6, 8), desc: Description { lower: Antichain { elements: [2551] }, upper: Antichain { elements: [2554] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(6, 7), batch: HollowBatch { desc: ([2551], [2553], [940]), parts: [], len: 0, runs: [] } }, IdHollowBatch { id: SpineId(7, 8), batch: HollowBatch { desc: ([2553], [2554], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pf591c6af-7eed-41d0-8001-d885178a7202"), encoded_size_bytes: 2116, key_lower: [10, 89, 10, 87, 186, 1, 84, 10, 28, 10, 3, 107, 101, 121, 18, 21, 186, 1, 18, 10, 16, 10, 4, 110, 97, 109, 101, 18, 8, 66, 6, 115, 121, 115, 116, 101, 109, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 33, 10, 5, 118, 97, 108, 117, 101, 18, 24, 186, 1, 21, 10, 19, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 8, 194, 1, 5, 10, 3, 3, 16, 92], stats: Some(LazyPartStats { key: ProtoStructStats { len: 8, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 8 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 8, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 8, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("M")), upper: Some(UpperString("M")) })) }) }, ProtoJsonMapElementStats { name: "name", len: 4, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("catalog_content_version")), upper: Some(UpperString("system")) })) }) }, ProtoJsonMapElementStats { name: "object_name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("map_agg")), upper: Some(UpperString("map_build")) })) }) }, ProtoJsonMapElementStats { name: "object_type", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 140], upper: [194, 1, 3, 10, 1, 140] })) }) }, ProtoJsonMapElementStats { name: "schema_name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("mz_catalog")), upper: Some(UpperString("mz_catalog")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 8, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("GidMapping")), upper: Some(UpperString("Timestamp")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 8, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "fingerprint", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("")), upper: Some(UpperString("")) })) }) }, ProtoJsonMapElementStats { name: "id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 5, 10, 3, 3, 16, 92], upper: [194, 1, 5, 10, 3, 3, 16, 108] })) }) }, ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 5, 10, 3, 3, 16, 92], upper: [194, 1, 5, 10, 3, 3, 16, 124] })) }) }, ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 20, 10, 7, 1, 112, 114, 23, 150, 64, 92, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 9, 10, 7, 23, 7, 33, 131, 114, 152, 44] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("0.85.3")), upper: Some(UpperString("0.86.1")) })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 8, runs: [] } }], len: 8 })), Vacant, Vacant, Vacant, Double(InProgress(Merged(IdHollowBatch { id: SpineId(4, 5), batch: HollowBatch { desc: ([2491], [2550], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332"), encoded_size_bytes: 59424, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 76, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 191, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 191 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 191, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 189, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 37, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 20, 10, 7, 1, 112, 114, 24, 41, 113, 76, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 9, 10, 7, 23, 7, 33, 131, 55, 115, 108] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 191, runs: [] } }), Merged(IdHollowBatch { id: SpineId(5, 6), batch: HollowBatch { desc: ([2550], [2551], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e"), encoded_size_bytes: 96428, key_lower: [10, 90, 10, 88, 186, 1, 85, 10, 33, 10, 3, 107, 101, 121, 18, 26, 186, 1, 23, 10, 21, 10, 3, 107, 101, 121, 18, 14, 66, 12, 117, 115, 101, 114, 95, 118, 101, 114, 115, 105, 111, 110, 10, 16, 10, 4, 107, 105, 110, 100, 18, 8, 66, 6, 67, 111, 110, 102, 105, 103, 10, 30, 10, 5, 118, 97, 108, 117, 101, 18, 21, 186, 1, 18, 10, 16, 10, 5, 118, 97, 108, 117, 101, 18, 7, 194, 1, 4, 10, 2, 4, 92], stats: Some(LazyPartStats { key: ProtoStructStats { len: 160, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 160 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 160, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 160, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "id", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "value", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "System", len: 4, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 44] })) }) }, ProtoJsonMapElementStats { name: "User", len: 154, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 4, 10, 2, 8, 28] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user_version")), upper: Some(UpperString("user_version")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 160, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("Cluster")), upper: Some(UpperString("Config")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 160, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "config", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "variant", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "Managed", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "availability_zones", len: 14, stats: Some(ProtoJsonStats { kind: Some(Lists(())) }) }, ProtoJsonMapElementStats { name: "disk", len: 14, stats: Some(ProtoJsonStats { kind: Some(Bools(ProtoPrimitiveStats { lower: Some(LowerBool(false)), upper: Some(UpperBool(true)) })) }) }, ProtoJsonMapElementStats { name: "idle_arrangement_merge_effort", len: 14, stats: Some(ProtoJsonStats { kind: Some(JsonNulls(())) }) }, ProtoJsonMapElementStats { name: "logging", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "interval", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "nanos", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 12], upper: [194, 1, 3, 10, 1, 12] })) }) }, ProtoJsonMapElementStats { name: "secs", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 28] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "log_logging", len: 14, stats: Some(ProtoJsonStats { kind: Some(Bools(ProtoPrimitiveStats { lower: Some(LowerBool(false)), upper: Some(UpperBool(false)) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "replication_factor", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 44] })) }) }, ProtoJsonMapElementStats { name: "size", len: 14, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("1")), upper: Some(UpperString("4-4")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "Unmanaged", len: 144, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "linked_object_id", len: 79, stats: Some(ProtoJsonStats { kind: Some(JsonNulls(())) }) }, ProtoJsonMapElementStats { name: "name", len: 158, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("create_cluster1")), upper: Some(UpperString("webhook_cluster")) })) }) }, ProtoJsonMapElementStats { name: "owner_id", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "value", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "System", len: 6, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 28] })) }) }, ProtoJsonMapElementStats { name: "User", len: 152, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 124] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "privileges", len: 158, stats: Some(ProtoJsonStats { kind: Some(Lists(())) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 4, 92], upper: [194, 1, 4, 10, 2, 4, 108] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 160, runs: [] } }), FuelingMerge { since: Antichain { elements: [1688] }, remaining_work: 151 })), Single(Some(Merged(IdHollowBatch { id: SpineId(3, 4), batch: HollowBatch { desc: ([2409], [2491], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8"), encoded_size_bytes: 97218, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 96, 44], stats: Some(LazyPartStats { key: ProtoStructStats { len: 335, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 335 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 335, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 335, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 56, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 130, 97, 153, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 130, 137, 22, 44] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 335, runs: [] } }))), Vacant, Single(Some(Merged(IdHollowBatch { id: SpineId(2, 3), batch: HollowBatch { desc: ([1810], [2409], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e"), encoded_size_bytes: 395968, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 60, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 1294, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 1294 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 1294, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 1292, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 219, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 120, 121, 23, 76], upper: [194, 1, 9, 10, 7, 23, 7, 33, 130, 97, 105, 108] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 1073, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 118, 7, 67, 76], upper: [194, 1, 20, 10, 7, 1, 112, 114, 23, 150, 64, 92, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 1294, runs: [] } }))), Single(Some(Merged(IdHollowBatch { id: SpineId(1, 2), batch: HollowBatch { desc: ([799], [1810], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/pc81f7c60-d61b-48b4-9110-4ccc0ac802cb"), encoded_size_bytes: 1197551, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 44, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 3196, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 3196 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 3196, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 3194, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 423, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 116, 144, 48, 28], upper: [194, 1, 9, 10, 7, 23, 7, 33, 120, 120, 88, 92] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 2771, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 151, 76], upper: [194, 1, 9, 10, 7, 23, 7, 33, 118, 7, 67, 76] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 3196, runs: [] } }))), Single(Some(Merged(IdHollowBatch { id: SpineId(0, 1), batch: HollowBatch { desc: ([0], [799], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008304/p7dbe0fa5-5c0a-4054-ab61-9e89ec29f8e4"), encoded_size_bytes: 1207754, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 44, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 4242, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 4242 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 4242, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 4241, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 385, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 88, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 116, 136, 115, 156] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 3856, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 3, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 3, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 88, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 151, 76] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 4242, runs: [] } })))] } } } } }, poisoned: false, .. }, notifier: StateWatchNotifier { metrics: Metrics { .. }, tx: broadcast::Sender } } }, isolated_runtime: IsolatedRuntime { inner: Some(Runtime { scheduler: MultiThread(MultiThread), handle: Handle { inner: MultiThread(multi_thread::Handle { ... }) }, blocking_pool: BlockingPool }) } }, gc: GarbageCollector { sender: UnboundedSender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff720a0000, tail_position: 0 }, semaphore: Semaphore(0), rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, _phantom: PhantomData<fn() -> (mz_storage_types::sources::SourceData, (), mz_repr::timestamp::Timestamp, i64)> }, reader_id: CriticalReaderId(00000000-1111-2222-3333-444444444444), since: Antichain { elements: [2824] }, opaque: -9223372036854775808, last_downgrade_since: 1707218521568 }, write_handle: WriteHandle { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, machine: Machine { applier: Applier { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, shard_metrics: ShardMetrics { shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), since: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_since", help: "since by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 15579663059153072772, dim_hash: 13414171350431820200 }, val: AtomicI64 { inner: 1688 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, upper: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_upper", help: "upper by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 4092965619647097614, dim_hash: 14717199528981430922 }, val: AtomicI64 { inner: 2826 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, largest_batch_size: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_largest_batch_size", help: "largest encoded batch size by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 15668483818539198391, dim_hash: 762317046610672469 }, val: AtomicU64 { inner: 1207754 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, latest_rollup_size: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_rollup_size_bytes", help: "total encoded rollup size by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 9414154508029371128, dim_hash: 4833994461610112783 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, encoded_diff_size: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_diff_size_bytes", help: "total encoded diff size by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 14502594083303268037, dim_hash: 1365161818160524766 }, val: AtomicU64 { inner: 1600 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, hollow_batch_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_hollow_batch_count", help: "count of hollow batches by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 14684318548278768644, dim_hash: 75193424216019475 }, val: AtomicU64 { inner: 17 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, spine_batch_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_spine_batch_count", help: "count of spine batches by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 1834377188952327142, dim_hash: 6921476859480867789 }, val: AtomicU64 { inner: 11 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, batch_part_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_batch_part_count", help: "count of batch parts by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 13216778592044176664, dim_hash: 16019206780975659922 }, val: AtomicU64 { inner: 14 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, update_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_update_count", help: "count of updates by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 7201010553483319027, dim_hash: 3207660398020241426 }, val: AtomicU64 { inner: 9440 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, rollup_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_rollup_count", help: "count of rollups by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 761323467353979114, dim_hash: 13652204320360785253 }, val: AtomicU64 { inner: 11 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, seqnos_held: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_seqnos_held", help: "maximum count of gc-ineligible states by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 18145239766834940793, dim_hash: 11478181703025892121 }, val: AtomicU64 { inner: 1255 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, seqnos_since_last_rollup: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_seqnos_since_last_rollup", help: "count of seqnos since last rollup", const_label_pairs: [], variable_labels: ["shard", "name"], id: 2107250884985778976, dim_hash: 15568809609072952668 }, val: AtomicU64 { inner: 68 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, gc_seqno_held_parts: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_gc_seqno_held_parts", help: "count of parts referenced by some live state but not the current state (ie. parts kept only to satisfy seqno holds) at GC time", const_label_pairs: [], variable_labels: ["shard", "name"], id: 2238147055521178878, dim_hash: 15750595762996577850 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, gc_live_diffs: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_gc_live_diffs", help: "the number of diffs (or, alternatively, the number of seqnos) present in consensus state at GC time", const_label_pairs: [], variable_labels: ["shard", "name"], id: 5323643795709673096, dim_hash: 11590076963202753598 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_current_state_batches_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_current_state_batches_bytes", help: "data in batches/parts referenced by current version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3279591310009417810, dim_hash: 7937710227632532598 }, val: AtomicU64 { inner: 3064654 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_current_state_rollups_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_current_state_rollups_bytes", help: "data in rollups referenced by current version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 4135899224773587867, dim_hash: 16953217991877088784 }, val: AtomicU64 { inner: 1964778 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_referenced_not_current_state_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_referenced_not_current_state_bytes", help: "data referenced only by a previous version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 8860279577640344739, dim_hash: 4734146256861850509 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_not_leaked_not_referenced_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_not_leaked_not_referenced_bytes", help: "data written by an active writer but not referenced by any version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3971338148143162002, dim_hash: 15755584254241826595 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_leaked_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_leaked_bytes", help: "data reclaimable by a leaked blob detector", const_label_pairs: [], variable_labels: ["shard", "name"], id: 5961984655599123694, dim_hash: 8129389392712653163 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, gc_finished: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_gc_finished", help: "count of garbage collections finished by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 16108139496898868437, dim_hash: 8791973059662090958 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, compaction_applied: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_compaction_applied", help: "count of compactions applied to state by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 14484314251919878373, dim_hash: 13017191921448359429 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, cmd_succeeded: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_cmd_succeeded", help: "count of commands succeeded by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 10797154667241731600, dim_hash: 16324596663402955655 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, pubsub_push_diff_applied: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_pubsub_diff_applied", help: "number of diffs received via pubsub that applied", const_label_pairs: [], variable_labels: ["shard", "name"], id: 6149802747756645293, dim_hash: 14786888662052453603 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, pubsub_push_diff_not_applied_stale: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_pubsub_diff_not_applied_stale", help: "number of diffs received via pubsub that did not apply due to staleness", const_label_pairs: [], variable_labels: ["shard", "name"], id: 9822600743613485093, dim_hash: 6762868055283466351 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, pubsub_push_diff_not_applied_out_of_order: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_pubsub_diff_not_applied_out_of_order", help: "number of diffs received via pubsub that did not apply due to out-of-order delivery", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3095479296188055697, dim_hash: 414638876947755160 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, blob_gets: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_blob_gets", help: "number of Blob::get calls for this shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 11805774610219427637, dim_hash: 12747536327527772772 }, val: AtomicU64 { inner: 15 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, blob_sets: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_blob_sets", help: "number of Blob::set calls for this shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 6029037067254610913, dim_hash: 13682091196689249352 }, val: AtomicU64 { inner: 1 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, live_writers: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_live_writers", help: "number of writers that have recently appended updates to this shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3330112869755887895, dim_hash: 7606848744961885162 }, val: AtomicU64 { inner: 5 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, unconsolidated_snapshot: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_unconsolidated_snapshot", help: "in snapshot_and_read, the number of times consolidating the raw data wasn't enough to produce consolidated output", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3489618564379694061, dim_hash: 15896153323152729066 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, backpressure_emitted_bytes: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_backpressure_emitted_bytes", help: "A counter with the number of emitted bytes.", const_label_pairs: [], variable_labels: ["shard", "name"], id: 16555277652228604942, dim_hash: 5797152631786761966 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, backpressure_last_backpressured_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_backpressure_last_backpressured_bytes", help: "The last count of bytes we are waiting to be retired in the operator. This cannot be directly compared to `retired_bytes`, but CAN indicate that backpressure is happening.", const_label_pairs: [], variable_labels: ["shard", "name"], id: 7645515782867585441, dim_hash: 4389401406915477735 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, backpressure_retired_bytes: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_backpressure_retired_bytes", help: "A counter with the number of bytes retired by downstream processing.", const_label_pairs: [], variable_labels: ["shard", "name"], id: 7686365884611191225, dim_hash: 8304061614795921789 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> } }, state_versions: StateVersions { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, consensus: Tasked(MetricsConsensus { consensus: PostgresConsensus { .. }, metrics: Metrics { .. } }), blob: BlobMemCache { cfg: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, metrics: Metrics { .. }, cache: Mutex { data: Lru { capacity: Weight(1048576), total_weight: Weight(713973), next_time: Time(16), by_time: {Time(0): "s86892608-7ff3-82f8-1090-7584b4945aaa/v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a", Time(1): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e", Time(2): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8", Time(3): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332", Time(4): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e", Time(5): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pf591c6af-7eed-41d0-8001-d885178a7202", Time(6): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9", Time(7): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p1c55a321-6540-4c90-901c-637ff92177fa", Time(8): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151", Time(9): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7", Time(10): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d", Time(13): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8", Time(14): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2", Time(15): "s22a24146-7b1f-77f7-642a-6af59cd33da2/v1/r2d1db83b-b346-45ea-8ecc-9ffe0e6c671c"}, .. }, poisoned: false, .. }, blob: Tasked(MetricsBlob { blob: S3Blob { metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } }, client: Client { handle: Handle { conf: Config { config: FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), cloneable: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }, runtime_plugins: [], behavior_version: Some(BehaviorVersion) }, runtime_plugins: RuntimePlugins { client_plugins: [SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_identity_cache_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: Some(Tracked { _origin: "default_identity_cache_plugin", value: SharedIdentityCache(LazyCache { partitions: CachePartitions { partitions: RwLock { data: {IdentityCachePartition(0): ExpiringCache { buffer_time: 10s, value: RwLock { data: OnceCell { value: Some((Identity { data: Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }, expiration: None }, SystemTime { tv_sec: 1707219427, tv_nsec: 457524028 })) } }, _phantom: PhantomData<alloc::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>> }}, poisoned: false, .. }, buffer_time: 10s }, load_timeout: 5s, buffer_time: 10s, buffer_time_jitter_fraction: 0xaaaadc458b90, default_expiration: 900s }) }), identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_retry_config", items: [TypeErasedBox[!Clone]:Set(RetryConfig { mode: Standard, max_attempts: 1, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[!Clone]:Set(RetryPartition { name: "s3" })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_retry_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: Some(Tracked { _origin: "default_retry_config_plugin", value: SharedRetryStrategy(StandardRetryStrategy { retry_permit: Mutex { data: None, poisoned: false, .. } }) }), time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_retry_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_sleep_impl_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: Some(Tracked { _origin: "default_sleep_impl_plugin", value: SharedAsyncSleep(TokioSleep) }), config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_time_source_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "default_time_source_plugin", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_timeout_config", items: [TypeErasedBox[!Clone]:Set(TimeoutConfig { connect_timeout: None, read_timeout: None, operation_timeout: None, operation_attempt_timeout: None })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_timeout_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_timeout_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_stalled_stream_protection_config", items: [TypeErasedBox[!Clone]:Set(StalledStreamProtectionConfig { is_enabled: true, grace_period: 5s })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_stalled_stream_protection_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_stalled_stream_protection_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(ServiceRuntimePlugin { config: None, runtime_components: RuntimeComponentsBuilder { builder_name: "ServiceRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: Some(Tracked { _origin: "ServiceRuntimePlugin", value: SharedEndpointResolver(DowncastParams(DefaultResolver { partition_resolver: PartitionResolver { partitions: [PartitionMetadata { id: "aws", region_regex: Regex("^(us|eu|ap|sa|ca|me|af)-\\w+-\\d+$"), regions: {"sa-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "af-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ca-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-us-gov", region_regex: Regex("^us\\-gov\\-\\w+\\-\\d+$"), regions: {"aws-us-gov-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-us-gov", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-cn", region_regex: Regex("^cn\\-\\w+\\-\\d+$"), regions: {"cn-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "cn-northwest-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-cn-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-cn", dns_suffix: "amazonaws.com.cn", dual_stack_dns_suffix: "api.amazonwebservices.com.cn", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-iso", region_regex: Regex("^us\\-iso\\-\\w+\\-\\d+$"), regions: {"us-iso-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-iso-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso", dns_suffix: "c2s.ic.gov", dual_stack_dns_suffix: "c2s.ic.gov", supports_fips: true, supports_dual_stack: false } }, PartitionMetadata { id: "aws-iso-b", region_regex: Regex("^us\\-isob\\-\\w+\\-\\d+$"), regions: {"us-isob-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-b-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso-b", dns_suffix: "sc2s.sgov.gov", dual_stack_dns_suffix: "sc2s.sgov.gov", supports_fips: true, supports_dual_stack: false } }] } })) }), auth_schemes: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedAuthScheme(SigV4AuthScheme { signer: SigV4Signer }) }], identity_cache: None, identity_resolvers: [], interceptors: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ConnectionPoisoningInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ServiceClockSkewInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RequestInfoInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: UserAgentInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: InvocationIdInterceptor { default: DefaultInvocationIdGenerator { rng: Mutex { data: Rng(3679849605353857549), poisoned: false, .. } } } } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RecursionDetectionInterceptor { env: Env(Real) } } }], retry_classifiers: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedRetryClassifier(HttpStatusCodeClassifier { retryable_status_codes: [500, 502, 503, 504] }) }], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] } }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }), order: None }), SharedRuntimePlugin(NoAuthRuntimePlugin(RuntimeComponentsBuilder { builder_name: "NoAuthRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [Tracked { _origin: "NoAuthRuntimePlugin", value: SharedAuthScheme(NoAuthScheme { signer: NoAuthSigner }) }], identity_cache: None, identity_resolvers: [Tracked { _origin: "NoAuthRuntimePlugin", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "no_auth" }, identity_resolver: SharedIdentityResolver { inner: NoAuthIdentityResolver, cache_partition: IdentityCachePartition(1) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }))], operation_plugins: [] } } }, bucket: "persist", prefix: "persist", max_keys: 1000, multipart_config: MultipartConfig { multipart_threshold: 8388608, multipart_chunk_size: 8388608 } }, metrics: Metrics { .. } }) }, metrics: Metrics { .. } }, shared_states: StateCache { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, states: Mutex { data: {ShardId(22a24146-7b1f-77f7-642a-6af59cd33da2): OnceCell { value: Some((Weak)) }, ShardId(86892608-7ff3-82f8-1090-7584b4945aaa): OnceCell { value: Some((Weak)) }}, poisoned: false, .. }, pubsub_sender: MetricsSameProcessPubSubSender { metrics: Metrics { .. }, delegate: SubscriptionTrackingSender { delegate: PubSubConnection { connection_id: 0, notifier: Sender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aa5d800, tail_position: 0 }, semaphore: Semaphore { semaphore: Semaphore { permits: 25 }, bound: 25 }, rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, state: PubSubState { connection_id_counter: 1, shard_subscribers: RwLock { data: {}, poisoned: false, .. }, connections: RwLock { data: HashSet({0}), poisoned: false, .. }, metrics: PubSubServerMetrics { active_connections: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_active_connections", help: "number of active connections to server", const_label_pairs: [], variable_labels: [], id: 11106074761997215763, dim_hash: 3108382538162212977 }, val: AtomicU64 { inner: 1 }, val_type: Gauge, label_pairs: [] } }, broadcasted_diff_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_count", help: "count of total broadcast diff messages sent", const_label_pairs: [], variable_labels: [], id: 13085877342429723307, dim_hash: 1606030166613010534 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_bytes: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_bytes", help: "count of total broadcast diff bytes sent", const_label_pairs: [], variable_labels: [], id: 16407848502932309983, dim_hash: 8652677384771939155 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_dropped_channel_full: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_dropped_channel_full", help: "count of diffs dropped due to full connection channel", const_label_pairs: [], variable_labels: [], id: 4577479958553503670, dim_hash: 6703876575886109795 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, push_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 4528001026548059179 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "push" }] } }, subscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "subscribe" }] } }, unsubscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "unsubscribe" }] } }, connection_cleanup_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "cleanup" }] } }, push_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "push" }] } }, subscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "subscribe" }] } }, unsubscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "unsubscribe" }] } } } } }, subscribes: Mutex { data: {}, poisoned: false, .. } } } }, pubsub_sender: MetricsSameProcessPubSubSender { metrics: Metrics { .. }, delegate: SubscriptionTrackingSender { delegate: PubSubConnection { connection_id: 0, notifier: Sender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aa5d800, tail_position: 0 }, semaphore: Semaphore { semaphore: Semaphore { permits: 25 }, bound: 25 }, rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, state: PubSubState { connection_id_counter: 1, shard_subscribers: RwLock { data: {}, poisoned: false, .. }, connections: RwLock { data: HashSet({0}), poisoned: false, .. }, metrics: PubSubServerMetrics { active_connections: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_active_connections", help: "number of active connections to server", const_label_pairs: [], variable_labels: [], id: 11106074761997215763, dim_hash: 3108382538162212977 }, val: AtomicU64 { inner: 1 }, val_type: Gauge, label_pairs: [] } }, broadcasted_diff_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_count", help: "count of total broadcast diff messages sent", const_label_pairs: [], variable_labels: [], id: 13085877342429723307, dim_hash: 1606030166613010534 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_bytes: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_bytes", help: "count of total broadcast diff bytes sent", const_label_pairs: [], variable_labels: [], id: 16407848502932309983, dim_hash: 8652677384771939155 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_dropped_channel_full: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_dropped_channel_full", help: "count of diffs dropped due to full connection channel", const_label_pairs: [], variable_labels: [], id: 4577479958553503670, dim_hash: 6703876575886109795 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, push_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 4528001026548059179 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "push" }] } }, subscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "subscribe" }] } }, unsubscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "unsubscribe" }] } }, connection_cleanup_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "cleanup" }] } }, push_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "push" }] } }, subscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "subscribe" }] } }, unsubscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "unsubscribe" }] } } } } }, subscribes: Mutex { data: {}, poisoned: false, .. } } }, shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), state: LockingTypedState { shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), state: RwLock { data: TypedState { state: State { applier_version: Version { major: 0, minor: 86, patch: 1 }, shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), seqno: SeqNo(3141), walltime_ms: 1707218521642, hostname: "materialized", collections: StateCollections { last_gc_req: SeqNo(1886), rollups: {SeqNo(1793): HollowRollup { key: PartialRollupKey("v1793/rb8d76d37-da9f-4bca-b4bc-7bcd554f3561"), encoded_size_bytes: Some(235911) }, SeqNo(1921): HollowRollup { key: PartialRollupKey("v1921/r8c84a9b0-1dd6-4d5f-8d58-42fdf9c562fd"), encoded_size_bytes: Some(240378) }, SeqNo(2049): HollowRollup { key: PartialRollupKey("v2049/r0ee9aed8-f53e-4a0f-a6bf-a602230c9b8c"), encoded_size_bytes: Some(244978) }, SeqNo(2177): HollowRollup { key: PartialRollupKey("v2177/rd00a60e1-1751-4706-aabb-d7c91c953581"), encoded_size_bytes: Some(185861) }, SeqNo(2305): HollowRollup { key: PartialRollupKey("v2305/rb0db6ea8-22ba-499b-8142-56ea12c8b77d"), encoded_size_bytes: Some(61636) }, SeqNo(2433): HollowRollup { key: PartialRollupKey("v2433/rcbeee0cd-1eed-4a2a-a2d5-3bbf07c57c42"), encoded_size_bytes: Some(96041) }, SeqNo(2561): HollowRollup { key: PartialRollupKey("v2561/rfa7236ef-b673-4d31-9285-88e8f05d4967"), encoded_size_bytes: Some(230501) }, SeqNo(2689): HollowRollup { key: PartialRollupKey("v2689/r94e8eb0c-a345-4071-93c6-5e3ff533ffaa"), encoded_size_bytes: Some(260709) }, SeqNo(2817): HollowRollup { key: PartialRollupKey("v2817/r95c2f512-97fb-4683-bed9-705611c0bf15"), encoded_size_bytes: Some(249707) }, SeqNo(2945): HollowRollup { key: PartialRollupKey("v2945/rc1988a58-d94e-40fe-a427-5819dde159d0"), encoded_size_bytes: Some(104587) }, SeqNo(3073): HollowRollup { key: PartialRollupKey("v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a"), encoded_size_bytes: Some(54469) }}, leased_readers: {LeasedReaderId(74e41d6b-2e4f-4eb5-a344-c38098967f86): LeasedReaderState { seqno: SeqNo(2850), since: Antichain { elements: [2548] }, last_heartbeat_timestamp_ms: 1707218372628, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(aaca235d-d8a3-43af-896a-be238b047b5c): LeasedReaderState { seqno: SeqNo(2532), since: Antichain { elements: [2275] }, last_heartbeat_timestamp_ms: 1707218189893, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(bea4f920-abe3-4a28-99f4-18f2cfbe63dc): LeasedReaderState { seqno: SeqNo(3138), since: Antichain { elements: [2823] }, last_heartbeat_timestamp_ms: 1707218521515, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(c9661bfc-a45d-41ad-a032-2fab185ba9fe): LeasedReaderState { seqno: SeqNo(1886), since: Antichain { elements: [1688] }, last_heartbeat_timestamp_ms: 1707217833912, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }}, critical_readers: {CriticalReaderId(00000000-1111-2222-3333-444444444444): CriticalReaderState { since: Antichain { elements: [2824] }, opaque: OpaqueState([0, 0, 0, 0, 0, 0, 0, 128]), opaque_codec: "i64", debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state critical since" } }}, writers: {WriterId(3e93343d-747a-4635-88e5-af657e166bf4): WriterState { last_heartbeat_timestamp_ms: 1707217568863, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(134822b8-f584-410a-9dec-87e3ca75c255), most_recent_write_upper: Antichain { elements: [1133] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(7f30a168-902e-4664-b241-e8904ebb3605): WriterState { last_heartbeat_timestamp_ms: 1707218521642, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(e259f488-6fd6-4be6-b873-e9c7d009442e), most_recent_write_upper: Antichain { elements: [2826] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(82ea1362-2f7c-4500-b780-20c5c14a7c4f): WriterState { last_heartbeat_timestamp_ms: 1707217920958, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(b4e2f669-5113-4813-8c44-227768ab1465), most_recent_write_upper: Antichain { elements: [1901] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(8485069b-76af-40a2-95c3-5f2512ffa583): WriterState { last_heartbeat_timestamp_ms: 1707218337916, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(1b2eb734-60a4-4c83-a53a-014d19b089bc), most_recent_write_upper: Antichain { elements: [2549] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(863457b3-28f8-48c0-b79a-3d1ccaa32bf0): WriterState { last_heartbeat_timestamp_ms: 1707218516383, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(89f621b0-57de-452e-ae59-14c87d5b7c5e), most_recent_write_upper: Antichain { elements: [2824] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }}, trace: Trace { spine: Spine { effort: 1, next_id: 71, since: Antichain { elements: [1688] }, upper: Antichain { elements: [2826] }, merging: [Single(Some(Merged(IdHollowBatch { id: SpineId(70, 71), batch: HollowBatch { desc: ([2825], [2826], [0]), parts: [], len: 0, runs: [] } }))), Vacant, Double(InProgress(Fueled { id: SpineId(66, 68), desc: Description { lower: Antichain { elements: [2821] }, upper: Antichain { elements: [2823] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(66, 67), batch: HollowBatch { desc: ([2821], [2822], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7"), encoded_size_bytes: 1192, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 156], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 156], upper: [194, 1, 15, 10, 2, 6, 108, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(67, 68), batch: HollowBatch { desc: ([2822], [2823], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d"), encoded_size_bytes: 1192, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 102, 28], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 15, 10, 2, 6, 108, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 4, 10, 2, 102, 28] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 4 }, Fueled { id: SpineId(68, 70), desc: Description { lower: Antichain { elements: [2823] }, upper: Antichain { elements: [2825] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(68, 69), batch: HollowBatch { desc: ([2823], [2824], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 102, 28], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 102, 28], upper: [194, 1, 4, 10, 2, 102, 44] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(69, 70), batch: HollowBatch { desc: ([2824], [2825], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2"), encoded_size_bytes: 1087, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 92, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "epoch", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 92], upper: [194, 1, 3, 10, 1, 108] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("Epoch")), upper: Some(UpperString("Epoch")) })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 4 }, FuelingMerge { since: Antichain { elements: [1688] }, remaining_work: 0 })), Single(Some(Fueled { id: SpineId(8, 66), desc: Description { lower: Antichain { elements: [2554] }, upper: Antichain { elements: [2821] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(8, 63), batch: HollowBatch { desc: ([2554], [2818], [1688]), parts: [], len: 0, runs: [] } }, IdHollowBatch { id: SpineId(63, 64), batch: HollowBatch { desc: ([2818], [2819], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 108], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 108], upper: [194, 1, 4, 10, 2, 101, 124] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(64, 65), batch: HollowBatch { desc: ([2819], [2820], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p1c55a321-6540-4c90-901c-637ff92177fa"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 124], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 124], upper: [194, 1, 4, 10, 2, 101, 140] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(65, 66), batch: HollowBatch { desc: ([2820], [2821], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 140], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 140], upper: [194, 1, 4, 10, 2, 101, 156] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 6 })), Single(Some(Fueled { id: SpineId(6, 8), desc: Description { lower: Antichain { elements: [2551] }, upper: Antichain { elements: [2554] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(6, 7), batch: HollowBatch { desc: ([2551], [2553], [940]), parts: [], len: 0, runs: [] } }, IdHollowBatch { id: SpineId(7, 8), batch: HollowBatch { desc: ([2553], [2554], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pf591c6af-7eed-41d0-8001-d885178a7202"), encoded_size_bytes: 2116, key_lower: [10, 89, 10, 87, 186, 1, 84, 10, 28, 10, 3, 107, 101, 121, 18, 21, 186, 1, 18, 10, 16, 10, 4, 110, 97, 109, 101, 18, 8, 66, 6, 115, 121, 115, 116, 101, 109, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 33, 10, 5, 118, 97, 108, 117, 101, 18, 24, 186, 1, 21, 10, 19, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 8, 194, 1, 5, 10, 3, 3, 16, 92], stats: Some(LazyPartStats { key: ProtoStructStats { len: 8, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 8 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 8, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 8, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("M")), upper: Some(UpperString("M")) })) }) }, ProtoJsonMapElementStats { name: "name", len: 4, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("catalog_content_version")), upper: Some(UpperString("system")) })) }) }, ProtoJsonMapElementStats { name: "object_name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("map_agg")), upper: Some(UpperString("map_build")) })) }) }, ProtoJsonMapElementStats { name: "object_type", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 140], upper: [194, 1, 3, 10, 1, 140] })) }) }, ProtoJsonMapElementStats { name: "schema_name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("mz_catalog")), upper: Some(UpperString("mz_catalog")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 8, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("GidMapping")), upper: Some(UpperString("Timestamp")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 8, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "fingerprint", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("")), upper: Some(UpperString("")) })) }) }, ProtoJsonMapElementStats { name: "id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 5, 10, 3, 3, 16, 92], upper: [194, 1, 5, 10, 3, 3, 16, 108] })) }) }, ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 5, 10, 3, 3, 16, 92], upper: [194, 1, 5, 10, 3, 3, 16, 124] })) }) }, ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 20, 10, 7, 1, 112, 114, 23, 150, 64, 92, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 9, 10, 7, 23, 7, 33, 131, 114, 152, 44] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("0.85.3")), upper: Some(UpperString("0.86.1")) })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 8, runs: [] } }], len: 8 })), Vacant, Vacant, Vacant, Double(InProgress(Merged(IdHollowBatch { id: SpineId(4, 5), batch: HollowBatch { desc: ([2491], [2550], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332"), encoded_size_bytes: 59424, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 76, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 191, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 191 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 191, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 189, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 37, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 20, 10, 7, 1, 112, 114, 24, 41, 113, 76, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 9, 10, 7, 23, 7, 33, 131, 55, 115, 108] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 191, runs: [] } }), Merged(IdHollowBatch { id: SpineId(5, 6), batch: HollowBatch { desc: ([2550], [2551], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e"), encoded_size_bytes: 96428, key_lower: [10, 90, 10, 88, 186, 1, 85, 10, 33, 10, 3, 107, 101, 121, 18, 26, 186, 1, 23, 10, 21, 10, 3, 107, 101, 121, 18, 14, 66, 12, 117, 115, 101, 114, 95, 118, 101, 114, 115, 105, 111, 110, 10, 16, 10, 4, 107, 105, 110, 100, 18, 8, 66, 6, 67, 111, 110, 102, 105, 103, 10, 30, 10, 5, 118, 97, 108, 117, 101, 18, 21, 186, 1, 18, 10, 16, 10, 5, 118, 97, 108, 117, 101, 18, 7, 194, 1, 4, 10, 2, 4, 92], stats: Some(LazyPartStats { key: ProtoStructStats { len: 160, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 160 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 160, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 160, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "id", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "value", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "System", len: 4, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 44] })) }) }, ProtoJsonMapElementStats { name: "User", len: 154, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 4, 10, 2, 8, 28] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user_version")), upper: Some(UpperString("user_version")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 160, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("Cluster")), upper: Some(UpperString("Config")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 160, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "config", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "variant", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "Managed", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "availability_zones", len: 14, stats: Some(ProtoJsonStats { kind: Some(Lists(())) }) }, ProtoJsonMapElementStats { name: "disk", len: 14, stats: Some(ProtoJsonStats { kind: Some(Bools(ProtoPrimitiveStats { lower: Some(LowerBool(false)), upper: Some(UpperBool(true)) })) }) }, ProtoJsonMapElementStats { name: "idle_arrangement_merge_effort", len: 14, stats: Some(ProtoJsonStats { kind: Some(JsonNulls(())) }) }, ProtoJsonMapElementStats { name: "logging", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "interval", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "nanos", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 12], upper: [194, 1, 3, 10, 1, 12] })) }) }, ProtoJsonMapElementStats { name: "secs", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 28] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "log_logging", len: 14, stats: Some(ProtoJsonStats { kind: Some(Bools(ProtoPrimitiveStats { lower: Some(LowerBool(false)), upper: Some(UpperBool(false)) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "replication_factor", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 44] })) }) }, ProtoJsonMapElementStats { name: "size", len: 14, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("1")), upper: Some(UpperString("4-4")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "Unmanaged", len: 144, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "linked_object_id", len: 79, stats: Some(ProtoJsonStats { kind: Some(JsonNulls(())) }) }, ProtoJsonMapElementStats { name: "name", len: 158, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("create_cluster1")), upper: Some(UpperString("webhook_cluster")) })) }) }, ProtoJsonMapElementStats { name: "owner_id", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "value", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "System", len: 6, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 28] })) }) }, ProtoJsonMapElementStats { name: "User", len: 152, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 124] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "privileges", len: 158, stats: Some(ProtoJsonStats { kind: Some(Lists(())) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 4, 92], upper: [194, 1, 4, 10, 2, 4, 108] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 160, runs: [] } }), FuelingMerge { since: Antichain { elements: [1688] }, remaining_work: 151 })), Single(Some(Merged(IdHollowBatch { id: SpineId(3, 4), batch: HollowBatch { desc: ([2409], [2491], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8"), encoded_size_bytes: 97218, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 96, 44], stats: Some(LazyPartStats { key: ProtoStructStats { len: 335, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 335 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 335, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 335, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 56, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 130, 97, 153, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 130, 137, 22, 44] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 335, runs: [] } }))), Vacant, Single(Some(Merged(IdHollowBatch { id: SpineId(2, 3), batch: HollowBatch { desc: ([1810], [2409], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e"), encoded_size_bytes: 395968, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 60, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 1294, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 1294 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 1294, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 1292, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 219, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 120, 121, 23, 76], upper: [194, 1, 9, 10, 7, 23, 7, 33, 130, 97, 105, 108] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 1073, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 118, 7, 67, 76], upper: [194, 1, 20, 10, 7, 1, 112, 114, 23, 150, 64, 92, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 1294, runs: [] } }))), Single(Some(Merged(IdHollowBatch { id: SpineId(1, 2), batch: HollowBatch { desc: ([799], [1810], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/pc81f7c60-d61b-48b4-9110-4ccc0ac802cb"), encoded_size_bytes: 1197551, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 44, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 3196, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 3196 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 3196, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 3194, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 423, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 116, 144, 48, 28], upper: [194, 1, 9, 10, 7, 23, 7, 33, 120, 120, 88, 92] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 2771, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 151, 76], upper: [194, 1, 9, 10, 7, 23, 7, 33, 118, 7, 67, 76] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 3196, runs: [] } }))), Single(Some(Merged(IdHollowBatch { id: SpineId(0, 1), batch: HollowBatch { desc: ([0], [799], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008304/p7dbe0fa5-5c0a-4054-ab61-9e89ec29f8e4"), encoded_size_bytes: 1207754, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 44, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 4242, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 4242 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 4242, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 4241, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 385, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 88, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 116, 136, 115, 156] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 3856, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 3, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 3, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 88, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 151, 76] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 4242, runs: [] } })))] } } } } }, poisoned: false, .. }, notifier: StateWatchNotifier { metrics: Metrics { .. }, tx: broadcast::Sender } } }, isolated_runtime: IsolatedRuntime { inner: Some(Runtime { scheduler: MultiThread(MultiThread), handle: Handle { inner: MultiThread(multi_thread::Handle { ... }) }, blocking_pool: BlockingPool }) } }, gc: GarbageCollector { sender: UnboundedSender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aaaf200, tail_position: 0 }, semaphore: Semaphore(0), rx_waker: AtomicWaker, tx_count: 2, rx_fields: "..." } } }, _phantom: PhantomData<fn() -> (mz_storage_types::sources::SourceData, (), mz_repr::timestamp::Timestamp, i64)> }, compact: Some(Compactor { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, sender: Sender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff5553c140, tail_position: 0 }, semaphore: Semaphore { semaphore: Semaphore { permits: 20 }, bound: 20 }, rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, _phantom: PhantomData<fn() -> i64> }), blob: BlobMemCache { cfg: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, metrics: Metrics { .. }, cache: Mutex { data: Lru { capacity: Weight(1048576), total_weight: Weight(713973), next_time: Time(16), by_time: {Time(0): "s86892608-7ff3-82f8-1090-7584b4945aaa/v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a", Time(1): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e", Time(2): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8", Time(3): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332", Time(4): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e", Time(5): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pf591c6af-7eed-41d0-8001-d885178a7202", Time(6): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9", Time(7): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p1c55a321-6540-4c90-901c-637ff92177fa", Time(8): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151", Time(9): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7", Time(10): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d", Time(13): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8", Time(14): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2", Time(15): "s22a24146-7b1f-77f7-642a-6af59cd33da2/v1/r2d1db83b-b346-45ea-8ecc-9ffe0e6c671c"}, .. }, poisoned: false, .. }, blob: Tasked(MetricsBlob { blob: S3Blob { metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } }, client: Client { handle: Handle { conf: Config { config: FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), cloneable: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }, runtime_plugins: [], behavior_version: Some(BehaviorVersion) }, runtime_plugins: RuntimePlugins { client_plugins: [SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_identity_cache_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: Some(Tracked { _origin: "default_identity_cache_plugin", value: SharedIdentityCache(LazyCache { partitions: CachePartitions { partitions: RwLock { data: {IdentityCachePartition(0): ExpiringCache { buffer_time: 10s, value: RwLock { data: OnceCell { value: Some((Identity { data: Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }, expiration: None }, SystemTime { tv_sec: 1707219427, tv_nsec: 457524028 })) } }, _phantom: PhantomData<alloc::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>> }}, poisoned: false, .. }, buffer_time: 10s }, load_timeout: 5s, buffer_time: 10s, buffer_time_jitter_fraction: 0xaaaadc458b90, default_expiration: 900s }) }), identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_retry_config", items: [TypeErasedBox[!Clone]:Set(RetryConfig { mode: Standard, max_attempts: 1, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[!Clone]:Set(RetryPartition { name: "s3" })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_retry_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: Some(Tracked { _origin: "default_retry_config_plugin", value: SharedRetryStrategy(StandardRetryStrategy { retry_permit: Mutex { data: None, poisoned: false, .. } }) }), time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_retry_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_sleep_impl_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: Some(Tracked { _origin: "default_sleep_impl_plugin", value: SharedAsyncSleep(TokioSleep) }), config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_time_source_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "default_time_source_plugin", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_timeout_config", items: [TypeErasedBox[!Clone]:Set(TimeoutConfig { connect_timeout: None, read_timeout: None, operation_timeout: None, operation_attempt_timeout: None })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_timeout_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_timeout_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_stalled_stream_protection_config", items: [TypeErasedBox[!Clone]:Set(StalledStreamProtectionConfig { is_enabled: true, grace_period: 5s })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_stalled_stream_protection_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_stalled_stream_protection_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(ServiceRuntimePlugin { config: None, runtime_components: RuntimeComponentsBuilder { builder_name: "ServiceRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: Some(Tracked { _origin: "ServiceRuntimePlugin", value: SharedEndpointResolver(DowncastParams(DefaultResolver { partition_resolver: PartitionResolver { partitions: [PartitionMetadata { id: "aws", region_regex: Regex("^(us|eu|ap|sa|ca|me|af)-\\w+-\\d+$"), regions: {"sa-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "af-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ca-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-us-gov", region_regex: Regex("^us\\-gov\\-\\w+\\-\\d+$"), regions: {"aws-us-gov-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-us-gov", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-cn", region_regex: Regex("^cn\\-\\w+\\-\\d+$"), regions: {"cn-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "cn-northwest-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-cn-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-cn", dns_suffix: "amazonaws.com.cn", dual_stack_dns_suffix: "api.amazonwebservices.com.cn", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-iso", region_regex: Regex("^us\\-iso\\-\\w+\\-\\d+$"), regions: {"us-iso-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-iso-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso", dns_suffix: "c2s.ic.gov", dual_stack_dns_suffix: "c2s.ic.gov", supports_fips: true, supports_dual_stack: false } }, PartitionMetadata { id: "aws-iso-b", region_regex: Regex("^us\\-isob\\-\\w+\\-\\d+$"), regions: {"us-isob-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-b-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso-b", dns_suffix: "sc2s.sgov.gov", dual_stack_dns_suffix: "sc2s.sgov.gov", supports_fips: true, supports_dual_stack: false } }] } })) }), auth_schemes: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedAuthScheme(SigV4AuthScheme { signer: SigV4Signer }) }], identity_cache: None, identity_resolvers: [], interceptors: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ConnectionPoisoningInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ServiceClockSkewInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RequestInfoInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: UserAgentInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: InvocationIdInterceptor { default: DefaultInvocationIdGenerator { rng: Mutex { data: Rng(3679849605353857549), poisoned: false, .. } } } } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RecursionDetectionInterceptor { env: Env(Real) } } }], retry_classifiers: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedRetryClassifier(HttpStatusCodeClassifier { retryable_status_codes: [500, 502, 503, 504] }) }], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] } }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }), order: None }), SharedRuntimePlugin(NoAuthRuntimePlugin(RuntimeComponentsBuilder { builder_name: "NoAuthRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [Tracked { _origin: "NoAuthRuntimePlugin", value: SharedAuthScheme(NoAuthScheme { signer: NoAuthSigner }) }], identity_cache: None, identity_resolvers: [Tracked { _origin: "NoAuthRuntimePlugin", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "no_auth" }, identity_resolver: SharedIdentityResolver { inner: NoAuthIdentityResolver, cache_partition: IdentityCachePartition(1) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }))], operation_plugins: [] } } }, bucket: "persist", prefix: "persist", max_keys: 1000, multipart_config: MultipartConfig { multipart_threshold: 8388608, multipart_chunk_size: 8388608 } }, metrics: Metrics { .. } }) }, isolated_runtime: IsolatedRuntime { inner: Some(Runtime { scheduler: MultiThread(MultiThread), handle: Handle { inner: MultiThread(multi_thread::Handle { ... }) }, blocking_pool: BlockingPool }) }, writer_id: WriterId(7f30a168-902e-4664-b241-e8904ebb3605), debug_state: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" }, schemas: Schemas { key: RelationDesc { typ: RelationType { column_types: [ColumnType { scalar_type: Jsonb, nullable: false }], keys: [] }, names: [ColumnName("data")] }, val: UnitSchema }, upper: Antichain { elements: [2826] }, explicitly_expired: false }, listen: Listen { handle: ReadHandle { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, machine: Machine { applier: Applier { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, shard_metrics: ShardMetrics { shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), since: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_since", help: "since by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 15579663059153072772, dim_hash: 13414171350431820200 }, val: AtomicI64 { inner: 1688 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, upper: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_upper", help: "upper by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 4092965619647097614, dim_hash: 14717199528981430922 }, val: AtomicI64 { inner: 2826 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, largest_batch_size: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_largest_batch_size", help: "largest encoded batch size by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 15668483818539198391, dim_hash: 762317046610672469 }, val: AtomicU64 { inner: 1207754 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, latest_rollup_size: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_rollup_size_bytes", help: "total encoded rollup size by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 9414154508029371128, dim_hash: 4833994461610112783 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, encoded_diff_size: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_diff_size_bytes", help: "total encoded diff size by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 14502594083303268037, dim_hash: 1365161818160524766 }, val: AtomicU64 { inner: 1600 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, hollow_batch_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_hollow_batch_count", help: "count of hollow batches by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 14684318548278768644, dim_hash: 75193424216019475 }, val: AtomicU64 { inner: 17 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, spine_batch_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_spine_batch_count", help: "count of spine batches by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 1834377188952327142, dim_hash: 6921476859480867789 }, val: AtomicU64 { inner: 11 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, batch_part_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_batch_part_count", help: "count of batch parts by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 13216778592044176664, dim_hash: 16019206780975659922 }, val: AtomicU64 { inner: 14 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, update_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_update_count", help: "count of updates by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 7201010553483319027, dim_hash: 3207660398020241426 }, val: AtomicU64 { inner: 9440 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, rollup_count: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_rollup_count", help: "count of rollups by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 761323467353979114, dim_hash: 13652204320360785253 }, val: AtomicU64 { inner: 11 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, seqnos_held: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_seqnos_held", help: "maximum count of gc-ineligible states by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 18145239766834940793, dim_hash: 11478181703025892121 }, val: AtomicU64 { inner: 1255 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, seqnos_since_last_rollup: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_seqnos_since_last_rollup", help: "count of seqnos since last rollup", const_label_pairs: [], variable_labels: ["shard", "name"], id: 2107250884985778976, dim_hash: 15568809609072952668 }, val: AtomicU64 { inner: 68 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, gc_seqno_held_parts: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_gc_seqno_held_parts", help: "count of parts referenced by some live state but not the current state (ie. parts kept only to satisfy seqno holds) at GC time", const_label_pairs: [], variable_labels: ["shard", "name"], id: 2238147055521178878, dim_hash: 15750595762996577850 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, gc_live_diffs: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_gc_live_diffs", help: "the number of diffs (or, alternatively, the number of seqnos) present in consensus state at GC time", const_label_pairs: [], variable_labels: ["shard", "name"], id: 5323643795709673096, dim_hash: 11590076963202753598 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_current_state_batches_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_current_state_batches_bytes", help: "data in batches/parts referenced by current version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3279591310009417810, dim_hash: 7937710227632532598 }, val: AtomicU64 { inner: 3064654 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_current_state_rollups_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_current_state_rollups_bytes", help: "data in rollups referenced by current version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 4135899224773587867, dim_hash: 16953217991877088784 }, val: AtomicU64 { inner: 1964778 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_referenced_not_current_state_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_referenced_not_current_state_bytes", help: "data referenced only by a previous version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 8860279577640344739, dim_hash: 4734146256861850509 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_not_leaked_not_referenced_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_not_leaked_not_referenced_bytes", help: "data written by an active writer but not referenced by any version of state", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3971338148143162002, dim_hash: 15755584254241826595 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, usage_leaked_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_usage_leaked_bytes", help: "data reclaimable by a leaked blob detector", const_label_pairs: [], variable_labels: ["shard", "name"], id: 5961984655599123694, dim_hash: 8129389392712653163 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, gc_finished: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_gc_finished", help: "count of garbage collections finished by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 16108139496898868437, dim_hash: 8791973059662090958 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, compaction_applied: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_compaction_applied", help: "count of compactions applied to state by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 14484314251919878373, dim_hash: 13017191921448359429 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, cmd_succeeded: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_cmd_succeeded", help: "count of commands succeeded by shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 10797154667241731600, dim_hash: 16324596663402955655 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, pubsub_push_diff_applied: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_pubsub_diff_applied", help: "number of diffs received via pubsub that applied", const_label_pairs: [], variable_labels: ["shard", "name"], id: 6149802747756645293, dim_hash: 14786888662052453603 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, pubsub_push_diff_not_applied_stale: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_pubsub_diff_not_applied_stale", help: "number of diffs received via pubsub that did not apply due to staleness", const_label_pairs: [], variable_labels: ["shard", "name"], id: 9822600743613485093, dim_hash: 6762868055283466351 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, pubsub_push_diff_not_applied_out_of_order: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_pubsub_diff_not_applied_out_of_order", help: "number of diffs received via pubsub that did not apply due to out-of-order delivery", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3095479296188055697, dim_hash: 414638876947755160 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, blob_gets: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_blob_gets", help: "number of Blob::get calls for this shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 11805774610219427637, dim_hash: 12747536327527772772 }, val: AtomicU64 { inner: 15 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, blob_sets: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_blob_sets", help: "number of Blob::set calls for this shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 6029037067254610913, dim_hash: 13682091196689249352 }, val: AtomicU64 { inner: 1 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, live_writers: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_shard_live_writers", help: "number of writers that have recently appended updates to this shard", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3330112869755887895, dim_hash: 7606848744961885162 }, val: AtomicU64 { inner: 5 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, unconsolidated_snapshot: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_shard_unconsolidated_snapshot", help: "in snapshot_and_read, the number of times consolidating the raw data wasn't enough to produce consolidated output", const_label_pairs: [], variable_labels: ["shard", "name"], id: 3489618564379694061, dim_hash: 15896153323152729066 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, backpressure_emitted_bytes: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_backpressure_emitted_bytes", help: "A counter with the number of emitted bytes.", const_label_pairs: [], variable_labels: ["shard", "name"], id: 16555277652228604942, dim_hash: 5797152631786761966 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, backpressure_last_backpressured_bytes: DeleteOnDropGauge { inner: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_backpressure_last_backpressured_bytes", help: "The last count of bytes we are waiting to be retired in the operator. This cannot be directly compared to `retired_bytes`, but CAN indicate that backpressure is happening.", const_label_pairs: [], variable_labels: ["shard", "name"], id: 7645515782867585441, dim_hash: 4389401406915477735 }, val: AtomicU64 { inner: 0 }, val_type: Gauge, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> }, backpressure_retired_bytes: DeleteOnDropCounter { inner: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_backpressure_retired_bytes", help: "A counter with the number of bytes retired by downstream processing.", const_label_pairs: [], variable_labels: ["shard", "name"], id: 7686365884611191225, dim_hash: 8304061614795921789 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "name", value: "catalog" }, LabelPair { name: "shard", value: "s86892608-7ff3-82f8-1090-7584b4945aaa" }] } }, labels: ["s86892608-7ff3-82f8-1090-7584b4945aaa", "catalog"], vec: MetricVec, _phantom: PhantomData<()> } }, state_versions: StateVersions { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, consensus: Tasked(MetricsConsensus { consensus: PostgresConsensus { .. }, metrics: Metrics { .. } }), blob: BlobMemCache { cfg: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, metrics: Metrics { .. }, cache: Mutex { data: Lru { capacity: Weight(1048576), total_weight: Weight(713973), next_time: Time(16), by_time: {Time(0): "s86892608-7ff3-82f8-1090-7584b4945aaa/v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a", Time(1): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e", Time(2): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8", Time(3): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332", Time(4): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e", Time(5): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pf591c6af-7eed-41d0-8001-d885178a7202", Time(6): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9", Time(7): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p1c55a321-6540-4c90-901c-637ff92177fa", Time(8): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151", Time(9): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7", Time(10): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d", Time(13): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8", Time(14): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2", Time(15): "s22a24146-7b1f-77f7-642a-6af59cd33da2/v1/r2d1db83b-b346-45ea-8ecc-9ffe0e6c671c"}, .. }, poisoned: false, .. }, blob: Tasked(MetricsBlob { blob: S3Blob { metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } }, client: Client { handle: Handle { conf: Config { config: FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), cloneable: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }, runtime_plugins: [], behavior_version: Some(BehaviorVersion) }, runtime_plugins: RuntimePlugins { client_plugins: [SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_identity_cache_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: Some(Tracked { _origin: "default_identity_cache_plugin", value: SharedIdentityCache(LazyCache { partitions: CachePartitions { partitions: RwLock { data: {IdentityCachePartition(0): ExpiringCache { buffer_time: 10s, value: RwLock { data: OnceCell { value: Some((Identity { data: Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }, expiration: None }, SystemTime { tv_sec: 1707219427, tv_nsec: 457524028 })) } }, _phantom: PhantomData<alloc::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>> }}, poisoned: false, .. }, buffer_time: 10s }, load_timeout: 5s, buffer_time: 10s, buffer_time_jitter_fraction: 0xaaaadc458b90, default_expiration: 900s }) }), identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_retry_config", items: [TypeErasedBox[!Clone]:Set(RetryConfig { mode: Standard, max_attempts: 1, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[!Clone]:Set(RetryPartition { name: "s3" })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_retry_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: Some(Tracked { _origin: "default_retry_config_plugin", value: SharedRetryStrategy(StandardRetryStrategy { retry_permit: Mutex { data: None, poisoned: false, .. } }) }), time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_retry_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_sleep_impl_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: Some(Tracked { _origin: "default_sleep_impl_plugin", value: SharedAsyncSleep(TokioSleep) }), config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_time_source_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "default_time_source_plugin", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_timeout_config", items: [TypeErasedBox[!Clone]:Set(TimeoutConfig { connect_timeout: None, read_timeout: None, operation_timeout: None, operation_attempt_timeout: None })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_timeout_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_timeout_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_stalled_stream_protection_config", items: [TypeErasedBox[!Clone]:Set(StalledStreamProtectionConfig { is_enabled: true, grace_period: 5s })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_stalled_stream_protection_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_stalled_stream_protection_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(ServiceRuntimePlugin { config: None, runtime_components: RuntimeComponentsBuilder { builder_name: "ServiceRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: Some(Tracked { _origin: "ServiceRuntimePlugin", value: SharedEndpointResolver(DowncastParams(DefaultResolver { partition_resolver: PartitionResolver { partitions: [PartitionMetadata { id: "aws", region_regex: Regex("^(us|eu|ap|sa|ca|me|af)-\\w+-\\d+$"), regions: {"sa-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "af-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ca-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-us-gov", region_regex: Regex("^us\\-gov\\-\\w+\\-\\d+$"), regions: {"aws-us-gov-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-us-gov", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-cn", region_regex: Regex("^cn\\-\\w+\\-\\d+$"), regions: {"cn-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "cn-northwest-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-cn-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-cn", dns_suffix: "amazonaws.com.cn", dual_stack_dns_suffix: "api.amazonwebservices.com.cn", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-iso", region_regex: Regex("^us\\-iso\\-\\w+\\-\\d+$"), regions: {"us-iso-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-iso-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso", dns_suffix: "c2s.ic.gov", dual_stack_dns_suffix: "c2s.ic.gov", supports_fips: true, supports_dual_stack: false } }, PartitionMetadata { id: "aws-iso-b", region_regex: Regex("^us\\-isob\\-\\w+\\-\\d+$"), regions: {"us-isob-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-b-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso-b", dns_suffix: "sc2s.sgov.gov", dual_stack_dns_suffix: "sc2s.sgov.gov", supports_fips: true, supports_dual_stack: false } }] } })) }), auth_schemes: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedAuthScheme(SigV4AuthScheme { signer: SigV4Signer }) }], identity_cache: None, identity_resolvers: [], interceptors: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ConnectionPoisoningInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ServiceClockSkewInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RequestInfoInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: UserAgentInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: InvocationIdInterceptor { default: DefaultInvocationIdGenerator { rng: Mutex { data: Rng(3679849605353857549), poisoned: false, .. } } } } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RecursionDetectionInterceptor { env: Env(Real) } } }], retry_classifiers: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedRetryClassifier(HttpStatusCodeClassifier { retryable_status_codes: [500, 502, 503, 504] }) }], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] } }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }), order: None }), SharedRuntimePlugin(NoAuthRuntimePlugin(RuntimeComponentsBuilder { builder_name: "NoAuthRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [Tracked { _origin: "NoAuthRuntimePlugin", value: SharedAuthScheme(NoAuthScheme { signer: NoAuthSigner }) }], identity_cache: None, identity_resolvers: [Tracked { _origin: "NoAuthRuntimePlugin", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "no_auth" }, identity_resolver: SharedIdentityResolver { inner: NoAuthIdentityResolver, cache_partition: IdentityCachePartition(1) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }))], operation_plugins: [] } } }, bucket: "persist", prefix: "persist", max_keys: 1000, multipart_config: MultipartConfig { multipart_threshold: 8388608, multipart_chunk_size: 8388608 } }, metrics: Metrics { .. } }) }, metrics: Metrics { .. } }, shared_states: StateCache { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, states: Mutex { data: {ShardId(22a24146-7b1f-77f7-642a-6af59cd33da2): OnceCell { value: Some((Weak)) }, ShardId(86892608-7ff3-82f8-1090-7584b4945aaa): OnceCell { value: Some((Weak)) }}, poisoned: false, .. }, pubsub_sender: MetricsSameProcessPubSubSender { metrics: Metrics { .. }, delegate: SubscriptionTrackingSender { delegate: PubSubConnection { connection_id: 0, notifier: Sender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aa5d800, tail_position: 0 }, semaphore: Semaphore { semaphore: Semaphore { permits: 25 }, bound: 25 }, rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, state: PubSubState { connection_id_counter: 1, shard_subscribers: RwLock { data: {}, poisoned: false, .. }, connections: RwLock { data: HashSet({0}), poisoned: false, .. }, metrics: PubSubServerMetrics { active_connections: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_active_connections", help: "number of active connections to server", const_label_pairs: [], variable_labels: [], id: 11106074761997215763, dim_hash: 3108382538162212977 }, val: AtomicU64 { inner: 1 }, val_type: Gauge, label_pairs: [] } }, broadcasted_diff_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_count", help: "count of total broadcast diff messages sent", const_label_pairs: [], variable_labels: [], id: 13085877342429723307, dim_hash: 1606030166613010534 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_bytes: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_bytes", help: "count of total broadcast diff bytes sent", const_label_pairs: [], variable_labels: [], id: 16407848502932309983, dim_hash: 8652677384771939155 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_dropped_channel_full: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_dropped_channel_full", help: "count of diffs dropped due to full connection channel", const_label_pairs: [], variable_labels: [], id: 4577479958553503670, dim_hash: 6703876575886109795 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, push_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 4528001026548059179 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "push" }] } }, subscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "subscribe" }] } }, unsubscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "unsubscribe" }] } }, connection_cleanup_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "cleanup" }] } }, push_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "push" }] } }, subscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "subscribe" }] } }, unsubscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "unsubscribe" }] } } } } }, subscribes: Mutex { data: {}, poisoned: false, .. } } } }, pubsub_sender: MetricsSameProcessPubSubSender { metrics: Metrics { .. }, delegate: SubscriptionTrackingSender { delegate: PubSubConnection { connection_id: 0, notifier: Sender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aa5d800, tail_position: 0 }, semaphore: Semaphore { semaphore: Semaphore { permits: 25 }, bound: 25 }, rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, state: PubSubState { connection_id_counter: 1, shard_subscribers: RwLock { data: {}, poisoned: false, .. }, connections: RwLock { data: HashSet({0}), poisoned: false, .. }, metrics: PubSubServerMetrics { active_connections: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_active_connections", help: "number of active connections to server", const_label_pairs: [], variable_labels: [], id: 11106074761997215763, dim_hash: 3108382538162212977 }, val: AtomicU64 { inner: 1 }, val_type: Gauge, label_pairs: [] } }, broadcasted_diff_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_count", help: "count of total broadcast diff messages sent", const_label_pairs: [], variable_labels: [], id: 13085877342429723307, dim_hash: 1606030166613010534 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_bytes: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_bytes", help: "count of total broadcast diff bytes sent", const_label_pairs: [], variable_labels: [], id: 16407848502932309983, dim_hash: 8652677384771939155 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_dropped_channel_full: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_dropped_channel_full", help: "count of diffs dropped due to full connection channel", const_label_pairs: [], variable_labels: [], id: 4577479958553503670, dim_hash: 6703876575886109795 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, push_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 4528001026548059179 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "push" }] } }, subscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "subscribe" }] } }, unsubscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "unsubscribe" }] } }, connection_cleanup_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "cleanup" }] } }, push_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "push" }] } }, subscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "subscribe" }] } }, unsubscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "unsubscribe" }] } } } } }, subscribes: Mutex { data: {}, poisoned: false, .. } } }, shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), state: LockingTypedState { shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), state: RwLock { data: TypedState { state: State { applier_version: Version { major: 0, minor: 86, patch: 1 }, shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), seqno: SeqNo(3141), walltime_ms: 1707218521642, hostname: "materialized", collections: StateCollections { last_gc_req: SeqNo(1886), rollups: {SeqNo(1793): HollowRollup { key: PartialRollupKey("v1793/rb8d76d37-da9f-4bca-b4bc-7bcd554f3561"), encoded_size_bytes: Some(235911) }, SeqNo(1921): HollowRollup { key: PartialRollupKey("v1921/r8c84a9b0-1dd6-4d5f-8d58-42fdf9c562fd"), encoded_size_bytes: Some(240378) }, SeqNo(2049): HollowRollup { key: PartialRollupKey("v2049/r0ee9aed8-f53e-4a0f-a6bf-a602230c9b8c"), encoded_size_bytes: Some(244978) }, SeqNo(2177): HollowRollup { key: PartialRollupKey("v2177/rd00a60e1-1751-4706-aabb-d7c91c953581"), encoded_size_bytes: Some(185861) }, SeqNo(2305): HollowRollup { key: PartialRollupKey("v2305/rb0db6ea8-22ba-499b-8142-56ea12c8b77d"), encoded_size_bytes: Some(61636) }, SeqNo(2433): HollowRollup { key: PartialRollupKey("v2433/rcbeee0cd-1eed-4a2a-a2d5-3bbf07c57c42"), encoded_size_bytes: Some(96041) }, SeqNo(2561): HollowRollup { key: PartialRollupKey("v2561/rfa7236ef-b673-4d31-9285-88e8f05d4967"), encoded_size_bytes: Some(230501) }, SeqNo(2689): HollowRollup { key: PartialRollupKey("v2689/r94e8eb0c-a345-4071-93c6-5e3ff533ffaa"), encoded_size_bytes: Some(260709) }, SeqNo(2817): HollowRollup { key: PartialRollupKey("v2817/r95c2f512-97fb-4683-bed9-705611c0bf15"), encoded_size_bytes: Some(249707) }, SeqNo(2945): HollowRollup { key: PartialRollupKey("v2945/rc1988a58-d94e-40fe-a427-5819dde159d0"), encoded_size_bytes: Some(104587) }, SeqNo(3073): HollowRollup { key: PartialRollupKey("v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a"), encoded_size_bytes: Some(54469) }}, leased_readers: {LeasedReaderId(74e41d6b-2e4f-4eb5-a344-c38098967f86): LeasedReaderState { seqno: SeqNo(2850), since: Antichain { elements: [2548] }, last_heartbeat_timestamp_ms: 1707218372628, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(aaca235d-d8a3-43af-896a-be238b047b5c): LeasedReaderState { seqno: SeqNo(2532), since: Antichain { elements: [2275] }, last_heartbeat_timestamp_ms: 1707218189893, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(bea4f920-abe3-4a28-99f4-18f2cfbe63dc): LeasedReaderState { seqno: SeqNo(3138), since: Antichain { elements: [2823] }, last_heartbeat_timestamp_ms: 1707218521515, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(c9661bfc-a45d-41ad-a032-2fab185ba9fe): LeasedReaderState { seqno: SeqNo(1886), since: Antichain { elements: [1688] }, last_heartbeat_timestamp_ms: 1707217833912, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }}, critical_readers: {CriticalReaderId(00000000-1111-2222-3333-444444444444): CriticalReaderState { since: Antichain { elements: [2824] }, opaque: OpaqueState([0, 0, 0, 0, 0, 0, 0, 128]), opaque_codec: "i64", debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state critical since" } }}, writers: {WriterId(3e93343d-747a-4635-88e5-af657e166bf4): WriterState { last_heartbeat_timestamp_ms: 1707217568863, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(134822b8-f584-410a-9dec-87e3ca75c255), most_recent_write_upper: Antichain { elements: [1133] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(7f30a168-902e-4664-b241-e8904ebb3605): WriterState { last_heartbeat_timestamp_ms: 1707218521642, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(e259f488-6fd6-4be6-b873-e9c7d009442e), most_recent_write_upper: Antichain { elements: [2826] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(82ea1362-2f7c-4500-b780-20c5c14a7c4f): WriterState { last_heartbeat_timestamp_ms: 1707217920958, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(b4e2f669-5113-4813-8c44-227768ab1465), most_recent_write_upper: Antichain { elements: [1901] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(8485069b-76af-40a2-95c3-5f2512ffa583): WriterState { last_heartbeat_timestamp_ms: 1707218337916, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(1b2eb734-60a4-4c83-a53a-014d19b089bc), most_recent_write_upper: Antichain { elements: [2549] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(863457b3-28f8-48c0-b79a-3d1ccaa32bf0): WriterState { last_heartbeat_timestamp_ms: 1707218516383, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(89f621b0-57de-452e-ae59-14c87d5b7c5e), most_recent_write_upper: Antichain { elements: [2824] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }}, trace: Trace { spine: Spine { effort: 1, next_id: 71, since: Antichain { elements: [1688] }, upper: Antichain { elements: [2826] }, merging: [Single(Some(Merged(IdHollowBatch { id: SpineId(70, 71), batch: HollowBatch { desc: ([2825], [2826], [0]), parts: [], len: 0, runs: [] } }))), Vacant, Double(InProgress(Fueled { id: SpineId(66, 68), desc: Description { lower: Antichain { elements: [2821] }, upper: Antichain { elements: [2823] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(66, 67), batch: HollowBatch { desc: ([2821], [2822], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7"), encoded_size_bytes: 1192, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 156], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 156], upper: [194, 1, 15, 10, 2, 6, 108, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(67, 68), batch: HollowBatch { desc: ([2822], [2823], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d"), encoded_size_bytes: 1192, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 102, 28], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 15, 10, 2, 6, 108, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 4, 10, 2, 102, 28] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 4 }, Fueled { id: SpineId(68, 70), desc: Description { lower: Antichain { elements: [2823] }, upper: Antichain { elements: [2825] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(68, 69), batch: HollowBatch { desc: ([2823], [2824], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 102, 28], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 102, 28], upper: [194, 1, 4, 10, 2, 102, 44] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(69, 70), batch: HollowBatch { desc: ([2824], [2825], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2"), encoded_size_bytes: 1087, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 92, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "epoch", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 92], upper: [194, 1, 3, 10, 1, 108] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("Epoch")), upper: Some(UpperString("Epoch")) })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 4 }, FuelingMerge { since: Antichain { elements: [1688] }, remaining_work: 0 })), Single(Some(Fueled { id: SpineId(8, 66), desc: Description { lower: Antichain { elements: [2554] }, upper: Antichain { elements: [2821] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(8, 63), batch: HollowBatch { desc: ([2554], [2818], [1688]), parts: [], len: 0, runs: [] } }, IdHollowBatch { id: SpineId(63, 64), batch: HollowBatch { desc: ([2818], [2819], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 108], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 108], upper: [194, 1, 4, 10, 2, 101, 124] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(64, 65), batch: HollowBatch { desc: ([2819], [2820], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p1c55a321-6540-4c90-901c-637ff92177fa"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 124], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 124], upper: [194, 1, 4, 10, 2, 101, 140] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(65, 66), batch: HollowBatch { desc: ([2820], [2821], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 140], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 140], upper: [194, 1, 4, 10, 2, 101, 156] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 6 })), Single(Some(Fueled { id: SpineId(6, 8), desc: Description { lower: Antichain { elements: [2551] }, upper: Antichain { elements: [2554] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(6, 7), batch: HollowBatch { desc: ([2551], [2553], [940]), parts: [], len: 0, runs: [] } }, IdHollowBatch { id: SpineId(7, 8), batch: HollowBatch { desc: ([2553], [2554], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pf591c6af-7eed-41d0-8001-d885178a7202"), encoded_size_bytes: 2116, key_lower: [10, 89, 10, 87, 186, 1, 84, 10, 28, 10, 3, 107, 101, 121, 18, 21, 186, 1, 18, 10, 16, 10, 4, 110, 97, 109, 101, 18, 8, 66, 6, 115, 121, 115, 116, 101, 109, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 33, 10, 5, 118, 97, 108, 117, 101, 18, 24, 186, 1, 21, 10, 19, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 8, 194, 1, 5, 10, 3, 3, 16, 92], stats: Some(LazyPartStats { key: ProtoStructStats { len: 8, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 8 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 8, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 8, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("M")), upper: Some(UpperString("M")) })) }) }, ProtoJsonMapElementStats { name: "name", len: 4, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("catalog_content_version")), upper: Some(UpperString("system")) })) }) }, ProtoJsonMapElementStats { name: "object_name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("map_agg")), upper: Some(UpperString("map_build")) })) }) }, ProtoJsonMapElementStats { name: "object_type", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 140], upper: [194, 1, 3, 10, 1, 140] })) }) }, ProtoJsonMapElementStats { name: "schema_name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("mz_catalog")), upper: Some(UpperString("mz_catalog")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 8, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("GidMapping")), upper: Some(UpperString("Timestamp")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 8, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "fingerprint", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("")), upper: Some(UpperString("")) })) }) }, ProtoJsonMapElementStats { name: "id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 5, 10, 3, 3, 16, 92], upper: [194, 1, 5, 10, 3, 3, 16, 108] })) }) }, ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 5, 10, 3, 3, 16, 92], upper: [194, 1, 5, 10, 3, 3, 16, 124] })) }) }, ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 20, 10, 7, 1, 112, 114, 23, 150, 64, 92, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 9, 10, 7, 23, 7, 33, 131, 114, 152, 44] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("0.85.3")), upper: Some(UpperString("0.86.1")) })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 8, runs: [] } }], len: 8 })), Vacant, Vacant, Vacant, Double(InProgress(Merged(IdHollowBatch { id: SpineId(4, 5), batch: HollowBatch { desc: ([2491], [2550], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332"), encoded_size_bytes: 59424, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 76, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 191, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 191 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 191, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 189, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 37, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 20, 10, 7, 1, 112, 114, 24, 41, 113, 76, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 9, 10, 7, 23, 7, 33, 131, 55, 115, 108] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 191, runs: [] } }), Merged(IdHollowBatch { id: SpineId(5, 6), batch: HollowBatch { desc: ([2550], [2551], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e"), encoded_size_bytes: 96428, key_lower: [10, 90, 10, 88, 186, 1, 85, 10, 33, 10, 3, 107, 101, 121, 18, 26, 186, 1, 23, 10, 21, 10, 3, 107, 101, 121, 18, 14, 66, 12, 117, 115, 101, 114, 95, 118, 101, 114, 115, 105, 111, 110, 10, 16, 10, 4, 107, 105, 110, 100, 18, 8, 66, 6, 67, 111, 110, 102, 105, 103, 10, 30, 10, 5, 118, 97, 108, 117, 101, 18, 21, 186, 1, 18, 10, 16, 10, 5, 118, 97, 108, 117, 101, 18, 7, 194, 1, 4, 10, 2, 4, 92], stats: Some(LazyPartStats { key: ProtoStructStats { len: 160, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 160 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 160, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 160, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "id", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "value", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "System", len: 4, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 44] })) }) }, ProtoJsonMapElementStats { name: "User", len: 154, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 4, 10, 2, 8, 28] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user_version")), upper: Some(UpperString("user_version")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 160, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("Cluster")), upper: Some(UpperString("Config")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 160, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "config", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "variant", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "Managed", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "availability_zones", len: 14, stats: Some(ProtoJsonStats { kind: Some(Lists(())) }) }, ProtoJsonMapElementStats { name: "disk", len: 14, stats: Some(ProtoJsonStats { kind: Some(Bools(ProtoPrimitiveStats { lower: Some(LowerBool(false)), upper: Some(UpperBool(true)) })) }) }, ProtoJsonMapElementStats { name: "idle_arrangement_merge_effort", len: 14, stats: Some(ProtoJsonStats { kind: Some(JsonNulls(())) }) }, ProtoJsonMapElementStats { name: "logging", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "interval", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "nanos", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 12], upper: [194, 1, 3, 10, 1, 12] })) }) }, ProtoJsonMapElementStats { name: "secs", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 28] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "log_logging", len: 14, stats: Some(ProtoJsonStats { kind: Some(Bools(ProtoPrimitiveStats { lower: Some(LowerBool(false)), upper: Some(UpperBool(false)) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "replication_factor", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 44] })) }) }, ProtoJsonMapElementStats { name: "size", len: 14, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("1")), upper: Some(UpperString("4-4")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "Unmanaged", len: 144, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "linked_object_id", len: 79, stats: Some(ProtoJsonStats { kind: Some(JsonNulls(())) }) }, ProtoJsonMapElementStats { name: "name", len: 158, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("create_cluster1")), upper: Some(UpperString("webhook_cluster")) })) }) }, ProtoJsonMapElementStats { name: "owner_id", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "value", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "System", len: 6, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 28] })) }) }, ProtoJsonMapElementStats { name: "User", len: 152, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 124] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "privileges", len: 158, stats: Some(ProtoJsonStats { kind: Some(Lists(())) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 4, 92], upper: [194, 1, 4, 10, 2, 4, 108] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 160, runs: [] } }), FuelingMerge { since: Antichain { elements: [1688] }, remaining_work: 151 })), Single(Some(Merged(IdHollowBatch { id: SpineId(3, 4), batch: HollowBatch { desc: ([2409], [2491], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8"), encoded_size_bytes: 97218, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 96, 44], stats: Some(LazyPartStats { key: ProtoStructStats { len: 335, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 335 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 335, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 335, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 56, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 130, 97, 153, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 130, 137, 22, 44] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 335, runs: [] } }))), Vacant, Single(Some(Merged(IdHollowBatch { id: SpineId(2, 3), batch: HollowBatch { desc: ([1810], [2409], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e"), encoded_size_bytes: 395968, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 60, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 1294, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 1294 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 1294, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 1292, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 219, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 120, 121, 23, 76], upper: [194, 1, 9, 10, 7, 23, 7, 33, 130, 97, 105, 108] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 1073, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 118, 7, 67, 76], upper: [194, 1, 20, 10, 7, 1, 112, 114, 23, 150, 64, 92, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 1294, runs: [] } }))), Single(Some(Merged(IdHollowBatch { id: SpineId(1, 2), batch: HollowBatch { desc: ([799], [1810], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/pc81f7c60-d61b-48b4-9110-4ccc0ac802cb"), encoded_size_bytes: 1197551, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 44, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 3196, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 3196 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 3196, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 3194, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 423, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 116, 144, 48, 28], upper: [194, 1, 9, 10, 7, 23, 7, 33, 120, 120, 88, 92] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 2771, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 151, 76], upper: [194, 1, 9, 10, 7, 23, 7, 33, 118, 7, 67, 76] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 3196, runs: [] } }))), Single(Some(Merged(IdHollowBatch { id: SpineId(0, 1), batch: HollowBatch { desc: ([0], [799], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008304/p7dbe0fa5-5c0a-4054-ab61-9e89ec29f8e4"), encoded_size_bytes: 1207754, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 44, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 4242, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 4242 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 4242, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 4241, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 385, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 88, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 116, 136, 115, 156] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 3856, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 3, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 3, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 88, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 151, 76] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 4242, runs: [] } })))] } } } } }, poisoned: false, .. }, notifier: StateWatchNotifier { metrics: Metrics { .. }, tx: broadcast::Sender } } }, isolated_runtime: IsolatedRuntime { inner: Some(Runtime { scheduler: MultiThread(MultiThread), handle: Handle { inner: MultiThread(multi_thread::Handle { ... }) }, blocking_pool: BlockingPool }) } }, gc: GarbageCollector { sender: UnboundedSender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aaafc00, tail_position: 0 }, semaphore: Semaphore(0), rx_waker: AtomicWaker, tx_count: 3, rx_fields: "..." } } }, _phantom: PhantomData<fn() -> (mz_storage_types::sources::SourceData, (), mz_repr::timestamp::Timestamp, i64)> }, blob: BlobMemCache { cfg: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, metrics: Metrics { .. }, cache: Mutex { data: Lru { capacity: Weight(1048576), total_weight: Weight(713973), next_time: Time(16), by_time: {Time(0): "s86892608-7ff3-82f8-1090-7584b4945aaa/v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a", Time(1): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e", Time(2): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8", Time(3): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332", Time(4): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e", Time(5): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pf591c6af-7eed-41d0-8001-d885178a7202", Time(6): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9", Time(7): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p1c55a321-6540-4c90-901c-637ff92177fa", Time(8): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151", Time(9): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7", Time(10): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d", Time(13): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8", Time(14): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2", Time(15): "s22a24146-7b1f-77f7-642a-6af59cd33da2/v1/r2d1db83b-b346-45ea-8ecc-9ffe0e6c671c"}, .. }, poisoned: false, .. }, blob: Tasked(MetricsBlob { blob: S3Blob { metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } }, client: Client { handle: Handle { conf: Config { config: FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), cloneable: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }, runtime_plugins: [], behavior_version: Some(BehaviorVersion) }, runtime_plugins: RuntimePlugins { client_plugins: [SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_identity_cache_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: Some(Tracked { _origin: "default_identity_cache_plugin", value: SharedIdentityCache(LazyCache { partitions: CachePartitions { partitions: RwLock { data: {IdentityCachePartition(0): ExpiringCache { buffer_time: 10s, value: RwLock { data: OnceCell { value: Some((Identity { data: Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }, expiration: None }, SystemTime { tv_sec: 1707219427, tv_nsec: 457524028 })) } }, _phantom: PhantomData<alloc::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>> }}, poisoned: false, .. }, buffer_time: 10s }, load_timeout: 5s, buffer_time: 10s, buffer_time_jitter_fraction: 0xaaaadc458b90, default_expiration: 900s }) }), identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_retry_config", items: [TypeErasedBox[!Clone]:Set(RetryConfig { mode: Standard, max_attempts: 1, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[!Clone]:Set(RetryPartition { name: "s3" })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_retry_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: Some(Tracked { _origin: "default_retry_config_plugin", value: SharedRetryStrategy(StandardRetryStrategy { retry_permit: Mutex { data: None, poisoned: false, .. } }) }), time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_retry_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_sleep_impl_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: Some(Tracked { _origin: "default_sleep_impl_plugin", value: SharedAsyncSleep(TokioSleep) }), config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_time_source_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "default_time_source_plugin", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_timeout_config", items: [TypeErasedBox[!Clone]:Set(TimeoutConfig { connect_timeout: None, read_timeout: None, operation_timeout: None, operation_attempt_timeout: None })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_timeout_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_timeout_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_stalled_stream_protection_config", items: [TypeErasedBox[!Clone]:Set(StalledStreamProtectionConfig { is_enabled: true, grace_period: 5s })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_stalled_stream_protection_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_stalled_stream_protection_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(ServiceRuntimePlugin { config: None, runtime_components: RuntimeComponentsBuilder { builder_name: "ServiceRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: Some(Tracked { _origin: "ServiceRuntimePlugin", value: SharedEndpointResolver(DowncastParams(DefaultResolver { partition_resolver: PartitionResolver { partitions: [PartitionMetadata { id: "aws", region_regex: Regex("^(us|eu|ap|sa|ca|me|af)-\\w+-\\d+$"), regions: {"sa-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "af-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ca-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-us-gov", region_regex: Regex("^us\\-gov\\-\\w+\\-\\d+$"), regions: {"aws-us-gov-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-us-gov", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-cn", region_regex: Regex("^cn\\-\\w+\\-\\d+$"), regions: {"cn-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "cn-northwest-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-cn-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-cn", dns_suffix: "amazonaws.com.cn", dual_stack_dns_suffix: "api.amazonwebservices.com.cn", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-iso", region_regex: Regex("^us\\-iso\\-\\w+\\-\\d+$"), regions: {"us-iso-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-iso-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso", dns_suffix: "c2s.ic.gov", dual_stack_dns_suffix: "c2s.ic.gov", supports_fips: true, supports_dual_stack: false } }, PartitionMetadata { id: "aws-iso-b", region_regex: Regex("^us\\-isob\\-\\w+\\-\\d+$"), regions: {"us-isob-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-b-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso-b", dns_suffix: "sc2s.sgov.gov", dual_stack_dns_suffix: "sc2s.sgov.gov", supports_fips: true, supports_dual_stack: false } }] } })) }), auth_schemes: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedAuthScheme(SigV4AuthScheme { signer: SigV4Signer }) }], identity_cache: None, identity_resolvers: [], interceptors: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ConnectionPoisoningInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ServiceClockSkewInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RequestInfoInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: UserAgentInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: InvocationIdInterceptor { default: DefaultInvocationIdGenerator { rng: Mutex { data: Rng(3679849605353857549), poisoned: false, .. } } } } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RecursionDetectionInterceptor { env: Env(Real) } } }], retry_classifiers: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedRetryClassifier(HttpStatusCodeClassifier { retryable_status_codes: [500, 502, 503, 504] }) }], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] } }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }), order: None }), SharedRuntimePlugin(NoAuthRuntimePlugin(RuntimeComponentsBuilder { builder_name: "NoAuthRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [Tracked { _origin: "NoAuthRuntimePlugin", value: SharedAuthScheme(NoAuthScheme { signer: NoAuthSigner }) }], identity_cache: None, identity_resolvers: [Tracked { _origin: "NoAuthRuntimePlugin", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "no_auth" }, identity_resolver: SharedIdentityResolver { inner: NoAuthIdentityResolver, cache_partition: IdentityCachePartition(1) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }))], operation_plugins: [] } } }, bucket: "persist", prefix: "persist", max_keys: 1000, multipart_config: MultipartConfig { multipart_threshold: 8388608, multipart_chunk_size: 8388608 } }, metrics: Metrics { .. } }) }, reader_id: LeasedReaderId(bea4f920-abe3-4a28-99f4-18f2cfbe63dc), schemas: Schemas { key: RelationDesc { typ: RelationType { column_types: [ColumnType { scalar_type: Jsonb, nullable: false }], keys: [] }, names: [ColumnName("data")] }, val: UnitSchema }, since: Antichain { elements: [2823] }, last_heartbeat: 1707218521515, lease_returner: SubscriptionLeaseReturner { leased_seqnos: Mutex { data: {}, poisoned: false, .. }, reader_id: LeasedReaderId(bea4f920-abe3-4a28-99f4-18f2cfbe63dc), metrics: Metrics { .. } }, unexpired_state: Some(UnexpiredReadHandleState { _heartbeat_tasks: [AbortOnDropHandle(JoinHandle { id: Id(136) }), AbortOnDropHandle(JoinHandle { id: Id(137) })] }) }, watch: StateWatch { metrics: Metrics { .. }, state: LockingTypedState { shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), state: RwLock { data: TypedState { state: State { applier_version: Version { major: 0, minor: 86, patch: 1 }, shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), seqno: SeqNo(3141), walltime_ms: 1707218521642, hostname: "materialized", collections: StateCollections { last_gc_req: SeqNo(1886), rollups: {SeqNo(1793): HollowRollup { key: PartialRollupKey("v1793/rb8d76d37-da9f-4bca-b4bc-7bcd554f3561"), encoded_size_bytes: Some(235911) }, SeqNo(1921): HollowRollup { key: PartialRollupKey("v1921/r8c84a9b0-1dd6-4d5f-8d58-42fdf9c562fd"), encoded_size_bytes: Some(240378) }, SeqNo(2049): HollowRollup { key: PartialRollupKey("v2049/r0ee9aed8-f53e-4a0f-a6bf-a602230c9b8c"), encoded_size_bytes: Some(244978) }, SeqNo(2177): HollowRollup { key: PartialRollupKey("v2177/rd00a60e1-1751-4706-aabb-d7c91c953581"), encoded_size_bytes: Some(185861) }, SeqNo(2305): HollowRollup { key: PartialRollupKey("v2305/rb0db6ea8-22ba-499b-8142-56ea12c8b77d"), encoded_size_bytes: Some(61636) }, SeqNo(2433): HollowRollup { key: PartialRollupKey("v2433/rcbeee0cd-1eed-4a2a-a2d5-3bbf07c57c42"), encoded_size_bytes: Some(96041) }, SeqNo(2561): HollowRollup { key: PartialRollupKey("v2561/rfa7236ef-b673-4d31-9285-88e8f05d4967"), encoded_size_bytes: Some(230501) }, SeqNo(2689): HollowRollup { key: PartialRollupKey("v2689/r94e8eb0c-a345-4071-93c6-5e3ff533ffaa"), encoded_size_bytes: Some(260709) }, SeqNo(2817): HollowRollup { key: PartialRollupKey("v2817/r95c2f512-97fb-4683-bed9-705611c0bf15"), encoded_size_bytes: Some(249707) }, SeqNo(2945): HollowRollup { key: PartialRollupKey("v2945/rc1988a58-d94e-40fe-a427-5819dde159d0"), encoded_size_bytes: Some(104587) }, SeqNo(3073): HollowRollup { key: PartialRollupKey("v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a"), encoded_size_bytes: Some(54469) }}, leased_readers: {LeasedReaderId(74e41d6b-2e4f-4eb5-a344-c38098967f86): LeasedReaderState { seqno: SeqNo(2850), since: Antichain { elements: [2548] }, last_heartbeat_timestamp_ms: 1707218372628, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(aaca235d-d8a3-43af-896a-be238b047b5c): LeasedReaderState { seqno: SeqNo(2532), since: Antichain { elements: [2275] }, last_heartbeat_timestamp_ms: 1707218189893, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(bea4f920-abe3-4a28-99f4-18f2cfbe63dc): LeasedReaderState { seqno: SeqNo(3138), since: Antichain { elements: [2823] }, last_heartbeat_timestamp_ms: 1707218521515, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, LeasedReaderId(c9661bfc-a45d-41ad-a032-2fab185ba9fe): LeasedReaderState { seqno: SeqNo(1886), since: Antichain { elements: [1688] }, last_heartbeat_timestamp_ms: 1707217833912, lease_duration_ms: 900000, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }}, critical_readers: {CriticalReaderId(00000000-1111-2222-3333-444444444444): CriticalReaderState { since: Antichain { elements: [2824] }, opaque: OpaqueState([0, 0, 0, 0, 0, 0, 0, 128]), opaque_codec: "i64", debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state critical since" } }}, writers: {WriterId(3e93343d-747a-4635-88e5-af657e166bf4): WriterState { last_heartbeat_timestamp_ms: 1707217568863, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(134822b8-f584-410a-9dec-87e3ca75c255), most_recent_write_upper: Antichain { elements: [1133] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(7f30a168-902e-4664-b241-e8904ebb3605): WriterState { last_heartbeat_timestamp_ms: 1707218521642, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(e259f488-6fd6-4be6-b873-e9c7d009442e), most_recent_write_upper: Antichain { elements: [2826] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(82ea1362-2f7c-4500-b780-20c5c14a7c4f): WriterState { last_heartbeat_timestamp_ms: 1707217920958, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(b4e2f669-5113-4813-8c44-227768ab1465), most_recent_write_upper: Antichain { elements: [1901] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(8485069b-76af-40a2-95c3-5f2512ffa583): WriterState { last_heartbeat_timestamp_ms: 1707218337916, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(1b2eb734-60a4-4c83-a53a-014d19b089bc), most_recent_write_upper: Antichain { elements: [2549] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }, WriterId(863457b3-28f8-48c0-b79a-3d1ccaa32bf0): WriterState { last_heartbeat_timestamp_ms: 1707218516383, lease_duration_ms: 3600000, most_recent_write_token: IdempotencyToken(89f621b0-57de-452e-ae59-14c87d5b7c5e), most_recent_write_upper: Antichain { elements: [2824] }, debug: HandleDebugState { hostname: "materialized", purpose: "durable catalog state handles" } }}, trace: Trace { spine: Spine { effort: 1, next_id: 71, since: Antichain { elements: [1688] }, upper: Antichain { elements: [2826] }, merging: [Single(Some(Merged(IdHollowBatch { id: SpineId(70, 71), batch: HollowBatch { desc: ([2825], [2826], [0]), parts: [], len: 0, runs: [] } }))), Vacant, Double(InProgress(Fueled { id: SpineId(66, 68), desc: Description { lower: Antichain { elements: [2821] }, upper: Antichain { elements: [2823] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(66, 67), batch: HollowBatch { desc: ([2821], [2822], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7"), encoded_size_bytes: 1192, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 156], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 156], upper: [194, 1, 15, 10, 2, 6, 108, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(67, 68), batch: HollowBatch { desc: ([2822], [2823], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d"), encoded_size_bytes: 1192, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 102, 28], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 15, 10, 2, 6, 108, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 4, 10, 2, 102, 28] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 4 }, Fueled { id: SpineId(68, 70), desc: Description { lower: Antichain { elements: [2823] }, upper: Antichain { elements: [2825] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(68, 69), batch: HollowBatch { desc: ([2823], [2824], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 102, 28], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 102, 28], upper: [194, 1, 4, 10, 2, 102, 44] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(69, 70), batch: HollowBatch { desc: ([2824], [2825], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2"), encoded_size_bytes: 1087, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 92, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "epoch", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 92], upper: [194, 1, 3, 10, 1, 108] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("Epoch")), upper: Some(UpperString("Epoch")) })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 4 }, FuelingMerge { since: Antichain { elements: [1688] }, remaining_work: 0 })), Single(Some(Fueled { id: SpineId(8, 66), desc: Description { lower: Antichain { elements: [2554] }, upper: Antichain { elements: [2821] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(8, 63), batch: HollowBatch { desc: ([2554], [2818], [1688]), parts: [], len: 0, runs: [] } }, IdHollowBatch { id: SpineId(63, 64), batch: HollowBatch { desc: ([2818], [2819], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 108], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 108], upper: [194, 1, 4, 10, 2, 101, 124] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(64, 65), batch: HollowBatch { desc: ([2819], [2820], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p1c55a321-6540-4c90-901c-637ff92177fa"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 124], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 124], upper: [194, 1, 4, 10, 2, 101, 140] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }, IdHollowBatch { id: SpineId(65, 66), batch: HollowBatch { desc: ([2820], [2821], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151"), encoded_size_bytes: 1181, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 101, 140], stats: Some(LazyPartStats { key: ProtoStructStats { len: 2, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 2 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 2, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user")), upper: Some(UpperString("user")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("IdAlloc")), upper: Some(UpperString("IdAlloc")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 101, 140], upper: [194, 1, 4, 10, 2, 101, 156] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 2, runs: [] } }], len: 6 })), Single(Some(Fueled { id: SpineId(6, 8), desc: Description { lower: Antichain { elements: [2551] }, upper: Antichain { elements: [2554] }, since: Antichain { elements: [1688] } }, parts: [IdHollowBatch { id: SpineId(6, 7), batch: HollowBatch { desc: ([2551], [2553], [940]), parts: [], len: 0, runs: [] } }, IdHollowBatch { id: SpineId(7, 8), batch: HollowBatch { desc: ([2553], [2554], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pf591c6af-7eed-41d0-8001-d885178a7202"), encoded_size_bytes: 2116, key_lower: [10, 89, 10, 87, 186, 1, 84, 10, 28, 10, 3, 107, 101, 121, 18, 21, 186, 1, 18, 10, 16, 10, 4, 110, 97, 109, 101, 18, 8, 66, 6, 115, 121, 115, 116, 101, 109, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 33, 10, 5, 118, 97, 108, 117, 101, 18, 24, 186, 1, 21, 10, 19, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 8, 194, 1, 5, 10, 3, 3, 16, 92], stats: Some(LazyPartStats { key: ProtoStructStats { len: 8, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 8 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 8, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 8, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("M")), upper: Some(UpperString("M")) })) }) }, ProtoJsonMapElementStats { name: "name", len: 4, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("catalog_content_version")), upper: Some(UpperString("system")) })) }) }, ProtoJsonMapElementStats { name: "object_name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("map_agg")), upper: Some(UpperString("map_build")) })) }) }, ProtoJsonMapElementStats { name: "object_type", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 140], upper: [194, 1, 3, 10, 1, 140] })) }) }, ProtoJsonMapElementStats { name: "schema_name", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("mz_catalog")), upper: Some(UpperString("mz_catalog")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 8, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("GidMapping")), upper: Some(UpperString("Timestamp")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 8, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "fingerprint", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("")), upper: Some(UpperString("")) })) }) }, ProtoJsonMapElementStats { name: "id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 5, 10, 3, 3, 16, 92], upper: [194, 1, 5, 10, 3, 3, 16, 108] })) }) }, ProtoJsonMapElementStats { name: "next_id", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 5, 10, 3, 3, 16, 92], upper: [194, 1, 5, 10, 3, 3, 16, 124] })) }) }, ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 20, 10, 7, 1, 112, 114, 23, 150, 64, 92, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 9, 10, 7, 23, 7, 33, 131, 114, 152, 44] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("0.85.3")), upper: Some(UpperString("0.86.1")) })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 8, runs: [] } }], len: 8 })), Vacant, Vacant, Vacant, Double(InProgress(Merged(IdHollowBatch { id: SpineId(4, 5), batch: HollowBatch { desc: ([2491], [2550], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332"), encoded_size_bytes: 59424, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 76, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 191, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 191 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 191, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 189, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 37, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 37, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 20, 10, 7, 1, 112, 114, 24, 41, 113, 76, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1], upper: [194, 1, 9, 10, 7, 23, 7, 33, 131, 55, 115, 108] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 191, runs: [] } }), Merged(IdHollowBatch { id: SpineId(5, 6), batch: HollowBatch { desc: ([2550], [2551], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e"), encoded_size_bytes: 96428, key_lower: [10, 90, 10, 88, 186, 1, 85, 10, 33, 10, 3, 107, 101, 121, 18, 26, 186, 1, 23, 10, 21, 10, 3, 107, 101, 121, 18, 14, 66, 12, 117, 115, 101, 114, 95, 118, 101, 114, 115, 105, 111, 110, 10, 16, 10, 4, 107, 105, 110, 100, 18, 8, 66, 6, 67, 111, 110, 102, 105, 103, 10, 30, 10, 5, 118, 97, 108, 117, 101, 18, 21, 186, 1, 18, 10, 16, 10, 5, 118, 97, 108, 117, 101, 18, 7, 194, 1, 4, 10, 2, 4, 92], stats: Some(LazyPartStats { key: ProtoStructStats { len: 160, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 160 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 160, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 160, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "id", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "value", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "System", len: 4, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 44] })) }) }, ProtoJsonMapElementStats { name: "User", len: 154, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 4, 10, 2, 8, 28] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "key", len: 2, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("user_version")), upper: Some(UpperString("user_version")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "kind", len: 160, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("Cluster")), upper: Some(UpperString("Config")) })) }) }, ProtoJsonMapElementStats { name: "value", len: 160, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "config", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "variant", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "Managed", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "availability_zones", len: 14, stats: Some(ProtoJsonStats { kind: Some(Lists(())) }) }, ProtoJsonMapElementStats { name: "disk", len: 14, stats: Some(ProtoJsonStats { kind: Some(Bools(ProtoPrimitiveStats { lower: Some(LowerBool(false)), upper: Some(UpperBool(true)) })) }) }, ProtoJsonMapElementStats { name: "idle_arrangement_merge_effort", len: 14, stats: Some(ProtoJsonStats { kind: Some(JsonNulls(())) }) }, ProtoJsonMapElementStats { name: "logging", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "interval", len: 14, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "nanos", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 12], upper: [194, 1, 3, 10, 1, 12] })) }) }, ProtoJsonMapElementStats { name: "secs", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 28] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "log_logging", len: 14, stats: Some(ProtoJsonStats { kind: Some(Bools(ProtoPrimitiveStats { lower: Some(LowerBool(false)), upper: Some(UpperBool(false)) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "replication_factor", len: 14, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 44] })) }) }, ProtoJsonMapElementStats { name: "size", len: 14, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("1")), upper: Some(UpperString("4-4")) })) }) }] })) }) }, ProtoJsonMapElementStats { name: "Unmanaged", len: 144, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "linked_object_id", len: 79, stats: Some(ProtoJsonStats { kind: Some(JsonNulls(())) }) }, ProtoJsonMapElementStats { name: "name", len: 158, stats: Some(ProtoJsonStats { kind: Some(Strings(ProtoPrimitiveStats { lower: Some(LowerString("create_cluster1")), upper: Some(UpperString("webhook_cluster")) })) }) }, ProtoJsonMapElementStats { name: "owner_id", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "value", len: 158, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "System", len: 6, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 28] })) }) }, ProtoJsonMapElementStats { name: "User", len: 152, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 3, 10, 1, 28], upper: [194, 1, 3, 10, 1, 124] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "privileges", len: 158, stats: Some(ProtoJsonStats { kind: Some(Lists(())) }) }, ProtoJsonMapElementStats { name: "value", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 4, 10, 2, 4, 92], upper: [194, 1, 4, 10, 2, 4, 108] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 160, runs: [] } }), FuelingMerge { since: Antichain { elements: [1688] }, remaining_work: 151 })), Single(Some(Merged(IdHollowBatch { id: SpineId(3, 4), batch: HollowBatch { desc: ([2409], [2491], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8"), encoded_size_bytes: 97218, key_lower: [10, 86, 10, 84, 186, 1, 81, 10, 26, 10, 3, 107, 101, 121, 18, 19, 186, 1, 16, 10, 14, 10, 4, 110, 97, 109, 101, 18, 6, 66, 4, 117, 115, 101, 114, 10, 17, 10, 4, 107, 105, 110, 100, 18, 9, 66, 7, 73, 100, 65, 108, 108, 111, 99, 10, 32, 10, 5, 118, 97, 108, 117, 101, 18, 23, 186, 1, 20, 10, 18, 10, 7, 110, 101, 120, 116, 95, 105, 100, 18, 7, 194, 1, 4, 10, 2, 96, 44], stats: Some(LazyPartStats { key: ProtoStructStats { len: 335, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 335 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 335, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 335, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 56, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 56, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 130, 97, 153, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 130, 137, 22, 44] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 335, runs: [] } }))), Vacant, Single(Some(Merged(IdHollowBatch { id: SpineId(2, 3), batch: HollowBatch { desc: ([1810], [2409], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e"), encoded_size_bytes: 395968, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 60, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 1294, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 1294 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 1294, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 1292, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 219, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 219, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 120, 121, 23, 76], upper: [194, 1, 9, 10, 7, 23, 7, 33, 130, 97, 105, 108] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 1073, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 118, 7, 67, 76], upper: [194, 1, 20, 10, 7, 1, 112, 114, 23, 150, 64, 92, 16, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 1294, runs: [] } }))), Single(Some(Merged(IdHollowBatch { id: SpineId(1, 2), batch: HollowBatch { desc: ([799], [1810], [940]), parts: [HollowBatchPart { key: PartialBatchKey("n0008503/pc81f7c60-d61b-48b4-9110-4ccc0ac802cb"), encoded_size_bytes: 1197551, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 44, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 3196, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 3196 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 3196, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 3194, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 423, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 423, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 116, 144, 48, 28], upper: [194, 1, 9, 10, 7, 23, 7, 33, 120, 120, 88, 92] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 2771, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 2, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 2, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 151, 76], upper: [194, 1, 9, 10, 7, 23, 7, 33, 118, 7, 67, 76] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 3196, runs: [] } }))), Single(Some(Merged(IdHollowBatch { id: SpineId(0, 1), batch: HollowBatch { desc: ([0], [799], [0]), parts: [HollowBatchPart { key: PartialBatchKey("n0008304/p7dbe0fa5-5c0a-4054-ab61-9e89ec29f8e4"), encoded_size_bytes: 1207754, key_lower: [10, 39, 10, 37, 186, 1, 34, 10, 15, 10, 5, 101, 112, 111, 99, 104, 18, 6, 194, 1, 3, 10, 1, 44, 10, 15, 10, 4, 107, 105, 110, 100, 18, 7, 66, 5, 69, 112, 111, 99, 104], stats: Some(LazyPartStats { key: ProtoStructStats { len: 4242, cols: {"err": ProtoDynStats { option: Some(ProtoOptionStats { none: 4242 }), kind: Some(Bytes(ProtoBytesStats { kind: Some(Primitive(ProtoPrimitiveBytesStats { lower: [], upper: [] })) })) }, "ok": ProtoDynStats { option: Some(ProtoOptionStats { none: 0 }), kind: Some(Struct(ProtoStructStats { len: 4242, cols: {"data": ProtoDynStats { option: None, kind: Some(Bytes(ProtoBytesStats { kind: Some(Json(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "key", len: 4241, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "event", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "V1", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "occurred_at", len: 385, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "millis", len: 385, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 88, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 116, 136, 115, 156] })) }) }] })) }) }] })) }) }] })) }) }] })) }) }, ProtoJsonMapElementStats { name: "value", len: 3856, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "ts", len: 3, stats: Some(ProtoJsonStats { kind: Some(Maps(ProtoJsonMapStats { elements: [ProtoJsonMapElementStats { name: "internal", len: 3, stats: Some(ProtoJsonStats { kind: Some(Numerics(ProtoPrimitiveBytesStats { lower: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 88, 92], upper: [194, 1, 9, 10, 7, 23, 7, 33, 114, 150, 151, 76] })) }) }] })) }) }] })) }) }] })) })) })) }} })) }} } }) }], len: 4242, runs: [] } })))] } } } } }, poisoned: false, .. }, notifier: StateWatchNotifier { metrics: Metrics { .. }, tx: broadcast::Sender } }, seqno_high_water: SeqNo(3138), rx: broadcast::Receiver }, as_of: Antichain { elements: [2823] }, since: Antichain { elements: [2825] }, frontier: Antichain { elements: [2826] } }, persist_client: PersistClient { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, blob: BlobMemCache { cfg: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, metrics: Metrics { .. }, cache: Mutex { data: Lru { capacity: Weight(1048576), total_weight: Weight(713973), next_time: Time(16), by_time: {Time(0): "s86892608-7ff3-82f8-1090-7584b4945aaa/v3073/r11f1d3f7-26a2-404c-96a1-73c22c8af43a", Time(1): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/p9d2d0284-e70d-42e9-8f4e-0b1c376ad11e", Time(2): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008503/pcdf563c9-661d-4a04-b32d-0cac0fbd75f8", Time(3): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p06e6f6c1-006e-44e5-8aaa-d82d4e8ac332", Time(4): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb6e44951-50a5-408c-a0ca-056b80ef114e", Time(5): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pf591c6af-7eed-41d0-8001-d885178a7202", Time(6): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p70cd5750-7d8e-4ecf-ae0f-181d486f8cf9", Time(7): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p1c55a321-6540-4c90-901c-637ff92177fa", Time(8): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb4099b60-fa5f-4d33-bedb-7a81604e8151", Time(9): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pb8862340-32a4-4b43-8fc0-ac958ad21ce7", Time(10): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/p73f63e8d-d196-40b1-9e1e-646679e2610d", Time(13): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008601/pfb4689f7-64f9-4337-a010-8dd3043438e8", Time(14): "s86892608-7ff3-82f8-1090-7584b4945aaa/n0008600/pf1d67788-b50d-42ff-934b-b1f2e9c2dce2", Time(15): "s22a24146-7b1f-77f7-642a-6af59cd33da2/v1/r2d1db83b-b346-45ea-8ecc-9ffe0e6c671c"}, .. }, poisoned: false, .. }, blob: Tasked(MetricsBlob { blob: S3Blob { metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } }, client: Client { handle: Handle { conf: Config { config: FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), cloneable: CloneableLayer(Layer { name: "", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] }), runtime_components: RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }, runtime_plugins: [], behavior_version: Some(BehaviorVersion) }, runtime_plugins: RuntimePlugins { client_plugins: [SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_identity_cache_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: Some(Tracked { _origin: "default_identity_cache_plugin", value: SharedIdentityCache(LazyCache { partitions: CachePartitions { partitions: RwLock { data: {IdentityCachePartition(0): ExpiringCache { buffer_time: 10s, value: RwLock { data: OnceCell { value: Some((Identity { data: Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }, expiration: None }, SystemTime { tv_sec: 1707219427, tv_nsec: 457524028 })) } }, _phantom: PhantomData<alloc::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>> }}, poisoned: false, .. }, buffer_time: 10s }, load_timeout: 5s, buffer_time: 10s, buffer_time_jitter_fraction: 0xaaaadc458b90, default_expiration: 900s }) }), identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_retry_config", items: [TypeErasedBox[!Clone]:Set(RetryConfig { mode: Standard, max_attempts: 1, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[!Clone]:Set(RetryPartition { name: "s3" })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_retry_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: Some(Tracked { _origin: "default_retry_config_plugin", value: SharedRetryStrategy(StandardRetryStrategy { retry_permit: Mutex { data: None, poisoned: false, .. } }) }), time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_retry_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_sleep_impl_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: Some(Tracked { _origin: "default_sleep_impl_plugin", value: SharedAsyncSleep(TokioSleep) }), config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: None, runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_time_source_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "default_time_source_plugin", value: SharedTimeSource(SystemTimeSource) }), sleep_impl: None, config_validators: [] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_timeout_config", items: [TypeErasedBox[!Clone]:Set(TimeoutConfig { connect_timeout: None, read_timeout: None, operation_timeout: None, operation_attempt_timeout: None })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_timeout_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_timeout_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "default_stalled_stream_protection_config", items: [TypeErasedBox[!Clone]:Set(StalledStreamProtectionConfig { is_enabled: true, grace_period: 5s })] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "default_stalled_stream_protection_config_plugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [Tracked { _origin: "default_stalled_stream_protection_config_plugin", value: SharedConfigValidator { inner: StaticFn } }] }), order: Some(Defaults) }), SharedRuntimePlugin(ServiceRuntimePlugin { config: None, runtime_components: RuntimeComponentsBuilder { builder_name: "ServiceRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: Some(Tracked { _origin: "ServiceRuntimePlugin", value: SharedEndpointResolver(DowncastParams(DefaultResolver { partition_resolver: PartitionResolver { partitions: [PartitionMetadata { id: "aws", region_regex: Regex("^(us|eu|ap|sa|ca|me|af)-\\w+-\\d+$"), regions: {"sa-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "af-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ca-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-east-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-2": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-south-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "me-central-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-northeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "ap-southeast-3": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "eu-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-us-gov", region_regex: Regex("^us\\-gov\\-\\w+\\-\\d+$"), regions: {"aws-us-gov-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-gov-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-us-gov", dns_suffix: "amazonaws.com", dual_stack_dns_suffix: "api.aws", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-cn", region_regex: Regex("^cn\\-\\w+\\-\\d+$"), regions: {"cn-north-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "cn-northwest-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-cn-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-cn", dns_suffix: "amazonaws.com.cn", dual_stack_dns_suffix: "api.amazonwebservices.com.cn", supports_fips: true, supports_dual_stack: true } }, PartitionMetadata { id: "aws-iso", region_regex: Regex("^us\\-iso\\-\\w+\\-\\d+$"), regions: {"us-iso-west-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "us-iso-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso", dns_suffix: "c2s.ic.gov", dual_stack_dns_suffix: "c2s.ic.gov", supports_fips: true, supports_dual_stack: false } }, PartitionMetadata { id: "aws-iso-b", region_regex: Regex("^us\\-isob\\-\\w+\\-\\d+$"), regions: {"us-isob-east-1": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }, "aws-iso-b-global": PartitionOutputOverride { name: None, dns_suffix: None, dual_stack_dns_suffix: None, supports_fips: None, supports_dual_stack: None }}, outputs: PartitionOutput { name: "aws-iso-b", dns_suffix: "sc2s.sgov.gov", dual_stack_dns_suffix: "sc2s.sgov.gov", supports_fips: true, supports_dual_stack: false } }] } })) }), auth_schemes: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedAuthScheme(SigV4AuthScheme { signer: SigV4Signer }) }], identity_cache: None, identity_resolvers: [], interceptors: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ConnectionPoisoningInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: ServiceClockSkewInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RequestInfoInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: UserAgentInterceptor } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: InvocationIdInterceptor { default: DefaultInvocationIdGenerator { rng: Mutex { data: Rng(3679849605353857549), poisoned: false, .. } } } } }, Tracked { _origin: "ServiceRuntimePlugin", value: SharedInterceptor { interceptor: RecursionDetectionInterceptor { env: Env(Real) } } }], retry_classifiers: [Tracked { _origin: "ServiceRuntimePlugin", value: SharedRetryClassifier(HttpStatusCodeClassifier { retryable_status_codes: [500, 502, 503, 504] }) }], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] } }), SharedRuntimePlugin(StaticRuntimePlugin { config: Some(FrozenLayer(Layer { name: "aws_sdk_s3::config::Config", items: [TypeErasedBox[Clone]:Set(SigningName("s3")), TypeErasedBox[Clone]:Set(RetryConfig { mode: Standard, max_attempts: 3, initial_backoff: 1s, max_backoff: 20s, reconnect_mode: ReconnectOnTransientError, use_static_exponential_base: false }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseFips"), TypeErasedBox[Clone]:Set(EndpointUrl("http://minio:9000/")), TypeErasedBox[Clone]:Set(TimeoutConfig { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s), operation_timeout: Some(111.000001111s), operation_attempt_timeout: Some(222.000002222s) }), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::endpoint_config::UseDualStack"), TypeErasedBox[Clone]:Set(ApiMetadata { service_id: "s3", version: "1.8.0" }), TypeErasedBox[Clone]:Set(ForcePathStyle(true)), TypeErasedBox[Clone]:Set(Region("minio")), TypeErasedBox[Clone]:Set(SigningRegion("minio")), TypeErasedBox[Clone]:ExplicitlyUnset("aws_types::app_name::AppName")] })), runtime_components: Some(RuntimeComponentsBuilder { builder_name: "service config", auth_scheme_option_resolver: None, http_client: Some(Tracked { _origin: "service config", value: SharedHttpClient { selector: HyperClient { connector_cache: RwLock { data: {CacheKey { connect_timeout: Some(333.000003333s), read_timeout: Some(444.000004444s) }: SharedHttpConnector(HyperConnector { adapter: Adapter { client: "** hyper client **" } })}, poisoned: false, .. }, client_builder: Builder { client_config: Config { retry_canceled_requests: true, set_host: true, ver: Auto }, conn_builder: Builder { exec: Exec, h09_responses: false, h1_parser_config: ParserConfig { allow_spaces_after_header_name_in_responses: false, allow_obsolete_multiline_headers_in_responses: false, allow_multiple_spaces_in_request_line_delimiters: false, allow_multiple_spaces_in_response_status_delimiters: false, ignore_invalid_headers_in_responses: false }, h1_writev: None, h1_title_case_headers: false, h1_preserve_header_case: false, h1_read_buf_exact_size: None, h1_max_buf_size: None, h2_builder: Config { adaptive_window: false, initial_conn_window_size: 5242880, initial_stream_window_size: 2097152, max_frame_size: 16384, keep_alive_interval: None, keep_alive_timeout: 20s, keep_alive_while_idle: false, max_concurrent_reset_streams: None, max_send_buffer_size: 1048576 }, version: Http1 }, pool_config: Config { idle_timeout: Some(90s), max_idle_per_host: 18446744073709551615 } } } } }), endpoint_resolver: None, auth_schemes: [], identity_cache: None, identity_resolvers: [Tracked { _origin: "service config", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "sigv4" }, identity_resolver: SharedIdentityResolver { inner: SharedCredentialsProvider(Credentials { provider_name: "Static", access_key_id: "minioadmin", secret_access_key: "** redacted **" }), cache_partition: IdentityCachePartition(0) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: Some(Tracked { _origin: "service config", value: SharedTimeSource(SharedTimeSource(SystemTimeSource)) }), sleep_impl: Some(Tracked { _origin: "service config", value: SharedAsyncSleep(MetricsSleep { knobs: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: S3BlobMetrics { operation_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_timeouts", help: "number of operation timeouts (including retries)", const_label_pairs: [], variable_labels: [], id: 5053964559590688624, dim_hash: 13980645106119069833 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, operation_attempt_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operation_attempt_timeouts", help: "number of operation attempt timeouts (within a single retry)", const_label_pairs: [], variable_labels: [], id: 9331089372335097930, dim_hash: 11033728462371301899 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, connect_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_connect_timeouts", help: "number of timeouts establishing a connection to S3", const_label_pairs: [], variable_labels: [], id: 15842563061472886791, dim_hash: 12395499356437953493 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, read_timeouts: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_read_timeouts", help: "number of timeouts waiting on first response byte from S3", const_label_pairs: [], variable_labels: [], id: 13516932354300076499, dim_hash: 13257763683838891827 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, get_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 16 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "get_part" }] } }, set_single: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 2 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_single" }] } }, set_multi_create: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_create" }] } }, set_multi_part: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_part" }] } }, set_multi_complete: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "set_multi_complete" }] } }, delete_head: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_head" }] } }, delete_object: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "delete_object" }] } }, list_objects: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_s3_operations", help: "number of raw s3 calls on behalf of Blob interface methods", const_label_pairs: [], variable_labels: ["op"], id: 3674378257733777680, dim_hash: 5066152306737290877 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "list_objects" }] } } } }) }), config_validators: [] }), order: None }), SharedRuntimePlugin(NoAuthRuntimePlugin(RuntimeComponentsBuilder { builder_name: "NoAuthRuntimePlugin", auth_scheme_option_resolver: None, http_client: None, endpoint_resolver: None, auth_schemes: [Tracked { _origin: "NoAuthRuntimePlugin", value: SharedAuthScheme(NoAuthScheme { signer: NoAuthSigner }) }], identity_cache: None, identity_resolvers: [Tracked { _origin: "NoAuthRuntimePlugin", value: ConfiguredIdentityResolver { auth_scheme: AuthSchemeId { scheme_id: "no_auth" }, identity_resolver: SharedIdentityResolver { inner: NoAuthIdentityResolver, cache_partition: IdentityCachePartition(1) } } }], interceptors: [], retry_classifiers: [], retry_strategy: None, time_source: None, sleep_impl: None, config_validators: [] }))], operation_plugins: [] } } }, bucket: "persist", prefix: "persist", max_keys: 1000, multipart_config: MultipartConfig { multipart_threshold: 8388608, multipart_chunk_size: 8388608 } }, metrics: Metrics { .. } }) }, consensus: Tasked(MetricsConsensus { consensus: PostgresConsensus { .. }, metrics: Metrics { .. } }), metrics: Metrics { .. }, isolated_runtime: IsolatedRuntime { inner: Some(Runtime { scheduler: MultiThread(MultiThread), handle: Handle { inner: MultiThread(multi_thread::Handle { ... }) }, blocking_pool: BlockingPool }) }, shared_states: StateCache { cfg: PersistConfig { build_version: Version { major: 0, minor: 86, patch: 0, pre: Prerelease("dev") }, hostname: "materialized", now: <now_fn>, configs: {"crdb_connect_timeout": Duration(RwLock { data: 5s, poisoned: false, .. }), "crdb_tcp_user_timeout": Duration(RwLock { data: 30s, poisoned: false, .. }), "persist_batch_delete_enabled": Bool(false), "persist_blob_cache_mem_limit_bytes": Usize(1048576), "persist_blob_target_size": Usize(134217728), "persist_compaction_minimum_timeout": Duration(RwLock { data: 90s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl": Duration(RwLock { data: 300s, poisoned: false, .. }), "persist_consensus_connection_pool_ttl_stagger": Duration(RwLock { data: 6s, poisoned: false, .. }), "persist_next_listen_batch_retryer_clamp": Duration(RwLock { data: 100ms, poisoned: false, .. }), "persist_next_listen_batch_retryer_initial_backoff": Duration(RwLock { data: 1.2s, poisoned: false, .. }), "persist_next_listen_batch_retryer_multiplier": U32(2), "persist_pubsub_client_enabled": Bool(true), "persist_pubsub_push_diff_enabled": Bool(true), "persist_reader_lease_duration": Duration(RwLock { data: 900s, poisoned: false, .. }), "persist_rollup_threshold": Usize(128), "persist_sink_minimum_batch_updates": Usize(0), "persist_stats_audit_percent": Usize(0), "persist_stats_budget_bytes": Usize(1024), "persist_stats_collection_enabled": Bool(true), "persist_stats_filter_enabled": Bool(true), "persist_stats_untrimmable_columns_equals": String(RwLock { data: "err,ts,receivedat,createdat,_fivetran_deleted,", poisoned: false, .. }), "persist_stats_untrimmable_columns_prefix": String(RwLock { data: "last_,", poisoned: false, .. }), "persist_stats_untrimmable_columns_suffix": String(RwLock { data: "timestamp,time,_at,_tstamp,", poisoned: false, .. }), "persist_streaming_compaction_enabled": Bool(false), "persist_streaming_snapshot_and_fetch_enabled": Bool(false), "persist_txns_data_shard_retryer_clamp": Duration(RwLock { data: 16s, poisoned: false, .. }), "persist_txns_data_shard_retryer_initial_backoff": Duration(RwLock { data: 1.024s, poisoned: false, .. }), "persist_txns_data_shard_retryer_multiplier": U32(2), "storage_persist_sink_minimum_batch_updates": Usize(1024), "storage_source_decode_fuel": Usize(1000000)}, dynamic: DynamicConfig { batch_builder_max_outstanding_parts: 2, compaction_heuristic_min_inputs: 8, compaction_heuristic_min_parts: 8, compaction_heuristic_min_updates: 1024, compaction_memory_bound_bytes: 1073741824, gc_blob_delete_concurrency_limit: 32, state_versions_recent_live_diffs_limit: 3840, usage_state_fetch_concurrency_limit: 8 }, compaction_enabled: true, compaction_concurrency_limit: 5, compaction_queue_size: 20, compaction_yield_after_n_updates: 100000, consensus_connection_pool_max_size: 50, consensus_connection_pool_max_wait: Some(60s), writer_lease_duration: 3600s, critical_downgrade_interval: 30s, pubsub_connect_attempt_timeout: 5s, pubsub_request_timeout: 5s, pubsub_connect_max_backoff: 60s, pubsub_client_sender_channel_size: 25, pubsub_client_receiver_channel_size: 25, pubsub_server_connection_channel_size: 25, pubsub_state_cache_shard_ref_channel_size: 25, pubsub_reconnect_backoff: 5s }, metrics: Metrics { .. }, states: Mutex { data: {ShardId(22a24146-7b1f-77f7-642a-6af59cd33da2): OnceCell { value: Some((Weak)) }, ShardId(86892608-7ff3-82f8-1090-7584b4945aaa): OnceCell { value: Some((Weak)) }}, poisoned: false, .. }, pubsub_sender: MetricsSameProcessPubSubSender { metrics: Metrics { .. }, delegate: SubscriptionTrackingSender { delegate: PubSubConnection { connection_id: 0, notifier: Sender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aa5d800, tail_position: 0 }, semaphore: Semaphore { semaphore: Semaphore { permits: 25 }, bound: 25 }, rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, state: PubSubState { connection_id_counter: 1, shard_subscribers: RwLock { data: {}, poisoned: false, .. }, connections: RwLock { data: HashSet({0}), poisoned: false, .. }, metrics: PubSubServerMetrics { active_connections: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_active_connections", help: "number of active connections to server", const_label_pairs: [], variable_labels: [], id: 11106074761997215763, dim_hash: 3108382538162212977 }, val: AtomicU64 { inner: 1 }, val_type: Gauge, label_pairs: [] } }, broadcasted_diff_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_count", help: "count of total broadcast diff messages sent", const_label_pairs: [], variable_labels: [], id: 13085877342429723307, dim_hash: 1606030166613010534 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_bytes: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_bytes", help: "count of total broadcast diff bytes sent", const_label_pairs: [], variable_labels: [], id: 16407848502932309983, dim_hash: 8652677384771939155 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_dropped_channel_full: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_dropped_channel_full", help: "count of diffs dropped due to full connection channel", const_label_pairs: [], variable_labels: [], id: 4577479958553503670, dim_hash: 6703876575886109795 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, push_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 4528001026548059179 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "push" }] } }, subscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "subscribe" }] } }, unsubscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "unsubscribe" }] } }, connection_cleanup_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "cleanup" }] } }, push_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "push" }] } }, subscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "subscribe" }] } }, unsubscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "unsubscribe" }] } } } } }, subscribes: Mutex { data: {}, poisoned: false, .. } } } }, pubsub_sender: MetricsSameProcessPubSubSender { metrics: Metrics { .. }, delegate: SubscriptionTrackingSender { delegate: PubSubConnection { connection_id: 0, notifier: Sender { chan: Tx { inner: Chan { tx: Tx { block_tail: 0xffff8aa5d800, tail_position: 0 }, semaphore: Semaphore { semaphore: Semaphore { permits: 25 }, bound: 25 }, rx_waker: AtomicWaker, tx_count: 1, rx_fields: "..." } } }, state: PubSubState { connection_id_counter: 1, shard_subscribers: RwLock { data: {}, poisoned: false, .. }, connections: RwLock { data: HashSet({0}), poisoned: false, .. }, metrics: PubSubServerMetrics { active_connections: GenericGauge { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_active_connections", help: "number of active connections to server", const_label_pairs: [], variable_labels: [], id: 11106074761997215763, dim_hash: 3108382538162212977 }, val: AtomicU64 { inner: 1 }, val_type: Gauge, label_pairs: [] } }, broadcasted_diff_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_count", help: "count of total broadcast diff messages sent", const_label_pairs: [], variable_labels: [], id: 13085877342429723307, dim_hash: 1606030166613010534 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_bytes: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_bytes", help: "count of total broadcast diff bytes sent", const_label_pairs: [], variable_labels: [], id: 16407848502932309983, dim_hash: 8652677384771939155 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, broadcasted_diff_dropped_channel_full: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_broadcasted_diff_dropped_channel_full", help: "count of diffs dropped due to full connection channel", const_label_pairs: [], variable_labels: [], id: 4577479958553503670, dim_hash: 6703876575886109795 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [] } }, push_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 4528001026548059179 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "push" }] } }, subscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "subscribe" }] } }, unsubscribe_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "unsubscribe" }] } }, connection_cleanup_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_operation_seconds", help: "time spent in pubsub server performing each operation", const_label_pairs: [], variable_labels: ["op"], id: 4732897652381795378, dim_hash: 6157043092324604677 }, val: AtomicF64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "op", value: "cleanup" }] } }, push_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 8 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "push" }] } }, subscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "subscribe" }] } }, unsubscribe_call_count: GenericCounter { v: Value { desc: Desc { fq_name: "mz_persist_pubsub_server_call_count", help: "count of each pubsub server message received", const_label_pairs: [], variable_labels: ["call"], id: 15063675282334648723, dim_hash: 9137806970842886734 }, val: AtomicU64 { inner: 0 }, val_type: Counter, label_pairs: [LabelPair { name: "call", value: "unsubscribe" }] } } } } }, subscribes: Mutex { data: {}, poisoned: false, .. } } } }, shard_id: ShardId(86892608-7ff3-82f8-1090-7584b4945aaa), upper: 2826, epoch: 6, snapshot: Snapshot { databases: {DatabaseKey { id: Some(DatabaseId { value: Some(User(1)) }) }: DatabaseValue { name: "materialize", owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 512 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 512 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(2)) }) }: DatabaseValue { name: "defpriv_db", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(3)) }) }: DatabaseValue { name: "--", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(4)) }) }: DatabaseValue { name: "privilege_db1", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(5)) }) }: DatabaseValue { name: "owner_db1", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(6)) }) }: DatabaseValue { name: "owner_db2", owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(8)) }) }: DatabaseValue { name: "privilege_db2", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(9)) }) }: DatabaseValue { name: "owner_db3", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(10)) }) }: DatabaseValue { name: "owner_db4", owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(11)) }) }: DatabaseValue { name: "to_be_created1", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(12)) }) }: DatabaseValue { name: "privilege_db3", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(13)) }) }: DatabaseValue { name: "owner_db5", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(14)) }) }: DatabaseValue { name: "owner_db6", owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(15)) }) }: DatabaseValue { name: "owner_db7", owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(16)) }) }: DatabaseValue { name: "owner_db8", owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, DatabaseKey { id: Some(DatabaseId { value: Some(User(17)) }) }: DatabaseValue { name: "to_be_created2", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }}, schemas: {SchemaKey { id: Some(SchemaId { value: Some(System(1)) }) }: SchemaValue { database_id: None, name: "mz_catalog", owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(System(2)) }) }: SchemaValue { database_id: None, name: "pg_catalog", owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(System(4)) }) }: SchemaValue { database_id: None, name: "mz_internal", owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(System(5)) }) }: SchemaValue { database_id: None, name: "information_schema", owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(System(6)) }) }: SchemaValue { database_id: None, name: "mz_unsafe", owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(3)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "public", owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 512 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 512 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(7)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(2)) }), name: "public", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(8)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(2)) }), name: "defpriv_schema", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(9)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "optimizer_notices", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(10)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "swap_me2", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(11)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "swap_me1", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(12)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "swap_me4", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(13)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "swap_me3", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(14)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(3)) }), name: "public", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(15)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(3)) }), name: "</script><script>alert(123)</script>", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(16)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "renamed1", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(17)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "renamed2", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(18)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "renamed3", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(19)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(4)) }), name: "public", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(20)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "privilege_schema1", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(21)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(5)) }), name: "public", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(22)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "owner_schema1", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(23)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(6)) }), name: "public", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(24)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "owner_schema2", owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(25)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "aggregation_schema", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(26)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "to_be_created", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(29)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(8)) }), name: "public", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(30)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "privilege_schema2", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(31)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(9)) }), name: "public", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(32)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "owner_schema3", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(33)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(10)) }), name: "public", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(34)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "owner_schema4", owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(35)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(11)) }), name: "public", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(36)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "join_schema", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(37)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(12)) }), name: "public", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(38)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "privilege_schema3", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(39)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(13)) }), name: "public", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(40)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "owner_schema5", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(41)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(14)) }), name: "public", owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(42)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "owner_schema6", owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(43)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(15)) }), name: "public", owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(44)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "owner_schema7", owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(45)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(16)) }), name: "public", owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(46)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(1)) }), name: "owner_schema8", owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }] }, SchemaKey { id: Some(SchemaId { value: Some(User(47)) }) }: SchemaValue { database_id: Some(DatabaseId { value: Some(User(17)) }), name: "public", owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }}, roles: {RoleKey { id: Some(RoleId { value: Some(System(1)) }) }: RoleValue { name: "mz_system", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(System(2)) }) }: RoleValue { name: "mz_support", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(System(3)) }) }: RoleValue { name: "mz_monitor", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(System(4)) }) }: RoleValue { name: "mz_monitor_redacted", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(1)) }) }: RoleValue { name: "materialize", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [Entry { key: Some(RoleId { value: Some(User(10)) }), value: Some(RoleId { value: Some(System(1)) }) }, Entry { key: Some(RoleId { value: Some(User(14)) }), value: Some(RoleId { value: Some(System(1)) }) }] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(2)) }) }: RoleValue { name: "defpriv_role1", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(3)) }) }: RoleValue { name: "à¸”\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(4)) }) }: RoleValue { name: "role_1", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(5)) }) }: RoleValue { name: "role_2", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(6)) }) }: RoleValue { name: "owner_role_01", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(7)) }) }: RoleValue { name: "other_owner", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(9)) }) }: RoleValue { name: "defpriv_role2", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(10)) }) }: RoleValue { name: "create_role1", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(11)) }) }: RoleValue { name: "owner_role_02", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(13)) }) }: RoleValue { name: "defpriv_role3", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(14)) }) }: RoleValue { name: "create_role2", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(User(15)) }) }: RoleValue { name: "owner_role_03", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }, RoleKey { id: Some(RoleId { value: Some(Public(Empty)) }) }: RoleValue { name: "public", attributes: Some(RoleAttributes { inherit: true }), membership: Some(RoleMembership { map: [] }), vars: Some(RoleVars { entries: [] }) }}, items: {ItemKey { gid: Some(GlobalId { value: Some(User(1)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh_tunnel_0", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"ssh_tunnel_0\" TO SSH TUNNEL (HOST = 'ssh-bastion-host', PORT = 22, USER = 'mz')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(2)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh_tunnel_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"ssh_tunnel_1\" TO SSH TUNNEL (HOST = 'ssh-bastion-host', PORT = 22, USER = 'mz')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(3)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh_tunnel_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"ssh_tunnel_2\" TO SSH TUNNEL (HOST = 'ssh-bastion-host', PORT = 22, USER = 'mz')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(4)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh_tunnel_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"ssh_tunnel_3\" TO SSH TUNNEL (HOST = 'other_ssh_bastion', PORT = 22, USER = 'mz')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(5)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(6)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "csr_conn", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"csr_conn\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(7)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_rows_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_many_rows_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(8)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_rows", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_many_rows\" IN CLUSTER [u2] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-many-rows-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u7 AS \"materialize\".\"public\".\"upsert_many_rows_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(9)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_rows_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_many_rows_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"count\"(*) AS \"count_rows\", \"pg_catalog\".\"count\"(DISTINCT \"key1\") AS \"count_keys\" FROM [u8 AS \"materialize\".\"public\".\"upsert_many_rows\"] GROUP BY \"f1\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(10)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(8)) }), name: "defpriv_table1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"defpriv_db\".\"defpriv_schema\".\"defpriv_table1\" (\"c\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(11)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn_alter_connection_1a", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn_alter_connection_1a\" TO KAFKA (BROKER = 'kafka:9092'USING SSH TUNNEL [u2 AS \"materialize\".\"public\".\"ssh_tunnel_1\"], SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(12)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_1a_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"alter_connection_source_1a_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(13)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_1a", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"alter_connection_source_1a\" IN CLUSTER [u3] FROM KAFKA CONNECTION [u11 AS \"materialize\".\"public\".\"kafka_conn_alter_connection_1a\"] (TOPIC = 'testdrive-alter-connection-1a-1') FORMAT TEXT ENVELOPE NONE EXPOSE PROGRESS AS [u12 AS \"materialize\".\"public\".\"alter_connection_source_1a_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(14)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_table_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"alter_connection_table_1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], PRIMARY KEY (\"f1\"))" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(15)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mv_alter_connection_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"mv_alter_connection_1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" FROM [u14 AS \"materialize\".\"public\".\"alter_connection_table_1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(16)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_sink_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"alter_connection_sink_1\" IN CLUSTER [u4] FROM [u15 AS \"materialize\".\"public\".\"mv_alter_connection_1\"] INTO KAFKA CONNECTION [u11 AS \"materialize\".\"public\".\"kafka_conn_alter_connection_1a\"] (TOPIC = 'testdrive-alter-connection-sink-1-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(17)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "materialized_views_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"materialized_views_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(18)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_delete_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_delete_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(19)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_delete", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_delete\" IN CLUSTER [u5] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-delete-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u18 AS \"materialize\".\"public\".\"upsert_delete_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(20)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_delete_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_delete_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(*), \"pg_catalog\".\"min\"(\"key1\"), \"pg_catalog\".\"max\"(\"key1\") FROM [u19 AS \"materialize\".\"public\".\"upsert_delete\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(21)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(9)) }), name: "t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"optimizer_notices\".\"t1\" (\"x\" [s20 AS \"pg_catalog\".\"int4\"], \"y\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(22)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(9)) }), name: "t1_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"t1_idx\" IN CLUSTER [u1] ON \"materialize\".\"optimizer_notices\".\"t1\" (\"x\", \"y\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(23)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "comment_type", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"comment_type\" AS (\"x\" [s46 AS \"pg_catalog\".\"text\"], \"y\" [s20 AS \"pg_catalog\".\"int4\"], \"z\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(24)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "comment_int4_list", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"comment_int4_list\" AS LIST (ELEMENT TYPE = [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(25)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "comment_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"comment_table\" (\"f1\" [u23 AS \"materialize\".\"public\".\"comment_type\"], \"f2\" [u24 AS \"materialize\".\"public\".\"comment_int4_list\"], \"f3\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(26)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "comment_sink1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"comment_sink1\" IN CLUSTER [u6] FROM [u25 AS \"materialize\".\"public\".\"comment_table\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'comment-sink1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(27)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "basic_topk_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"basic_topk_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(28)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "jsonb_type_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"jsonb_type_table\" (\"jsonb_col\" [s26 AS \"pg_catalog\".\"jsonb\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(29)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_source1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"rename_source1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(30)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_source3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"rename_source3\" IN CLUSTER [u7] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-rename-source-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE NONE EXPOSE PROGRESS AS [u29 AS \"materialize\".\"public\".\"rename_source1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(31)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_source_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"rename_source_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT DISTINCT \"f1\" FROM [u30 AS \"materialize\".\"public\".\"rename_source3\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(32)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn_ssh1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn_ssh1\" TO KAFKA (BROKER = 'kafka:9092'USING SSH TUNNEL [u1 AS \"materialize\".\"public\".\"ssh_tunnel_0\"], SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(33)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"ssh1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(34)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"ssh1\" IN CLUSTER [u8] FROM KAFKA CONNECTION [u32 AS \"materialize\".\"public\".\"kafka_conn_ssh1\"] (TOPIC = 'testdrive-ssh1-1') FORMAT TEXT ENVELOPE NONE EXPOSE PROGRESS AS [u33 AS \"materialize\".\"public\".\"ssh1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(35)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "numeric_types_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"numeric_types_table\" (\"smallint_col\" [s44 AS \"pg_catalog\".\"int2\"], \"integer_col\" [s20 AS \"pg_catalog\".\"int4\"], \"bigint_col\" [s22 AS \"pg_catalog\".\"int8\"], \"numeric_col\" [s32 AS \"pg_catalog\".\"numeric\"](39, 16))" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(36)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(10)) }), name: "t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"swap_me2\".\"t1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(37)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(11)) }), name: "t2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"swap_me1\".\"t2\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(38)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(12)) }), name: "t3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"swap_me4\".\"t3\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(39)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(13)) }), name: "t4", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"swap_me3\".\"t4\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(40)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_source_comments_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"sink_source_comments_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(41)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_source_comments", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"sink_source_comments\" IN CLUSTER [u9] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-sink-source-comments-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":[\"null\",\"string\"]},{\"name\":\"f2\",\"type\":[\"long\",\"null\"]}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u40 AS \"materialize\".\"public\".\"sink_source_comments_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(42)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_source_comments_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"sink_source_comments_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"key1\", 2) AS \"l_k\", \"pg_catalog\".\"left\"(\"f1\", 1) AS \"l_v1\", \"f2\" / 100 AS \"l_v2\", \"pg_catalog\".\"count\"(*) AS \"c\" FROM [u41 AS \"materialize\".\"public\".\"sink_source_comments\"] GROUP BY \"pg_catalog\".\"left\"(\"key1\", 2), \"pg_catalog\".\"left\"(\"f1\", 1), \"f2\" / 100" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(43)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_sink_comments1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_sink_comments1\" IN CLUSTER [u10] FROM [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'sink-sink-comments1') KEY (\"l_v2\") NOT ENFORCED FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] (NULL DEFAULTS, DOC ON COLUMN [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"].\"l_v1\" = 'doc on l_v1', VALUE DOC ON COLUMN [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"].\"l_v2\" = 'value doc on l_v2', KEY DOC ON COLUMN [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"].\"l_v2\" = 'key doc on l_v2', DOC ON TYPE [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"] = 'comment on view sink_source_comments_view') ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(44)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_insert_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_insert_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(45)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_insert", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_insert\" IN CLUSTER [u11] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-insert-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u44 AS \"materialize\".\"public\".\"upsert_insert_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(46)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_insert_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_insert_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(DISTINCT \"key1\" || ' ' || \"f1\") FROM [u45 AS \"materialize\".\"public\".\"upsert_insert\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(47)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "delta_join_table1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"delta_join_table1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(48)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "delta_join_index1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"delta_join_index1\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"delta_join_table1\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(49)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "delta_join_table2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"delta_join_table2\" (\"f3\" [s20 AS \"pg_catalog\".\"int4\"], \"f4\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(50)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "delta_join_index2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"delta_join_index2\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"delta_join_table2\" (\"f3\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(51)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "decode_error_upsert_value_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"decode_error_upsert_value_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(52)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "decode_error_upsert_value", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"decode_error_upsert_value\" IN CLUSTER [u12] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-decode-error-upsert-value-1') KEY FORMAT TEXT VALUE FORMAT AVRO USING SCHEMA '{ \"type\" : \"record\", \"name\" : \"test\", \"fields\" : [   {\"name\":\"f1\", \"type\":\"int\"}   ] }' ENVELOPE UPSERT EXPOSE PROGRESS AS [u51 AS \"materialize\".\"public\".\"decode_error_upsert_value_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(53)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_table1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"create_table1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"] NOT NULL DEFAULT 1234)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(54)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "real_type_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"real_type_table\" (\"real_col\" [s16 AS \"pg_catalog\".\"float4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(55)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_update_grow_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_update_grow_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(56)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_update_grow", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_update_grow\" IN CLUSTER [u13] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-update-grow-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u55 AS \"materialize\".\"public\".\"upsert_update_grow_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(57)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_update_grow_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_update_grow_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"f1\", 1), \"pg_catalog\".\"right\"(\"f1\", 1), \"pg_catalog\".\"count\"(*) AS \"c1\", \"pg_catalog\".\"count\"(DISTINCT \"key1\") AS \"c2\", \"pg_catalog\".\"count\"(DISTINCT \"f1\") AS \"c3\", \"pg_catalog\".\"min\"(\"pg_catalog\".\"length\"(\"f1\")) AS \"l1\", \"pg_catalog\".\"max\"(\"pg_catalog\".\"length\"(\"f1\")) AS \"l2\" FROM [u56 AS \"materialize\".\"public\".\"upsert_update_grow\"] GROUP BY \"pg_catalog\".\"left\"(\"f1\", 1), \"pg_catalog\".\"right\"(\"f1\", 1)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(58)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "threshold_table1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"threshold_table1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(59)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "threshold_table2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"threshold_table2\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(60)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "regex_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"regex_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"], \"f2\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(61)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "like_regex_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"like_regex_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"], \"f2\" [s46 AS \"pg_catalog\".\"text\"], \"f3\" [s46 AS \"pg_catalog\".\"text\"], \"f4\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(62)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "peek_persist", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"peek_persist\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(63)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "range_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"range_table\" (\"index\" [s20 AS \"pg_catalog\".\"int4\"], \"i4_range\" [s74 AS \"pg_catalog\".\"int4range\"], \"i8_range\" [s76 AS \"pg_catalog\".\"int8range\"], \"num_range\" [s80 AS \"pg_catalog\".\"numrange\"], \"ts_range\" [s82 AS \"pg_catalog\".\"tsrange\"], \"tstz_range\" [s84 AS \"pg_catalog\".\"tstzrange\"], \"d_range\" [s78 AS \"pg_catalog\".\"daterange\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(64)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "range_source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"range_source_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(65)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "range_source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"range_source\" IN CLUSTER [u14] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-ranges-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE NONE EXPOSE PROGRESS AS [u64 AS \"materialize\".\"public\".\"range_source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(66)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "aws_assume_role", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"aws_assume_role\" TO AWS (ASSUME ROLE ARN = 'assume-role-2', ASSUME ROLE SESSION NAME = 'session-name')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(67)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "aws_secret_access_key", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"aws_secret_access_key\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(68)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "aws_credentials", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"aws_credentials\" TO AWS (ACCESS KEY ID = 'access_key_2', SECRET ACCESS KEY = SECRET [u67 AS \"materialize\".\"public\".\"aws_secret_access_key\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(69)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "null_value_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"null_value_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"] DEFAULT NULL)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(70)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_large_transaction_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"sink_large_transaction_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s46 AS \"pg_catalog\".\"text\"], PRIMARY KEY (\"f1\"))" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(71)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_large_transaction_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"sink_large_transaction_table_primary_idx\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"sink_large_transaction_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(72)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_large_transaction_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"sink_large_transaction_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" - 1 AS \"f1\", \"f2\" FROM [u70 AS \"materialize\".\"public\".\"sink_large_transaction_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(73)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_large_transaction_sink1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_large_transaction_sink1\" IN CLUSTER [u15] FROM [u72 AS \"materialize\".\"public\".\"sink_large_transaction_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-sink-large-transaction-sink-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(74)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pgpass1_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"pgpass1_false\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(75)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg1_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg1_false\" TO POSTGRES (DATABASE = \"postgres\", HOST = 'postgres', PASSWORD = SECRET [u74 AS \"materialize\".\"public\".\"pgpass1_false\"], USER = \"postgres1_false\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(76)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_index_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"alter_index_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(77)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_index_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"alter_index_table_primary_idx\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"alter_index_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(78)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_index_source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"alter_index_source_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(79)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_index_source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"alter_index_source\" IN CLUSTER [u16] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-alter-index-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE NONE EXPOSE PROGRESS AS [u78 AS \"materialize\".\"public\".\"alter_index_source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(80)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_index_source_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"alter_index_source_primary_idx\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"alter_index_source\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(81)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_index_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"rename_index_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(82)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_index_index3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"rename_index_index3\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"rename_index_table\" (\"f2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(83)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_index_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"rename_index_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f2\" FROM [u81 AS \"materialize\".\"public\".\"rename_index_table\"] WHERE \"f2\" > 0" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(84)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_view_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"rename_view_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(85)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_view_viewa3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"rename_view_viewa3\" AS SELECT \"f2\" FROM [u84 AS \"materialize\".\"public\".\"rename_view_table\"] WHERE \"f2\" > 0" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(86)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_view_viewb3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"rename_view_viewb3\" AS SELECT \"f2\" FROM [u85 AS \"materialize\".\"public\".\"rename_view_viewa3\"] WHERE \"f2\" > 0" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(87)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "source_errors_secret", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"source_errors_secret\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(88)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "source_errors_connection", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"source_errors_connection\" TO POSTGRES (DATABASE = \"postgres\", HOST = 'postgres', PASSWORD = SECRET [u87 AS \"materialize\".\"public\".\"source_errors_secret\"], USER = \"source_errors_user1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(89)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "source_errors_tablea", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"source_errors_tablea\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"]) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(90)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "source_errors_sourcea_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"source_errors_sourcea_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(91)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "source_errors_sourcea", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"source_errors_sourcea\" IN CLUSTER [u20] FROM POSTGRES CONNECTION [u88 AS \"materialize\".\"public\".\"source_errors_connection\"] (PUBLICATION = 'source_errors_publicationa', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff0120013001122c6d6174657269616c697a655f35343465613366343066326434393238616264656336356533613035313637371801') FOR TABLES (\"postgres\".\"public\".\"source_errors_table\" AS [u89 AS \"materialize\".\"public\".\"source_errors_tablea\"]) EXPOSE PROGRESS AS [u90 AS \"materialize\".\"public\".\"source_errors_sourcea_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(92)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "source_errors_tableb", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"source_errors_tableb\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"]) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(93)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "source_errors_sourceb_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"source_errors_sourceb_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(94)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "source_errors_sourceb", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"source_errors_sourceb\" IN CLUSTER [u21] FROM POSTGRES CONNECTION [u88 AS \"materialize\".\"public\".\"source_errors_connection\"] (PUBLICATION = 'source_errors_publicationb', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff0120013001122c6d6174657269616c697a655f64656330303732633836653334366561396636383762613035626361323665321801') FOR TABLES (\"postgres\".\"public\".\"source_errors_table\" AS [u92 AS \"materialize\".\"public\".\"source_errors_tableb\"]) EXPOSE PROGRESS AS [u93 AS \"materialize\".\"public\".\"source_errors_sourceb_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(95)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "window_functions_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"window_functions_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(96)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "dataflow_error_retraction_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"dataflow_error_retraction_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(97)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "dataflow_error_retraction_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"dataflow_error_retraction_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\"::[s20 AS \"pg_catalog\".\"int4\"] FROM [u96 AS \"materialize\".\"public\".\"dataflow_error_retraction_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(98)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_index_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"create_index_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"], \"f3\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(99)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "monotonic_top1_source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"monotonic_top1_source_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(100)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "monotonic_top1_source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"monotonic_top1_source\" IN CLUSTER [u22] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-monotonic-top1-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE NONE EXPOSE PROGRESS AS [u99 AS \"materialize\".\"public\".\"monotonic_top1_source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(101)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "wide_rows", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"wide_rows\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(102)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "wide_rows_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"wide_rows_primary_idx\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"wide_rows\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(103)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "cast_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"cast_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(104)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "monotonic_topk_source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"monotonic_topk_source_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(105)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "monotonic_topk_source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"monotonic_topk_source\" IN CLUSTER [u23] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-monotonic-topk-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE NONE EXPOSE PROGRESS AS [u104 AS \"materialize\".\"public\".\"monotonic_topk_source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(106)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(14)) }), name: "<img src=\"x` `<script>javascript:alert(1)</script>\"` `>", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"--\".\"public\".\"<img src=\"\"x` `<script>javascript:alert(1)</script>\"\"` `>\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(107)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(15)) }), name: "File:///", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"--\".\"</script><script>alert(123)</script>\".\"File:///\" (\"<script\\x20type=\"\"text/javascript\"\">javascript:alert(1);</script>\" [s46 AS \"pg_catalog\".\"text\"], \"c2\" [u106 AS \"--\".\"public\".\"<img src=\"\"x` `<script>javascript:alert(1)</script>\"\"` `>\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(108)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(15)) }), name: "1;DROP TABLE users", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"--\".\"</script><script>alert(123)</script>\".\"1;DROP TABLE users\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(\"<script\\x20type=\"\"text/javascript\"\">javascript:alert(1);</script>\") FROM [u107 AS \"--\".\"</script><script>alert(123)</script>\".\"File:///\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(109)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(14)) }), name: "ABC<div style=\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\">DEF", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"--\".\"public\".\"ABC<div style=\"\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\"\">DEF\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(110)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(14)) }), name: "JavaSCript:alert(123)", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"--\".\"public\".\"JavaSCript:alert(123)\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(111)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(14)) }), name: "source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"--\".\"public\".\"source_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(112)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(14)) }), name: "source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"--\".\"public\".\"source\" IN CLUSTER [u24] FROM KAFKA CONNECTION [u109 AS \"--\".\"public\".\"ABC<div style=\"\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\"\">DEF\"] (TOPIC = 'testdrive-sink-source-ident-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u110 AS \"--\".\"public\".\"JavaSCript:alert(123)\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u111 AS \"--\".\"public\".\"source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(113)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(14)) }), name: "<a href=\"\\x17javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"--\".\"public\".\"<a href=\"\"\\x17javascript:javascript:alert(1)\"\" id=\"\"fuzzelement1\"\">test</a>\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"key1\", 2) AS \"l_k\", \"pg_catalog\".\"left\"(\"f1\", 1) AS \"l_v\", \"pg_catalog\".\"count\"(*) AS \"c\" FROM [u112 AS \"--\".\"public\".\"source\"] GROUP BY \"pg_catalog\".\"left\"(\"key1\", 2), \"pg_catalog\".\"left\"(\"f1\", 1)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(114)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(15)) }), name: "ð“ð¡ðž ðªð®ð¢ðœð¤ ð›ð«ð¨ð°ð§ ðŸð¨ð± ð£ð®ð¦ð©ð¬ ð¨ð¯ðžð« ð­ð¡ðž ð¥ðšð³ð² ðð¨ð ", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"--\".\"</script><script>alert(123)</script>\".\"ð“ð¡ðž ðªð®ð¢ðœð¤ ð›ð«ð¨ð°ð§ ðŸð¨ð± ð£ð®ð¦ð©ð¬ ð¨ð¯ðžð« ð­ð¡ðž ð¥ðšð³ð² ðð¨ð \" IN CLUSTER [u24] FROM [u113 AS \"--\".\"public\".\"<a href=\"\"\\x17javascript:javascript:alert(1)\"\" id=\"\"fuzzelement1\"\">test</a>\"] INTO KAFKA CONNECTION [u109 AS \"--\".\"public\".\"ABC<div style=\"\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\"\">DEF\"] (TOPIC = 'sink-sink-ident0') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u110 AS \"--\".\"public\".\"JavaSCript:alert(123)\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(115)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(14)) }), name: "<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"--\".\"public\".\"<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(116)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "temporal_types", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"temporal_types\" (\"date_col\" [s14 AS \"pg_catalog\".\"date\"], \"time_col\" [s48 AS \"pg_catalog\".\"time\"], \"timestamp_col\" [s50 AS \"pg_catalog\".\"timestamp\"], \"timestamptz_col\" [s52 AS \"pg_catalog\".\"timestamptz\"], \"interval_col\" [s24 AS \"pg_catalog\".\"interval\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(117)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn_alter_connection_2a", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn_alter_connection_2a\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(118)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_2a_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"alter_connection_source_2a_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(119)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_2a", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"alter_connection_source_2a\" IN CLUSTER [u25] FROM KAFKA CONNECTION [u117 AS \"materialize\".\"public\".\"kafka_conn_alter_connection_2a\"] (TOPIC = 'testdrive-alter-connection-2a-1') FORMAT TEXT ENVELOPE NONE EXPOSE PROGRESS AS [u118 AS \"materialize\".\"public\".\"alter_connection_source_2a_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(120)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_table_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"alter_connection_table_2\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], PRIMARY KEY (\"f1\"))" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(121)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mv_alter_connection_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"mv_alter_connection_2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" FROM [u120 AS \"materialize\".\"public\".\"alter_connection_table_2\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(122)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_sink_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"alter_connection_sink_2\" IN CLUSTER [u26] FROM [u121 AS \"materialize\".\"public\".\"mv_alter_connection_2\"] INTO KAFKA CONNECTION [u117 AS \"materialize\".\"public\".\"kafka_conn_alter_connection_2a\"] (TOPIC = 'testdrive-alter-connection-sink-2-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(123)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "not_null_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"not_null_table\" (\"x\" [s20 AS \"pg_catalog\".\"int4\"], \"y\" [s20 AS \"pg_catalog\".\"int4\"], \"z\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(124)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "not_null_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"not_null_view1\" IN CLUSTER [u1] WITH (ASSERT NOT NULL = \"x\", REFRESH = ON COMMIT) AS SELECT * FROM [u123 AS \"materialize\".\"public\".\"not_null_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(125)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "webhook_text", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"webhook_text\" IN CLUSTER [u27] FROM WEBHOOK BODY FORMAT TEXT" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(126)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "webhook_json", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"webhook_json\" IN CLUSTER [u27] FROM WEBHOOK BODY FORMAT JSON INCLUDE HEADERS" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(127)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "webhook_bytes", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"webhook_bytes\" IN CLUSTER [u27] FROM WEBHOOK BODY FORMAT BYTES" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(128)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_value_columns_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_many_value_columns_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(129)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_value_columns", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_many_value_columns\" IN CLUSTER [u28] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-many-value-columns-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"},{\"name\":\"f2\",\"type\":\"string\"},{\"name\":\"f3\",\"type\":\"string\"},{\"name\":\"f4\",\"type\":\"string\"},{\"name\":\"f5\",\"type\":\"string\"},{\"name\":\"f6\",\"type\":\"string\"},{\"name\":\"f7\",\"type\":\"string\"},{\"name\":\"f8\",\"type\":\"string\"},{\"name\":\"f9\",\"type\":\"string\"},{\"name\":\"f10\",\"type\":\"string\"},{\"name\":\"f11\",\"type\":\"string\"},{\"name\":\"f12\",\"type\":\"string\"},{\"name\":\"f13\",\"type\":\"string\"},{\"name\":\"f14\",\"type\":\"string\"},{\"name\":\"f15\",\"type\":\"string\"},{\"name\":\"f16\",\"type\":\"string\"},{\"name\":\"f17\",\"type\":\"string\"},{\"name\":\"f18\",\"type\":\"string\"},{\"name\":\"f19\",\"type\":\"string\"},{\"name\":\"f20\",\"type\":\"string\"},{\"name\":\"f21\",\"type\":\"string\"},{\"name\":\"f22\",\"type\":\"string\"},{\"name\":\"f23\",\"type\":\"string\"},{\"name\":\"f24\",\"type\":\"string\"},{\"name\":\"f25\",\"type\":\"string\"},{\"name\":\"f26\",\"type\":\"string\"},{\"name\":\"f27\",\"type\":\"string\"},{\"name\":\"f28\",\"type\":\"string\"},{\"name\":\"f29\",\"type\":\"string\"},{\"name\":\"f30\",\"type\":\"string\"},{\"name\":\"f31\",\"type\":\"string\"},{\"name\":\"f32\",\"type\":\"string\"},{\"name\":\"f33\",\"type\":\"string\"},{\"name\":\"f34\",\"type\":\"string\"},{\"name\":\"f35\",\"type\":\"string\"},{\"name\":\"f36\",\"type\":\"string\"},{\"name\":\"f37\",\"type\":\"string\"},{\"name\":\"f38\",\"type\":\"string\"},{\"name\":\"f39\",\"type\":\"string\"},{\"name\":\"f40\",\"type\":\"string\"},{\"name\":\"f41\",\"type\":\"string\"},{\"name\":\"f42\",\"type\":\"string\"},{\"name\":\"f43\",\"type\":\"string\"},{\"name\":\"f44\",\"type\":\"string\"},{\"name\":\"f45\",\"type\":\"string\"},{\"name\":\"f46\",\"type\":\"string\"},{\"name\":\"f47\",\"type\":\"string\"},{\"name\":\"f48\",\"type\":\"string\"},{\"name\":\"f49\",\"type\":\"string\"},{\"name\":\"f50\",\"type\":\"string\"},{\"name\":\"f51\",\"type\":\"string\"},{\"name\":\"f52\",\"type\":\"string\"},{\"name\":\"f53\",\"type\":\"string\"},{\"name\":\"f54\",\"type\":\"string\"},{\"name\":\"f55\",\"type\":\"string\"},{\"name\":\"f56\",\"type\":\"string\"},{\"name\":\"f57\",\"type\":\"string\"},{\"name\":\"f58\",\"type\":\"string\"},{\"name\":\"f59\",\"type\":\"string\"},{\"name\":\"f60\",\"type\":\"string\"},{\"name\":\"f61\",\"type\":\"string\"},{\"name\":\"f62\",\"type\":\"string\"},{\"name\":\"f63\",\"type\":\"string\"},{\"name\":\"f64\",\"type\":\"string\"},{\"name\":\"f65\",\"type\":\"string\"},{\"name\":\"f66\",\"type\":\"string\"},{\"name\":\"f67\",\"type\":\"string\"},{\"name\":\"f68\",\"type\":\"string\"},{\"name\":\"f69\",\"type\":\"string\"},{\"name\":\"f70\",\"type\":\"string\"},{\"name\":\"f71\",\"type\":\"string\"},{\"name\":\"f72\",\"type\":\"string\"},{\"name\":\"f73\",\"type\":\"string\"},{\"name\":\"f74\",\"type\":\"string\"},{\"name\":\"f75\",\"type\":\"string\"},{\"name\":\"f76\",\"type\":\"string\"},{\"name\":\"f77\",\"type\":\"string\"},{\"name\":\"f78\",\"type\":\"string\"},{\"name\":\"f79\",\"type\":\"string\"},{\"name\":\"f80\",\"type\":\"string\"},{\"name\":\"f81\",\"type\":\"string\"},{\"name\":\"f82\",\"type\":\"string\"},{\"name\":\"f83\",\"type\":\"string\"},{\"name\":\"f84\",\"type\":\"string\"},{\"name\":\"f85\",\"type\":\"string\"},{\"name\":\"f86\",\"type\":\"string\"},{\"name\":\"f87\",\"type\":\"string\"},{\"name\":\"f88\",\"type\":\"string\"},{\"name\":\"f89\",\"type\":\"string\"},{\"name\":\"f90\",\"type\":\"string\"},{\"name\":\"f91\",\"type\":\"string\"},{\"name\":\"f92\",\"type\":\"string\"},{\"name\":\"f93\",\"type\":\"string\"},{\"name\":\"f94\",\"type\":\"string\"},{\"name\":\"f95\",\"type\":\"string\"},{\"name\":\"f96\",\"type\":\"string\"},{\"name\":\"f97\",\"type\":\"string\"},{\"name\":\"f98\",\"type\":\"string\"},{\"name\":\"f99\",\"type\":\"string\"},{\"name\":\"f100\",\"type\":\"string\"},{\"name\":\"f101\",\"type\":\"string\"},{\"name\":\"f102\",\"type\":\"string\"},{\"name\":\"f103\",\"type\":\"string\"},{\"name\":\"f104\",\"type\":\"string\"},{\"name\":\"f105\",\"type\":\"string\"},{\"name\":\"f106\",\"type\":\"string\"},{\"name\":\"f107\",\"type\":\"string\"},{\"name\":\"f108\",\"type\":\"string\"},{\"name\":\"f109\",\"type\":\"string\"},{\"name\":\"f110\",\"type\":\"string\"},{\"name\":\"f111\",\"type\":\"string\"},{\"name\":\"f112\",\"type\":\"string\"},{\"name\":\"f113\",\"type\":\"string\"},{\"name\":\"f114\",\"type\":\"string\"},{\"name\":\"f115\",\"type\":\"string\"},{\"name\":\"f116\",\"type\":\"string\"},{\"name\":\"f117\",\"type\":\"string\"},{\"name\":\"f118\",\"type\":\"string\"},{\"name\":\"f119\",\"type\":\"string\"},{\"name\":\"f120\",\"type\":\"string\"},{\"name\":\"f121\",\"type\":\"string\"},{\"name\":\"f122\",\"type\":\"string\"},{\"name\":\"f123\",\"type\":\"string\"},{\"name\":\"f124\",\"type\":\"string\"},{\"name\":\"f125\",\"type\":\"string\"},{\"name\":\"f126\",\"type\":\"string\"},{\"name\":\"f127\",\"type\":\"string\"},{\"name\":\"f128\",\"type\":\"string\"},{\"name\":\"f129\",\"type\":\"string\"},{\"name\":\"f130\",\"type\":\"string\"},{\"name\":\"f131\",\"type\":\"string\"},{\"name\":\"f132\",\"type\":\"string\"},{\"name\":\"f133\",\"type\":\"string\"},{\"name\":\"f134\",\"type\":\"string\"},{\"name\":\"f135\",\"type\":\"string\"},{\"name\":\"f136\",\"type\":\"string\"},{\"name\":\"f137\",\"type\":\"string\"},{\"name\":\"f138\",\"type\":\"string\"},{\"name\":\"f139\",\"type\":\"string\"},{\"name\":\"f140\",\"type\":\"string\"},{\"name\":\"f141\",\"type\":\"string\"},{\"name\":\"f142\",\"type\":\"string\"},{\"name\":\"f143\",\"type\":\"string\"},{\"name\":\"f144\",\"type\":\"string\"},{\"name\":\"f145\",\"type\":\"string\"},{\"name\":\"f146\",\"type\":\"string\"},{\"name\":\"f147\",\"type\":\"string\"},{\"name\":\"f148\",\"type\":\"string\"},{\"name\":\"f149\",\"type\":\"string\"},{\"name\":\"f150\",\"type\":\"string\"},{\"name\":\"f151\",\"type\":\"string\"},{\"name\":\"f152\",\"type\":\"string\"},{\"name\":\"f153\",\"type\":\"string\"},{\"name\":\"f154\",\"type\":\"string\"},{\"name\":\"f155\",\"type\":\"string\"},{\"name\":\"f156\",\"type\":\"string\"},{\"name\":\"f157\",\"type\":\"string\"},{\"name\":\"f158\",\"type\":\"string\"},{\"name\":\"f159\",\"type\":\"string\"},{\"name\":\"f160\",\"type\":\"string\"},{\"name\":\"f161\",\"type\":\"string\"},{\"name\":\"f162\",\"type\":\"string\"},{\"name\":\"f163\",\"type\":\"string\"},{\"name\":\"f164\",\"type\":\"string\"},{\"name\":\"f165\",\"type\":\"string\"},{\"name\":\"f166\",\"type\":\"string\"},{\"name\":\"f167\",\"type\":\"string\"},{\"name\":\"f168\",\"type\":\"string\"},{\"name\":\"f169\",\"type\":\"string\"},{\"name\":\"f170\",\"type\":\"string\"},{\"name\":\"f171\",\"type\":\"string\"},{\"name\":\"f172\",\"type\":\"string\"},{\"name\":\"f173\",\"type\":\"string\"},{\"name\":\"f174\",\"type\":\"string\"},{\"name\":\"f175\",\"type\":\"string\"},{\"name\":\"f176\",\"type\":\"string\"},{\"name\":\"f177\",\"type\":\"string\"},{\"name\":\"f178\",\"type\":\"string\"},{\"name\":\"f179\",\"type\":\"string\"},{\"name\":\"f180\",\"type\":\"string\"},{\"name\":\"f181\",\"type\":\"string\"},{\"name\":\"f182\",\"type\":\"string\"},{\"name\":\"f183\",\"type\":\"string\"},{\"name\":\"f184\",\"type\":\"string\"},{\"name\":\"f185\",\"type\":\"string\"},{\"name\":\"f186\",\"type\":\"string\"},{\"name\":\"f187\",\"type\":\"string\"},{\"name\":\"f188\",\"type\":\"string\"},{\"name\":\"f189\",\"type\":\"string\"},{\"name\":\"f190\",\"type\":\"string\"},{\"name\":\"f191\",\"type\":\"string\"},{\"name\":\"f192\",\"type\":\"string\"},{\"name\":\"f193\",\"type\":\"string\"},{\"name\":\"f194\",\"type\":\"string\"},{\"name\":\"f195\",\"type\":\"string\"},{\"name\":\"f196\",\"type\":\"string\"},{\"name\":\"f197\",\"type\":\"string\"},{\"name\":\"f198\",\"type\":\"string\"},{\"name\":\"f199\",\"type\":\"string\"},{\"name\":\"f200\",\"type\":\"string\"},{\"name\":\"f201\",\"type\":\"string\"},{\"name\":\"f202\",\"type\":\"string\"},{\"name\":\"f203\",\"type\":\"string\"},{\"name\":\"f204\",\"type\":\"string\"},{\"name\":\"f205\",\"type\":\"string\"},{\"name\":\"f206\",\"type\":\"string\"},{\"name\":\"f207\",\"type\":\"string\"},{\"name\":\"f208\",\"type\":\"string\"},{\"name\":\"f209\",\"type\":\"string\"},{\"name\":\"f210\",\"type\":\"string\"},{\"name\":\"f211\",\"type\":\"string\"},{\"name\":\"f212\",\"type\":\"string\"},{\"name\":\"f213\",\"type\":\"string\"},{\"name\":\"f214\",\"type\":\"string\"},{\"name\":\"f215\",\"type\":\"string\"},{\"name\":\"f216\",\"type\":\"string\"},{\"name\":\"f217\",\"type\":\"string\"},{\"name\":\"f218\",\"type\":\"string\"},{\"name\":\"f219\",\"type\":\"string\"},{\"name\":\"f220\",\"type\":\"string\"},{\"name\":\"f221\",\"type\":\"string\"},{\"name\":\"f222\",\"type\":\"string\"},{\"name\":\"f223\",\"type\":\"string\"},{\"name\":\"f224\",\"type\":\"string\"},{\"name\":\"f225\",\"type\":\"string\"},{\"name\":\"f226\",\"type\":\"string\"},{\"name\":\"f227\",\"type\":\"string\"},{\"name\":\"f228\",\"type\":\"string\"},{\"name\":\"f229\",\"type\":\"string\"},{\"name\":\"f230\",\"type\":\"string\"},{\"name\":\"f231\",\"type\":\"string\"},{\"name\":\"f232\",\"type\":\"string\"},{\"name\":\"f233\",\"type\":\"string\"},{\"name\":\"f234\",\"type\":\"string\"},{\"name\":\"f235\",\"type\":\"string\"},{\"name\":\"f236\",\"type\":\"string\"},{\"name\":\"f237\",\"type\":\"string\"},{\"name\":\"f238\",\"type\":\"string\"},{\"name\":\"f239\",\"type\":\"string\"},{\"name\":\"f240\",\"type\":\"string\"},{\"name\":\"f241\",\"type\":\"string\"},{\"name\":\"f242\",\"type\":\"string\"},{\"name\":\"f243\",\"type\":\"string\"},{\"name\":\"f244\",\"type\":\"string\"},{\"name\":\"f245\",\"type\":\"string\"},{\"name\":\"f246\",\"type\":\"string\"},{\"name\":\"f247\",\"type\":\"string\"},{\"name\":\"f248\",\"type\":\"string\"},{\"name\":\"f249\",\"type\":\"string\"},{\"name\":\"f250\",\"type\":\"string\"},{\"name\":\"f251\",\"type\":\"string\"},{\"name\":\"f252\",\"type\":\"string\"},{\"name\":\"f253\",\"type\":\"string\"},{\"name\":\"f254\",\"type\":\"string\"},{\"name\":\"f255\",\"type\":\"string\"},{\"name\":\"f256\",\"type\":\"string\"},{\"name\":\"f257\",\"type\":\"string\"},{\"name\":\"f258\",\"type\":\"string\"},{\"name\":\"f259\",\"type\":\"string\"},{\"name\":\"f260\",\"type\":\"string\"},{\"name\":\"f261\",\"type\":\"string\"},{\"name\":\"f262\",\"type\":\"string\"},{\"name\":\"f263\",\"type\":\"string\"},{\"name\":\"f264\",\"type\":\"string\"},{\"name\":\"f265\",\"type\":\"string\"},{\"name\":\"f266\",\"type\":\"string\"},{\"name\":\"f267\",\"type\":\"string\"},{\"name\":\"f268\",\"type\":\"string\"},{\"name\":\"f269\",\"type\":\"string\"},{\"name\":\"f270\",\"type\":\"string\"},{\"name\":\"f271\",\"type\":\"string\"},{\"name\":\"f272\",\"type\":\"string\"},{\"name\":\"f273\",\"type\":\"string\"},{\"name\":\"f274\",\"type\":\"string\"},{\"name\":\"f275\",\"type\":\"string\"},{\"name\":\"f276\",\"type\":\"string\"},{\"name\":\"f277\",\"type\":\"string\"},{\"name\":\"f278\",\"type\":\"string\"},{\"name\":\"f279\",\"type\":\"string\"},{\"name\":\"f280\",\"type\":\"string\"},{\"name\":\"f281\",\"type\":\"string\"},{\"name\":\"f282\",\"type\":\"string\"},{\"name\":\"f283\",\"type\":\"string\"},{\"name\":\"f284\",\"type\":\"string\"},{\"name\":\"f285\",\"type\":\"string\"},{\"name\":\"f286\",\"type\":\"string\"},{\"name\":\"f287\",\"type\":\"string\"},{\"name\":\"f288\",\"type\":\"string\"},{\"name\":\"f289\",\"type\":\"string\"},{\"name\":\"f290\",\"type\":\"string\"},{\"name\":\"f291\",\"type\":\"string\"},{\"name\":\"f292\",\"type\":\"string\"},{\"name\":\"f293\",\"type\":\"string\"},{\"name\":\"f294\",\"type\":\"string\"},{\"name\":\"f295\",\"type\":\"string\"},{\"name\":\"f296\",\"type\":\"string\"},{\"name\":\"f297\",\"type\":\"string\"},{\"name\":\"f298\",\"type\":\"string\"},{\"name\":\"f299\",\"type\":\"string\"},{\"name\":\"f300\",\"type\":\"string\"},{\"name\":\"f301\",\"type\":\"string\"},{\"name\":\"f302\",\"type\":\"string\"},{\"name\":\"f303\",\"type\":\"string\"},{\"name\":\"f304\",\"type\":\"string\"},{\"name\":\"f305\",\"type\":\"string\"},{\"name\":\"f306\",\"type\":\"string\"},{\"name\":\"f307\",\"type\":\"string\"},{\"name\":\"f308\",\"type\":\"string\"},{\"name\":\"f309\",\"type\":\"string\"},{\"name\":\"f310\",\"type\":\"string\"},{\"name\":\"f311\",\"type\":\"string\"},{\"name\":\"f312\",\"type\":\"string\"},{\"name\":\"f313\",\"type\":\"string\"},{\"name\":\"f314\",\"type\":\"string\"},{\"name\":\"f315\",\"type\":\"string\"},{\"name\":\"f316\",\"type\":\"string\"},{\"name\":\"f317\",\"type\":\"string\"},{\"name\":\"f318\",\"type\":\"string\"},{\"name\":\"f319\",\"type\":\"string\"},{\"name\":\"f320\",\"type\":\"string\"},{\"name\":\"f321\",\"type\":\"string\"},{\"name\":\"f322\",\"type\":\"string\"},{\"name\":\"f323\",\"type\":\"string\"},{\"name\":\"f324\",\"type\":\"string\"},{\"name\":\"f325\",\"type\":\"string\"},{\"name\":\"f326\",\"type\":\"string\"},{\"name\":\"f327\",\"type\":\"string\"},{\"name\":\"f328\",\"type\":\"string\"},{\"name\":\"f329\",\"type\":\"string\"},{\"name\":\"f330\",\"type\":\"string\"},{\"name\":\"f331\",\"type\":\"string\"},{\"name\":\"f332\",\"type\":\"string\"},{\"name\":\"f333\",\"type\":\"string\"},{\"name\":\"f334\",\"type\":\"string\"},{\"name\":\"f335\",\"type\":\"string\"},{\"name\":\"f336\",\"type\":\"string\"},{\"name\":\"f337\",\"type\":\"string\"},{\"name\":\"f338\",\"type\":\"string\"},{\"name\":\"f339\",\"type\":\"string\"},{\"name\":\"f340\",\"type\":\"string\"},{\"name\":\"f341\",\"type\":\"string\"},{\"name\":\"f342\",\"type\":\"string\"},{\"name\":\"f343\",\"type\":\"string\"},{\"name\":\"f344\",\"type\":\"string\"},{\"name\":\"f345\",\"type\":\"string\"},{\"name\":\"f346\",\"type\":\"string\"},{\"name\":\"f347\",\"type\":\"string\"},{\"name\":\"f348\",\"type\":\"string\"},{\"name\":\"f349\",\"type\":\"string\"},{\"name\":\"f350\",\"type\":\"string\"},{\"name\":\"f351\",\"type\":\"string\"},{\"name\":\"f352\",\"type\":\"string\"},{\"name\":\"f353\",\"type\":\"string\"},{\"name\":\"f354\",\"type\":\"string\"},{\"name\":\"f355\",\"type\":\"string\"},{\"name\":\"f356\",\"type\":\"string\"},{\"name\":\"f357\",\"type\":\"string\"},{\"name\":\"f358\",\"type\":\"string\"},{\"name\":\"f359\",\"type\":\"string\"},{\"name\":\"f360\",\"type\":\"string\"},{\"name\":\"f361\",\"type\":\"string\"},{\"name\":\"f362\",\"type\":\"string\"},{\"name\":\"f363\",\"type\":\"string\"},{\"name\":\"f364\",\"type\":\"string\"},{\"name\":\"f365\",\"type\":\"string\"},{\"name\":\"f366\",\"type\":\"string\"},{\"name\":\"f367\",\"type\":\"string\"},{\"name\":\"f368\",\"type\":\"string\"},{\"name\":\"f369\",\"type\":\"string\"},{\"name\":\"f370\",\"type\":\"string\"},{\"name\":\"f371\",\"type\":\"string\"},{\"name\":\"f372\",\"type\":\"string\"},{\"name\":\"f373\",\"type\":\"string\"},{\"name\":\"f374\",\"type\":\"string\"},{\"name\":\"f375\",\"type\":\"string\"},{\"name\":\"f376\",\"type\":\"string\"},{\"name\":\"f377\",\"type\":\"string\"},{\"name\":\"f378\",\"type\":\"string\"},{\"name\":\"f379\",\"type\":\"string\"},{\"name\":\"f380\",\"type\":\"string\"},{\"name\":\"f381\",\"type\":\"string\"},{\"name\":\"f382\",\"type\":\"string\"},{\"name\":\"f383\",\"type\":\"string\"},{\"name\":\"f384\",\"type\":\"string\"},{\"name\":\"f385\",\"type\":\"string\"},{\"name\":\"f386\",\"type\":\"string\"},{\"name\":\"f387\",\"type\":\"string\"},{\"name\":\"f388\",\"type\":\"string\"},{\"name\":\"f389\",\"type\":\"string\"},{\"name\":\"f390\",\"type\":\"string\"},{\"name\":\"f391\",\"type\":\"string\"},{\"name\":\"f392\",\"type\":\"string\"},{\"name\":\"f393\",\"type\":\"string\"},{\"name\":\"f394\",\"type\":\"string\"},{\"name\":\"f395\",\"type\":\"string\"},{\"name\":\"f396\",\"type\":\"string\"},{\"name\":\"f397\",\"type\":\"string\"},{\"name\":\"f398\",\"type\":\"string\"},{\"name\":\"f399\",\"type\":\"string\"},{\"name\":\"f400\",\"type\":\"string\"},{\"name\":\"f401\",\"type\":\"string\"},{\"name\":\"f402\",\"type\":\"string\"},{\"name\":\"f403\",\"type\":\"string\"},{\"name\":\"f404\",\"type\":\"string\"},{\"name\":\"f405\",\"type\":\"string\"},{\"name\":\"f406\",\"type\":\"string\"},{\"name\":\"f407\",\"type\":\"string\"},{\"name\":\"f408\",\"type\":\"string\"},{\"name\":\"f409\",\"type\":\"string\"},{\"name\":\"f410\",\"type\":\"string\"},{\"name\":\"f411\",\"type\":\"string\"},{\"name\":\"f412\",\"type\":\"string\"},{\"name\":\"f413\",\"type\":\"string\"},{\"name\":\"f414\",\"type\":\"string\"},{\"name\":\"f415\",\"type\":\"string\"},{\"name\":\"f416\",\"type\":\"string\"},{\"name\":\"f417\",\"type\":\"string\"},{\"name\":\"f418\",\"type\":\"string\"},{\"name\":\"f419\",\"type\":\"string\"},{\"name\":\"f420\",\"type\":\"string\"},{\"name\":\"f421\",\"type\":\"string\"},{\"name\":\"f422\",\"type\":\"string\"},{\"name\":\"f423\",\"type\":\"string\"},{\"name\":\"f424\",\"type\":\"string\"},{\"name\":\"f425\",\"type\":\"string\"},{\"name\":\"f426\",\"type\":\"string\"},{\"name\":\"f427\",\"type\":\"string\"},{\"name\":\"f428\",\"type\":\"string\"},{\"name\":\"f429\",\"type\":\"string\"},{\"name\":\"f430\",\"type\":\"string\"},{\"name\":\"f431\",\"type\":\"string\"},{\"name\":\"f432\",\"type\":\"string\"},{\"name\":\"f433\",\"type\":\"string\"},{\"name\":\"f434\",\"type\":\"string\"},{\"name\":\"f435\",\"type\":\"string\"},{\"name\":\"f436\",\"type\":\"string\"},{\"name\":\"f437\",\"type\":\"string\"},{\"name\":\"f438\",\"type\":\"string\"},{\"name\":\"f439\",\"type\":\"string\"},{\"name\":\"f440\",\"type\":\"string\"},{\"name\":\"f441\",\"type\":\"string\"},{\"name\":\"f442\",\"type\":\"string\"},{\"name\":\"f443\",\"type\":\"string\"},{\"name\":\"f444\",\"type\":\"string\"},{\"name\":\"f445\",\"type\":\"string\"},{\"name\":\"f446\",\"type\":\"string\"},{\"name\":\"f447\",\"type\":\"string\"},{\"name\":\"f448\",\"type\":\"string\"},{\"name\":\"f449\",\"type\":\"string\"},{\"name\":\"f450\",\"type\":\"string\"},{\"name\":\"f451\",\"type\":\"string\"},{\"name\":\"f452\",\"type\":\"string\"},{\"name\":\"f453\",\"type\":\"string\"},{\"name\":\"f454\",\"type\":\"string\"},{\"name\":\"f455\",\"type\":\"string\"},{\"name\":\"f456\",\"type\":\"string\"},{\"name\":\"f457\",\"type\":\"string\"},{\"name\":\"f458\",\"type\":\"string\"},{\"name\":\"f459\",\"type\":\"string\"},{\"name\":\"f460\",\"type\":\"string\"},{\"name\":\"f461\",\"type\":\"string\"},{\"name\":\"f462\",\"type\":\"string\"},{\"name\":\"f463\",\"type\":\"string\"},{\"name\":\"f464\",\"type\":\"string\"},{\"name\":\"f465\",\"type\":\"string\"},{\"name\":\"f466\",\"type\":\"string\"},{\"name\":\"f467\",\"type\":\"string\"},{\"name\":\"f468\",\"type\":\"string\"},{\"name\":\"f469\",\"type\":\"string\"},{\"name\":\"f470\",\"type\":\"string\"},{\"name\":\"f471\",\"type\":\"string\"},{\"name\":\"f472\",\"type\":\"string\"},{\"name\":\"f473\",\"type\":\"string\"},{\"name\":\"f474\",\"type\":\"string\"},{\"name\":\"f475\",\"type\":\"string\"},{\"name\":\"f476\",\"type\":\"string\"},{\"name\":\"f477\",\"type\":\"string\"},{\"name\":\"f478\",\"type\":\"string\"},{\"name\":\"f479\",\"type\":\"string\"},{\"name\":\"f480\",\"type\":\"string\"},{\"name\":\"f481\",\"type\":\"string\"},{\"name\":\"f482\",\"type\":\"string\"},{\"name\":\"f483\",\"type\":\"string\"},{\"name\":\"f484\",\"type\":\"string\"},{\"name\":\"f485\",\"type\":\"string\"},{\"name\":\"f486\",\"type\":\"string\"},{\"name\":\"f487\",\"type\":\"string\"},{\"name\":\"f488\",\"type\":\"string\"},{\"name\":\"f489\",\"type\":\"string\"},{\"name\":\"f490\",\"type\":\"string\"},{\"name\":\"f491\",\"type\":\"string\"},{\"name\":\"f492\",\"type\":\"string\"},{\"name\":\"f493\",\"type\":\"string\"},{\"name\":\"f494\",\"type\":\"string\"},{\"name\":\"f495\",\"type\":\"string\"},{\"name\":\"f496\",\"type\":\"string\"},{\"name\":\"f497\",\"type\":\"string\"},{\"name\":\"f498\",\"type\":\"string\"},{\"name\":\"f499\",\"type\":\"string\"},{\"name\":\"f500\",\"type\":\"string\"},{\"name\":\"f501\",\"type\":\"string\"},{\"name\":\"f502\",\"type\":\"string\"},{\"name\":\"f503\",\"type\":\"string\"},{\"name\":\"f504\",\"type\":\"string\"},{\"name\":\"f505\",\"type\":\"string\"},{\"name\":\"f506\",\"type\":\"string\"},{\"name\":\"f507\",\"type\":\"string\"},{\"name\":\"f508\",\"type\":\"string\"},{\"name\":\"f509\",\"type\":\"string\"},{\"name\":\"f510\",\"type\":\"string\"},{\"name\":\"f511\",\"type\":\"string\"},{\"name\":\"f512\",\"type\":\"string\"},{\"name\":\"f513\",\"type\":\"string\"},{\"name\":\"f514\",\"type\":\"string\"},{\"name\":\"f515\",\"type\":\"string\"},{\"name\":\"f516\",\"type\":\"string\"},{\"name\":\"f517\",\"type\":\"string\"},{\"name\":\"f518\",\"type\":\"string\"},{\"name\":\"f519\",\"type\":\"string\"},{\"name\":\"f520\",\"type\":\"string\"},{\"name\":\"f521\",\"type\":\"string\"},{\"name\":\"f522\",\"type\":\"string\"},{\"name\":\"f523\",\"type\":\"string\"},{\"name\":\"f524\",\"type\":\"string\"},{\"name\":\"f525\",\"type\":\"string\"},{\"name\":\"f526\",\"type\":\"string\"},{\"name\":\"f527\",\"type\":\"string\"},{\"name\":\"f528\",\"type\":\"string\"},{\"name\":\"f529\",\"type\":\"string\"},{\"name\":\"f530\",\"type\":\"string\"},{\"name\":\"f531\",\"type\":\"string\"},{\"name\":\"f532\",\"type\":\"string\"},{\"name\":\"f533\",\"type\":\"string\"},{\"name\":\"f534\",\"type\":\"string\"},{\"name\":\"f535\",\"type\":\"string\"},{\"name\":\"f536\",\"type\":\"string\"},{\"name\":\"f537\",\"type\":\"string\"},{\"name\":\"f538\",\"type\":\"string\"},{\"name\":\"f539\",\"type\":\"string\"},{\"name\":\"f540\",\"type\":\"string\"},{\"name\":\"f541\",\"type\":\"string\"},{\"name\":\"f542\",\"type\":\"string\"},{\"name\":\"f543\",\"type\":\"string\"},{\"name\":\"f544\",\"type\":\"string\"},{\"name\":\"f545\",\"type\":\"string\"},{\"name\":\"f546\",\"type\":\"string\"},{\"name\":\"f547\",\"type\":\"string\"},{\"name\":\"f548\",\"type\":\"string\"},{\"name\":\"f549\",\"type\":\"string\"},{\"name\":\"f550\",\"type\":\"string\"},{\"name\":\"f551\",\"type\":\"string\"},{\"name\":\"f552\",\"type\":\"string\"},{\"name\":\"f553\",\"type\":\"string\"},{\"name\":\"f554\",\"type\":\"string\"},{\"name\":\"f555\",\"type\":\"string\"},{\"name\":\"f556\",\"type\":\"string\"},{\"name\":\"f557\",\"type\":\"string\"},{\"name\":\"f558\",\"type\":\"string\"},{\"name\":\"f559\",\"type\":\"string\"},{\"name\":\"f560\",\"type\":\"string\"},{\"name\":\"f561\",\"type\":\"string\"},{\"name\":\"f562\",\"type\":\"string\"},{\"name\":\"f563\",\"type\":\"string\"},{\"name\":\"f564\",\"type\":\"string\"},{\"name\":\"f565\",\"type\":\"string\"},{\"name\":\"f566\",\"type\":\"string\"},{\"name\":\"f567\",\"type\":\"string\"},{\"name\":\"f568\",\"type\":\"string\"},{\"name\":\"f569\",\"type\":\"string\"},{\"name\":\"f570\",\"type\":\"string\"},{\"name\":\"f571\",\"type\":\"string\"},{\"name\":\"f572\",\"type\":\"string\"},{\"name\":\"f573\",\"type\":\"string\"},{\"name\":\"f574\",\"type\":\"string\"},{\"name\":\"f575\",\"type\":\"string\"},{\"name\":\"f576\",\"type\":\"string\"},{\"name\":\"f577\",\"type\":\"string\"},{\"name\":\"f578\",\"type\":\"string\"},{\"name\":\"f579\",\"type\":\"string\"},{\"name\":\"f580\",\"type\":\"string\"},{\"name\":\"f581\",\"type\":\"string\"},{\"name\":\"f582\",\"type\":\"string\"},{\"name\":\"f583\",\"type\":\"string\"},{\"name\":\"f584\",\"type\":\"string\"},{\"name\":\"f585\",\"type\":\"string\"},{\"name\":\"f586\",\"type\":\"string\"},{\"name\":\"f587\",\"type\":\"string\"},{\"name\":\"f588\",\"type\":\"string\"},{\"name\":\"f589\",\"type\":\"string\"},{\"name\":\"f590\",\"type\":\"string\"},{\"name\":\"f591\",\"type\":\"string\"},{\"name\":\"f592\",\"type\":\"string\"},{\"name\":\"f593\",\"type\":\"string\"},{\"name\":\"f594\",\"type\":\"string\"},{\"name\":\"f595\",\"type\":\"string\"},{\"name\":\"f596\",\"type\":\"string\"},{\"name\":\"f597\",\"type\":\"string\"},{\"name\":\"f598\",\"type\":\"string\"},{\"name\":\"f599\",\"type\":\"string\"},{\"name\":\"f600\",\"type\":\"string\"},{\"name\":\"f601\",\"type\":\"string\"},{\"name\":\"f602\",\"type\":\"string\"},{\"name\":\"f603\",\"type\":\"string\"},{\"name\":\"f604\",\"type\":\"string\"},{\"name\":\"f605\",\"type\":\"string\"},{\"name\":\"f606\",\"type\":\"string\"},{\"name\":\"f607\",\"type\":\"string\"},{\"name\":\"f608\",\"type\":\"string\"},{\"name\":\"f609\",\"type\":\"string\"},{\"name\":\"f610\",\"type\":\"string\"},{\"name\":\"f611\",\"type\":\"string\"},{\"name\":\"f612\",\"type\":\"string\"},{\"name\":\"f613\",\"type\":\"string\"},{\"name\":\"f614\",\"type\":\"string\"},{\"name\":\"f615\",\"type\":\"string\"},{\"name\":\"f616\",\"type\":\"string\"},{\"name\":\"f617\",\"type\":\"string\"},{\"name\":\"f618\",\"type\":\"string\"},{\"name\":\"f619\",\"type\":\"string\"},{\"name\":\"f620\",\"type\":\"string\"},{\"name\":\"f621\",\"type\":\"string\"},{\"name\":\"f622\",\"type\":\"string\"},{\"name\":\"f623\",\"type\":\"string\"},{\"name\":\"f624\",\"type\":\"string\"},{\"name\":\"f625\",\"type\":\"string\"},{\"name\":\"f626\",\"type\":\"string\"},{\"name\":\"f627\",\"type\":\"string\"},{\"name\":\"f628\",\"type\":\"string\"},{\"name\":\"f629\",\"type\":\"string\"},{\"name\":\"f630\",\"type\":\"string\"},{\"name\":\"f631\",\"type\":\"string\"},{\"name\":\"f632\",\"type\":\"string\"},{\"name\":\"f633\",\"type\":\"string\"},{\"name\":\"f634\",\"type\":\"string\"},{\"name\":\"f635\",\"type\":\"string\"},{\"name\":\"f636\",\"type\":\"string\"},{\"name\":\"f637\",\"type\":\"string\"},{\"name\":\"f638\",\"type\":\"string\"},{\"name\":\"f639\",\"type\":\"string\"},{\"name\":\"f640\",\"type\":\"string\"},{\"name\":\"f641\",\"type\":\"string\"},{\"name\":\"f642\",\"type\":\"string\"},{\"name\":\"f643\",\"type\":\"string\"},{\"name\":\"f644\",\"type\":\"string\"},{\"name\":\"f645\",\"type\":\"string\"},{\"name\":\"f646\",\"type\":\"string\"},{\"name\":\"f647\",\"type\":\"string\"},{\"name\":\"f648\",\"type\":\"string\"},{\"name\":\"f649\",\"type\":\"string\"},{\"name\":\"f650\",\"type\":\"string\"},{\"name\":\"f651\",\"type\":\"string\"},{\"name\":\"f652\",\"type\":\"string\"},{\"name\":\"f653\",\"type\":\"string\"},{\"name\":\"f654\",\"type\":\"string\"},{\"name\":\"f655\",\"type\":\"string\"},{\"name\":\"f656\",\"type\":\"string\"},{\"name\":\"f657\",\"type\":\"string\"},{\"name\":\"f658\",\"type\":\"string\"},{\"name\":\"f659\",\"type\":\"string\"},{\"name\":\"f660\",\"type\":\"string\"},{\"name\":\"f661\",\"type\":\"string\"},{\"name\":\"f662\",\"type\":\"string\"},{\"name\":\"f663\",\"type\":\"string\"},{\"name\":\"f664\",\"type\":\"string\"},{\"name\":\"f665\",\"type\":\"string\"},{\"name\":\"f666\",\"type\":\"string\"},{\"name\":\"f667\",\"type\":\"string\"},{\"name\":\"f668\",\"type\":\"string\"},{\"name\":\"f669\",\"type\":\"string\"},{\"name\":\"f670\",\"type\":\"string\"},{\"name\":\"f671\",\"type\":\"string\"},{\"name\":\"f672\",\"type\":\"string\"},{\"name\":\"f673\",\"type\":\"string\"},{\"name\":\"f674\",\"type\":\"string\"},{\"name\":\"f675\",\"type\":\"string\"},{\"name\":\"f676\",\"type\":\"string\"},{\"name\":\"f677\",\"type\":\"string\"},{\"name\":\"f678\",\"type\":\"string\"},{\"name\":\"f679\",\"type\":\"string\"},{\"name\":\"f680\",\"type\":\"string\"},{\"name\":\"f681\",\"type\":\"string\"},{\"name\":\"f682\",\"type\":\"string\"},{\"name\":\"f683\",\"type\":\"string\"},{\"name\":\"f684\",\"type\":\"string\"},{\"name\":\"f685\",\"type\":\"string\"},{\"name\":\"f686\",\"type\":\"string\"},{\"name\":\"f687\",\"type\":\"string\"},{\"name\":\"f688\",\"type\":\"string\"},{\"name\":\"f689\",\"type\":\"string\"},{\"name\":\"f690\",\"type\":\"string\"},{\"name\":\"f691\",\"type\":\"string\"},{\"name\":\"f692\",\"type\":\"string\"},{\"name\":\"f693\",\"type\":\"string\"},{\"name\":\"f694\",\"type\":\"string\"},{\"name\":\"f695\",\"type\":\"string\"},{\"name\":\"f696\",\"type\":\"string\"},{\"name\":\"f697\",\"type\":\"string\"},{\"name\":\"f698\",\"type\":\"string\"},{\"name\":\"f699\",\"type\":\"string\"},{\"name\":\"f700\",\"type\":\"string\"},{\"name\":\"f701\",\"type\":\"string\"},{\"name\":\"f702\",\"type\":\"string\"},{\"name\":\"f703\",\"type\":\"string\"},{\"name\":\"f704\",\"type\":\"string\"},{\"name\":\"f705\",\"type\":\"string\"},{\"name\":\"f706\",\"type\":\"string\"},{\"name\":\"f707\",\"type\":\"string\"},{\"name\":\"f708\",\"type\":\"string\"},{\"name\":\"f709\",\"type\":\"string\"},{\"name\":\"f710\",\"type\":\"string\"},{\"name\":\"f711\",\"type\":\"string\"},{\"name\":\"f712\",\"type\":\"string\"},{\"name\":\"f713\",\"type\":\"string\"},{\"name\":\"f714\",\"type\":\"string\"},{\"name\":\"f715\",\"type\":\"string\"},{\"name\":\"f716\",\"type\":\"string\"},{\"name\":\"f717\",\"type\":\"string\"},{\"name\":\"f718\",\"type\":\"string\"},{\"name\":\"f719\",\"type\":\"string\"},{\"name\":\"f720\",\"type\":\"string\"},{\"name\":\"f721\",\"type\":\"string\"},{\"name\":\"f722\",\"type\":\"string\"},{\"name\":\"f723\",\"type\":\"string\"},{\"name\":\"f724\",\"type\":\"string\"},{\"name\":\"f725\",\"type\":\"string\"},{\"name\":\"f726\",\"type\":\"string\"},{\"name\":\"f727\",\"type\":\"string\"},{\"name\":\"f728\",\"type\":\"string\"},{\"name\":\"f729\",\"type\":\"string\"},{\"name\":\"f730\",\"type\":\"string\"},{\"name\":\"f731\",\"type\":\"string\"},{\"name\":\"f732\",\"type\":\"string\"},{\"name\":\"f733\",\"type\":\"string\"},{\"name\":\"f734\",\"type\":\"string\"},{\"name\":\"f735\",\"type\":\"string\"},{\"name\":\"f736\",\"type\":\"string\"},{\"name\":\"f737\",\"type\":\"string\"},{\"name\":\"f738\",\"type\":\"string\"},{\"name\":\"f739\",\"type\":\"string\"},{\"name\":\"f740\",\"type\":\"string\"},{\"name\":\"f741\",\"type\":\"string\"},{\"name\":\"f742\",\"type\":\"string\"},{\"name\":\"f743\",\"type\":\"string\"},{\"name\":\"f744\",\"type\":\"string\"},{\"name\":\"f745\",\"type\":\"string\"},{\"name\":\"f746\",\"type\":\"string\"},{\"name\":\"f747\",\"type\":\"string\"},{\"name\":\"f748\",\"type\":\"string\"},{\"name\":\"f749\",\"type\":\"string\"},{\"name\":\"f750\",\"type\":\"string\"},{\"name\":\"f751\",\"type\":\"string\"},{\"name\":\"f752\",\"type\":\"string\"},{\"name\":\"f753\",\"type\":\"string\"},{\"name\":\"f754\",\"type\":\"string\"},{\"name\":\"f755\",\"type\":\"string\"},{\"name\":\"f756\",\"type\":\"string\"},{\"name\":\"f757\",\"type\":\"string\"},{\"name\":\"f758\",\"type\":\"string\"},{\"name\":\"f759\",\"type\":\"string\"},{\"name\":\"f760\",\"type\":\"string\"},{\"name\":\"f761\",\"type\":\"string\"},{\"name\":\"f762\",\"type\":\"string\"},{\"name\":\"f763\",\"type\":\"string\"},{\"name\":\"f764\",\"type\":\"string\"},{\"name\":\"f765\",\"type\":\"string\"},{\"name\":\"f766\",\"type\":\"string\"},{\"name\":\"f767\",\"type\":\"string\"},{\"name\":\"f768\",\"type\":\"string\"},{\"name\":\"f769\",\"type\":\"string\"},{\"name\":\"f770\",\"type\":\"string\"},{\"name\":\"f771\",\"type\":\"string\"},{\"name\":\"f772\",\"type\":\"string\"},{\"name\":\"f773\",\"type\":\"string\"},{\"name\":\"f774\",\"type\":\"string\"},{\"name\":\"f775\",\"type\":\"string\"},{\"name\":\"f776\",\"type\":\"string\"},{\"name\":\"f777\",\"type\":\"string\"},{\"name\":\"f778\",\"type\":\"string\"},{\"name\":\"f779\",\"type\":\"string\"},{\"name\":\"f780\",\"type\":\"string\"},{\"name\":\"f781\",\"type\":\"string\"},{\"name\":\"f782\",\"type\":\"string\"},{\"name\":\"f783\",\"type\":\"string\"},{\"name\":\"f784\",\"type\":\"string\"},{\"name\":\"f785\",\"type\":\"string\"},{\"name\":\"f786\",\"type\":\"string\"},{\"name\":\"f787\",\"type\":\"string\"},{\"name\":\"f788\",\"type\":\"string\"},{\"name\":\"f789\",\"type\":\"string\"},{\"name\":\"f790\",\"type\":\"string\"},{\"name\":\"f791\",\"type\":\"string\"},{\"name\":\"f792\",\"type\":\"string\"},{\"name\":\"f793\",\"type\":\"string\"},{\"name\":\"f794\",\"type\":\"string\"},{\"name\":\"f795\",\"type\":\"string\"},{\"name\":\"f796\",\"type\":\"string\"},{\"name\":\"f797\",\"type\":\"string\"},{\"name\":\"f798\",\"type\":\"string\"},{\"name\":\"f799\",\"type\":\"string\"},{\"name\":\"f800\",\"type\":\"string\"},{\"name\":\"f801\",\"type\":\"string\"},{\"name\":\"f802\",\"type\":\"string\"},{\"name\":\"f803\",\"type\":\"string\"},{\"name\":\"f804\",\"type\":\"string\"},{\"name\":\"f805\",\"type\":\"string\"},{\"name\":\"f806\",\"type\":\"string\"},{\"name\":\"f807\",\"type\":\"string\"},{\"name\":\"f808\",\"type\":\"string\"},{\"name\":\"f809\",\"type\":\"string\"},{\"name\":\"f810\",\"type\":\"string\"},{\"name\":\"f811\",\"type\":\"string\"},{\"name\":\"f812\",\"type\":\"string\"},{\"name\":\"f813\",\"type\":\"string\"},{\"name\":\"f814\",\"type\":\"string\"},{\"name\":\"f815\",\"type\":\"string\"},{\"name\":\"f816\",\"type\":\"string\"},{\"name\":\"f817\",\"type\":\"string\"},{\"name\":\"f818\",\"type\":\"string\"},{\"name\":\"f819\",\"type\":\"string\"},{\"name\":\"f820\",\"type\":\"string\"},{\"name\":\"f821\",\"type\":\"string\"},{\"name\":\"f822\",\"type\":\"string\"},{\"name\":\"f823\",\"type\":\"string\"},{\"name\":\"f824\",\"type\":\"string\"},{\"name\":\"f825\",\"type\":\"string\"},{\"name\":\"f826\",\"type\":\"string\"},{\"name\":\"f827\",\"type\":\"string\"},{\"name\":\"f828\",\"type\":\"string\"},{\"name\":\"f829\",\"type\":\"string\"},{\"name\":\"f830\",\"type\":\"string\"},{\"name\":\"f831\",\"type\":\"string\"},{\"name\":\"f832\",\"type\":\"string\"},{\"name\":\"f833\",\"type\":\"string\"},{\"name\":\"f834\",\"type\":\"string\"},{\"name\":\"f835\",\"type\":\"string\"},{\"name\":\"f836\",\"type\":\"string\"},{\"name\":\"f837\",\"type\":\"string\"},{\"name\":\"f838\",\"type\":\"string\"},{\"name\":\"f839\",\"type\":\"string\"},{\"name\":\"f840\",\"type\":\"string\"},{\"name\":\"f841\",\"type\":\"string\"},{\"name\":\"f842\",\"type\":\"string\"},{\"name\":\"f843\",\"type\":\"string\"},{\"name\":\"f844\",\"type\":\"string\"},{\"name\":\"f845\",\"type\":\"string\"},{\"name\":\"f846\",\"type\":\"string\"},{\"name\":\"f847\",\"type\":\"string\"},{\"name\":\"f848\",\"type\":\"string\"},{\"name\":\"f849\",\"type\":\"string\"},{\"name\":\"f850\",\"type\":\"string\"},{\"name\":\"f851\",\"type\":\"string\"},{\"name\":\"f852\",\"type\":\"string\"},{\"name\":\"f853\",\"type\":\"string\"},{\"name\":\"f854\",\"type\":\"string\"},{\"name\":\"f855\",\"type\":\"string\"},{\"name\":\"f856\",\"type\":\"string\"},{\"name\":\"f857\",\"type\":\"string\"},{\"name\":\"f858\",\"type\":\"string\"},{\"name\":\"f859\",\"type\":\"string\"},{\"name\":\"f860\",\"type\":\"string\"},{\"name\":\"f861\",\"type\":\"string\"},{\"name\":\"f862\",\"type\":\"string\"},{\"name\":\"f863\",\"type\":\"string\"},{\"name\":\"f864\",\"type\":\"string\"},{\"name\":\"f865\",\"type\":\"string\"},{\"name\":\"f866\",\"type\":\"string\"},{\"name\":\"f867\",\"type\":\"string\"},{\"name\":\"f868\",\"type\":\"string\"},{\"name\":\"f869\",\"type\":\"string\"},{\"name\":\"f870\",\"type\":\"string\"},{\"name\":\"f871\",\"type\":\"string\"},{\"name\":\"f872\",\"type\":\"string\"},{\"name\":\"f873\",\"type\":\"string\"},{\"name\":\"f874\",\"type\":\"string\"},{\"name\":\"f875\",\"type\":\"string\"},{\"name\":\"f876\",\"type\":\"string\"},{\"name\":\"f877\",\"type\":\"string\"},{\"name\":\"f878\",\"type\":\"string\"},{\"name\":\"f879\",\"type\":\"string\"},{\"name\":\"f880\",\"type\":\"string\"},{\"name\":\"f881\",\"type\":\"string\"},{\"name\":\"f882\",\"type\":\"string\"},{\"name\":\"f883\",\"type\":\"string\"},{\"name\":\"f884\",\"type\":\"string\"},{\"name\":\"f885\",\"type\":\"string\"},{\"name\":\"f886\",\"type\":\"string\"},{\"name\":\"f887\",\"type\":\"string\"},{\"name\":\"f888\",\"type\":\"string\"},{\"name\":\"f889\",\"type\":\"string\"},{\"name\":\"f890\",\"type\":\"string\"},{\"name\":\"f891\",\"type\":\"string\"},{\"name\":\"f892\",\"type\":\"string\"},{\"name\":\"f893\",\"type\":\"string\"},{\"name\":\"f894\",\"type\":\"string\"},{\"name\":\"f895\",\"type\":\"string\"},{\"name\":\"f896\",\"type\":\"string\"},{\"name\":\"f897\",\"type\":\"string\"},{\"name\":\"f898\",\"type\":\"string\"},{\"name\":\"f899\",\"type\":\"string\"},{\"name\":\"f900\",\"type\":\"string\"},{\"name\":\"f901\",\"type\":\"string\"},{\"name\":\"f902\",\"type\":\"string\"},{\"name\":\"f903\",\"type\":\"string\"},{\"name\":\"f904\",\"type\":\"string\"},{\"name\":\"f905\",\"type\":\"string\"},{\"name\":\"f906\",\"type\":\"string\"},{\"name\":\"f907\",\"type\":\"string\"},{\"name\":\"f908\",\"type\":\"string\"},{\"name\":\"f909\",\"type\":\"string\"},{\"name\":\"f910\",\"type\":\"string\"},{\"name\":\"f911\",\"type\":\"string\"},{\"name\":\"f912\",\"type\":\"string\"},{\"name\":\"f913\",\"type\":\"string\"},{\"name\":\"f914\",\"type\":\"string\"},{\"name\":\"f915\",\"type\":\"string\"},{\"name\":\"f916\",\"type\":\"string\"},{\"name\":\"f917\",\"type\":\"string\"},{\"name\":\"f918\",\"type\":\"string\"},{\"name\":\"f919\",\"type\":\"string\"},{\"name\":\"f920\",\"type\":\"string\"},{\"name\":\"f921\",\"type\":\"string\"},{\"name\":\"f922\",\"type\":\"string\"},{\"name\":\"f923\",\"type\":\"string\"},{\"name\":\"f924\",\"type\":\"string\"},{\"name\":\"f925\",\"type\":\"string\"},{\"name\":\"f926\",\"type\":\"string\"},{\"name\":\"f927\",\"type\":\"string\"},{\"name\":\"f928\",\"type\":\"string\"},{\"name\":\"f929\",\"type\":\"string\"},{\"name\":\"f930\",\"type\":\"string\"},{\"name\":\"f931\",\"type\":\"string\"},{\"name\":\"f932\",\"type\":\"string\"},{\"name\":\"f933\",\"type\":\"string\"},{\"name\":\"f934\",\"type\":\"string\"},{\"name\":\"f935\",\"type\":\"string\"},{\"name\":\"f936\",\"type\":\"string\"},{\"name\":\"f937\",\"type\":\"string\"},{\"name\":\"f938\",\"type\":\"string\"},{\"name\":\"f939\",\"type\":\"string\"},{\"name\":\"f940\",\"type\":\"string\"},{\"name\":\"f941\",\"type\":\"string\"},{\"name\":\"f942\",\"type\":\"string\"},{\"name\":\"f943\",\"type\":\"string\"},{\"name\":\"f944\",\"type\":\"string\"},{\"name\":\"f945\",\"type\":\"string\"},{\"name\":\"f946\",\"type\":\"string\"},{\"name\":\"f947\",\"type\":\"string\"},{\"name\":\"f948\",\"type\":\"string\"},{\"name\":\"f949\",\"type\":\"string\"},{\"name\":\"f950\",\"type\":\"string\"},{\"name\":\"f951\",\"type\":\"string\"},{\"name\":\"f952\",\"type\":\"string\"},{\"name\":\"f953\",\"type\":\"string\"},{\"name\":\"f954\",\"type\":\"string\"},{\"name\":\"f955\",\"type\":\"string\"},{\"name\":\"f956\",\"type\":\"string\"},{\"name\":\"f957\",\"type\":\"string\"},{\"name\":\"f958\",\"type\":\"string\"},{\"name\":\"f959\",\"type\":\"string\"},{\"name\":\"f960\",\"type\":\"string\"},{\"name\":\"f961\",\"type\":\"string\"},{\"name\":\"f962\",\"type\":\"string\"},{\"name\":\"f963\",\"type\":\"string\"},{\"name\":\"f964\",\"type\":\"string\"},{\"name\":\"f965\",\"type\":\"string\"},{\"name\":\"f966\",\"type\":\"string\"},{\"name\":\"f967\",\"type\":\"string\"},{\"name\":\"f968\",\"type\":\"string\"},{\"name\":\"f969\",\"type\":\"string\"},{\"name\":\"f970\",\"type\":\"string\"},{\"name\":\"f971\",\"type\":\"string\"},{\"name\":\"f972\",\"type\":\"string\"},{\"name\":\"f973\",\"type\":\"string\"},{\"name\":\"f974\",\"type\":\"string\"},{\"name\":\"f975\",\"type\":\"string\"},{\"name\":\"f976\",\"type\":\"string\"},{\"name\":\"f977\",\"type\":\"string\"},{\"name\":\"f978\",\"type\":\"string\"},{\"name\":\"f979\",\"type\":\"string\"},{\"name\":\"f980\",\"type\":\"string\"},{\"name\":\"f981\",\"type\":\"string\"},{\"name\":\"f982\",\"type\":\"string\"},{\"name\":\"f983\",\"type\":\"string\"},{\"name\":\"f984\",\"type\":\"string\"},{\"name\":\"f985\",\"type\":\"string\"},{\"name\":\"f986\",\"type\":\"string\"},{\"name\":\"f987\",\"type\":\"string\"},{\"name\":\"f988\",\"type\":\"string\"},{\"name\":\"f989\",\"type\":\"string\"},{\"name\":\"f990\",\"type\":\"string\"},{\"name\":\"f991\",\"type\":\"string\"},{\"name\":\"f992\",\"type\":\"string\"},{\"name\":\"f993\",\"type\":\"string\"},{\"name\":\"f994\",\"type\":\"string\"},{\"name\":\"f995\",\"type\":\"string\"},{\"name\":\"f996\",\"type\":\"string\"},{\"name\":\"f997\",\"type\":\"string\"},{\"name\":\"f998\",\"type\":\"string\"},{\"name\":\"f999\",\"type\":\"string\"},{\"name\":\"f1000\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u128 AS \"materialize\".\"public\".\"upsert_many_value_columns_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(130)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_value_columns_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_many_value_columns_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"key1\", \"f1\", \"f1000\" FROM [u129 AS \"materialize\".\"public\".\"upsert_many_value_columns\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(131)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "uuid_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"uuid_table\" (\"f1\" [s54 AS \"pg_catalog\".\"uuid\"], \"f2\" [s54 AS \"pg_catalog\".\"uuid\"], \"f3\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(132)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "parse_error_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"parse_error_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(133)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "parse_error_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"parse_error_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\"::[s20 AS \"pg_catalog\".\"int4\"] FROM [u132 AS \"materialize\".\"public\".\"parse_error_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(134)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(16)) }), name: "t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"renamed1\".\"t1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(135)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(17)) }), name: "t2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"renamed2\".\"t2\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(136)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(18)) }), name: "t3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"renamed3\".\"t3\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(137)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "record_type", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"record_type\" AS (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(138)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "map_type", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"map_type\" AS MAP (KEY TYPE = [s46 AS \"pg_catalog\".\"text\"], VALUE TYPE = [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(139)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "int4_list", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"int4_list\" AS LIST (ELEMENT TYPE = [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(140)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "int4_list_list", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"int4_list_list\" AS LIST (ELEMENT TYPE = [u139 AS \"materialize\".\"public\".\"int4_list\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(141)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "nested_types_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"nested_types_table\" (\"map_col\" [u138 AS \"materialize\".\"public\".\"map_type\"], \"list_col\" [u140 AS \"materialize\".\"public\".\"int4_list_list\"], \"record_col\" [u137 AS \"materialize\".\"public\".\"record_type\"], \"array_col\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(142)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "commit_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"commit_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(143)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_kafka_conn1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"privilege_kafka_conn1\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(144)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_csr_conn1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"privilege_csr_conn1\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(145)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_type1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"privilege_type1\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(146)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"privilege_t1\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u145 AS \"materialize\".\"public\".\"privilege_type1\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(147)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_i1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"privilege_i1\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"privilege_t1\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(148)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_v1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"privilege_v1\" AS SELECT * FROM [u146 AS \"materialize\".\"public\".\"privilege_t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(149)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_mv1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"privilege_mv1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u146 AS \"materialize\".\"public\".\"privilege_t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(150)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_secret1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"privilege_secret1\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(151)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_source1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"privilege_source1_progress\" (\"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(152)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_source1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"privilege_source1\" IN CLUSTER [u29] FROM LOAD GENERATOR COUNTER (SCALE FACTOR = 0.01) EXPOSE PROGRESS AS [u151 AS \"materialize\".\"public\".\"privilege_source1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(153)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_sink1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"privilege_sink1\" IN CLUSTER [u30] FROM [u149 AS \"materialize\".\"public\".\"privilege_mv1\"] INTO KAFKA CONNECTION [u143 AS \"materialize\".\"public\".\"privilege_kafka_conn1\"] (TOPIC = 'sink-sink-privilege1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u144 AS \"materialize\".\"public\".\"privilege_csr_conn1\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(154)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "insert_select_destination", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"insert_select_destination\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(155)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "insert_select_source_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"insert_select_source_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(156)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "drop_index_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"drop_index_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"], \"f3\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(159)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "drop_index_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"drop_index_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"f2\" FROM [u156 AS \"materialize\".\"public\".\"drop_index_table\"] WHERE \"f1\" > 0" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(160)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_bytes1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_bytes1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(161)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_bytes1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_bytes1\" IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-bytes-1') KEY FORMAT BYTES VALUE FORMAT BYTES ENVELOPE UPSERT EXPOSE PROGRESS AS [u160 AS \"materialize\".\"public\".\"format_bytes1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(162)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_text1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_text1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(163)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_text1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_text1\" IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-bytes-1') KEY FORMAT TEXT VALUE FORMAT TEXT ENVELOPE UPSERT EXPOSE PROGRESS AS [u162 AS \"materialize\".\"public\".\"format_text1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(164)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_csv1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_csv1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(165)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_csv1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_csv1\" (\"key1\", \"key2\", \"value1\", \"value2\") IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-bytes-1') KEY FORMAT CSV WITH 2 COLUMNS VALUE FORMAT CSV WITH 2 COLUMNS ENVELOPE UPSERT EXPOSE PROGRESS AS [u164 AS \"materialize\".\"public\".\"format_csv1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(166)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_regex1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_regex1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(167)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_regex1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_regex1\" (\"key1\", \"key2\", \"value1\", \"value2\") IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-bytes-1') KEY FORMAT REGEX '(?P<key1>[^,]+),(?P<key2>\\w+)' VALUE FORMAT REGEX '(?P<value1>[^,]+),(?P<value2>\\w+)' ENVELOPE UPSERT EXPOSE PROGRESS AS [u166 AS \"materialize\".\"public\".\"format_regex1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(168)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_protobuf1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_protobuf1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(169)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_protobuf1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_protobuf1\" IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-protobuf-1') KEY FORMAT PROTOBUF MESSAGE '.Key' USING SCHEMA '\\x0a7c0a0a746573742e70726f746f222d0a034b657912120a046b65793118012001280952046b65793112120a046b65793218022001280952046b65793222370a0556616c756512160a0676616c756531180120012809520676616c75653112160a0676616c756532180220012809520676616c756532620670726f746f33' VALUE FORMAT PROTOBUF MESSAGE '.Value' USING SCHEMA '\\x0a7c0a0a746573742e70726f746f222d0a034b657912120a046b65793118012001280952046b65793112120a046b65793218022001280952046b65793222370a0556616c756512160a0676616c756531180120012809520676616c75653112160a0676616c756532180220012809520676616c756532620670726f746f33' INCLUDE KEY ENVELOPE UPSERT EXPOSE PROGRESS AS [u168 AS \"materialize\".\"public\".\"format_protobuf1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(170)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster1_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"swap_cluster1_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(171)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster2_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"swap_cluster2_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(172)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster3_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"swap_cluster3_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(173)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster4_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"swap_cluster4_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(174)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster1_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"swap_cluster1_table_primary_idx\" IN CLUSTER [u33] ON \"materialize\".\"public\".\"swap_cluster1_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(175)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster1_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"swap_cluster1_view\" IN CLUSTER [u33] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"sum\"(\"f1\") FROM [u170 AS \"materialize\".\"public\".\"swap_cluster1_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(176)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster2_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"swap_cluster2_table_primary_idx\" IN CLUSTER [u34] ON \"materialize\".\"public\".\"swap_cluster2_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(177)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster2_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"swap_cluster2_view\" IN CLUSTER [u34] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"sum\"(\"f1\") FROM [u171 AS \"materialize\".\"public\".\"swap_cluster2_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(178)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster3_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"swap_cluster3_table_primary_idx\" IN CLUSTER [u35] ON \"materialize\".\"public\".\"swap_cluster3_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(179)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster3_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"swap_cluster3_view\" IN CLUSTER [u35] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"sum\"(\"f1\") FROM [u172 AS \"materialize\".\"public\".\"swap_cluster3_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(180)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster4_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"swap_cluster4_table_primary_idx\" IN CLUSTER [u36] ON \"materialize\".\"public\".\"swap_cluster4_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(181)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "swap_cluster4_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"swap_cluster4_view\" IN CLUSTER [u36] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"sum\"(\"f1\") FROM [u173 AS \"materialize\".\"public\".\"swap_cluster4_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(182)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_updates_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_many_updates_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(183)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_updates", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_many_updates\" IN CLUSTER [u37] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-many-updates-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u182 AS \"materialize\".\"public\".\"upsert_many_updates_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(184)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_updates_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_many_updates_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" FROM [u183 AS \"materialize\".\"public\".\"upsert_many_updates\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(185)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_update_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_update_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(186)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_update", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_update\" IN CLUSTER [u38] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-update-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u185 AS \"materialize\".\"public\".\"upsert_update_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(187)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_update_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_update_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"f1\", 1), \"pg_catalog\".\"count\"(*) AS \"c1\", \"pg_catalog\".\"count\"(DISTINCT \"key1\") AS \"c2\", \"pg_catalog\".\"count\"(DISTINCT \"f1\") AS \"c3\" FROM [u186 AS \"materialize\".\"public\".\"upsert_update\"] GROUP BY \"pg_catalog\".\"left\"(\"f1\", 1)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(188)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "multiple_partitions_source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"multiple_partitions_source_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(189)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "multiple_partitions_source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"multiple_partitions_source\" IN CLUSTER [u39] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-multiple-partitions-topic-1', TOPIC METADATA REFRESH INTERVAL = '500ms') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u188 AS \"materialize\".\"public\".\"multiple_partitions_source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(190)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mv_multiple_partitions", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"mv_multiple_partitions\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u189 AS \"materialize\".\"public\".\"multiple_partitions_source\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(191)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "linear_join_table1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"linear_join_table1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(192)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "linear_join_table2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"linear_join_table2\" (\"f2\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(193)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "decode_error_upsert_key_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"decode_error_upsert_key_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(194)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "decode_error_upsert_key", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"decode_error_upsert_key\" IN CLUSTER [u40] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-decode-error-upsert-key-1') KEY FORMAT AVRO USING SCHEMA '{ \"type\" : \"record\", \"name\" : \"test\", \"fields\" : [   {\"name\":\"f1\", \"type\":\"int\"}   ] }' VALUE FORMAT BYTES ENVELOPE UPSERT EXPOSE PROGRESS AS [u193 AS \"materialize\".\"public\".\"decode_error_upsert_key_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(195)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_jsona_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_jsona_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(196)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_jsona", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_jsona\" IN CLUSTER [u41] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-json-1') KEY FORMAT JSON VALUE FORMAT JSON ENVELOPE UPSERT EXPOSE PROGRESS AS [u195 AS \"materialize\".\"public\".\"format_jsona_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(197)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_jsonb_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_jsonb_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(198)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_jsonb", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_jsonb\" IN CLUSTER [u41] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-json-1') KEY FORMAT JSON VALUE FORMAT JSON ENVELOPE UPSERT EXPOSE PROGRESS AS [u197 AS \"materialize\".\"public\".\"format_jsonb_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(199)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "having_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"having_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(200)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "explain_item_t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"explain_item_t1\" (\"x\" [s20 AS \"pg_catalog\".\"int4\"], \"y\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(201)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "explain_item_t2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"explain_item_t2\" (\"x\" [s20 AS \"pg_catalog\".\"int4\"], \"y\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(202)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "explain_item_t1_y", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"explain_item_t1_y\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"explain_item_t1\" (\"y\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(203)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "array_type_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"array_type_table\" (\"int_col\" [s21 AS \"pg_catalog\".\"_int4\"], \"text_col\" [s47 AS \"pg_catalog\".\"_text\"], \"array_col\" [s21 AS \"pg_catalog\".\"_int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(204)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pgpass_ss", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"pgpass_ss\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(205)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg_ss", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg_ss\" TO POSTGRES (DATABASE = \"postgres\", HOST = 'postgres', PASSWORD = SECRET [u204 AS \"materialize\".\"public\".\"pgpass_ss\"], USER = \"postgres\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(206)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"t1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"]) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(207)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mz_source_ss_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"mz_source_ss_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(208)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mz_source_ss", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"mz_source_ss\" IN CLUSTER [u42] FROM POSTGRES CONNECTION [u205 AS \"materialize\".\"public\".\"pg_ss\"] (PUBLICATION = 'mz_source_ss', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030ac0010a1a706f7374677265735f736f757263655f7461626c655f7472756512067075626c696318b7800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2b08bd8001121f706f7374677265735f736f757263655f7461626c655f747275655f706b65791a02010220012a2a08bf80011221706f7374677265735f736f757263655f7461626c655f747275655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743212067075626c696318c1800122150a026631101718ffffffffffffffffff01200130010a270a02743312067075626c696318c4800122150a026631101718ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a02010220010a95010a0e646562657a69756d5f7461626c6512067075626c696318ad800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222150a026633101718ffffffffffffffffff012001300322150a026634101918ffffffffffffffffff01200130042a1f08b380011213646562657a69756d5f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f35386635313132313537326434663566393435386330323336616333646632661801') FOR TABLES (\"postgres\".\"public\".\"t1\" AS [u206 AS \"materialize\".\"public\".\"t1\"], \"postgres\".\"public\".\"t2\" AS [u424 AS \"materialize\".\"public\".\"t2\"], \"postgres\".\"public\".\"t3\" AS [u575 AS \"materialize\".\"public\".\"t3\"]) EXPOSE PROGRESS AS [u207 AS \"materialize\".\"public\".\"mz_source_ss_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(209)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_table3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"rename_table3\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(210)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_table_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"rename_table_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT DISTINCT \"f1\" FROM [u209 AS \"materialize\".\"public\".\"rename_table3\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(211)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pgpass", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"pgpass\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(212)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg_ssh1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg_ssh1\" TO POSTGRES (DATABASE = \"postgres\", HOST = \"postgres\", PASSWORD = SECRET [u211 AS \"materialize\".\"public\".\"pgpass\"], SSH TUNNEL = [u1 AS \"materialize\".\"public\".\"ssh_tunnel_0\"], SSL MODE = \"require\", USER = \"postgres\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(213)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "t_ssh1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"t_ssh1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"]) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(214)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mz_source_ssh1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"mz_source_ssh1_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(215)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mz_source_ssh1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"mz_source_ssh1\" IN CLUSTER [u43] FROM POSTGRES CONNECTION [u212 AS \"materialize\".\"public\".\"pg_ssh1\"] (PUBLICATION = 'mz_source_ssh', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff0120013001122c6d6174657269616c697a655f35626532303136653636343934613637626665316664316230366533613061621801') FOR TABLES (\"postgres\".\"public\".\"t_ssh1\" AS [u213 AS \"materialize\".\"public\".\"t_ssh1\"]) EXPOSE PROGRESS AS [u214 AS \"materialize\".\"public\".\"mz_source_ssh1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(216)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_mz_now_pass", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"postgres_mz_now_pass\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(217)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_mz_now_conn", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"postgres_mz_now_conn\" TO POSTGRES (DATABASE = \"postgres\", HOST = 'postgres', PASSWORD = SECRET [u216 AS \"materialize\".\"public\".\"postgres_mz_now_pass\"], USER = \"postgres2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(218)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_mz_now_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_mz_now_table\" (\"f1\" [s50 AS \"pg_catalog\".\"timestamp\"] NOT NULL, \"f2\" [s10 AS \"pg_catalog\".\"bpchar\"](5) NOT NULL, CONSTRAINT \"postgres_mz_now_table_pkey\" PRIMARY KEY (\"f1\", \"f2\")) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(219)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_mz_now_source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_mz_now_source_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(220)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_mz_now_source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"postgres_mz_now_source\" IN CLUSTER [u44] FROM POSTGRES CONNECTION [u217 AS \"materialize\".\"public\".\"postgres_mz_now_conn\"] (PUBLICATION = 'postgres_mz_now_publication', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f35383561366463373438306334313263623739626631333739366638303037371801') FOR TABLES (\"postgres\".\"public\".\"postgres_mz_now_table\" AS [u218 AS \"materialize\".\"public\".\"postgres_mz_now_table\"]) EXPOSE PROGRESS AS [u219 AS \"materialize\".\"public\".\"postgres_mz_now_source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(221)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_mz_now_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"postgres_mz_now_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u218 AS \"materialize\".\"public\".\"postgres_mz_now_table\"] WHERE \"mz_catalog\".\"mz_now\"() <= \"pg_catalog\".\"round\"(\"pg_catalog\".\"extract\"('epoch', \"f1\" + INTERVAL '60') * 1000)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(222)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "debezium_source1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"debezium_source1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(223)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "debezium_source1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"debezium_source1\" IN CLUSTER [u45] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'postgres.public.debezium_table') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"namespace\":\"postgres.public.debezium_table\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"},{\"name\":\"f2\",\"type\":\"int\"}],\"connect.name\":\"postgres.public.debezium_table.Key\"}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"Envelope\",\"namespace\":\"postgres.public.debezium_table\",\"fields\":[{\"name\":\"before\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Value\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"},{\"name\":\"f2\",\"type\":\"int\"},{\"name\":\"f3\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"f4\",\"type\":[\"null\",\"string\"],\"default\":null}],\"connect.name\":\"postgres.public.debezium_table.Value\"}],\"default\":null},{\"name\":\"after\",\"type\":[\"null\",\"Value\"],\"default\":null},{\"name\":\"source\",\"type\":{\"type\":\"record\",\"name\":\"Source\",\"namespace\":\"io.debezium.connector.postgresql\",\"fields\":[{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"connector\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"ts_ms\",\"type\":\"long\"},{\"name\":\"snapshot\",\"type\":[{\"type\":\"string\",\"connect.version\":1,\"connect.parameters\":{\"allowed\":\"true,last,false,incremental\"},\"connect.default\":\"false\",\"connect.name\":\"io.debezium.data.Enum\"},\"null\"],\"default\":\"false\"},{\"name\":\"db\",\"type\":\"string\"},{\"name\":\"sequence\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"schema\",\"type\":\"string\"},{\"name\":\"table\",\"type\":\"string\"},{\"name\":\"txId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lsn\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"xmin\",\"type\":[\"null\",\"long\"],\"default\":null}],\"connect.name\":\"io.debezium.connector.postgresql.Source\"}},{\"name\":\"op\",\"type\":\"string\"},{\"name\":\"ts_ms\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"transaction\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"block\",\"namespace\":\"event\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"total_order\",\"type\":\"long\"},{\"name\":\"data_collection_order\",\"type\":\"long\"}],\"connect.version\":1,\"connect.name\":\"event.block\"}],\"default\":null}],\"connect.version\":1,\"connect.name\":\"postgres.public.debezium_table.Envelope\"}' ENVELOPE DEBEZIUM EXPOSE PROGRESS AS [u222 AS \"materialize\".\"public\".\"debezium_source1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(224)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "debezium_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"debezium_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"f3\", \"pg_catalog\".\"sum\"(\"pg_catalog\".\"length\"(\"f4\")) FROM [u223 AS \"materialize\".\"public\".\"debezium_source1\"] GROUP BY \"f1\", \"f3\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(225)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_source_null_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"sink_source_null_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(226)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_source_null", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"sink_source_null\" IN CLUSTER [u46] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-sink-source-null-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":[\"null\",\"string\"]},{\"name\":\"f2\",\"type\":[\"long\",\"null\"]}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u225 AS \"materialize\".\"public\".\"sink_source_null_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(227)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_source_null_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"sink_source_null_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"key1\", 2) AS \"l_k\", \"pg_catalog\".\"left\"(\"f1\", 1) AS \"l_v1\", \"f2\" / 100 AS \"l_v2\", \"pg_catalog\".\"count\"(*) AS \"c\" FROM [u226 AS \"materialize\".\"public\".\"sink_source_null\"] GROUP BY \"pg_catalog\".\"left\"(\"key1\", 2), \"pg_catalog\".\"left\"(\"f1\", 1), \"f2\" / 100" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(228)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_sink_null1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_sink_null1\" IN CLUSTER [u47] FROM [u227 AS \"materialize\".\"public\".\"sink_source_null_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'sink-sink-null1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] (NULL DEFAULTS) ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(229)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "string_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"string_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"], \"f2\" [s46 AS \"pg_catalog\".\"text\"], \"f3\" [s46 AS \"pg_catalog\".\"text\"], \"f4\" [s20 AS \"pg_catalog\".\"int4\"], \"f5\" [s20 AS \"pg_catalog\".\"int4\"], \"f6\" [s21 AS \"pg_catalog\".\"_int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(230)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "decode_error_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"decode_error_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(231)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "decode_error", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"decode_error\" IN CLUSTER [u48] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-decode-error-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE NONE EXPOSE PROGRESS AS [u230 AS \"materialize\".\"public\".\"decode_error_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(232)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "v1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"v1\" (\"a\") AS SELECT 1::[s72 AS \"mz_catalog\".\"mz_timestamp\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(233)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_kafka_conn1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_kafka_conn1\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(234)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_csr_conn1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_csr_conn1\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(235)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_type1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"owner_type1\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(236)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"owner_t1\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u235 AS \"materialize\".\"public\".\"owner_type1\"])" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(237)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_i1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"owner_i1\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"owner_t1\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(238)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_v1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"owner_v1\" AS SELECT * FROM [u236 AS \"materialize\".\"public\".\"owner_t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(239)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_mv1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"owner_mv1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u236 AS \"materialize\".\"public\".\"owner_t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(240)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_secret1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"owner_secret1\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(241)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_source1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"owner_source1_progress\" (\"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(242)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_source1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"owner_source1\" IN CLUSTER [u49] FROM LOAD GENERATOR COUNTER (SCALE FACTOR = 0.01) EXPOSE PROGRESS AS [u241 AS \"materialize\".\"public\".\"owner_source1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(243)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_sink1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"owner_sink1\" IN CLUSTER [u50] FROM [u239 AS \"materialize\".\"public\".\"owner_mv1\"] INTO KAFKA CONNECTION [u233 AS \"materialize\".\"public\".\"owner_kafka_conn1\"] (TOPIC = 'sink-sink-owner1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u234 AS \"materialize\".\"public\".\"owner_csr_conn1\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(244)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_kafka_conn2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_kafka_conn2\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(245)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_csr_conn2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_csr_conn2\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(246)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_type2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"owner_type2\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(247)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_t2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"owner_t2\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u246 AS \"materialize\".\"public\".\"owner_type2\"])" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(248)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_i2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"owner_i2\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"owner_t2\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(249)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_v2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"owner_v2\" AS SELECT * FROM [u247 AS \"materialize\".\"public\".\"owner_t2\"]" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(250)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_mv2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"owner_mv2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u247 AS \"materialize\".\"public\".\"owner_t2\"]" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(251)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_secret2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"owner_secret2\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(252)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_source2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"owner_source2_progress\" (\"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(253)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_source2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"owner_source2\" IN CLUSTER [u52] FROM LOAD GENERATOR COUNTER (SCALE FACTOR = 0.01) EXPOSE PROGRESS AS [u252 AS \"materialize\".\"public\".\"owner_source2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(254)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_sink2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"owner_sink2\" IN CLUSTER [u53] FROM [u250 AS \"materialize\".\"public\".\"owner_mv2\"] INTO KAFKA CONNECTION [u244 AS \"materialize\".\"public\".\"owner_kafka_conn2\"] (TOPIC = 'sink-sink-owner2') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u245 AS \"materialize\".\"public\".\"owner_csr_conn2\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(255)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rollback_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"rollback_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(256)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "text_bytea_types_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"text_bytea_types_table\" (\"text_col\" [s46 AS \"pg_catalog\".\"text\"], \"bytea_col\" [s8 AS \"pg_catalog\".\"bytea\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(257)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "regexp_extract_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"regexp_extract_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(258)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"aggregation_schema\".\"t1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"], \"f3\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(259)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "double_type_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"double_type_table\" (\"double_col\" [s18 AS \"pg_catalog\".\"float8\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(260)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "many_rows", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"many_rows\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(261)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "many_rows_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"many_rows_primary_idx\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"many_rows\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(262)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_update_shrink_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_update_shrink_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(263)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_update_shrink", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_update_shrink\" IN CLUSTER [u55] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-update-shrink-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u262 AS \"materialize\".\"public\".\"upsert_update_shrink_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(264)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_update_shrink_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_update_shrink_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"f1\", 1), \"pg_catalog\".\"right\"(\"f1\", 1), \"pg_catalog\".\"count\"(*) AS \"c1\", \"pg_catalog\".\"count\"(DISTINCT \"key1\") AS \"c2\", \"pg_catalog\".\"count\"(DISTINCT \"f1\") AS \"c3\", \"pg_catalog\".\"min\"(\"pg_catalog\".\"length\"(\"f1\")) AS \"l1\", \"pg_catalog\".\"max\"(\"pg_catalog\".\"length\"(\"f1\")) AS \"l2\" FROM [u263 AS \"materialize\".\"public\".\"upsert_update_shrink\"] GROUP BY \"pg_catalog\".\"left\"(\"f1\", 1), \"pg_catalog\".\"right\"(\"f1\", 1)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(265)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "delete_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"delete_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(266)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pgpass1_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"pgpass1_true\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(267)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg1_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg1_true\" TO POSTGRES (DATABASE = \"postgres\", HOST = 'postgres', PASSWORD = SECRET [u266 AS \"materialize\".\"public\".\"pgpass1_true\"], USER = \"postgres1_true\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(268)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"sink_source_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(269)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"sink_source\" IN CLUSTER [u56] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-sink-source-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u268 AS \"materialize\".\"public\".\"sink_source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(270)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_source_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"sink_source_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"key1\", 2) AS \"l_k\", \"pg_catalog\".\"left\"(\"f1\", 1) AS \"l_v\", \"pg_catalog\".\"count\"(*) AS \"c\" FROM [u269 AS \"materialize\".\"public\".\"sink_source\"] GROUP BY \"pg_catalog\".\"left\"(\"key1\", 2), \"pg_catalog\".\"left\"(\"f1\", 1)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(271)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_sink1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_sink1\" IN CLUSTER [u57] FROM [u270 AS \"materialize\".\"public\".\"sink_source_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'sink-sink1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(272)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "temporal_prec_types", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"temporal_prec_types\" (\"timestamp_prec_col\" [s50 AS \"pg_catalog\".\"timestamp\"](3), \"timestamptz_prec_col\" [s52 AS \"pg_catalog\".\"timestamptz\"](1))" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(273)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_wide_key_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_wide_key_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(274)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_wide_key", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_wide_key\" IN CLUSTER [u58] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-wide-key-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u273 AS \"materialize\".\"public\".\"upsert_wide_key_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(275)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_wide_key_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_wide_key_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"key1\", 1), \"pg_catalog\".\"right\"(\"key1\", 1), \"pg_catalog\".\"length\"(\"key1\"), \"f1\" FROM [u274 AS \"materialize\".\"public\".\"upsert_wide_key\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(276)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"refresh_table\" (\"x\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(277)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_view_2s_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"refresh_view_2s_1\" IN CLUSTER [u1] WITH (REFRESH = EVERY '2 seconds' ALIGNED TO 1707217530974::[s72 AS \"mz_catalog\".\"mz_timestamp\"]) AS SELECT DISTINCT (\"x\") FROM [u276 AS \"materialize\".\"public\".\"refresh_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(278)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_view_at_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"refresh_view_at_1\" IN CLUSTER [u1] WITH (REFRESH = AT 1707217531328::[s72 AS \"mz_catalog\".\"mz_timestamp\"]::[s46 AS \"pg_catalog\".\"text\"]::[s22 AS \"pg_catalog\".\"int8\"]) AS SELECT DISTINCT (\"x\") FROM [u276 AS \"materialize\".\"public\".\"refresh_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(279)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_view_late_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"refresh_view_late_1\" IN CLUSTER [u1] WITH (REFRESH = AT 1707217531698::[s72 AS \"mz_catalog\".\"mz_timestamp\"]::[s46 AS \"pg_catalog\".\"text\"]::[s22 AS \"pg_catalog\".\"int8\"] + 86400000) AS SELECT DISTINCT (\"x\") FROM [u276 AS \"materialize\".\"public\".\"refresh_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(280)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "wmr1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"wmr1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS WITH MUTUALLY RECURSIVE (RETURN AT RECURSION LIMIT = 100) \"foo\" (\"a\" [s20 AS \"pg_catalog\".\"int4\"], \"b\" [s20 AS \"pg_catalog\".\"int4\"]) AS (SELECT 1, 2 UNION SELECT \"a\", 7 FROM \"bar\"), \"bar\" (\"a\" [s20 AS \"pg_catalog\".\"int4\"]) AS (SELECT \"a\" FROM \"foo\") SELECT * FROM \"bar\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(281)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_key_columns_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_many_key_columns_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(282)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_key_columns", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_many_key_columns\" IN CLUSTER [u59] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-many-key-columns-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"},{\"name\":\"key2\",\"type\":\"string\"},{\"name\":\"key3\",\"type\":\"string\"},{\"name\":\"key4\",\"type\":\"string\"},{\"name\":\"key5\",\"type\":\"string\"},{\"name\":\"key6\",\"type\":\"string\"},{\"name\":\"key7\",\"type\":\"string\"},{\"name\":\"key8\",\"type\":\"string\"},{\"name\":\"key9\",\"type\":\"string\"},{\"name\":\"key10\",\"type\":\"string\"},{\"name\":\"key11\",\"type\":\"string\"},{\"name\":\"key12\",\"type\":\"string\"},{\"name\":\"key13\",\"type\":\"string\"},{\"name\":\"key14\",\"type\":\"string\"},{\"name\":\"key15\",\"type\":\"string\"},{\"name\":\"key16\",\"type\":\"string\"},{\"name\":\"key17\",\"type\":\"string\"},{\"name\":\"key18\",\"type\":\"string\"},{\"name\":\"key19\",\"type\":\"string\"},{\"name\":\"key20\",\"type\":\"string\"},{\"name\":\"key21\",\"type\":\"string\"},{\"name\":\"key22\",\"type\":\"string\"},{\"name\":\"key23\",\"type\":\"string\"},{\"name\":\"key24\",\"type\":\"string\"},{\"name\":\"key25\",\"type\":\"string\"},{\"name\":\"key26\",\"type\":\"string\"},{\"name\":\"key27\",\"type\":\"string\"},{\"name\":\"key28\",\"type\":\"string\"},{\"name\":\"key29\",\"type\":\"string\"},{\"name\":\"key30\",\"type\":\"string\"},{\"name\":\"key31\",\"type\":\"string\"},{\"name\":\"key32\",\"type\":\"string\"},{\"name\":\"key33\",\"type\":\"string\"},{\"name\":\"key34\",\"type\":\"string\"},{\"name\":\"key35\",\"type\":\"string\"},{\"name\":\"key36\",\"type\":\"string\"},{\"name\":\"key37\",\"type\":\"string\"},{\"name\":\"key38\",\"type\":\"string\"},{\"name\":\"key39\",\"type\":\"string\"},{\"name\":\"key40\",\"type\":\"string\"},{\"name\":\"key41\",\"type\":\"string\"},{\"name\":\"key42\",\"type\":\"string\"},{\"name\":\"key43\",\"type\":\"string\"},{\"name\":\"key44\",\"type\":\"string\"},{\"name\":\"key45\",\"type\":\"string\"},{\"name\":\"key46\",\"type\":\"string\"},{\"name\":\"key47\",\"type\":\"string\"},{\"name\":\"key48\",\"type\":\"string\"},{\"name\":\"key49\",\"type\":\"string\"},{\"name\":\"key50\",\"type\":\"string\"},{\"name\":\"key51\",\"type\":\"string\"},{\"name\":\"key52\",\"type\":\"string\"},{\"name\":\"key53\",\"type\":\"string\"},{\"name\":\"key54\",\"type\":\"string\"},{\"name\":\"key55\",\"type\":\"string\"},{\"name\":\"key56\",\"type\":\"string\"},{\"name\":\"key57\",\"type\":\"string\"},{\"name\":\"key58\",\"type\":\"string\"},{\"name\":\"key59\",\"type\":\"string\"},{\"name\":\"key60\",\"type\":\"string\"},{\"name\":\"key61\",\"type\":\"string\"},{\"name\":\"key62\",\"type\":\"string\"},{\"name\":\"key63\",\"type\":\"string\"},{\"name\":\"key64\",\"type\":\"string\"},{\"name\":\"key65\",\"type\":\"string\"},{\"name\":\"key66\",\"type\":\"string\"},{\"name\":\"key67\",\"type\":\"string\"},{\"name\":\"key68\",\"type\":\"string\"},{\"name\":\"key69\",\"type\":\"string\"},{\"name\":\"key70\",\"type\":\"string\"},{\"name\":\"key71\",\"type\":\"string\"},{\"name\":\"key72\",\"type\":\"string\"},{\"name\":\"key73\",\"type\":\"string\"},{\"name\":\"key74\",\"type\":\"string\"},{\"name\":\"key75\",\"type\":\"string\"},{\"name\":\"key76\",\"type\":\"string\"},{\"name\":\"key77\",\"type\":\"string\"},{\"name\":\"key78\",\"type\":\"string\"},{\"name\":\"key79\",\"type\":\"string\"},{\"name\":\"key80\",\"type\":\"string\"},{\"name\":\"key81\",\"type\":\"string\"},{\"name\":\"key82\",\"type\":\"string\"},{\"name\":\"key83\",\"type\":\"string\"},{\"name\":\"key84\",\"type\":\"string\"},{\"name\":\"key85\",\"type\":\"string\"},{\"name\":\"key86\",\"type\":\"string\"},{\"name\":\"key87\",\"type\":\"string\"},{\"name\":\"key88\",\"type\":\"string\"},{\"name\":\"key89\",\"type\":\"string\"},{\"name\":\"key90\",\"type\":\"string\"},{\"name\":\"key91\",\"type\":\"string\"},{\"name\":\"key92\",\"type\":\"string\"},{\"name\":\"key93\",\"type\":\"string\"},{\"name\":\"key94\",\"type\":\"string\"},{\"name\":\"key95\",\"type\":\"string\"},{\"name\":\"key96\",\"type\":\"string\"},{\"name\":\"key97\",\"type\":\"string\"},{\"name\":\"key98\",\"type\":\"string\"},{\"name\":\"key99\",\"type\":\"string\"},{\"name\":\"key100\",\"type\":\"string\"},{\"name\":\"key101\",\"type\":\"string\"},{\"name\":\"key102\",\"type\":\"string\"},{\"name\":\"key103\",\"type\":\"string\"},{\"name\":\"key104\",\"type\":\"string\"},{\"name\":\"key105\",\"type\":\"string\"},{\"name\":\"key106\",\"type\":\"string\"},{\"name\":\"key107\",\"type\":\"string\"},{\"name\":\"key108\",\"type\":\"string\"},{\"name\":\"key109\",\"type\":\"string\"},{\"name\":\"key110\",\"type\":\"string\"},{\"name\":\"key111\",\"type\":\"string\"},{\"name\":\"key112\",\"type\":\"string\"},{\"name\":\"key113\",\"type\":\"string\"},{\"name\":\"key114\",\"type\":\"string\"},{\"name\":\"key115\",\"type\":\"string\"},{\"name\":\"key116\",\"type\":\"string\"},{\"name\":\"key117\",\"type\":\"string\"},{\"name\":\"key118\",\"type\":\"string\"},{\"name\":\"key119\",\"type\":\"string\"},{\"name\":\"key120\",\"type\":\"string\"},{\"name\":\"key121\",\"type\":\"string\"},{\"name\":\"key122\",\"type\":\"string\"},{\"name\":\"key123\",\"type\":\"string\"},{\"name\":\"key124\",\"type\":\"string\"},{\"name\":\"key125\",\"type\":\"string\"},{\"name\":\"key126\",\"type\":\"string\"},{\"name\":\"key127\",\"type\":\"string\"},{\"name\":\"key128\",\"type\":\"string\"},{\"name\":\"key129\",\"type\":\"string\"},{\"name\":\"key130\",\"type\":\"string\"},{\"name\":\"key131\",\"type\":\"string\"},{\"name\":\"key132\",\"type\":\"string\"},{\"name\":\"key133\",\"type\":\"string\"},{\"name\":\"key134\",\"type\":\"string\"},{\"name\":\"key135\",\"type\":\"string\"},{\"name\":\"key136\",\"type\":\"string\"},{\"name\":\"key137\",\"type\":\"string\"},{\"name\":\"key138\",\"type\":\"string\"},{\"name\":\"key139\",\"type\":\"string\"},{\"name\":\"key140\",\"type\":\"string\"},{\"name\":\"key141\",\"type\":\"string\"},{\"name\":\"key142\",\"type\":\"string\"},{\"name\":\"key143\",\"type\":\"string\"},{\"name\":\"key144\",\"type\":\"string\"},{\"name\":\"key145\",\"type\":\"string\"},{\"name\":\"key146\",\"type\":\"string\"},{\"name\":\"key147\",\"type\":\"string\"},{\"name\":\"key148\",\"type\":\"string\"},{\"name\":\"key149\",\"type\":\"string\"},{\"name\":\"key150\",\"type\":\"string\"},{\"name\":\"key151\",\"type\":\"string\"},{\"name\":\"key152\",\"type\":\"string\"},{\"name\":\"key153\",\"type\":\"string\"},{\"name\":\"key154\",\"type\":\"string\"},{\"name\":\"key155\",\"type\":\"string\"},{\"name\":\"key156\",\"type\":\"string\"},{\"name\":\"key157\",\"type\":\"string\"},{\"name\":\"key158\",\"type\":\"string\"},{\"name\":\"key159\",\"type\":\"string\"},{\"name\":\"key160\",\"type\":\"string\"},{\"name\":\"key161\",\"type\":\"string\"},{\"name\":\"key162\",\"type\":\"string\"},{\"name\":\"key163\",\"type\":\"string\"},{\"name\":\"key164\",\"type\":\"string\"},{\"name\":\"key165\",\"type\":\"string\"},{\"name\":\"key166\",\"type\":\"string\"},{\"name\":\"key167\",\"type\":\"string\"},{\"name\":\"key168\",\"type\":\"string\"},{\"name\":\"key169\",\"type\":\"string\"},{\"name\":\"key170\",\"type\":\"string\"},{\"name\":\"key171\",\"type\":\"string\"},{\"name\":\"key172\",\"type\":\"string\"},{\"name\":\"key173\",\"type\":\"string\"},{\"name\":\"key174\",\"type\":\"string\"},{\"name\":\"key175\",\"type\":\"string\"},{\"name\":\"key176\",\"type\":\"string\"},{\"name\":\"key177\",\"type\":\"string\"},{\"name\":\"key178\",\"type\":\"string\"},{\"name\":\"key179\",\"type\":\"string\"},{\"name\":\"key180\",\"type\":\"string\"},{\"name\":\"key181\",\"type\":\"string\"},{\"name\":\"key182\",\"type\":\"string\"},{\"name\":\"key183\",\"type\":\"string\"},{\"name\":\"key184\",\"type\":\"string\"},{\"name\":\"key185\",\"type\":\"string\"},{\"name\":\"key186\",\"type\":\"string\"},{\"name\":\"key187\",\"type\":\"string\"},{\"name\":\"key188\",\"type\":\"string\"},{\"name\":\"key189\",\"type\":\"string\"},{\"name\":\"key190\",\"type\":\"string\"},{\"name\":\"key191\",\"type\":\"string\"},{\"name\":\"key192\",\"type\":\"string\"},{\"name\":\"key193\",\"type\":\"string\"},{\"name\":\"key194\",\"type\":\"string\"},{\"name\":\"key195\",\"type\":\"string\"},{\"name\":\"key196\",\"type\":\"string\"},{\"name\":\"key197\",\"type\":\"string\"},{\"name\":\"key198\",\"type\":\"string\"},{\"name\":\"key199\",\"type\":\"string\"},{\"name\":\"key200\",\"type\":\"string\"},{\"name\":\"key201\",\"type\":\"string\"},{\"name\":\"key202\",\"type\":\"string\"},{\"name\":\"key203\",\"type\":\"string\"},{\"name\":\"key204\",\"type\":\"string\"},{\"name\":\"key205\",\"type\":\"string\"},{\"name\":\"key206\",\"type\":\"string\"},{\"name\":\"key207\",\"type\":\"string\"},{\"name\":\"key208\",\"type\":\"string\"},{\"name\":\"key209\",\"type\":\"string\"},{\"name\":\"key210\",\"type\":\"string\"},{\"name\":\"key211\",\"type\":\"string\"},{\"name\":\"key212\",\"type\":\"string\"},{\"name\":\"key213\",\"type\":\"string\"},{\"name\":\"key214\",\"type\":\"string\"},{\"name\":\"key215\",\"type\":\"string\"},{\"name\":\"key216\",\"type\":\"string\"},{\"name\":\"key217\",\"type\":\"string\"},{\"name\":\"key218\",\"type\":\"string\"},{\"name\":\"key219\",\"type\":\"string\"},{\"name\":\"key220\",\"type\":\"string\"},{\"name\":\"key221\",\"type\":\"string\"},{\"name\":\"key222\",\"type\":\"string\"},{\"name\":\"key223\",\"type\":\"string\"},{\"name\":\"key224\",\"type\":\"string\"},{\"name\":\"key225\",\"type\":\"string\"},{\"name\":\"key226\",\"type\":\"string\"},{\"name\":\"key227\",\"type\":\"string\"},{\"name\":\"key228\",\"type\":\"string\"},{\"name\":\"key229\",\"type\":\"string\"},{\"name\":\"key230\",\"type\":\"string\"},{\"name\":\"key231\",\"type\":\"string\"},{\"name\":\"key232\",\"type\":\"string\"},{\"name\":\"key233\",\"type\":\"string\"},{\"name\":\"key234\",\"type\":\"string\"},{\"name\":\"key235\",\"type\":\"string\"},{\"name\":\"key236\",\"type\":\"string\"},{\"name\":\"key237\",\"type\":\"string\"},{\"name\":\"key238\",\"type\":\"string\"},{\"name\":\"key239\",\"type\":\"string\"},{\"name\":\"key240\",\"type\":\"string\"},{\"name\":\"key241\",\"type\":\"string\"},{\"name\":\"key242\",\"type\":\"string\"},{\"name\":\"key243\",\"type\":\"string\"},{\"name\":\"key244\",\"type\":\"string\"},{\"name\":\"key245\",\"type\":\"string\"},{\"name\":\"key246\",\"type\":\"string\"},{\"name\":\"key247\",\"type\":\"string\"},{\"name\":\"key248\",\"type\":\"string\"},{\"name\":\"key249\",\"type\":\"string\"},{\"name\":\"key250\",\"type\":\"string\"},{\"name\":\"key251\",\"type\":\"string\"},{\"name\":\"key252\",\"type\":\"string\"},{\"name\":\"key253\",\"type\":\"string\"},{\"name\":\"key254\",\"type\":\"string\"},{\"name\":\"key255\",\"type\":\"string\"},{\"name\":\"key256\",\"type\":\"string\"},{\"name\":\"key257\",\"type\":\"string\"},{\"name\":\"key258\",\"type\":\"string\"},{\"name\":\"key259\",\"type\":\"string\"},{\"name\":\"key260\",\"type\":\"string\"},{\"name\":\"key261\",\"type\":\"string\"},{\"name\":\"key262\",\"type\":\"string\"},{\"name\":\"key263\",\"type\":\"string\"},{\"name\":\"key264\",\"type\":\"string\"},{\"name\":\"key265\",\"type\":\"string\"},{\"name\":\"key266\",\"type\":\"string\"},{\"name\":\"key267\",\"type\":\"string\"},{\"name\":\"key268\",\"type\":\"string\"},{\"name\":\"key269\",\"type\":\"string\"},{\"name\":\"key270\",\"type\":\"string\"},{\"name\":\"key271\",\"type\":\"string\"},{\"name\":\"key272\",\"type\":\"string\"},{\"name\":\"key273\",\"type\":\"string\"},{\"name\":\"key274\",\"type\":\"string\"},{\"name\":\"key275\",\"type\":\"string\"},{\"name\":\"key276\",\"type\":\"string\"},{\"name\":\"key277\",\"type\":\"string\"},{\"name\":\"key278\",\"type\":\"string\"},{\"name\":\"key279\",\"type\":\"string\"},{\"name\":\"key280\",\"type\":\"string\"},{\"name\":\"key281\",\"type\":\"string\"},{\"name\":\"key282\",\"type\":\"string\"},{\"name\":\"key283\",\"type\":\"string\"},{\"name\":\"key284\",\"type\":\"string\"},{\"name\":\"key285\",\"type\":\"string\"},{\"name\":\"key286\",\"type\":\"string\"},{\"name\":\"key287\",\"type\":\"string\"},{\"name\":\"key288\",\"type\":\"string\"},{\"name\":\"key289\",\"type\":\"string\"},{\"name\":\"key290\",\"type\":\"string\"},{\"name\":\"key291\",\"type\":\"string\"},{\"name\":\"key292\",\"type\":\"string\"},{\"name\":\"key293\",\"type\":\"string\"},{\"name\":\"key294\",\"type\":\"string\"},{\"name\":\"key295\",\"type\":\"string\"},{\"name\":\"key296\",\"type\":\"string\"},{\"name\":\"key297\",\"type\":\"string\"},{\"name\":\"key298\",\"type\":\"string\"},{\"name\":\"key299\",\"type\":\"string\"},{\"name\":\"key300\",\"type\":\"string\"},{\"name\":\"key301\",\"type\":\"string\"},{\"name\":\"key302\",\"type\":\"string\"},{\"name\":\"key303\",\"type\":\"string\"},{\"name\":\"key304\",\"type\":\"string\"},{\"name\":\"key305\",\"type\":\"string\"},{\"name\":\"key306\",\"type\":\"string\"},{\"name\":\"key307\",\"type\":\"string\"},{\"name\":\"key308\",\"type\":\"string\"},{\"name\":\"key309\",\"type\":\"string\"},{\"name\":\"key310\",\"type\":\"string\"},{\"name\":\"key311\",\"type\":\"string\"},{\"name\":\"key312\",\"type\":\"string\"},{\"name\":\"key313\",\"type\":\"string\"},{\"name\":\"key314\",\"type\":\"string\"},{\"name\":\"key315\",\"type\":\"string\"},{\"name\":\"key316\",\"type\":\"string\"},{\"name\":\"key317\",\"type\":\"string\"},{\"name\":\"key318\",\"type\":\"string\"},{\"name\":\"key319\",\"type\":\"string\"},{\"name\":\"key320\",\"type\":\"string\"},{\"name\":\"key321\",\"type\":\"string\"},{\"name\":\"key322\",\"type\":\"string\"},{\"name\":\"key323\",\"type\":\"string\"},{\"name\":\"key324\",\"type\":\"string\"},{\"name\":\"key325\",\"type\":\"string\"},{\"name\":\"key326\",\"type\":\"string\"},{\"name\":\"key327\",\"type\":\"string\"},{\"name\":\"key328\",\"type\":\"string\"},{\"name\":\"key329\",\"type\":\"string\"},{\"name\":\"key330\",\"type\":\"string\"},{\"name\":\"key331\",\"type\":\"string\"},{\"name\":\"key332\",\"type\":\"string\"},{\"name\":\"key333\",\"type\":\"string\"},{\"name\":\"key334\",\"type\":\"string\"},{\"name\":\"key335\",\"type\":\"string\"},{\"name\":\"key336\",\"type\":\"string\"},{\"name\":\"key337\",\"type\":\"string\"},{\"name\":\"key338\",\"type\":\"string\"},{\"name\":\"key339\",\"type\":\"string\"},{\"name\":\"key340\",\"type\":\"string\"},{\"name\":\"key341\",\"type\":\"string\"},{\"name\":\"key342\",\"type\":\"string\"},{\"name\":\"key343\",\"type\":\"string\"},{\"name\":\"key344\",\"type\":\"string\"},{\"name\":\"key345\",\"type\":\"string\"},{\"name\":\"key346\",\"type\":\"string\"},{\"name\":\"key347\",\"type\":\"string\"},{\"name\":\"key348\",\"type\":\"string\"},{\"name\":\"key349\",\"type\":\"string\"},{\"name\":\"key350\",\"type\":\"string\"},{\"name\":\"key351\",\"type\":\"string\"},{\"name\":\"key352\",\"type\":\"string\"},{\"name\":\"key353\",\"type\":\"string\"},{\"name\":\"key354\",\"type\":\"string\"},{\"name\":\"key355\",\"type\":\"string\"},{\"name\":\"key356\",\"type\":\"string\"},{\"name\":\"key357\",\"type\":\"string\"},{\"name\":\"key358\",\"type\":\"string\"},{\"name\":\"key359\",\"type\":\"string\"},{\"name\":\"key360\",\"type\":\"string\"},{\"name\":\"key361\",\"type\":\"string\"},{\"name\":\"key362\",\"type\":\"string\"},{\"name\":\"key363\",\"type\":\"string\"},{\"name\":\"key364\",\"type\":\"string\"},{\"name\":\"key365\",\"type\":\"string\"},{\"name\":\"key366\",\"type\":\"string\"},{\"name\":\"key367\",\"type\":\"string\"},{\"name\":\"key368\",\"type\":\"string\"},{\"name\":\"key369\",\"type\":\"string\"},{\"name\":\"key370\",\"type\":\"string\"},{\"name\":\"key371\",\"type\":\"string\"},{\"name\":\"key372\",\"type\":\"string\"},{\"name\":\"key373\",\"type\":\"string\"},{\"name\":\"key374\",\"type\":\"string\"},{\"name\":\"key375\",\"type\":\"string\"},{\"name\":\"key376\",\"type\":\"string\"},{\"name\":\"key377\",\"type\":\"string\"},{\"name\":\"key378\",\"type\":\"string\"},{\"name\":\"key379\",\"type\":\"string\"},{\"name\":\"key380\",\"type\":\"string\"},{\"name\":\"key381\",\"type\":\"string\"},{\"name\":\"key382\",\"type\":\"string\"},{\"name\":\"key383\",\"type\":\"string\"},{\"name\":\"key384\",\"type\":\"string\"},{\"name\":\"key385\",\"type\":\"string\"},{\"name\":\"key386\",\"type\":\"string\"},{\"name\":\"key387\",\"type\":\"string\"},{\"name\":\"key388\",\"type\":\"string\"},{\"name\":\"key389\",\"type\":\"string\"},{\"name\":\"key390\",\"type\":\"string\"},{\"name\":\"key391\",\"type\":\"string\"},{\"name\":\"key392\",\"type\":\"string\"},{\"name\":\"key393\",\"type\":\"string\"},{\"name\":\"key394\",\"type\":\"string\"},{\"name\":\"key395\",\"type\":\"string\"},{\"name\":\"key396\",\"type\":\"string\"},{\"name\":\"key397\",\"type\":\"string\"},{\"name\":\"key398\",\"type\":\"string\"},{\"name\":\"key399\",\"type\":\"string\"},{\"name\":\"key400\",\"type\":\"string\"},{\"name\":\"key401\",\"type\":\"string\"},{\"name\":\"key402\",\"type\":\"string\"},{\"name\":\"key403\",\"type\":\"string\"},{\"name\":\"key404\",\"type\":\"string\"},{\"name\":\"key405\",\"type\":\"string\"},{\"name\":\"key406\",\"type\":\"string\"},{\"name\":\"key407\",\"type\":\"string\"},{\"name\":\"key408\",\"type\":\"string\"},{\"name\":\"key409\",\"type\":\"string\"},{\"name\":\"key410\",\"type\":\"string\"},{\"name\":\"key411\",\"type\":\"string\"},{\"name\":\"key412\",\"type\":\"string\"},{\"name\":\"key413\",\"type\":\"string\"},{\"name\":\"key414\",\"type\":\"string\"},{\"name\":\"key415\",\"type\":\"string\"},{\"name\":\"key416\",\"type\":\"string\"},{\"name\":\"key417\",\"type\":\"string\"},{\"name\":\"key418\",\"type\":\"string\"},{\"name\":\"key419\",\"type\":\"string\"},{\"name\":\"key420\",\"type\":\"string\"},{\"name\":\"key421\",\"type\":\"string\"},{\"name\":\"key422\",\"type\":\"string\"},{\"name\":\"key423\",\"type\":\"string\"},{\"name\":\"key424\",\"type\":\"string\"},{\"name\":\"key425\",\"type\":\"string\"},{\"name\":\"key426\",\"type\":\"string\"},{\"name\":\"key427\",\"type\":\"string\"},{\"name\":\"key428\",\"type\":\"string\"},{\"name\":\"key429\",\"type\":\"string\"},{\"name\":\"key430\",\"type\":\"string\"},{\"name\":\"key431\",\"type\":\"string\"},{\"name\":\"key432\",\"type\":\"string\"},{\"name\":\"key433\",\"type\":\"string\"},{\"name\":\"key434\",\"type\":\"string\"},{\"name\":\"key435\",\"type\":\"string\"},{\"name\":\"key436\",\"type\":\"string\"},{\"name\":\"key437\",\"type\":\"string\"},{\"name\":\"key438\",\"type\":\"string\"},{\"name\":\"key439\",\"type\":\"string\"},{\"name\":\"key440\",\"type\":\"string\"},{\"name\":\"key441\",\"type\":\"string\"},{\"name\":\"key442\",\"type\":\"string\"},{\"name\":\"key443\",\"type\":\"string\"},{\"name\":\"key444\",\"type\":\"string\"},{\"name\":\"key445\",\"type\":\"string\"},{\"name\":\"key446\",\"type\":\"string\"},{\"name\":\"key447\",\"type\":\"string\"},{\"name\":\"key448\",\"type\":\"string\"},{\"name\":\"key449\",\"type\":\"string\"},{\"name\":\"key450\",\"type\":\"string\"},{\"name\":\"key451\",\"type\":\"string\"},{\"name\":\"key452\",\"type\":\"string\"},{\"name\":\"key453\",\"type\":\"string\"},{\"name\":\"key454\",\"type\":\"string\"},{\"name\":\"key455\",\"type\":\"string\"},{\"name\":\"key456\",\"type\":\"string\"},{\"name\":\"key457\",\"type\":\"string\"},{\"name\":\"key458\",\"type\":\"string\"},{\"name\":\"key459\",\"type\":\"string\"},{\"name\":\"key460\",\"type\":\"string\"},{\"name\":\"key461\",\"type\":\"string\"},{\"name\":\"key462\",\"type\":\"string\"},{\"name\":\"key463\",\"type\":\"string\"},{\"name\":\"key464\",\"type\":\"string\"},{\"name\":\"key465\",\"type\":\"string\"},{\"name\":\"key466\",\"type\":\"string\"},{\"name\":\"key467\",\"type\":\"string\"},{\"name\":\"key468\",\"type\":\"string\"},{\"name\":\"key469\",\"type\":\"string\"},{\"name\":\"key470\",\"type\":\"string\"},{\"name\":\"key471\",\"type\":\"string\"},{\"name\":\"key472\",\"type\":\"string\"},{\"name\":\"key473\",\"type\":\"string\"},{\"name\":\"key474\",\"type\":\"string\"},{\"name\":\"key475\",\"type\":\"string\"},{\"name\":\"key476\",\"type\":\"string\"},{\"name\":\"key477\",\"type\":\"string\"},{\"name\":\"key478\",\"type\":\"string\"},{\"name\":\"key479\",\"type\":\"string\"},{\"name\":\"key480\",\"type\":\"string\"},{\"name\":\"key481\",\"type\":\"string\"},{\"name\":\"key482\",\"type\":\"string\"},{\"name\":\"key483\",\"type\":\"string\"},{\"name\":\"key484\",\"type\":\"string\"},{\"name\":\"key485\",\"type\":\"string\"},{\"name\":\"key486\",\"type\":\"string\"},{\"name\":\"key487\",\"type\":\"string\"},{\"name\":\"key488\",\"type\":\"string\"},{\"name\":\"key489\",\"type\":\"string\"},{\"name\":\"key490\",\"type\":\"string\"},{\"name\":\"key491\",\"type\":\"string\"},{\"name\":\"key492\",\"type\":\"string\"},{\"name\":\"key493\",\"type\":\"string\"},{\"name\":\"key494\",\"type\":\"string\"},{\"name\":\"key495\",\"type\":\"string\"},{\"name\":\"key496\",\"type\":\"string\"},{\"name\":\"key497\",\"type\":\"string\"},{\"name\":\"key498\",\"type\":\"string\"},{\"name\":\"key499\",\"type\":\"string\"},{\"name\":\"key500\",\"type\":\"string\"},{\"name\":\"key501\",\"type\":\"string\"},{\"name\":\"key502\",\"type\":\"string\"},{\"name\":\"key503\",\"type\":\"string\"},{\"name\":\"key504\",\"type\":\"string\"},{\"name\":\"key505\",\"type\":\"string\"},{\"name\":\"key506\",\"type\":\"string\"},{\"name\":\"key507\",\"type\":\"string\"},{\"name\":\"key508\",\"type\":\"string\"},{\"name\":\"key509\",\"type\":\"string\"},{\"name\":\"key510\",\"type\":\"string\"},{\"name\":\"key511\",\"type\":\"string\"},{\"name\":\"key512\",\"type\":\"string\"},{\"name\":\"key513\",\"type\":\"string\"},{\"name\":\"key514\",\"type\":\"string\"},{\"name\":\"key515\",\"type\":\"string\"},{\"name\":\"key516\",\"type\":\"string\"},{\"name\":\"key517\",\"type\":\"string\"},{\"name\":\"key518\",\"type\":\"string\"},{\"name\":\"key519\",\"type\":\"string\"},{\"name\":\"key520\",\"type\":\"string\"},{\"name\":\"key521\",\"type\":\"string\"},{\"name\":\"key522\",\"type\":\"string\"},{\"name\":\"key523\",\"type\":\"string\"},{\"name\":\"key524\",\"type\":\"string\"},{\"name\":\"key525\",\"type\":\"string\"},{\"name\":\"key526\",\"type\":\"string\"},{\"name\":\"key527\",\"type\":\"string\"},{\"name\":\"key528\",\"type\":\"string\"},{\"name\":\"key529\",\"type\":\"string\"},{\"name\":\"key530\",\"type\":\"string\"},{\"name\":\"key531\",\"type\":\"string\"},{\"name\":\"key532\",\"type\":\"string\"},{\"name\":\"key533\",\"type\":\"string\"},{\"name\":\"key534\",\"type\":\"string\"},{\"name\":\"key535\",\"type\":\"string\"},{\"name\":\"key536\",\"type\":\"string\"},{\"name\":\"key537\",\"type\":\"string\"},{\"name\":\"key538\",\"type\":\"string\"},{\"name\":\"key539\",\"type\":\"string\"},{\"name\":\"key540\",\"type\":\"string\"},{\"name\":\"key541\",\"type\":\"string\"},{\"name\":\"key542\",\"type\":\"string\"},{\"name\":\"key543\",\"type\":\"string\"},{\"name\":\"key544\",\"type\":\"string\"},{\"name\":\"key545\",\"type\":\"string\"},{\"name\":\"key546\",\"type\":\"string\"},{\"name\":\"key547\",\"type\":\"string\"},{\"name\":\"key548\",\"type\":\"string\"},{\"name\":\"key549\",\"type\":\"string\"},{\"name\":\"key550\",\"type\":\"string\"},{\"name\":\"key551\",\"type\":\"string\"},{\"name\":\"key552\",\"type\":\"string\"},{\"name\":\"key553\",\"type\":\"string\"},{\"name\":\"key554\",\"type\":\"string\"},{\"name\":\"key555\",\"type\":\"string\"},{\"name\":\"key556\",\"type\":\"string\"},{\"name\":\"key557\",\"type\":\"string\"},{\"name\":\"key558\",\"type\":\"string\"},{\"name\":\"key559\",\"type\":\"string\"},{\"name\":\"key560\",\"type\":\"string\"},{\"name\":\"key561\",\"type\":\"string\"},{\"name\":\"key562\",\"type\":\"string\"},{\"name\":\"key563\",\"type\":\"string\"},{\"name\":\"key564\",\"type\":\"string\"},{\"name\":\"key565\",\"type\":\"string\"},{\"name\":\"key566\",\"type\":\"string\"},{\"name\":\"key567\",\"type\":\"string\"},{\"name\":\"key568\",\"type\":\"string\"},{\"name\":\"key569\",\"type\":\"string\"},{\"name\":\"key570\",\"type\":\"string\"},{\"name\":\"key571\",\"type\":\"string\"},{\"name\":\"key572\",\"type\":\"string\"},{\"name\":\"key573\",\"type\":\"string\"},{\"name\":\"key574\",\"type\":\"string\"},{\"name\":\"key575\",\"type\":\"string\"},{\"name\":\"key576\",\"type\":\"string\"},{\"name\":\"key577\",\"type\":\"string\"},{\"name\":\"key578\",\"type\":\"string\"},{\"name\":\"key579\",\"type\":\"string\"},{\"name\":\"key580\",\"type\":\"string\"},{\"name\":\"key581\",\"type\":\"string\"},{\"name\":\"key582\",\"type\":\"string\"},{\"name\":\"key583\",\"type\":\"string\"},{\"name\":\"key584\",\"type\":\"string\"},{\"name\":\"key585\",\"type\":\"string\"},{\"name\":\"key586\",\"type\":\"string\"},{\"name\":\"key587\",\"type\":\"string\"},{\"name\":\"key588\",\"type\":\"string\"},{\"name\":\"key589\",\"type\":\"string\"},{\"name\":\"key590\",\"type\":\"string\"},{\"name\":\"key591\",\"type\":\"string\"},{\"name\":\"key592\",\"type\":\"string\"},{\"name\":\"key593\",\"type\":\"string\"},{\"name\":\"key594\",\"type\":\"string\"},{\"name\":\"key595\",\"type\":\"string\"},{\"name\":\"key596\",\"type\":\"string\"},{\"name\":\"key597\",\"type\":\"string\"},{\"name\":\"key598\",\"type\":\"string\"},{\"name\":\"key599\",\"type\":\"string\"},{\"name\":\"key600\",\"type\":\"string\"},{\"name\":\"key601\",\"type\":\"string\"},{\"name\":\"key602\",\"type\":\"string\"},{\"name\":\"key603\",\"type\":\"string\"},{\"name\":\"key604\",\"type\":\"string\"},{\"name\":\"key605\",\"type\":\"string\"},{\"name\":\"key606\",\"type\":\"string\"},{\"name\":\"key607\",\"type\":\"string\"},{\"name\":\"key608\",\"type\":\"string\"},{\"name\":\"key609\",\"type\":\"string\"},{\"name\":\"key610\",\"type\":\"string\"},{\"name\":\"key611\",\"type\":\"string\"},{\"name\":\"key612\",\"type\":\"string\"},{\"name\":\"key613\",\"type\":\"string\"},{\"name\":\"key614\",\"type\":\"string\"},{\"name\":\"key615\",\"type\":\"string\"},{\"name\":\"key616\",\"type\":\"string\"},{\"name\":\"key617\",\"type\":\"string\"},{\"name\":\"key618\",\"type\":\"string\"},{\"name\":\"key619\",\"type\":\"string\"},{\"name\":\"key620\",\"type\":\"string\"},{\"name\":\"key621\",\"type\":\"string\"},{\"name\":\"key622\",\"type\":\"string\"},{\"name\":\"key623\",\"type\":\"string\"},{\"name\":\"key624\",\"type\":\"string\"},{\"name\":\"key625\",\"type\":\"string\"},{\"name\":\"key626\",\"type\":\"string\"},{\"name\":\"key627\",\"type\":\"string\"},{\"name\":\"key628\",\"type\":\"string\"},{\"name\":\"key629\",\"type\":\"string\"},{\"name\":\"key630\",\"type\":\"string\"},{\"name\":\"key631\",\"type\":\"string\"},{\"name\":\"key632\",\"type\":\"string\"},{\"name\":\"key633\",\"type\":\"string\"},{\"name\":\"key634\",\"type\":\"string\"},{\"name\":\"key635\",\"type\":\"string\"},{\"name\":\"key636\",\"type\":\"string\"},{\"name\":\"key637\",\"type\":\"string\"},{\"name\":\"key638\",\"type\":\"string\"},{\"name\":\"key639\",\"type\":\"string\"},{\"name\":\"key640\",\"type\":\"string\"},{\"name\":\"key641\",\"type\":\"string\"},{\"name\":\"key642\",\"type\":\"string\"},{\"name\":\"key643\",\"type\":\"string\"},{\"name\":\"key644\",\"type\":\"string\"},{\"name\":\"key645\",\"type\":\"string\"},{\"name\":\"key646\",\"type\":\"string\"},{\"name\":\"key647\",\"type\":\"string\"},{\"name\":\"key648\",\"type\":\"string\"},{\"name\":\"key649\",\"type\":\"string\"},{\"name\":\"key650\",\"type\":\"string\"},{\"name\":\"key651\",\"type\":\"string\"},{\"name\":\"key652\",\"type\":\"string\"},{\"name\":\"key653\",\"type\":\"string\"},{\"name\":\"key654\",\"type\":\"string\"},{\"name\":\"key655\",\"type\":\"string\"},{\"name\":\"key656\",\"type\":\"string\"},{\"name\":\"key657\",\"type\":\"string\"},{\"name\":\"key658\",\"type\":\"string\"},{\"name\":\"key659\",\"type\":\"string\"},{\"name\":\"key660\",\"type\":\"string\"},{\"name\":\"key661\",\"type\":\"string\"},{\"name\":\"key662\",\"type\":\"string\"},{\"name\":\"key663\",\"type\":\"string\"},{\"name\":\"key664\",\"type\":\"string\"},{\"name\":\"key665\",\"type\":\"string\"},{\"name\":\"key666\",\"type\":\"string\"},{\"name\":\"key667\",\"type\":\"string\"},{\"name\":\"key668\",\"type\":\"string\"},{\"name\":\"key669\",\"type\":\"string\"},{\"name\":\"key670\",\"type\":\"string\"},{\"name\":\"key671\",\"type\":\"string\"},{\"name\":\"key672\",\"type\":\"string\"},{\"name\":\"key673\",\"type\":\"string\"},{\"name\":\"key674\",\"type\":\"string\"},{\"name\":\"key675\",\"type\":\"string\"},{\"name\":\"key676\",\"type\":\"string\"},{\"name\":\"key677\",\"type\":\"string\"},{\"name\":\"key678\",\"type\":\"string\"},{\"name\":\"key679\",\"type\":\"string\"},{\"name\":\"key680\",\"type\":\"string\"},{\"name\":\"key681\",\"type\":\"string\"},{\"name\":\"key682\",\"type\":\"string\"},{\"name\":\"key683\",\"type\":\"string\"},{\"name\":\"key684\",\"type\":\"string\"},{\"name\":\"key685\",\"type\":\"string\"},{\"name\":\"key686\",\"type\":\"string\"},{\"name\":\"key687\",\"type\":\"string\"},{\"name\":\"key688\",\"type\":\"string\"},{\"name\":\"key689\",\"type\":\"string\"},{\"name\":\"key690\",\"type\":\"string\"},{\"name\":\"key691\",\"type\":\"string\"},{\"name\":\"key692\",\"type\":\"string\"},{\"name\":\"key693\",\"type\":\"string\"},{\"name\":\"key694\",\"type\":\"string\"},{\"name\":\"key695\",\"type\":\"string\"},{\"name\":\"key696\",\"type\":\"string\"},{\"name\":\"key697\",\"type\":\"string\"},{\"name\":\"key698\",\"type\":\"string\"},{\"name\":\"key699\",\"type\":\"string\"},{\"name\":\"key700\",\"type\":\"string\"},{\"name\":\"key701\",\"type\":\"string\"},{\"name\":\"key702\",\"type\":\"string\"},{\"name\":\"key703\",\"type\":\"string\"},{\"name\":\"key704\",\"type\":\"string\"},{\"name\":\"key705\",\"type\":\"string\"},{\"name\":\"key706\",\"type\":\"string\"},{\"name\":\"key707\",\"type\":\"string\"},{\"name\":\"key708\",\"type\":\"string\"},{\"name\":\"key709\",\"type\":\"string\"},{\"name\":\"key710\",\"type\":\"string\"},{\"name\":\"key711\",\"type\":\"string\"},{\"name\":\"key712\",\"type\":\"string\"},{\"name\":\"key713\",\"type\":\"string\"},{\"name\":\"key714\",\"type\":\"string\"},{\"name\":\"key715\",\"type\":\"string\"},{\"name\":\"key716\",\"type\":\"string\"},{\"name\":\"key717\",\"type\":\"string\"},{\"name\":\"key718\",\"type\":\"string\"},{\"name\":\"key719\",\"type\":\"string\"},{\"name\":\"key720\",\"type\":\"string\"},{\"name\":\"key721\",\"type\":\"string\"},{\"name\":\"key722\",\"type\":\"string\"},{\"name\":\"key723\",\"type\":\"string\"},{\"name\":\"key724\",\"type\":\"string\"},{\"name\":\"key725\",\"type\":\"string\"},{\"name\":\"key726\",\"type\":\"string\"},{\"name\":\"key727\",\"type\":\"string\"},{\"name\":\"key728\",\"type\":\"string\"},{\"name\":\"key729\",\"type\":\"string\"},{\"name\":\"key730\",\"type\":\"string\"},{\"name\":\"key731\",\"type\":\"string\"},{\"name\":\"key732\",\"type\":\"string\"},{\"name\":\"key733\",\"type\":\"string\"},{\"name\":\"key734\",\"type\":\"string\"},{\"name\":\"key735\",\"type\":\"string\"},{\"name\":\"key736\",\"type\":\"string\"},{\"name\":\"key737\",\"type\":\"string\"},{\"name\":\"key738\",\"type\":\"string\"},{\"name\":\"key739\",\"type\":\"string\"},{\"name\":\"key740\",\"type\":\"string\"},{\"name\":\"key741\",\"type\":\"string\"},{\"name\":\"key742\",\"type\":\"string\"},{\"name\":\"key743\",\"type\":\"string\"},{\"name\":\"key744\",\"type\":\"string\"},{\"name\":\"key745\",\"type\":\"string\"},{\"name\":\"key746\",\"type\":\"string\"},{\"name\":\"key747\",\"type\":\"string\"},{\"name\":\"key748\",\"type\":\"string\"},{\"name\":\"key749\",\"type\":\"string\"},{\"name\":\"key750\",\"type\":\"string\"},{\"name\":\"key751\",\"type\":\"string\"},{\"name\":\"key752\",\"type\":\"string\"},{\"name\":\"key753\",\"type\":\"string\"},{\"name\":\"key754\",\"type\":\"string\"},{\"name\":\"key755\",\"type\":\"string\"},{\"name\":\"key756\",\"type\":\"string\"},{\"name\":\"key757\",\"type\":\"string\"},{\"name\":\"key758\",\"type\":\"string\"},{\"name\":\"key759\",\"type\":\"string\"},{\"name\":\"key760\",\"type\":\"string\"},{\"name\":\"key761\",\"type\":\"string\"},{\"name\":\"key762\",\"type\":\"string\"},{\"name\":\"key763\",\"type\":\"string\"},{\"name\":\"key764\",\"type\":\"string\"},{\"name\":\"key765\",\"type\":\"string\"},{\"name\":\"key766\",\"type\":\"string\"},{\"name\":\"key767\",\"type\":\"string\"},{\"name\":\"key768\",\"type\":\"string\"},{\"name\":\"key769\",\"type\":\"string\"},{\"name\":\"key770\",\"type\":\"string\"},{\"name\":\"key771\",\"type\":\"string\"},{\"name\":\"key772\",\"type\":\"string\"},{\"name\":\"key773\",\"type\":\"string\"},{\"name\":\"key774\",\"type\":\"string\"},{\"name\":\"key775\",\"type\":\"string\"},{\"name\":\"key776\",\"type\":\"string\"},{\"name\":\"key777\",\"type\":\"string\"},{\"name\":\"key778\",\"type\":\"string\"},{\"name\":\"key779\",\"type\":\"string\"},{\"name\":\"key780\",\"type\":\"string\"},{\"name\":\"key781\",\"type\":\"string\"},{\"name\":\"key782\",\"type\":\"string\"},{\"name\":\"key783\",\"type\":\"string\"},{\"name\":\"key784\",\"type\":\"string\"},{\"name\":\"key785\",\"type\":\"string\"},{\"name\":\"key786\",\"type\":\"string\"},{\"name\":\"key787\",\"type\":\"string\"},{\"name\":\"key788\",\"type\":\"string\"},{\"name\":\"key789\",\"type\":\"string\"},{\"name\":\"key790\",\"type\":\"string\"},{\"name\":\"key791\",\"type\":\"string\"},{\"name\":\"key792\",\"type\":\"string\"},{\"name\":\"key793\",\"type\":\"string\"},{\"name\":\"key794\",\"type\":\"string\"},{\"name\":\"key795\",\"type\":\"string\"},{\"name\":\"key796\",\"type\":\"string\"},{\"name\":\"key797\",\"type\":\"string\"},{\"name\":\"key798\",\"type\":\"string\"},{\"name\":\"key799\",\"type\":\"string\"},{\"name\":\"key800\",\"type\":\"string\"},{\"name\":\"key801\",\"type\":\"string\"},{\"name\":\"key802\",\"type\":\"string\"},{\"name\":\"key803\",\"type\":\"string\"},{\"name\":\"key804\",\"type\":\"string\"},{\"name\":\"key805\",\"type\":\"string\"},{\"name\":\"key806\",\"type\":\"string\"},{\"name\":\"key807\",\"type\":\"string\"},{\"name\":\"key808\",\"type\":\"string\"},{\"name\":\"key809\",\"type\":\"string\"},{\"name\":\"key810\",\"type\":\"string\"},{\"name\":\"key811\",\"type\":\"string\"},{\"name\":\"key812\",\"type\":\"string\"},{\"name\":\"key813\",\"type\":\"string\"},{\"name\":\"key814\",\"type\":\"string\"},{\"name\":\"key815\",\"type\":\"string\"},{\"name\":\"key816\",\"type\":\"string\"},{\"name\":\"key817\",\"type\":\"string\"},{\"name\":\"key818\",\"type\":\"string\"},{\"name\":\"key819\",\"type\":\"string\"},{\"name\":\"key820\",\"type\":\"string\"},{\"name\":\"key821\",\"type\":\"string\"},{\"name\":\"key822\",\"type\":\"string\"},{\"name\":\"key823\",\"type\":\"string\"},{\"name\":\"key824\",\"type\":\"string\"},{\"name\":\"key825\",\"type\":\"string\"},{\"name\":\"key826\",\"type\":\"string\"},{\"name\":\"key827\",\"type\":\"string\"},{\"name\":\"key828\",\"type\":\"string\"},{\"name\":\"key829\",\"type\":\"string\"},{\"name\":\"key830\",\"type\":\"string\"},{\"name\":\"key831\",\"type\":\"string\"},{\"name\":\"key832\",\"type\":\"string\"},{\"name\":\"key833\",\"type\":\"string\"},{\"name\":\"key834\",\"type\":\"string\"},{\"name\":\"key835\",\"type\":\"string\"},{\"name\":\"key836\",\"type\":\"string\"},{\"name\":\"key837\",\"type\":\"string\"},{\"name\":\"key838\",\"type\":\"string\"},{\"name\":\"key839\",\"type\":\"string\"},{\"name\":\"key840\",\"type\":\"string\"},{\"name\":\"key841\",\"type\":\"string\"},{\"name\":\"key842\",\"type\":\"string\"},{\"name\":\"key843\",\"type\":\"string\"},{\"name\":\"key844\",\"type\":\"string\"},{\"name\":\"key845\",\"type\":\"string\"},{\"name\":\"key846\",\"type\":\"string\"},{\"name\":\"key847\",\"type\":\"string\"},{\"name\":\"key848\",\"type\":\"string\"},{\"name\":\"key849\",\"type\":\"string\"},{\"name\":\"key850\",\"type\":\"string\"},{\"name\":\"key851\",\"type\":\"string\"},{\"name\":\"key852\",\"type\":\"string\"},{\"name\":\"key853\",\"type\":\"string\"},{\"name\":\"key854\",\"type\":\"string\"},{\"name\":\"key855\",\"type\":\"string\"},{\"name\":\"key856\",\"type\":\"string\"},{\"name\":\"key857\",\"type\":\"string\"},{\"name\":\"key858\",\"type\":\"string\"},{\"name\":\"key859\",\"type\":\"string\"},{\"name\":\"key860\",\"type\":\"string\"},{\"name\":\"key861\",\"type\":\"string\"},{\"name\":\"key862\",\"type\":\"string\"},{\"name\":\"key863\",\"type\":\"string\"},{\"name\":\"key864\",\"type\":\"string\"},{\"name\":\"key865\",\"type\":\"string\"},{\"name\":\"key866\",\"type\":\"string\"},{\"name\":\"key867\",\"type\":\"string\"},{\"name\":\"key868\",\"type\":\"string\"},{\"name\":\"key869\",\"type\":\"string\"},{\"name\":\"key870\",\"type\":\"string\"},{\"name\":\"key871\",\"type\":\"string\"},{\"name\":\"key872\",\"type\":\"string\"},{\"name\":\"key873\",\"type\":\"string\"},{\"name\":\"key874\",\"type\":\"string\"},{\"name\":\"key875\",\"type\":\"string\"},{\"name\":\"key876\",\"type\":\"string\"},{\"name\":\"key877\",\"type\":\"string\"},{\"name\":\"key878\",\"type\":\"string\"},{\"name\":\"key879\",\"type\":\"string\"},{\"name\":\"key880\",\"type\":\"string\"},{\"name\":\"key881\",\"type\":\"string\"},{\"name\":\"key882\",\"type\":\"string\"},{\"name\":\"key883\",\"type\":\"string\"},{\"name\":\"key884\",\"type\":\"string\"},{\"name\":\"key885\",\"type\":\"string\"},{\"name\":\"key886\",\"type\":\"string\"},{\"name\":\"key887\",\"type\":\"string\"},{\"name\":\"key888\",\"type\":\"string\"},{\"name\":\"key889\",\"type\":\"string\"},{\"name\":\"key890\",\"type\":\"string\"},{\"name\":\"key891\",\"type\":\"string\"},{\"name\":\"key892\",\"type\":\"string\"},{\"name\":\"key893\",\"type\":\"string\"},{\"name\":\"key894\",\"type\":\"string\"},{\"name\":\"key895\",\"type\":\"string\"},{\"name\":\"key896\",\"type\":\"string\"},{\"name\":\"key897\",\"type\":\"string\"},{\"name\":\"key898\",\"type\":\"string\"},{\"name\":\"key899\",\"type\":\"string\"},{\"name\":\"key900\",\"type\":\"string\"},{\"name\":\"key901\",\"type\":\"string\"},{\"name\":\"key902\",\"type\":\"string\"},{\"name\":\"key903\",\"type\":\"string\"},{\"name\":\"key904\",\"type\":\"string\"},{\"name\":\"key905\",\"type\":\"string\"},{\"name\":\"key906\",\"type\":\"string\"},{\"name\":\"key907\",\"type\":\"string\"},{\"name\":\"key908\",\"type\":\"string\"},{\"name\":\"key909\",\"type\":\"string\"},{\"name\":\"key910\",\"type\":\"string\"},{\"name\":\"key911\",\"type\":\"string\"},{\"name\":\"key912\",\"type\":\"string\"},{\"name\":\"key913\",\"type\":\"string\"},{\"name\":\"key914\",\"type\":\"string\"},{\"name\":\"key915\",\"type\":\"string\"},{\"name\":\"key916\",\"type\":\"string\"},{\"name\":\"key917\",\"type\":\"string\"},{\"name\":\"key918\",\"type\":\"string\"},{\"name\":\"key919\",\"type\":\"string\"},{\"name\":\"key920\",\"type\":\"string\"},{\"name\":\"key921\",\"type\":\"string\"},{\"name\":\"key922\",\"type\":\"string\"},{\"name\":\"key923\",\"type\":\"string\"},{\"name\":\"key924\",\"type\":\"string\"},{\"name\":\"key925\",\"type\":\"string\"},{\"name\":\"key926\",\"type\":\"string\"},{\"name\":\"key927\",\"type\":\"string\"},{\"name\":\"key928\",\"type\":\"string\"},{\"name\":\"key929\",\"type\":\"string\"},{\"name\":\"key930\",\"type\":\"string\"},{\"name\":\"key931\",\"type\":\"string\"},{\"name\":\"key932\",\"type\":\"string\"},{\"name\":\"key933\",\"type\":\"string\"},{\"name\":\"key934\",\"type\":\"string\"},{\"name\":\"key935\",\"type\":\"string\"},{\"name\":\"key936\",\"type\":\"string\"},{\"name\":\"key937\",\"type\":\"string\"},{\"name\":\"key938\",\"type\":\"string\"},{\"name\":\"key939\",\"type\":\"string\"},{\"name\":\"key940\",\"type\":\"string\"},{\"name\":\"key941\",\"type\":\"string\"},{\"name\":\"key942\",\"type\":\"string\"},{\"name\":\"key943\",\"type\":\"string\"},{\"name\":\"key944\",\"type\":\"string\"},{\"name\":\"key945\",\"type\":\"string\"},{\"name\":\"key946\",\"type\":\"string\"},{\"name\":\"key947\",\"type\":\"string\"},{\"name\":\"key948\",\"type\":\"string\"},{\"name\":\"key949\",\"type\":\"string\"},{\"name\":\"key950\",\"type\":\"string\"},{\"name\":\"key951\",\"type\":\"string\"},{\"name\":\"key952\",\"type\":\"string\"},{\"name\":\"key953\",\"type\":\"string\"},{\"name\":\"key954\",\"type\":\"string\"},{\"name\":\"key955\",\"type\":\"string\"},{\"name\":\"key956\",\"type\":\"string\"},{\"name\":\"key957\",\"type\":\"string\"},{\"name\":\"key958\",\"type\":\"string\"},{\"name\":\"key959\",\"type\":\"string\"},{\"name\":\"key960\",\"type\":\"string\"},{\"name\":\"key961\",\"type\":\"string\"},{\"name\":\"key962\",\"type\":\"string\"},{\"name\":\"key963\",\"type\":\"string\"},{\"name\":\"key964\",\"type\":\"string\"},{\"name\":\"key965\",\"type\":\"string\"},{\"name\":\"key966\",\"type\":\"string\"},{\"name\":\"key967\",\"type\":\"string\"},{\"name\":\"key968\",\"type\":\"string\"},{\"name\":\"key969\",\"type\":\"string\"},{\"name\":\"key970\",\"type\":\"string\"},{\"name\":\"key971\",\"type\":\"string\"},{\"name\":\"key972\",\"type\":\"string\"},{\"name\":\"key973\",\"type\":\"string\"},{\"name\":\"key974\",\"type\":\"string\"},{\"name\":\"key975\",\"type\":\"string\"},{\"name\":\"key976\",\"type\":\"string\"},{\"name\":\"key977\",\"type\":\"string\"},{\"name\":\"key978\",\"type\":\"string\"},{\"name\":\"key979\",\"type\":\"string\"},{\"name\":\"key980\",\"type\":\"string\"},{\"name\":\"key981\",\"type\":\"string\"},{\"name\":\"key982\",\"type\":\"string\"},{\"name\":\"key983\",\"type\":\"string\"},{\"name\":\"key984\",\"type\":\"string\"},{\"name\":\"key985\",\"type\":\"string\"},{\"name\":\"key986\",\"type\":\"string\"},{\"name\":\"key987\",\"type\":\"string\"},{\"name\":\"key988\",\"type\":\"string\"},{\"name\":\"key989\",\"type\":\"string\"},{\"name\":\"key990\",\"type\":\"string\"},{\"name\":\"key991\",\"type\":\"string\"},{\"name\":\"key992\",\"type\":\"string\"},{\"name\":\"key993\",\"type\":\"string\"},{\"name\":\"key994\",\"type\":\"string\"},{\"name\":\"key995\",\"type\":\"string\"},{\"name\":\"key996\",\"type\":\"string\"},{\"name\":\"key997\",\"type\":\"string\"},{\"name\":\"key998\",\"type\":\"string\"},{\"name\":\"key999\",\"type\":\"string\"},{\"name\":\"key1000\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u281 AS \"materialize\".\"public\".\"upsert_many_key_columns_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(283)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_many_key_columns_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_many_key_columns_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"key1\", \"key1000\", \"f1\" FROM [u282 AS \"materialize\".\"public\".\"upsert_many_key_columns\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(284)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "parse_hex_error_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"parse_hex_error_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(285)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "parse_hex_error_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"parse_hex_error_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"decode\"(\"f1\", 'hex') FROM [u284 AS \"materialize\".\"public\".\"parse_hex_error_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(286)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_enrich_value_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_enrich_value_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(287)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_enrich_value", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_enrich_value\" IN CLUSTER [u60] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-enrich-value-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":[\"null\",\"string\"],\"default\":null}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u286 AS \"materialize\".\"public\".\"upsert_enrich_value_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(288)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_enrich_value_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_enrich_value_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"key1\", 1) AS \"key_left\", \"pg_catalog\".\"left\"(\"f1\", 1) AS \"value_left\", \"pg_catalog\".\"right\"(\"f1\", 1), \"pg_catalog\".\"length\"(\"f1\"), \"pg_catalog\".\"count\"(*), \"pg_catalog\".\"sum\"(CASE WHEN \"f1\" IS NULL THEN 1 ELSE 0 END) AS \"nulls\", \"pg_catalog\".\"count\"(\"f1\") AS \"not_nulls\" FROM [u287 AS \"materialize\".\"public\".\"upsert_enrich_value\"] GROUP BY \"pg_catalog\".\"left\"(\"key1\", 1), \"f1\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(289)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn_alter_connection_3a", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn_alter_connection_3a\" TO KAFKA (BROKER = 'kafka:9092'USING SSH TUNNEL [u4 AS \"materialize\".\"public\".\"ssh_tunnel_3\"], SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(290)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_3a_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"alter_connection_source_3a_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(291)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_3a", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"alter_connection_source_3a\" IN CLUSTER [u61] FROM KAFKA CONNECTION [u289 AS \"materialize\".\"public\".\"kafka_conn_alter_connection_3a\"] (TOPIC = 'testdrive-alter-connection-3a-1') FORMAT TEXT ENVELOPE NONE EXPOSE PROGRESS AS [u290 AS \"materialize\".\"public\".\"alter_connection_source_3a_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(292)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_table_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"alter_connection_table_3\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], PRIMARY KEY (\"f1\"))" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(293)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mv_alter_connection_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"mv_alter_connection_3\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" FROM [u292 AS \"materialize\".\"public\".\"alter_connection_table_3\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(294)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_sink_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"alter_connection_sink_3\" IN CLUSTER [u62] FROM [u293 AS \"materialize\".\"public\".\"mv_alter_connection_3\"] INTO KAFKA CONNECTION [u289 AS \"materialize\".\"public\".\"kafka_conn_alter_connection_3a\"] (TOPIC = 'testdrive-alter-connection-sink-3-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(295)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_wide_value_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"upsert_wide_value_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(296)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_wide_value", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"upsert_wide_value\" IN CLUSTER [u63] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-upsert-wide-value-1') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"fields\":[{\"name\":\"key1\",\"type\":\"string\"}]}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"test\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"}]}' ENVELOPE UPSERT EXPOSE PROGRESS AS [u295 AS \"materialize\".\"public\".\"upsert_wide_value_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(297)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "upsert_wide_value_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"upsert_wide_value_view\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"f1\", 1), \"pg_catalog\".\"right\"(\"f1\", 1), \"pg_catalog\".\"length\"(\"f1\") FROM [u296 AS \"materialize\".\"public\".\"upsert_wide_value\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(298)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "constant_plan1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"constant_plan1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(301)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "update_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"update_table\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"], \"f2\" [s22 AS \"pg_catalog\".\"int8\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(302)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "boolean_type_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"boolean_type_table\" (\"boolean_col\" [s6 AS \"pg_catalog\".\"bool\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(303)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_key", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"kafka_key\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(304)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka1_key", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"kafka1_key\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(305)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "garbage_key", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"garbage_key\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(306)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_protocols_password", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"kafka_protocols_password\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(307)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_plaintext", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_plaintext\" TO KAFKA (BROKER = 'kafka:9093'USING SSH TUNNEL [u1 AS \"materialize\".\"public\".\"ssh_tunnel_0\"], SSL CERTIFICATE AUTHORITY = '-----BEGIN CERTIFICATE-----\nMIIFCzCCAvOgAwIBAgIUOcS1xW8+LSj4Q9YXgbpgn1BMYeAwDQYJKoZIhvcNAQEL\nBQAwFDESMBAGA1UEAwwJTVogUlNBIENBMCAXDTIzMTEyMTIyMjY0MFoYDzIxMjMx\nMDI4MjIyNjQwWjAUMRIwEAYDVQQDDAlNWiBSU0EgQ0EwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQDmdaBjHPzzJa6oL9qf/kS2iXDN+rX8hWjkUim1UKXE\nBP2+iN2BuIX+d0IwlfrFESgXPu10hEKRasoz40rgHovb8wSqjYhtt8/rT4PJkA/K\nMsYsMwRJ7bp3b+QII8GHOihFteQZcR+9v827z6tzn4XG49PWh7aYDrnGN4JbicMT\nWfNfbypFGaeYIRV98KKsLIsmcu+hKYAarv2xSeV6nsU2ZRm1/dYe+AiYB9qRDXwQ\n6uyqDAKNz2htsHFuI3DMyhYxEdzljGp1c/thLr4kB6+wqi6i8XSxeCmtmO/bQb6C\nFxRW7wiy+80HY4ECWWNaIhY3GOK1DN2n6A0XT9FBiWbnUDWWXitx++z239KujC9L\nfi9bUFxGLqjvqK2+/cSvyNnF80GbgL8kAzeDzOr/kjj7XP48KPQ0le6Km4R05z3X\nxMrLG54hJlnuhlITYCs+Kkwys2jdokTEe/LdrYythZ5GAbf5zpepdpByjjlwbkIX\n2pJLF/d7v6Q96IZHdAWVGWWuZpGOQOuZjc1EDz+GLNntN+YQaNVB5fey0T8Pyk5X\nfpHb3R4p7defi7G5FIA+5P6nFL/aDb+hIjBYJAhDTT9ZMuJ397KCwz1Mou+YY7lE\n3VeChEiTJysFiLt5vyN5/Ggel6YW9GjAZlV1b5EE5QwdUXNoTxhvvHCqJWVispTZ\nlwIDAQABo1MwUTAdBgNVHQ4EFgQUg8y3pQGeR2p33H6XnzsL5rvMD80wHwYDVR0j\nBBgwFoAUg8y3pQGeR2p33H6XnzsL5rvMD80wDwYDVR0TAQH/BAUwAwEB/zANBgkq\nhkiG9w0BAQsFAAOCAgEATWtigqHyoAsyM8U4DBufX92U1ZQATxYlHnMiHPu1lzl0\n0PignL9QYE1PpKHOQmcUThsGQqe0faTB7ctoqMOX56gLXQjtEWceZ1yvbcSW2t4O\ndhmaGRsu3/QAcXRPqxzkYBJJVCNjd5wBbMdqIf/YeHum0cbzI27AzbdxLPUfDtsv\nDzVg7iP4YNApGF1zF/VzTcnfXngCKz72mYRpz+K0upEuS7jlzA04x8N2BHFw5W7b\n5IMSIQmI4os/Mt9cyTaHWPfxzbp3feI0XOw+hQCrlLeU9oW2xUW5BYG/Y/R4OAR9\nZ3mJRNIMryf3lbyzPFfrT50o8d5ZunkSKRywg5LrdpwAl1LDiMcTSy6p6d/iH4KQ\nHAHN/2IVbihTVGx5f9xwE93rXLw/alpsuD+8fXtWSxm/ACKG9r3x5qZC4+GsSZTW\n+/l7FYsY7Du2YNBkmG0HBMZre88DH3ayX15SIIEBF2z/jHrw/ocKJx5OOi8WmIGD\nzGIrBUrAJjlj1etwdziISihqW//MsvCw382jJd3uy3SkPcnXPAwejcOIKllYzPgq\nvH8i0WZ9iQGcEg7EYXqsKpaBvQhV1KvhBCmT35PKTe9+MNPwvtqQ0hDIVQ7to74i\nZZdx2zOc2bNoNILoXr+9Fwnt6aueYZGYl0lnpSYwBQM5qcZuWQSOfiXO2ZvpHWM=\n-----END CERTIFICATE-----\n')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(308)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_ssl\" TO KAFKA (BROKER = 'kafka:9094', SSL CERTIFICATE = '-----BEGIN CERTIFICATE-----\nMIIELDCCAhSgAwIBAgIUZZDLIY8f6fuuyCdn2gMsQ2qG2kkwDQYJKoZIhvcNAQEL\nBQAwFDESMBAGA1UEAwwJTVogUlNBIENBMCAXDTIzMTEyMTIyMjY0OFoYDzIxMjMx\nMDI4MjIyNjQ4WjAXMRUwEwYDVQQDDAxtYXRlcmlhbGl6ZWQwggEiMA0GCSqGSIb3\nDQEBAQUAA4IBDwAwggEKAoIBAQCYUm3MF+YpXAzdfhgaTqp9KO+NCIT5Id3htijG\nCgII20gA0WnF7gbY808YyZJAR+eVV9duM7HNnZszb/X3IRfQk9vL9pjtWxK82rhq\n7RXZ6dw9zgoIkAh/3YOOHeF/rqeW4qjea722zMXr3t6It+vMk7gaUhv8mSfe3zeY\nbcm7K2/wZnLgYS0fWuxVNLSotsQgp1X5rbkG3nBLjkf1gHu3gIRAzXCX13G7E/Jk\naLEIcGREtYdhnx4uFnAYcI0h0A0uGXS7flrG2eRrM/iaNNgI6NlbXwGVsJhkpT0i\nwc1wY+M2uITqR5eAnN0c9s76NlAF3PoY85NDoWfnQQdI+hkTAgMBAAGjcTBvMC0G\nA1UdEQQmMCSCDG1hdGVyaWFsaXplZIIUKi5tYXRlcmlhbGl6ZWQubG9jYWwwHQYD\nVR0OBBYEFAEypZVsuvw7MdI3yd9WrnV014xQMB8GA1UdIwQYMBaAFGqYB2VQ4kjN\nM6xupGhW5GggaN7LMA0GCSqGSIb3DQEBCwUAA4ICAQA8PWCCsfgFeDNErWNOq8wM\nrP18XecTD+GJnAeOGYNHi0znwcgxaRukuwUxZ+QVUCjoUr5vG87XOrDjBC7bnQIp\nG7gl4A+RGvQFf3xsvCshTmVfcmhV+z72le6nDrRnlV+6gs01PfaNuociw+rAST9Q\ndtWvjBObudvtlSPLT0tGuGODd/CMs8/1A6QLY+vnUaGxla+Peb7HKfEoEV51PKfo\nEpkTJeqjlPTdweJ2NKcRf6PaPJwT4CfuPfiartI+GVqiYTQaOSuY8GWmR9vgbsU/\nR8kMvoeQRJNO/2ZcnLCTMrL3XnhuMrJlVvuFe8pt04eDMsKPwfa9apSNrzDMzNF4\noDBS23CAEpXc4CIny1jQ361zYHzMJEgv+zZozMnOEfMYj42JDCz8KXhq9RUarRVE\nAVVPUIM+NhkRV/Fqjhr8IfuLTtn2pWqzn57IJ8vQbMa1zW9m2ki0jB5j+4Ysu7zU\nqIjAxrgsRi+daRA6WHyiy+eJFj2Z6dbtlNDlsZFjCRjztdwfBNuo36Q03LYZktc/\nyHRin5PFe4vM/zAta5h498XCaauBmcHJ3oRpVS+d1Y3lh/WLKGipEGI4RXV+dD/R\nPT7LVWo4D+ceEk3833a6aGOKqctCcBbjm+UHlrbfddGL5BSXRPxrVHBtPaLPUU3W\nYT1rtOc8cjjBlzMHlmDvfw==\n-----END CERTIFICATE-----\n', SSL CERTIFICATE AUTHORITY = '-----BEGIN CERTIFICATE-----\nMIIFCzCCAvOgAwIBAgIUOcS1xW8+LSj4Q9YXgbpgn1BMYeAwDQYJKoZIhvcNAQEL\nBQAwFDESMBAGA1UEAwwJTVogUlNBIENBMCAXDTIzMTEyMTIyMjY0MFoYDzIxMjMx\nMDI4MjIyNjQwWjAUMRIwEAYDVQQDDAlNWiBSU0EgQ0EwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQDmdaBjHPzzJa6oL9qf/kS2iXDN+rX8hWjkUim1UKXE\nBP2+iN2BuIX+d0IwlfrFESgXPu10hEKRasoz40rgHovb8wSqjYhtt8/rT4PJkA/K\nMsYsMwRJ7bp3b+QII8GHOihFteQZcR+9v827z6tzn4XG49PWh7aYDrnGN4JbicMT\nWfNfbypFGaeYIRV98KKsLIsmcu+hKYAarv2xSeV6nsU2ZRm1/dYe+AiYB9qRDXwQ\n6uyqDAKNz2htsHFuI3DMyhYxEdzljGp1c/thLr4kB6+wqi6i8XSxeCmtmO/bQb6C\nFxRW7wiy+80HY4ECWWNaIhY3GOK1DN2n6A0XT9FBiWbnUDWWXitx++z239KujC9L\nfi9bUFxGLqjvqK2+/cSvyNnF80GbgL8kAzeDzOr/kjj7XP48KPQ0le6Km4R05z3X\nxMrLG54hJlnuhlITYCs+Kkwys2jdokTEe/LdrYythZ5GAbf5zpepdpByjjlwbkIX\n2pJLF/d7v6Q96IZHdAWVGWWuZpGOQOuZjc1EDz+GLNntN+YQaNVB5fey0T8Pyk5X\nfpHb3R4p7defi7G5FIA+5P6nFL/aDb+hIjBYJAhDTT9ZMuJ397KCwz1Mou+YY7lE\n3VeChEiTJysFiLt5vyN5/Ggel6YW9GjAZlV1b5EE5QwdUXNoTxhvvHCqJWVispTZ\nlwIDAQABo1MwUTAdBgNVHQ4EFgQUg8y3pQGeR2p33H6XnzsL5rvMD80wHwYDVR0j\nBBgwFoAUg8y3pQGeR2p33H6XnzsL5rvMD80wDwYDVR0TAQH/BAUwAwEB/zANBgkq\nhkiG9w0BAQsFAAOCAgEATWtigqHyoAsyM8U4DBufX92U1ZQATxYlHnMiHPu1lzl0\n0PignL9QYE1PpKHOQmcUThsGQqe0faTB7ctoqMOX56gLXQjtEWceZ1yvbcSW2t4O\ndhmaGRsu3/QAcXRPqxzkYBJJVCNjd5wBbMdqIf/YeHum0cbzI27AzbdxLPUfDtsv\nDzVg7iP4YNApGF1zF/VzTcnfXngCKz72mYRpz+K0upEuS7jlzA04x8N2BHFw5W7b\n5IMSIQmI4os/Mt9cyTaHWPfxzbp3feI0XOw+hQCrlLeU9oW2xUW5BYG/Y/R4OAR9\nZ3mJRNIMryf3lbyzPFfrT50o8d5ZunkSKRywg5LrdpwAl1LDiMcTSy6p6d/iH4KQ\nHAHN/2IVbihTVGx5f9xwE93rXLw/alpsuD+8fXtWSxm/ACKG9r3x5qZC4+GsSZTW\n+/l7FYsY7Du2YNBkmG0HBMZre88DH3ayX15SIIEBF2z/jHrw/ocKJx5OOi8WmIGD\nzGIrBUrAJjlj1etwdziISihqW//MsvCw382jJd3uy3SkPcnXPAwejcOIKllYzPgq\nvH8i0WZ9iQGcEg7EYXqsKpaBvQhV1KvhBCmT35PKTe9+MNPwvtqQ0hDIVQ7to74i\nZZdx2zOc2bNoNILoXr+9Fwnt6aueYZGYl0lnpSYwBQM5qcZuWQSOfiXO2ZvpHWM=\n-----END CERTIFICATE-----\n', SSL KEY = SECRET [u303 AS \"materialize\".\"public\".\"kafka_key\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(309)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_scram_sha_512", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_scram_sha_512\" TO KAFKA (BROKER = 'kafka:9095'USING SSH TUNNEL [u1 AS \"materialize\".\"public\".\"ssh_tunnel_0\"], SASL MECHANISMS = 'SCRAM-SHA-512', SASL PASSWORD = SECRET [u306 AS \"materialize\".\"public\".\"kafka_protocols_password\"], SASL USERNAME = 'materialize', SECURITY PROTOCOL = \"sasl_plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(310)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_scram_sha_512", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_ssl_scram_sha_512\" TO KAFKA (BROKER = 'kafka:9096', SASL MECHANISMS = 'SCRAM-SHA-512', SASL PASSWORD = SECRET [u306 AS \"materialize\".\"public\".\"kafka_protocols_password\"], SASL USERNAME = 'materialize', SSL CERTIFICATE AUTHORITY = '-----BEGIN CERTIFICATE-----\nMIIFCzCCAvOgAwIBAgIUOcS1xW8+LSj4Q9YXgbpgn1BMYeAwDQYJKoZIhvcNAQEL\nBQAwFDESMBAGA1UEAwwJTVogUlNBIENBMCAXDTIzMTEyMTIyMjY0MFoYDzIxMjMx\nMDI4MjIyNjQwWjAUMRIwEAYDVQQDDAlNWiBSU0EgQ0EwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQDmdaBjHPzzJa6oL9qf/kS2iXDN+rX8hWjkUim1UKXE\nBP2+iN2BuIX+d0IwlfrFESgXPu10hEKRasoz40rgHovb8wSqjYhtt8/rT4PJkA/K\nMsYsMwRJ7bp3b+QII8GHOihFteQZcR+9v827z6tzn4XG49PWh7aYDrnGN4JbicMT\nWfNfbypFGaeYIRV98KKsLIsmcu+hKYAarv2xSeV6nsU2ZRm1/dYe+AiYB9qRDXwQ\n6uyqDAKNz2htsHFuI3DMyhYxEdzljGp1c/thLr4kB6+wqi6i8XSxeCmtmO/bQb6C\nFxRW7wiy+80HY4ECWWNaIhY3GOK1DN2n6A0XT9FBiWbnUDWWXitx++z239KujC9L\nfi9bUFxGLqjvqK2+/cSvyNnF80GbgL8kAzeDzOr/kjj7XP48KPQ0le6Km4R05z3X\nxMrLG54hJlnuhlITYCs+Kkwys2jdokTEe/LdrYythZ5GAbf5zpepdpByjjlwbkIX\n2pJLF/d7v6Q96IZHdAWVGWWuZpGOQOuZjc1EDz+GLNntN+YQaNVB5fey0T8Pyk5X\nfpHb3R4p7defi7G5FIA+5P6nFL/aDb+hIjBYJAhDTT9ZMuJ397KCwz1Mou+YY7lE\n3VeChEiTJysFiLt5vyN5/Ggel6YW9GjAZlV1b5EE5QwdUXNoTxhvvHCqJWVispTZ\nlwIDAQABo1MwUTAdBgNVHQ4EFgQUg8y3pQGeR2p33H6XnzsL5rvMD80wHwYDVR0j\nBBgwFoAUg8y3pQGeR2p33H6XnzsL5rvMD80wDwYDVR0TAQH/BAUwAwEB/zANBgkq\nhkiG9w0BAQsFAAOCAgEATWtigqHyoAsyM8U4DBufX92U1ZQATxYlHnMiHPu1lzl0\n0PignL9QYE1PpKHOQmcUThsGQqe0faTB7ctoqMOX56gLXQjtEWceZ1yvbcSW2t4O\ndhmaGRsu3/QAcXRPqxzkYBJJVCNjd5wBbMdqIf/YeHum0cbzI27AzbdxLPUfDtsv\nDzVg7iP4YNApGF1zF/VzTcnfXngCKz72mYRpz+K0upEuS7jlzA04x8N2BHFw5W7b\n5IMSIQmI4os/Mt9cyTaHWPfxzbp3feI0XOw+hQCrlLeU9oW2xUW5BYG/Y/R4OAR9\nZ3mJRNIMryf3lbyzPFfrT50o8d5ZunkSKRywg5LrdpwAl1LDiMcTSy6p6d/iH4KQ\nHAHN/2IVbihTVGx5f9xwE93rXLw/alpsuD+8fXtWSxm/ACKG9r3x5qZC4+GsSZTW\n+/l7FYsY7Du2YNBkmG0HBMZre88DH3ayX15SIIEBF2z/jHrw/ocKJx5OOi8WmIGD\nzGIrBUrAJjlj1etwdziISihqW//MsvCw382jJd3uy3SkPcnXPAwejcOIKllYzPgq\nvH8i0WZ9iQGcEg7EYXqsKpaBvQhV1KvhBCmT35PKTe9+MNPwvtqQ0hDIVQ7to74i\nZZdx2zOc2bNoNILoXr+9Fwnt6aueYZGYl0lnpSYwBQM5qcZuWQSOfiXO2ZvpHWM=\n-----END CERTIFICATE-----\n')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(311)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_sasl", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_sasl\" TO KAFKA (BROKER = 'kafka:9097'USING SSH TUNNEL [u1 AS \"materialize\".\"public\".\"ssh_tunnel_0\"], SASL MECHANISMS = 'PLAIN', SASL PASSWORD = SECRET [u306 AS \"materialize\".\"public\".\"kafka_protocols_password\"], SASL USERNAME = 'materialize', SSL CERTIFICATE = '-----BEGIN CERTIFICATE-----\nMIIELDCCAhSgAwIBAgIUZZDLIY8f6fuuyCdn2gMsQ2qG2kkwDQYJKoZIhvcNAQEL\nBQAwFDESMBAGA1UEAwwJTVogUlNBIENBMCAXDTIzMTEyMTIyMjY0OFoYDzIxMjMx\nMDI4MjIyNjQ4WjAXMRUwEwYDVQQDDAxtYXRlcmlhbGl6ZWQwggEiMA0GCSqGSIb3\nDQEBAQUAA4IBDwAwggEKAoIBAQCYUm3MF+YpXAzdfhgaTqp9KO+NCIT5Id3htijG\nCgII20gA0WnF7gbY808YyZJAR+eVV9duM7HNnZszb/X3IRfQk9vL9pjtWxK82rhq\n7RXZ6dw9zgoIkAh/3YOOHeF/rqeW4qjea722zMXr3t6It+vMk7gaUhv8mSfe3zeY\nbcm7K2/wZnLgYS0fWuxVNLSotsQgp1X5rbkG3nBLjkf1gHu3gIRAzXCX13G7E/Jk\naLEIcGREtYdhnx4uFnAYcI0h0A0uGXS7flrG2eRrM/iaNNgI6NlbXwGVsJhkpT0i\nwc1wY+M2uITqR5eAnN0c9s76NlAF3PoY85NDoWfnQQdI+hkTAgMBAAGjcTBvMC0G\nA1UdEQQmMCSCDG1hdGVyaWFsaXplZIIUKi5tYXRlcmlhbGl6ZWQubG9jYWwwHQYD\nVR0OBBYEFAEypZVsuvw7MdI3yd9WrnV014xQMB8GA1UdIwQYMBaAFGqYB2VQ4kjN\nM6xupGhW5GggaN7LMA0GCSqGSIb3DQEBCwUAA4ICAQA8PWCCsfgFeDNErWNOq8wM\nrP18XecTD+GJnAeOGYNHi0znwcgxaRukuwUxZ+QVUCjoUr5vG87XOrDjBC7bnQIp\nG7gl4A+RGvQFf3xsvCshTmVfcmhV+z72le6nDrRnlV+6gs01PfaNuociw+rAST9Q\ndtWvjBObudvtlSPLT0tGuGODd/CMs8/1A6QLY+vnUaGxla+Peb7HKfEoEV51PKfo\nEpkTJeqjlPTdweJ2NKcRf6PaPJwT4CfuPfiartI+GVqiYTQaOSuY8GWmR9vgbsU/\nR8kMvoeQRJNO/2ZcnLCTMrL3XnhuMrJlVvuFe8pt04eDMsKPwfa9apSNrzDMzNF4\noDBS23CAEpXc4CIny1jQ361zYHzMJEgv+zZozMnOEfMYj42JDCz8KXhq9RUarRVE\nAVVPUIM+NhkRV/Fqjhr8IfuLTtn2pWqzn57IJ8vQbMa1zW9m2ki0jB5j+4Ysu7zU\nqIjAxrgsRi+daRA6WHyiy+eJFj2Z6dbtlNDlsZFjCRjztdwfBNuo36Q03LYZktc/\nyHRin5PFe4vM/zAta5h498XCaauBmcHJ3oRpVS+d1Y3lh/WLKGipEGI4RXV+dD/R\nPT7LVWo4D+ceEk3833a6aGOKqctCcBbjm+UHlrbfddGL5BSXRPxrVHBtPaLPUU3W\nYT1rtOc8cjjBlzMHlmDvfw==\n-----END CERTIFICATE-----\n', SSL CERTIFICATE AUTHORITY = '-----BEGIN CERTIFICATE-----\nMIIFCzCCAvOgAwIBAgIUOcS1xW8+LSj4Q9YXgbpgn1BMYeAwDQYJKoZIhvcNAQEL\nBQAwFDESMBAGA1UEAwwJTVogUlNBIENBMCAXDTIzMTEyMTIyMjY0MFoYDzIxMjMx\nMDI4MjIyNjQwWjAUMRIwEAYDVQQDDAlNWiBSU0EgQ0EwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQDmdaBjHPzzJa6oL9qf/kS2iXDN+rX8hWjkUim1UKXE\nBP2+iN2BuIX+d0IwlfrFESgXPu10hEKRasoz40rgHovb8wSqjYhtt8/rT4PJkA/K\nMsYsMwRJ7bp3b+QII8GHOihFteQZcR+9v827z6tzn4XG49PWh7aYDrnGN4JbicMT\nWfNfbypFGaeYIRV98KKsLIsmcu+hKYAarv2xSeV6nsU2ZRm1/dYe+AiYB9qRDXwQ\n6uyqDAKNz2htsHFuI3DMyhYxEdzljGp1c/thLr4kB6+wqi6i8XSxeCmtmO/bQb6C\nFxRW7wiy+80HY4ECWWNaIhY3GOK1DN2n6A0XT9FBiWbnUDWWXitx++z239KujC9L\nfi9bUFxGLqjvqK2+/cSvyNnF80GbgL8kAzeDzOr/kjj7XP48KPQ0le6Km4R05z3X\nxMrLG54hJlnuhlITYCs+Kkwys2jdokTEe/LdrYythZ5GAbf5zpepdpByjjlwbkIX\n2pJLF/d7v6Q96IZHdAWVGWWuZpGOQOuZjc1EDz+GLNntN+YQaNVB5fey0T8Pyk5X\nfpHb3R4p7defi7G5FIA+5P6nFL/aDb+hIjBYJAhDTT9ZMuJ397KCwz1Mou+YY7lE\n3VeChEiTJysFiLt5vyN5/Ggel6YW9GjAZlV1b5EE5QwdUXNoTxhvvHCqJWVispTZ\nlwIDAQABo1MwUTAdBgNVHQ4EFgQUg8y3pQGeR2p33H6XnzsL5rvMD80wHwYDVR0j\nBBgwFoAUg8y3pQGeR2p33H6XnzsL5rvMD80wDwYDVR0TAQH/BAUwAwEB/zANBgkq\nhkiG9w0BAQsFAAOCAgEATWtigqHyoAsyM8U4DBufX92U1ZQATxYlHnMiHPu1lzl0\n0PignL9QYE1PpKHOQmcUThsGQqe0faTB7ctoqMOX56gLXQjtEWceZ1yvbcSW2t4O\ndhmaGRsu3/QAcXRPqxzkYBJJVCNjd5wBbMdqIf/YeHum0cbzI27AzbdxLPUfDtsv\nDzVg7iP4YNApGF1zF/VzTcnfXngCKz72mYRpz+K0upEuS7jlzA04x8N2BHFw5W7b\n5IMSIQmI4os/Mt9cyTaHWPfxzbp3feI0XOw+hQCrlLeU9oW2xUW5BYG/Y/R4OAR9\nZ3mJRNIMryf3lbyzPFfrT50o8d5ZunkSKRywg5LrdpwAl1LDiMcTSy6p6d/iH4KQ\nHAHN/2IVbihTVGx5f9xwE93rXLw/alpsuD+8fXtWSxm/ACKG9r3x5qZC4+GsSZTW\n+/l7FYsY7Du2YNBkmG0HBMZre88DH3ayX15SIIEBF2z/jHrw/ocKJx5OOi8WmIGD\nzGIrBUrAJjlj1etwdziISihqW//MsvCw382jJd3uy3SkPcnXPAwejcOIKllYzPgq\nvH8i0WZ9iQGcEg7EYXqsKpaBvQhV1KvhBCmT35PKTe9+MNPwvtqQ0hDIVQ7to74i\nZZdx2zOc2bNoNILoXr+9Fwnt6aueYZGYl0lnpSYwBQM5qcZuWQSOfiXO2ZvpHWM=\n-----END CERTIFICATE-----\n', SSL KEY = SECRET [u303 AS \"materialize\".\"public\".\"kafka_key\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(312)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_plaintext_1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_plaintext_1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(313)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_plaintext_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_plaintext_1\" IN CLUSTER [u64] FROM KAFKA CONNECTION [u307 AS \"materialize\".\"public\".\"kafka_plaintext\"] (TOPIC = 'testdrive-kafka-protocols-1-1') FORMAT TEXT EXPOSE PROGRESS AS [u312 AS \"materialize\".\"public\".\"kafka_plaintext_1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(314)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_ssl_1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(315)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_ssl_1\" IN CLUSTER [u65] FROM KAFKA CONNECTION [u308 AS \"materialize\".\"public\".\"kafka_ssl\"] (TOPIC = 'testdrive-kafka-protocols-1-1') FORMAT TEXT EXPOSE PROGRESS AS [u314 AS \"materialize\".\"public\".\"kafka_ssl_1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(316)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_scram_sha_512_1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_scram_sha_512_1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(317)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_scram_sha_512_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_scram_sha_512_1\" IN CLUSTER [u66] FROM KAFKA CONNECTION [u309 AS \"materialize\".\"public\".\"kafka_scram_sha_512\"] (TOPIC = 'testdrive-kafka-protocols-1-1') FORMAT TEXT EXPOSE PROGRESS AS [u316 AS \"materialize\".\"public\".\"kafka_scram_sha_512_1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(318)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_scram_sha_512_1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_ssl_scram_sha_512_1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(319)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_scram_sha_512_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_ssl_scram_sha_512_1\" IN CLUSTER [u67] FROM KAFKA CONNECTION [u310 AS \"materialize\".\"public\".\"kafka_ssl_scram_sha_512\"] (TOPIC = 'testdrive-kafka-protocols-1-1') FORMAT TEXT EXPOSE PROGRESS AS [u318 AS \"materialize\".\"public\".\"kafka_ssl_scram_sha_512_1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(320)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_sasl_1_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_sasl_1_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(321)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_sasl_1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_sasl_1\" IN CLUSTER [u68] FROM KAFKA CONNECTION [u311 AS \"materialize\".\"public\".\"kafka_sasl\"] (TOPIC = 'testdrive-kafka-protocols-1-1') FORMAT TEXT EXPOSE PROGRESS AS [u320 AS \"materialize\".\"public\".\"kafka_sasl_1_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(328)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(8)) }), name: "defpriv_table2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"defpriv_db\".\"defpriv_schema\".\"defpriv_table2\" (\"c\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(329)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn_alter_connection_1b", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn_alter_connection_1b\" TO KAFKA (BROKER = 'kafka:9092'USING SSH TUNNEL [u2 AS \"materialize\".\"public\".\"ssh_tunnel_1\"], SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(330)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_1b_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"alter_connection_source_1b_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(331)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_1b", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"alter_connection_source_1b\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u329 AS \"materialize\".\"public\".\"kafka_conn_alter_connection_1b\"] (TOPIC = 'testdrive-alter-connection-1b-1') FORMAT TEXT ENVELOPE NONE EXPOSE PROGRESS AS [u330 AS \"materialize\".\"public\".\"alter_connection_source_1b_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(332)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "materialized_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"materialized_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"f1\", 3), \"pg_catalog\".\"count\"(*) FROM [u17 AS \"materialize\".\"public\".\"materialized_views_table\"] GROUP BY \"pg_catalog\".\"left\"(\"f1\", 3)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(333)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(9)) }), name: "mv1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"optimizer_notices\".\"mv1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"x\", \"y\" FROM [u21 AS \"materialize\".\"optimizer_notices\".\"t1\"] WHERE \"x\" = 5" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(334)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "comment_sink2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"comment_sink2\" IN CLUSTER [u1] FROM [u25 AS \"materialize\".\"public\".\"comment_table\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'comment-sink2') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] (DOC ON TYPE \"materialize\".\"public\".\"comment_type\" = 'comment on comment_type', DOC ON COLUMN \"materialize\".\"public\".\"comment_type\".\"x\" = 'comment on comment_type.x', DOC ON TYPE \"materialize\".\"public\".\"comment_int4_list\" = 'comment on comment_type', DOC ON TYPE [u25 AS \"materialize\".\"public\".\"comment_table\"] = 'comment on comment_table', DOC ON COLUMN [u25 AS \"materialize\".\"public\".\"comment_table\"].\"f1\" = 'comment on comment_table.f1') ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(335)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "basic_topk_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"basic_topk_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"count\"(\"f1\") FROM [u27 AS \"materialize\".\"public\".\"basic_topk_table\"] GROUP BY \"f1\" ORDER BY \"f1\" DESC NULLS LAST LIMIT 2" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(336)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "jsonb_type_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"jsonb_type_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS WITH \"cte\" AS (SELECT '{\"object_element\":{\"a\":\"b\"},\"array_element\": [1,2], \"string_element\":\"abc\", \"number_element\":123.456, \"boolean_element\": true, \"null_element\":null}'::[s26 AS \"pg_catalog\".\"jsonb\"] AS \"cte_jsonb_col\") SELECT \"jsonb_col\" AS \"c1\", '{\"object_element\":{\"a\":\"b\"},\"array_element\": [1,2], \"string_element\":\"abc\", \"number_element\":123.456, \"boolean_element\": true, \"null_element\":null}'::[s26 AS \"pg_catalog\".\"jsonb\"] AS \"c2\", \"jsonb_col\" -> 'number_element' AS \"c3\", \"cte_jsonb_col\" -> 'number_element' AS \"c4\", \"jsonb_col\" ->> 'number_element' AS \"c5\", \"jsonb_col\" #> '{array_element,1}' AS \"c6\", \"jsonb_col\" #>> '{array_element,1}' AS \"c7\", \"jsonb_col\" || '{\"another_null\": null}'::[s26 AS \"pg_catalog\".\"jsonb\"] AS \"c8\", \"jsonb_col\" - 'object_element' AS \"c9\", \"jsonb_col\" @> '{\"boolean_element\": true}' AS \"c10\", \"jsonb_col\" <@ '{\"boolean_element\": true}' AS \"c11\", \"jsonb_col\" ? 'number_element' AS \"c12\" FROM [u28 AS \"materialize\".\"public\".\"jsonb_type_table\"], \"cte\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(337)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn_ssh2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn_ssh2\" TO KAFKA (BROKER = 'kafka:9092'USING SSH TUNNEL [u1 AS \"materialize\".\"public\".\"ssh_tunnel_0\"], SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(338)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"ssh2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(339)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"ssh2\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u337 AS \"materialize\".\"public\".\"kafka_conn_ssh2\"] (TOPIC = 'testdrive-ssh2-1') FORMAT TEXT ENVELOPE NONE EXPOSE PROGRESS AS [u338 AS \"materialize\".\"public\".\"ssh2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(340)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "numeric_types_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"numeric_types_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"smallint_col\", -32768::[s44 AS \"pg_catalog\".\"int2\"] AS \"smallint2\", 32767::[s44 AS \"pg_catalog\".\"int2\"] AS \"smallint3\", \"integer_col\", -2147483648::[s20 AS \"pg_catalog\".\"int4\"] AS \"integer2\", 2147483647::[s20 AS \"pg_catalog\".\"int4\"] AS \"integer3\", \"bigint_col\", -9223372036854775808::[s22 AS \"pg_catalog\".\"int8\"] AS \"bigint2\", 9223372036854775807::[s22 AS \"pg_catalog\".\"int8\"] AS \"bigint3\", \"numeric_col\", -12345678901234567890123.4567890123456789 AS \"numeric2\", 12345678901234567890123.4567890123456789::[s32 AS \"pg_catalog\".\"numeric\"](39, 16) AS \"numeric3\" FROM [u35 AS \"materialize\".\"public\".\"numeric_types_table\"] WHERE \"smallint_col\" >= -32768 AND \"smallint_col\" <= 32767 AND \"integer_col\" >= -2147483648 AND \"integer_col\" <= 2147483647 AND \"bigint_col\" >= -9223372036854775808 AND \"bigint_col\" <= 9223372036854775807 AND \"numeric_col\" >= -12345678901234567890123.4567890123456789 AND \"numeric_col\" <= 12345678901234567890123.4567890123456789 OR \"smallint_col\" IS NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(341)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_sink_comments2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_sink_comments2\" IN CLUSTER [u1] FROM [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'sink-sink-comments2') KEY (\"l_v2\") NOT ENFORCED FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] (NULL DEFAULTS, DOC ON COLUMN [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"].\"l_v1\" = 'doc on l_v1', VALUE DOC ON COLUMN [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"].\"l_v2\" = 'value doc on l_v2', KEY DOC ON COLUMN [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"].\"l_v2\" = 'key doc on l_v2', DOC ON TYPE [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"] = 'comment on view sink_source_comments_view') ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(342)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "delta_join_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"delta_join_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u47 AS \"materialize\".\"public\".\"delta_join_table1\"], [u49 AS \"materialize\".\"public\".\"delta_join_table2\"] WHERE \"delta_join_table1\".\"f1\" = \"delta_join_table2\".\"f3\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(344)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_table2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"create_table2\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"] NOT NULL DEFAULT 1234)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(345)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_table_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"create_table_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"create_table1\".\"f1\" FROM [u53 AS \"materialize\".\"public\".\"create_table1\"], [u344 AS \"materialize\".\"public\".\"create_table2\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(346)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "real_type_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"real_type_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"real_col\", '-Inf'::[s16 AS \"pg_catalog\".\"float4\"] AS \"minus_inf\", '+Inf'::[s16 AS \"pg_catalog\".\"float4\"] AS \"plus_inf\", 'NaN'::[s16 AS \"pg_catalog\".\"float4\"] AS \"nan\", 1E-37 AS \"c1\", 1E37 AS \"c2\" FROM [u54 AS \"materialize\".\"public\".\"real_type_table\"] WHERE \"real_col\" >= -1E37 OR \"real_col\" IN ('+Inf', '-Inf', 'NaN') OR \"real_col\" IS NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(347)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "threshold_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"threshold_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u58 AS \"materialize\".\"public\".\"threshold_table1\"] EXCEPT SELECT * FROM [u59 AS \"materialize\".\"public\".\"threshold_table2\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(348)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "regex_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"regex_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" ~ \"f2\" AS \"c1\", \"f1\" ~* \"f2\" AS \"c2\", \"f1\" ~ 'a.c|x.z' AS \"c3\", \"f1\" ~* 'a.c|x.z' AS \"c4\" FROM [u60 AS \"materialize\".\"public\".\"regex_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(349)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "drop_cluster1_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"drop_cluster1_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(350)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "drop_cluster2_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"drop_cluster2_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(355)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "like_regex_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"like_regex_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" LIKE \"f2\" AS \"c1\", \"f1\" ILIKE \"f2\" AS \"c2\", \"f1\" LIKE 'x_z' AS \"c3\", \"f1\" ILIKE 'a_c' AS \"c4\", \"f1\" LIKE 'a~%' ESCAPE '~' AS \"c5\", \"f1\" LIKE \"f3\" ESCAPE '~' AS \"c6\", \"f1\" LIKE \"f3\" ESCAPE \"f4\" AS \"c7\" FROM [u61 AS \"materialize\".\"public\".\"like_regex_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(356)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "range_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"range_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"index\", \"i4_range\", \"i8_range\", \"num_range\", \"ts_range\", \"tstz_range\", \"d_range\", '[2,5]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_range2\", \"pg_catalog\".\"int8range\"(2, 4) AS \"i8_range3\", GREATEST(\"i8_range\", '[2,5]'::[s76 AS \"pg_catalog\".\"int8range\"]) AS \"i8_greatest\", LEAST(\"i8_range\", '[2,5]'::[s76 AS \"pg_catalog\".\"int8range\"]) AS \"i8_least\", NULLIF(\"i8_range\", '[2,17)'::[s76 AS \"pg_catalog\".\"int8range\"]) AS \"i8_nif\", \"pg_catalog\".\"lower\"(\"i8_range\") AS \"i8_low\", \"pg_catalog\".\"upper\"(\"i8_range\") AS \"i8_up\", \"pg_catalog\".\"isempty\"(\"i8_range\") AS \"i8_empty\", \"pg_catalog\".\"lower_inc\"(\"i8_range\") AS \"i8_lowinc\", \"pg_catalog\".\"upper_inc\"(\"i8_range\") AS \"i8_upinc\", \"pg_catalog\".\"lower_inf\"(\"i8_range\") AS \"i8_lowinf\", \"pg_catalog\".\"upper_inf\"(\"i8_range\") AS \"i8_upinf\", \"i8_range\" < '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_lt\", \"i8_range\" <= '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_le\", \"i8_range\" = '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_eq\", \"i8_range\" >= '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_ge\", \"i8_range\" > '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_gt\", \"i8_range\" @> \"pg_catalog\".\"int8range\"(2, 3) AS \"i8_containsrange\", \"i8_range\" @> 16::[s22 AS \"pg_catalog\".\"int8\"] AS \"i8_containselem\", \"i8_range\" <@ \"pg_catalog\".\"int8range\"(2, 3) AS \"i8_inrange\", 16::[s22 AS \"pg_catalog\".\"int8\"] <@ \"i8_range\" AS \"i8_inelem\", \"i8_range\" && \"pg_catalog\".\"int8range\"(4, 12) AS \"i8_overlap\", \"i8_range\" << \"pg_catalog\".\"int8range\"(400, 500) AS \"i8_leftof\", \"i8_range\" >> \"pg_catalog\".\"int8range\"(0, 1) AS \"i8_rightof\", \"i8_range\" &< \"pg_catalog\".\"int8range\"(0, 1) AS \"i8_notextright\", \"i8_range\" &> \"pg_catalog\".\"int8range\"(0, 1) AS \"i8_notextleft\", \"i8_range\" -|- \"pg_catalog\".\"int8range\"(100, 150) AS \"i8_adjacent\", \"i8_range\" + '[3,20]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_merge\", \"i8_range\" * '[8,20]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_intersec\", \"i8_range\" - '[8,120]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_diff\", (SELECT \"partition\" FROM [u64 AS \"materialize\".\"public\".\"range_source_progress\"] LIMIT 1) AS \"progress_range\" FROM [u63 AS \"materialize\".\"public\".\"range_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(357)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "null_value_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"null_value_view1\" AS SELECT \"f1\", \"f2\", NULL FROM [u69 AS \"materialize\".\"public\".\"null_value_table\"] WHERE \"f1\" IS NULL OR \"f1\" IS NOT NULL OR \"f1\" = NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(358)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source_tablea_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source_tablea_false\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, \"f2\" [s20 AS \"pg_catalog\".\"int4\"] NOT NULL, \"f3\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, CONSTRAINT \"postgres_source_table_false_pkey\" PRIMARY KEY (\"f1\", \"f2\"), CONSTRAINT \"postgres_source_table_false_f3_key\" UNIQUE (\"f3\")) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(359)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source1_false_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source1_false_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(360)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source1_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"postgres_source1_false\" IN CLUSTER [u1] FROM POSTGRES CONNECTION [u75 AS \"materialize\".\"public\".\"pg1_false\"] (PUBLICATION = 'postgres_source_false', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030ac0010a1a706f7374677265735f736f757263655f7461626c655f7472756512067075626c696318b7800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2b08bd8001121f706f7374677265735f736f757263655f7461626c655f747275655f706b65791a02010220012a2a08bf80011221706f7374677265735f736f757263655f7461626c655f747275655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a02010220010a95010a0e646562657a69756d5f7461626c6512067075626c696318ad800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222150a026633101718ffffffffffffffffff012001300322150a026634101918ffffffffffffffffff01200130042a1f08b380011213646562657a69756d5f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f39346363646161653432336634393635396639626433653964663963343063621801') FOR TABLES (\"postgres\".\"public\".\"postgres_source_table_false\" AS [u358 AS \"materialize\".\"public\".\"postgres_source_tablea_false\"]) EXPOSE PROGRESS AS [u359 AS \"materialize\".\"public\".\"postgres_source1_false_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(361)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source_tablea_false_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"postgres_source_tablea_false_primary_idx\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"postgres_source_tablea_false\" (\"f1\", \"f2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(362)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pgpass2_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"pgpass2_false\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(363)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg2_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg2_false\" TO POSTGRES (DATABASE = \"postgres\", HOST = 'postgres', PASSWORD = SECRET [u74 AS \"materialize\".\"public\".\"pgpass1_false\"], USER = \"postgres1_false\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(364)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "shared_cluster_storage_first_source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"shared_cluster_storage_first_source_progress\" (\"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(365)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "shared_cluster_storage_first_source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"shared_cluster_storage_first_source\" IN CLUSTER [u18] FROM LOAD GENERATOR COUNTER (SCALE FACTOR = 0.01) EXPOSE PROGRESS AS [u364 AS \"materialize\".\"public\".\"shared_cluster_storage_first_source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(366)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "shared_cluster_compute_first_mv", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"shared_cluster_compute_first_mv\" IN CLUSTER [u17] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(*) AS \"cnt\" FROM [u365 AS \"materialize\".\"public\".\"shared_cluster_storage_first_source\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(367)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "shared_cluster_compute_first_mv_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"shared_cluster_compute_first_mv_primary_idx\" IN CLUSTER [u17] ON \"materialize\".\"public\".\"shared_cluster_compute_first_mv\" (\"cnt\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(368)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_index_index2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"rename_index_index2\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"rename_index_table\" (\"f2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(369)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_index_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"rename_index_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f2\" FROM [u81 AS \"materialize\".\"public\".\"rename_index_table\"] WHERE \"f2\" > 0" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(370)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "window_functions_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"window_functions_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"row_number\"() OVER (PARTITION BY \"f1\" ORDER BY \"f2\"), \"pg_catalog\".\"dense_rank\"() OVER (PARTITION BY \"f2\" ORDER BY \"f1\" DESC), \"pg_catalog\".\"lag\"(\"f1\", \"f2\", \"f1\") OVER (ORDER BY \"f2\"), \"pg_catalog\".\"lead\"(\"f2\", \"f1\", \"f2\") OVER (PARTITION BY \"f1\"), \"pg_catalog\".\"row_number\"() OVER (RANGE UNBOUNDED PRECEDING) AS \"range1\", \"pg_catalog\".\"row_number\"() OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS \"range2\", \"pg_catalog\".\"row_number\"() OVER (ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING) AS \"rows_between\", \"pg_catalog\".\"first_value\"(\"f1\") OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING) FROM [u95 AS \"materialize\".\"public\".\"window_functions_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(371)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "drop_managed_cluster1_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"drop_managed_cluster1_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(372)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "drop_managed_cluster2_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"drop_managed_cluster2_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(377)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_index_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"create_index_table_primary_idx\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"create_index_table\" (\"f1\", \"f2\", \"f3\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(378)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "monotonic_top1_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"monotonic_top1_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"count\"(\"f1\") FROM [u100 AS \"materialize\".\"public\".\"monotonic_top1_source\"] GROUP BY \"f1\" ORDER BY \"f1\" DESC NULLS LAST LIMIT 1" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(379)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "cast_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"cast_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\"::[s6 AS \"pg_catalog\".\"bool\"] AS \"c1\", \"f1\"::[s20 AS \"pg_catalog\".\"int4\"] AS \"c2\", \"f1\"::[s18 AS \"pg_catalog\".\"float8\"] AS \"c3\", \"f1\"::[s32 AS \"pg_catalog\".\"numeric\"] AS \"c4\", \"f1\"::[s16 AS \"pg_catalog\".\"float4\"] AS \"c5\", \"f1\"::[s46 AS \"pg_catalog\".\"text\"] AS \"c6\", \"f1\"::[s66 AS \"mz_catalog\".\"uint2\"] AS \"c7\", \"f1\"::[s68 AS \"mz_catalog\".\"uint4\"] AS \"c8\", \"f1\"::[s70 AS \"mz_catalog\".\"uint8\"] AS \"c9\", \"f1\"::[s46 AS \"pg_catalog\".\"text\"] AS \"c10\", \"f1\"::[s6 AS \"pg_catalog\".\"bool\"] AS \"c11\" FROM [u103 AS \"materialize\".\"public\".\"cast_table\"] WHERE \"f1\" >= 0" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(380)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "monotonic_topk_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"monotonic_topk_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"count\"(\"f1\") FROM [u105 AS \"materialize\".\"public\".\"monotonic_topk_source\"] GROUP BY \"f1\" ORDER BY \"f1\" DESC NULLS LAST LIMIT 2" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(382)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(15)) }), name: "ðŸš¾ ðŸ†’ ðŸ†“ ðŸ†• ðŸ†– ðŸ†— ðŸ†™ ðŸ§", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"--\".\"</script><script>alert(123)</script>\".\"ðŸš¾ ðŸ†’ ðŸ†“ ðŸ†• ðŸ†– ðŸ†— ðŸ†™ ðŸ§\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"<script\\x20type=\"\"text/javascript\"\">javascript:alert(1);</script>\", \"c2\" AS \"ðŸ³0ðŸŒˆ\u{fe0f}\" FROM [u107 AS \"--\".\"</script><script>alert(123)</script>\".\"File:///\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(383)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(15)) }), name: "<a href=\"\\xE2\\x80\\xA9javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"--\".\"</script><script>alert(123)</script>\".\"<a href=\"\"\\xE2\\x80\\xA9javascript:javascript:alert(1)\"\" id=\"\"fuzzelement1\"\">test</a>\" IN CLUSTER [u24] FROM [u113 AS \"--\".\"public\".\"<a href=\"\"\\x17javascript:javascript:alert(1)\"\" id=\"\"fuzzelement1\"\">test</a>\"] INTO KAFKA CONNECTION [u109 AS \"--\".\"public\".\"ABC<div style=\"\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\"\">DEF\"] (TOPIC = 'sink-sink-ident') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u110 AS \"--\".\"public\".\"JavaSCript:alert(123)\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(384)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "date_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"date_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"date_col\", '2010-10-10'::[s14 AS \"pg_catalog\".\"date\"] AS \"date_col2\", \"time_col\", '10:10:10'::[s48 AS \"pg_catalog\".\"time\"] AS \"time_col2\", \"timestamp_col\", '2010-10-10 10:10:10+01'::[s50 AS \"pg_catalog\".\"timestamp\"] AS \"timestamp_col2\", \"timestamptz_col\", '2010-10-10 10:10:10+01'::[s52 AS \"pg_catalog\".\"timestamptz\"] AS \"timestamptz_col2\", \"interval_col\", INTERVAL '1 day' AS \"interval_col2\" FROM [u116 AS \"materialize\".\"public\".\"temporal_types\"] WHERE \"date_col\" >= '2010-10-10'::[s14 AS \"pg_catalog\".\"date\"] AND \"time_col\" >= '10:10:10'::[s48 AS \"pg_catalog\".\"time\"] AND \"timestamp_col\" >= '2010-10-10 10:10:10+00'::[s50 AS \"pg_catalog\".\"timestamp\"] AND \"timestamptz_col\" >= '2010-10-10 10:10:10+00'::[s52 AS \"pg_catalog\".\"timestamptz\"] AND \"interval_col\" >= INTERVAL '0 day'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(385)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn_alter_connection_2b", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn_alter_connection_2b\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(386)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_2b_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"alter_connection_source_2b_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(387)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_2b", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"alter_connection_source_2b\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u385 AS \"materialize\".\"public\".\"kafka_conn_alter_connection_2b\"] (TOPIC = 'testdrive-alter-connection-2b-1') FORMAT TEXT ENVELOPE NONE EXPOSE PROGRESS AS [u386 AS \"materialize\".\"public\".\"alter_connection_source_2b_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(388)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_replica_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"create_replica_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(389)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_replica_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"create_replica_table_primary_idx\" IN CLUSTER [u74] ON \"materialize\".\"public\".\"create_replica_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(390)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_replica_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"create_replica_view\" IN CLUSTER [u74] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"sum\"(\"f1\") FROM [u388 AS \"materialize\".\"public\".\"create_replica_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(391)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "not_null_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"not_null_view2\" IN CLUSTER [u1] WITH (ASSERT NOT NULL = \"y\", REFRESH = ON COMMIT) AS SELECT * FROM [u123 AS \"materialize\".\"public\".\"not_null_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(392)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "uuid_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"uuid_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"uuid_generate_v5\"(\"f2\", \"f3\") AS \"f2\", \"pg_catalog\".\"uuid_generate_v5\"('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a13', 'foobar') AS \"f3\" FROM [u131 AS \"materialize\".\"public\".\"uuid_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(393)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "nested_types_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"nested_types_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"map_col\", '{a => 1, b => 2}'::[u138 AS \"materialize\".\"public\".\"map_type\"], \"list_col\", '{{1,2},{3,4}}'::[u140 AS \"materialize\".\"public\".\"int4_list_list\"], \"record_col\", ROW(1, 'abc'), \"array_col\", ARRAY[ARRAY['a', 'b'], ARRAY['c', 'd']] FROM [u141 AS \"materialize\".\"public\".\"nested_types_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(394)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_kafka_conn2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"privilege_kafka_conn2\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(395)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_csr_conn2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"privilege_csr_conn2\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(396)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_type2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"privilege_type2\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(397)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_t2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"privilege_t2\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u396 AS \"materialize\".\"public\".\"privilege_type2\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(398)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_i2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"privilege_i2\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"privilege_t2\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(399)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_v2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"privilege_v2\" AS SELECT * FROM [u397 AS \"materialize\".\"public\".\"privilege_t2\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(400)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_mv2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"privilege_mv2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u397 AS \"materialize\".\"public\".\"privilege_t2\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(401)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_secret2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"privilege_secret2\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(403)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_bytes2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_bytes2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(404)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_bytes2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_bytes2\" IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-bytes-1') KEY FORMAT BYTES VALUE FORMAT BYTES ENVELOPE UPSERT EXPOSE PROGRESS AS [u403 AS \"materialize\".\"public\".\"format_bytes2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(405)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_text2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_text2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(406)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_text2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_text2\" IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-bytes-1') KEY FORMAT TEXT VALUE FORMAT TEXT ENVELOPE UPSERT EXPOSE PROGRESS AS [u405 AS \"materialize\".\"public\".\"format_text2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(407)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_csv2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_csv2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(408)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_csv2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_csv2\" (\"key1\", \"key2\", \"value1\", \"value2\") IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-bytes-1') KEY FORMAT CSV WITH 2 COLUMNS VALUE FORMAT CSV WITH 2 COLUMNS ENVELOPE UPSERT EXPOSE PROGRESS AS [u407 AS \"materialize\".\"public\".\"format_csv2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(409)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_regex2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_regex2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(410)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_regex2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_regex2\" (\"key1\", \"key2\", \"value1\", \"value2\") IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-bytes-1') KEY FORMAT REGEX '(?P<key1>[^,]+),(?P<key2>\\w+)' VALUE FORMAT REGEX '(?P<value1>[^,]+),(?P<value2>\\w+)' ENVELOPE UPSERT EXPOSE PROGRESS AS [u409 AS \"materialize\".\"public\".\"format_regex2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(411)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_protobuf2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"format_protobuf2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(412)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "format_protobuf2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"format_protobuf2\" IN CLUSTER [u32] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'testdrive-format-protobuf-1') KEY FORMAT PROTOBUF MESSAGE '.Key' USING SCHEMA '\\x0a7c0a0a746573742e70726f746f222d0a034b657912120a046b65793118012001280952046b65793112120a046b65793218022001280952046b65793222370a0556616c756512160a0676616c756531180120012809520676616c75653112160a0676616c756532180220012809520676616c756532620670726f746f33' VALUE FORMAT PROTOBUF MESSAGE '.Value' USING SCHEMA '\\x0a7c0a0a746573742e70726f746f222d0a034b657912120a046b65793118012001280952046b65793112120a046b65793218022001280952046b65793222370a0556616c756512160a0676616c756531180120012809520676616c75653112160a0676616c756532180220012809520676616c756532620670726f746f33' INCLUDE KEY ENVELOPE UPSERT EXPOSE PROGRESS AS [u411 AS \"materialize\".\"public\".\"format_protobuf2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(413)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "linear_join_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"linear_join_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u191 AS \"materialize\".\"public\".\"linear_join_table1\"], [u192 AS \"materialize\".\"public\".\"linear_join_table2\"] WHERE \"linear_join_table1\".\"f1\" = \"linear_join_table2\".\"f2\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(414)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "having_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"having_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"sum\"(\"f1\") FROM [u199 AS \"materialize\".\"public\".\"having_table\"] GROUP BY \"f1\" HAVING \"pg_catalog\".\"sum\"(\"f1\") > 1 AND \"pg_catalog\".\"sum\"(\"f1\") < 3" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(415)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_cluster1_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"rename_cluster1_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(416)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_cluster2_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"rename_cluster2_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(417)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_cluster1_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"rename_cluster1_table_primary_idx\" IN CLUSTER [u75] ON \"materialize\".\"public\".\"rename_cluster1_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(418)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_cluster1_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"rename_cluster1_view\" IN CLUSTER [u75] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"sum\"(\"f1\") FROM [u415 AS \"materialize\".\"public\".\"rename_cluster1_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(419)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_cluster2_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"rename_cluster2_table_primary_idx\" IN CLUSTER [u76] ON \"materialize\".\"public\".\"rename_cluster2_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(420)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_cluster2_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"rename_cluster2_view\" IN CLUSTER [u76] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"sum\"(\"f1\") FROM [u416 AS \"materialize\".\"public\".\"rename_cluster2_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(421)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "explain_mv1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"explain_mv1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u200 AS \"materialize\".\"public\".\"explain_item_t1\"] WHERE \"y\" = 7" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(422)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "explain_mv2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"explain_mv2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u201 AS \"materialize\".\"public\".\"explain_item_t2\"] WHERE \"y\" = 7" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(423)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "array_type_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"array_type_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"int_col\", \"pg_catalog\".\"array_fill\"(2, ARRAY[2], ARRAY[2]), \"text_col\", \"pg_catalog\".\"array_fill\"('foo'::[s46 AS \"pg_catalog\".\"text\"], ARRAY[2]) AS \"array_fill2\", \"array_col\", ARRAY[ARRAY[1, 2], ARRAY[NULL, 4]] FROM [u203 AS \"materialize\".\"public\".\"array_type_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(424)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "t2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"t2\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"]) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(426)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg_ssh2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg_ssh2\" TO POSTGRES (DATABASE = \"postgres\", HOST = \"postgres\", PASSWORD = SECRET [u211 AS \"materialize\".\"public\".\"pgpass\"], SSH TUNNEL = [u1 AS \"materialize\".\"public\".\"ssh_tunnel_0\"], SSL MODE = \"require\", USER = \"postgres\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(427)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "t_ssh2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"t_ssh2\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"]) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(428)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mz_source_ssh2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"mz_source_ssh2_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(429)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mz_source_ssh2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"mz_source_ssh2\" IN CLUSTER [u1] FROM POSTGRES CONNECTION [u426 AS \"materialize\".\"public\".\"pg_ssh2\"] (PUBLICATION = 'mz_source_ssh', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030ac0010a1a706f7374677265735f736f757263655f7461626c655f7472756512067075626c696318b7800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2b08bd8001121f706f7374677265735f736f757263655f7461626c655f747275655f706b65791a02010220012a2a08bf80011221706f7374677265735f736f757263655f7461626c655f747275655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743212067075626c696318c1800122150a026631101718ffffffffffffffffff01200130010a270a02743312067075626c696318c4800122150a026631101718ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a02010220010a95010a0e646562657a69756d5f7461626c6512067075626c696318ad800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222150a026633101718ffffffffffffffffff012001300322150a026634101918ffffffffffffffffff01200130042a1f08b380011213646562657a69756d5f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f34346437353531356630663534666538616635353833323833393539383066621801') FOR TABLES (\"postgres\".\"public\".\"t_ssh2\" AS [u427 AS \"materialize\".\"public\".\"t_ssh2\"]) EXPOSE PROGRESS AS [u428 AS \"materialize\".\"public\".\"mz_source_ssh2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(430)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "debezium_source2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"debezium_source2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(431)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "debezium_source2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"debezium_source2\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'postgres.public.debezium_table') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"namespace\":\"postgres.public.debezium_table\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"},{\"name\":\"f2\",\"type\":\"int\"}],\"connect.name\":\"postgres.public.debezium_table.Key\"}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"Envelope\",\"namespace\":\"postgres.public.debezium_table\",\"fields\":[{\"name\":\"before\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Value\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"},{\"name\":\"f2\",\"type\":\"int\"},{\"name\":\"f3\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"f4\",\"type\":[\"null\",\"string\"],\"default\":null}],\"connect.name\":\"postgres.public.debezium_table.Value\"}],\"default\":null},{\"name\":\"after\",\"type\":[\"null\",\"Value\"],\"default\":null},{\"name\":\"source\",\"type\":{\"type\":\"record\",\"name\":\"Source\",\"namespace\":\"io.debezium.connector.postgresql\",\"fields\":[{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"connector\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"ts_ms\",\"type\":\"long\"},{\"name\":\"snapshot\",\"type\":[{\"type\":\"string\",\"connect.version\":1,\"connect.parameters\":{\"allowed\":\"true,last,false,incremental\"},\"connect.default\":\"false\",\"connect.name\":\"io.debezium.data.Enum\"},\"null\"],\"default\":\"false\"},{\"name\":\"db\",\"type\":\"string\"},{\"name\":\"sequence\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"schema\",\"type\":\"string\"},{\"name\":\"table\",\"type\":\"string\"},{\"name\":\"txId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lsn\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"xmin\",\"type\":[\"null\",\"long\"],\"default\":null}],\"connect.name\":\"io.debezium.connector.postgresql.Source\"}},{\"name\":\"op\",\"type\":\"string\"},{\"name\":\"ts_ms\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"transaction\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"block\",\"namespace\":\"event\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"total_order\",\"type\":\"long\"},{\"name\":\"data_collection_order\",\"type\":\"long\"}],\"connect.version\":1,\"connect.name\":\"event.block\"}],\"default\":null}],\"connect.version\":1,\"connect.name\":\"postgres.public.debezium_table.Envelope\"}' ENVELOPE DEBEZIUM EXPOSE PROGRESS AS [u430 AS \"materialize\".\"public\".\"debezium_source2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(432)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "debezium_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"debezium_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"f3\", \"pg_catalog\".\"sum\"(\"pg_catalog\".\"length\"(\"f4\")) FROM [u431 AS \"materialize\".\"public\".\"debezium_source2\"] GROUP BY \"f1\", \"f3\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(433)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_sink_null2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_sink_null2\" IN CLUSTER [u1] FROM [u227 AS \"materialize\".\"public\".\"sink_source_null_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'sink-sink-null2') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] (NULL DEFAULTS) ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(434)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "string_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"string_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" BETWEEN \"f2\" AND \"f3\" AS \"c1\", 'foo' BETWEEN 'abc' AND 'xyz' AS \"c2\", \"f1\" NOT BETWEEN \"f2\" AND \"f3\" AS \"c3\", \"pg_catalog\".\"substring\"(\"f1\", \"f4\", \"f5\") AS \"c4\", \"pg_catalog\".\"substring\"(\"f1\", \"f4\") AS \"c5\", \"pg_catalog\".\"substring\"(\"f1\", 1, \"f5\") AS \"c6\", \"pg_catalog\".\"btrim\"(\"f1\") AS \"c7\", \"pg_catalog\".\"ltrim\"(\"f1\") AS \"c8\", \"pg_catalog\".\"rtrim\"(\"f1\") AS \"c9\", \"pg_catalog\".\"ltrim\"(\"f1\", ' f') AS \"c10\", \"pg_catalog\".\"btrim\"(\"f1\", ' fr') AS \"c11\", \"pg_catalog\".\"array_to_string\"(\"f6\", ',', 'NULL') AS \"c12\" FROM [u229 AS \"materialize\".\"public\".\"string_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(435)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_replica_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"rename_replica_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(436)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_replica_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"rename_replica_table_primary_idx\" IN CLUSTER [u77] ON \"materialize\".\"public\".\"rename_replica_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(437)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_replica_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"rename_replica_view\" IN CLUSTER [u77] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(\"f1\") FROM [u435 AS \"materialize\".\"public\".\"rename_replica_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(438)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "v2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"v2\" (\"a\") AS SELECT 1::[s68 AS \"mz_catalog\".\"uint4\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(439)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_kafka_conn3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_kafka_conn3\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(440)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_csr_conn3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_csr_conn3\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(441)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_type3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"owner_type3\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(442)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_t3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"owner_t3\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u441 AS \"materialize\".\"public\".\"owner_type3\"])" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(443)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_i3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"owner_i3\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"owner_t3\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(444)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_v3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"owner_v3\" AS SELECT * FROM [u442 AS \"materialize\".\"public\".\"owner_t3\"]" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(445)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_mv3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"owner_mv3\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u442 AS \"materialize\".\"public\".\"owner_t3\"]" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(446)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_secret3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"owner_secret3\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(447)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_kafka_conn4", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_kafka_conn4\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(448)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_csr_conn4", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_csr_conn4\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(449)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_type4", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"owner_type4\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(450)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_t4", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"owner_t4\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u449 AS \"materialize\".\"public\".\"owner_type4\"])" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(451)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_i4", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"owner_i4\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"owner_t4\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(452)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_v4", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"owner_v4\" AS SELECT * FROM [u450 AS \"materialize\".\"public\".\"owner_t4\"]" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(453)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_mv4", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"owner_mv4\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u450 AS \"materialize\".\"public\".\"owner_t4\"]" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(454)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_secret4", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"owner_secret4\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(455)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "string_bytea_types_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"string_bytea_types_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"text_col\", \"bytea_col\", 'Ñ‚Ð¾Ð²Ð°'::[s46 AS \"pg_catalog\".\"text\"], '\\xAAAA'::[s8 AS \"pg_catalog\".\"bytea\"] FROM [u256 AS \"materialize\".\"public\".\"text_bytea_types_table\"] WHERE \"text_col\" >= ''::[s46 AS \"pg_catalog\".\"text\"] AND \"bytea_col\" >= ''::[s8 AS \"pg_catalog\".\"bytea\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(456)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "regexp_extract_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"regexp_extract_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"mz_catalog\".\"regexp_extract\"('((a)(.c))|((x)(.z))', \"f1\") AS \"c1\" FROM [u257 AS \"materialize\".\"public\".\"regexp_extract_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(457)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "order_by1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"order_by1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"] ORDER BY \"f3\" DESC, \"f2\" ASC, \"f1\" DESC LIMIT 999999999" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(458)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "limit_one1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"limit_one1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"] LIMIT 1" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(459)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "limit_many1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"limit_many1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"] LIMIT 999999999" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(460)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "top_level_distinct1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"top_level_distinct1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT DISTINCT \"f1\", \"f2\" FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(461)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "global_count1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"global_count1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(*) FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(462)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "global_aggregation1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"global_aggregation1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(\"f1\"), \"pg_catalog\".\"min\"(\"f1\"), \"pg_catalog\".\"max\"(\"f1\"), \"pg_catalog\".\"sum\"(\"f1\") FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(463)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "global_aggregation_distinct1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"global_aggregation_distinct1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(DISTINCT \"f1\"), \"pg_catalog\".\"min\"(DISTINCT \"f1\"), \"pg_catalog\".\"max\"(DISTINCT \"f1\"), \"pg_catalog\".\"sum\"(DISTINCT \"f1\") FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(464)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "double_type_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"double_type_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"double_col\", '-Inf'::[s18 AS \"pg_catalog\".\"float8\"] AS \"minus_inf\", '+Inf'::[s18 AS \"pg_catalog\".\"float8\"] AS \"plus_inf\", 'NaN'::[s18 AS \"pg_catalog\".\"float8\"] AS \"nan\", '1E-307'::[s18 AS \"pg_catalog\".\"float8\"] AS \"c1\", '1E+307'::[s18 AS \"pg_catalog\".\"float8\"] AS \"c2\" FROM [u259 AS \"materialize\".\"public\".\"double_type_table\"] WHERE \"double_col\" >= '-1E+307' OR \"double_col\" IN ('+Inf', '-Inf', 'NaN') OR \"double_col\" IS NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(465)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source_tablea_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source_tablea_true\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, \"f2\" [s20 AS \"pg_catalog\".\"int4\"] NOT NULL, \"f3\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, CONSTRAINT \"postgres_source_table_true_pkey\" PRIMARY KEY (\"f1\", \"f2\"), CONSTRAINT \"postgres_source_table_true_f3_key\" UNIQUE (\"f3\")) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(466)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source1_true_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source1_true_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(467)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source1_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"postgres_source1_true\" IN CLUSTER [u1] FROM POSTGRES CONNECTION [u267 AS \"materialize\".\"public\".\"pg1_true\"] (PUBLICATION = 'postgres_source_true', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030ac0010a1a706f7374677265735f736f757263655f7461626c655f7472756512067075626c696318b7800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2b08bd8001121f706f7374677265735f736f757263655f7461626c655f747275655f706b65791a02010220012a2a08bf80011221706f7374677265735f736f757263655f7461626c655f747275655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743212067075626c696318c1800122150a026631101718ffffffffffffffffff01200130010a270a02743312067075626c696318c4800122150a026631101718ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a02010220010a95010a0e646562657a69756d5f7461626c6512067075626c696318ad800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222150a026633101718ffffffffffffffffff012001300322150a026634101918ffffffffffffffffff01200130042a1f08b380011213646562657a69756d5f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f62396562383163663263353234626664613330616165353164313836306134321801') FOR TABLES (\"postgres\".\"public\".\"postgres_source_table_true\" AS [u465 AS \"materialize\".\"public\".\"postgres_source_tablea_true\"]) EXPOSE PROGRESS AS [u466 AS \"materialize\".\"public\".\"postgres_source1_true_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(468)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source_tablea_true_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"postgres_source_tablea_true_primary_idx\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"postgres_source_tablea_true\" (\"f1\", \"f2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(469)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pgpass2_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"pgpass2_true\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(470)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg2_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg2_true\" TO POSTGRES (DATABASE = \"postgres\", HOST = 'postgres', PASSWORD = SECRET [u266 AS \"materialize\".\"public\".\"pgpass1_true\"], USER = \"postgres1_true\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(471)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_sink2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_sink2\" IN CLUSTER [u1] FROM [u270 AS \"materialize\".\"public\".\"sink_source_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'sink-sink2') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(472)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "date_prec_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"date_prec_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"timestamp_prec_col\", '2010-10-10 10:10:10.123456789+01'::[s50 AS \"pg_catalog\".\"timestamp\"](3) AS \"timestamp_prec_col2\", \"timestamptz_prec_col\", '2010-10-10 10:10:10.123456789+01'::[s52 AS \"pg_catalog\".\"timestamptz\"](1) AS \"timestamptz_prec_col2\" FROM [u272 AS \"materialize\".\"public\".\"temporal_prec_types\"] WHERE \"timestamp_prec_col\" >= '2010-10-10 10:10:10+00'::[s50 AS \"pg_catalog\".\"timestamp\"] AND \"timestamptz_prec_col\" >= '2010-10-10 10:10:10+00'::[s52 AS \"pg_catalog\".\"timestamptz\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(473)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "drop_replica_table", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"drop_replica_table\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(474)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "drop_replica_table_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"drop_replica_table_primary_idx\" IN CLUSTER [u79] ON \"materialize\".\"public\".\"drop_replica_table\" (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(475)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "drop_replica_view", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"drop_replica_view\" IN CLUSTER [u79] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(\"f1\") FROM [u473 AS \"materialize\".\"public\".\"drop_replica_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(476)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_view_2s_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"refresh_view_2s_2\" IN CLUSTER [u1] WITH (REFRESH = EVERY '2 seconds' ALIGNED TO 1707217883388::[s72 AS \"mz_catalog\".\"mz_timestamp\"]) AS SELECT DISTINCT (\"x\") FROM [u276 AS \"materialize\".\"public\".\"refresh_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(477)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_view_at_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"refresh_view_at_2\" IN CLUSTER [u1] WITH (REFRESH = AT 1707217883859::[s72 AS \"mz_catalog\".\"mz_timestamp\"]::[s46 AS \"pg_catalog\".\"text\"]::[s22 AS \"pg_catalog\".\"int8\"]) AS SELECT DISTINCT (\"x\") FROM [u276 AS \"materialize\".\"public\".\"refresh_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(478)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_view_late_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"refresh_view_late_2\" IN CLUSTER [u1] WITH (REFRESH = AT 1707217884446::[s72 AS \"mz_catalog\".\"mz_timestamp\"]::[s46 AS \"pg_catalog\".\"text\"]::[s22 AS \"pg_catalog\".\"int8\"] + 86400000) AS SELECT DISTINCT (\"x\") FROM [u276 AS \"materialize\".\"public\".\"refresh_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(479)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "wmr1_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"wmr1_primary_idx\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"wmr1\" (\"a\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(480)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "wmr1a", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"wmr1a\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"a\" + 1 FROM [u280 AS \"materialize\".\"public\".\"wmr1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(481)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "wmr2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"wmr2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS WITH MUTUALLY RECURSIVE (ERROR AT RECURSION LIMIT = 1) \"foo\" (\"a\" [s20 AS \"pg_catalog\".\"int4\"], \"b\" [s20 AS \"pg_catalog\".\"int4\"]) AS (SELECT 1, 2 UNION SELECT \"a\", 7 FROM \"bar\"), \"bar\" (\"a\" [s20 AS \"pg_catalog\".\"int4\"]) AS (SELECT \"a\" FROM \"foo\") SELECT * FROM \"bar\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(482)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn_alter_connection_3b", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn_alter_connection_3b\" TO KAFKA (BROKER = 'kafka:9092'USING SSH TUNNEL [u4 AS \"materialize\".\"public\".\"ssh_tunnel_3\"], SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(483)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_3b_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"alter_connection_source_3b_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(484)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "alter_connection_source_3b", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"alter_connection_source_3b\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u482 AS \"materialize\".\"public\".\"kafka_conn_alter_connection_3b\"] (TOPIC = 'testdrive-alter-connection-3b-1') FORMAT TEXT ENVELOPE NONE EXPOSE PROGRESS AS [u483 AS \"materialize\".\"public\".\"alter_connection_source_3b_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(485)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "constant_plan_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"constant_plan_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u298 AS \"materialize\".\"public\".\"constant_plan1\"] WHERE false" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(486)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "boolean_type_view1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"boolean_type_view1\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"boolean_col\", 'TRUE'::[s6 AS \"pg_catalog\".\"bool\"] AS \"true_col\", 'FALSE'::[s6 AS \"pg_catalog\".\"bool\"] AS \"false_col\" FROM [u302 AS \"materialize\".\"public\".\"boolean_type_table\"] WHERE \"boolean_col\" IS TRUE OR \"boolean_col\" IS FALSE OR \"boolean_col\" IS NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(487)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_plaintext_2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_plaintext_2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(488)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_plaintext_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_plaintext_2\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u307 AS \"materialize\".\"public\".\"kafka_plaintext\"] (TOPIC = 'testdrive-kafka-protocols-2-1') FORMAT TEXT EXPOSE PROGRESS AS [u487 AS \"materialize\".\"public\".\"kafka_plaintext_2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(489)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_ssl_2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(490)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_ssl_2\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u308 AS \"materialize\".\"public\".\"kafka_ssl\"] (TOPIC = 'testdrive-kafka-protocols-2-1') FORMAT TEXT EXPOSE PROGRESS AS [u489 AS \"materialize\".\"public\".\"kafka_ssl_2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(491)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_scram_sha_512_2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_scram_sha_512_2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(492)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_scram_sha_512_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_scram_sha_512_2\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u309 AS \"materialize\".\"public\".\"kafka_scram_sha_512\"] (TOPIC = 'testdrive-kafka-protocols-2-1') FORMAT TEXT EXPOSE PROGRESS AS [u491 AS \"materialize\".\"public\".\"kafka_scram_sha_512_2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(493)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_scram_sha_512_2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_ssl_scram_sha_512_2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(494)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_scram_sha_512_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_ssl_scram_sha_512_2\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u310 AS \"materialize\".\"public\".\"kafka_ssl_scram_sha_512\"] (TOPIC = 'testdrive-kafka-protocols-2-1') FORMAT TEXT EXPOSE PROGRESS AS [u493 AS \"materialize\".\"public\".\"kafka_ssl_scram_sha_512_2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(495)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_sasl_2_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_sasl_2_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(496)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_sasl_2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_sasl_2\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u311 AS \"materialize\".\"public\".\"kafka_sasl\"] (TOPIC = 'testdrive-kafka-protocols-2-1') FORMAT TEXT EXPOSE PROGRESS AS [u495 AS \"materialize\".\"public\".\"kafka_sasl_2_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(497)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(35)) }), name: "t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"to_be_created1\".\"public\".\"t1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(498)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"join_schema\".\"t1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(499)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "t1a", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"join_schema\".\"t1a\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(500)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "t2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"join_schema\".\"t2\" (\"f2\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(501)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "comma_join", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"comma_join\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"], [u500 AS \"materialize\".\"join_schema\".\"t2\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(502)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "cross_join", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"cross_join\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] CROSS JOIN [u500 AS \"materialize\".\"join_schema\".\"t2\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(503)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "natural_join", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"natural_join\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] NATURAL JOIN [u499 AS \"materialize\".\"join_schema\".\"t1a\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(504)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "full_outer_join", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"full_outer_join\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] FULL JOIN [u500 AS \"materialize\".\"join_schema\".\"t2\"] ON \"t1\".\"f1\" = \"t2\".\"f2\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(505)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "left_join", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"left_join\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] LEFT JOIN [u500 AS \"materialize\".\"join_schema\".\"t2\"] ON \"t1\".\"f1\" = \"t2\".\"f2\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(506)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "right_join", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"right_join\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] RIGHT JOIN [u500 AS \"materialize\".\"join_schema\".\"t2\"] ON \"t1\".\"f1\" = \"t2\".\"f2\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(507)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "join_on", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"join_on\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] JOIN [u500 AS \"materialize\".\"join_schema\".\"t2\"] ON (\"t1\".\"f1\" < \"t2\".\"f2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(508)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "join_using", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"join_using\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] JOIN [u499 AS \"materialize\".\"join_schema\".\"t1a\"] USING (\"f1\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(509)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "join_table_alias", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"join_table_alias\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"a1\".\"f1\", \"a2\".\"f2\" FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] AS \"a1\" JOIN [u500 AS \"materialize\".\"join_schema\".\"t2\"] AS \"a2\" ON \"a1\".\"f1\" = \"a2\".\"f2\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(510)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "join_column_alias", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"join_column_alias\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"t1\".\"a1\", \"t2\".\"a2\" FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] AS \"t1\" (\"a1\"), [u500 AS \"materialize\".\"join_schema\".\"t2\"] AS \"t2\" (\"a2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(511)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(36)) }), name: "lateral_join", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"join_schema\".\"lateral_join\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u498 AS \"materialize\".\"join_schema\".\"t1\"] AS \"lateral\" JOIN (SELECT \"f2\" + 1 AS \"f2\" FROM [u500 AS \"materialize\".\"join_schema\".\"t2\"]) ON true" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(518)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(8)) }), name: "defpriv_table3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"defpriv_db\".\"defpriv_schema\".\"defpriv_table3\" (\"c\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(9)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(519)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "materialized_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"materialized_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"left\"(\"f1\", 3), \"pg_catalog\".\"count\"(*) FROM [u17 AS \"materialize\".\"public\".\"materialized_views_table\"] GROUP BY \"pg_catalog\".\"left\"(\"f1\", 3)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(520)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(9)) }), name: "v1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"optimizer_notices\".\"v1\" AS SELECT \"x\", \"y\" FROM [u21 AS \"materialize\".\"optimizer_notices\".\"t1\"] WHERE \"x\" = 7" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(521)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(9)) }), name: "v1_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"v1_idx\" IN CLUSTER [u1] ON \"materialize\".\"optimizer_notices\".\"v1\" ()" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(522)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "comment_sink3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"comment_sink3\" IN CLUSTER [u1] FROM [u25 AS \"materialize\".\"public\".\"comment_table\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'comment-sink3') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] (DOC ON TYPE \"materialize\".\"public\".\"comment_type\" = 'comment on comment_type', DOC ON COLUMN \"materialize\".\"public\".\"comment_type\".\"x\" = 'comment on comment_type.x', DOC ON COLUMN \"materialize\".\"public\".\"comment_type\".\"y\" = 'comment on comment_type.y', DOC ON TYPE \"materialize\".\"public\".\"comment_int4_list\" = 'comment on comment_type', DOC ON TYPE [u25 AS \"materialize\".\"public\".\"comment_table\"] = 'comment on comment_table', DOC ON COLUMN [u25 AS \"materialize\".\"public\".\"comment_table\"].\"f1\" = 'comment on comment_table.f1', DOC ON COLUMN [u25 AS \"materialize\".\"public\".\"comment_table\"].\"f2\" = 'comment on comment_table.f2') ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(523)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "basic_topk_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"basic_topk_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"count\"(\"f1\") FROM [u27 AS \"materialize\".\"public\".\"basic_topk_table\"] GROUP BY \"f1\" ORDER BY \"f1\" ASC NULLS FIRST LIMIT 2" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(524)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "jsonb_type_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"jsonb_type_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS WITH \"cte\" AS (SELECT '{\"object_element\":{\"a\":\"b\"},\"array_element\": [1,2], \"string_element\":\"abc\", \"number_element\":123.456, \"boolean_element\": true, \"null_element\":null}'::[s26 AS \"pg_catalog\".\"jsonb\"] AS \"cte_jsonb_col\") SELECT \"jsonb_col\" AS \"c1\", '{\"object_element\":{\"a\":\"b\"},\"array_element\": [1,2], \"string_element\":\"abc\", \"number_element\":123.456, \"boolean_element\": true, \"null_element\":null}'::[s26 AS \"pg_catalog\".\"jsonb\"] AS \"c2\", \"jsonb_col\" -> 'number_element' AS \"c3\", \"cte_jsonb_col\" -> 'number_element' AS \"c4\", \"jsonb_col\" ->> 'number_element' AS \"c5\", \"jsonb_col\" #> '{array_element,1}' AS \"c6\", \"jsonb_col\" #>> '{array_element,1}' AS \"c7\", \"jsonb_col\" || '{\"another_null\": null}'::[s26 AS \"pg_catalog\".\"jsonb\"] AS \"c8\", \"jsonb_col\" - 'object_element' AS \"c9\", \"jsonb_col\" @> '{\"boolean_element\": true}' AS \"c10\", \"jsonb_col\" <@ '{\"boolean_element\": true}' AS \"c11\", \"jsonb_col\" ? 'number_element' AS \"c12\" FROM [u28 AS \"materialize\".\"public\".\"jsonb_type_table\"], \"cte\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(525)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_conn_ssh3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"kafka_conn_ssh3\" TO KAFKA (BROKER = 'kafka:9092'USING SSH TUNNEL [u1 AS \"materialize\".\"public\".\"ssh_tunnel_0\"], SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(526)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh3_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"ssh3_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(527)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "ssh3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"ssh3\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u525 AS \"materialize\".\"public\".\"kafka_conn_ssh3\"] (TOPIC = 'testdrive-ssh3-1') FORMAT TEXT ENVELOPE NONE EXPOSE PROGRESS AS [u526 AS \"materialize\".\"public\".\"ssh3_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(528)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "numeric_types_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"numeric_types_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"smallint_col\", -32768::[s44 AS \"pg_catalog\".\"int2\"] AS \"smallint2\", 32767::[s44 AS \"pg_catalog\".\"int2\"] AS \"smallint3\", \"integer_col\", -2147483648::[s20 AS \"pg_catalog\".\"int4\"] AS \"integer2\", 2147483647::[s20 AS \"pg_catalog\".\"int4\"] AS \"integer3\", \"bigint_col\", -9223372036854775808::[s22 AS \"pg_catalog\".\"int8\"] AS \"bigint2\", 9223372036854775807::[s22 AS \"pg_catalog\".\"int8\"] AS \"bigint3\", \"numeric_col\", -12345678901234567890123.4567890123456789 AS \"numeric2\", 12345678901234567890123.4567890123456789::[s32 AS \"pg_catalog\".\"numeric\"](39, 16) AS \"numeric3\" FROM [u35 AS \"materialize\".\"public\".\"numeric_types_table\"] WHERE \"smallint_col\" >= -32768 AND \"smallint_col\" <= 32767 AND \"integer_col\" >= -2147483648 AND \"integer_col\" <= 2147483647 AND \"bigint_col\" >= -9223372036854775808 AND \"bigint_col\" <= 9223372036854775807 AND \"numeric_col\" >= -12345678901234567890123.4567890123456789 AND \"numeric_col\" <= 12345678901234567890123.4567890123456789 OR \"smallint_col\" IS NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(529)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_sink_comments3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_sink_comments3\" IN CLUSTER [u1] FROM [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'sink-sink-comments3') KEY (\"l_v2\") NOT ENFORCED FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] (NULL DEFAULTS, DOC ON COLUMN [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"].\"l_v1\" = 'doc on l_v1', VALUE DOC ON COLUMN [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"].\"l_v2\" = 'value doc on l_v2', KEY DOC ON COLUMN [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"].\"l_v2\" = 'key doc on l_v2', DOC ON TYPE [u42 AS \"materialize\".\"public\".\"sink_source_comments_view\"] = 'comment on view sink_source_comments_view') ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(530)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "delta_join_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"delta_join_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u47 AS \"materialize\".\"public\".\"delta_join_table1\"], [u49 AS \"materialize\".\"public\".\"delta_join_table2\"] WHERE \"delta_join_table1\".\"f1\" = \"delta_join_table2\".\"f3\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(531)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_table3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"create_table3\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"], \"f2\" [s20 AS \"pg_catalog\".\"int4\"] NOT NULL DEFAULT 1234)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(532)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_table_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"create_table_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"create_table2\".\"f1\" FROM [u344 AS \"materialize\".\"public\".\"create_table2\"], [u531 AS \"materialize\".\"public\".\"create_table3\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(533)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "real_type_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"real_type_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"real_col\", '-Inf'::[s16 AS \"pg_catalog\".\"float4\"] AS \"minus_inf\", '+Inf'::[s16 AS \"pg_catalog\".\"float4\"] AS \"plus_inf\", 'NaN'::[s16 AS \"pg_catalog\".\"float4\"] AS \"nan\", 1E-37 AS \"c1\", 1E37 AS \"c2\" FROM [u54 AS \"materialize\".\"public\".\"real_type_table\"] WHERE \"real_col\" >= -1E37 OR \"real_col\" IN ('+Inf', '-Inf', 'NaN') OR \"real_col\" IS NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(534)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "threshold_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"threshold_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u59 AS \"materialize\".\"public\".\"threshold_table2\"] EXCEPT ALL SELECT * FROM [u58 AS \"materialize\".\"public\".\"threshold_table1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(535)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "regex_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"regex_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" ~ \"f2\" AS \"c1\", \"f1\" ~* \"f2\" AS \"c2\", \"f1\" ~ 'a.c|x.z' AS \"c3\", \"f1\" ~* 'a.c|x.z' AS \"c4\" FROM [u60 AS \"materialize\".\"public\".\"regex_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(536)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "like_regex_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"like_regex_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" LIKE \"f2\" AS \"c1\", \"f1\" ILIKE \"f2\" AS \"c2\", \"f1\" LIKE 'x_z' AS \"c3\", \"f1\" ILIKE 'a_c' AS \"c4\", \"f1\" LIKE 'a~%' ESCAPE '~' AS \"c5\", \"f1\" LIKE \"f3\" ESCAPE '~' AS \"c6\", \"f1\" LIKE \"f3\" ESCAPE \"f4\" AS \"c7\" FROM [u61 AS \"materialize\".\"public\".\"like_regex_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(537)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "range_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"range_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"index\", \"i4_range\", \"i8_range\", \"num_range\", \"ts_range\", \"tstz_range\", \"d_range\", '[2,5]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_range2\", \"pg_catalog\".\"int8range\"(2, 4) AS \"i8_range3\", GREATEST(\"i8_range\", '[2,5]'::[s76 AS \"pg_catalog\".\"int8range\"]) AS \"i8_greatest\", LEAST(\"i8_range\", '[2,5]'::[s76 AS \"pg_catalog\".\"int8range\"]) AS \"i8_least\", NULLIF(\"i8_range\", '[2,17)'::[s76 AS \"pg_catalog\".\"int8range\"]) AS \"i8_nif\", \"pg_catalog\".\"lower\"(\"i8_range\") AS \"i8_low\", \"pg_catalog\".\"upper\"(\"i8_range\") AS \"i8_up\", \"pg_catalog\".\"isempty\"(\"i8_range\") AS \"i8_empty\", \"pg_catalog\".\"lower_inc\"(\"i8_range\") AS \"i8_lowinc\", \"pg_catalog\".\"upper_inc\"(\"i8_range\") AS \"i8_upinc\", \"pg_catalog\".\"lower_inf\"(\"i8_range\") AS \"i8_lowinf\", \"pg_catalog\".\"upper_inf\"(\"i8_range\") AS \"i8_upinf\", \"i8_range\" < '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_lt\", \"i8_range\" <= '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_le\", \"i8_range\" = '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_eq\", \"i8_range\" >= '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_ge\", \"i8_range\" > '[2,16]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_gt\", \"i8_range\" @> \"pg_catalog\".\"int8range\"(2, 3) AS \"i8_containsrange\", \"i8_range\" @> 16::[s22 AS \"pg_catalog\".\"int8\"] AS \"i8_containselem\", \"i8_range\" <@ \"pg_catalog\".\"int8range\"(2, 3) AS \"i8_inrange\", 16::[s22 AS \"pg_catalog\".\"int8\"] <@ \"i8_range\" AS \"i8_inelem\", \"i8_range\" && \"pg_catalog\".\"int8range\"(4, 12) AS \"i8_overlap\", \"i8_range\" << \"pg_catalog\".\"int8range\"(400, 500) AS \"i8_leftof\", \"i8_range\" >> \"pg_catalog\".\"int8range\"(0, 1) AS \"i8_rightof\", \"i8_range\" &< \"pg_catalog\".\"int8range\"(0, 1) AS \"i8_notextright\", \"i8_range\" &> \"pg_catalog\".\"int8range\"(0, 1) AS \"i8_notextleft\", \"i8_range\" -|- \"pg_catalog\".\"int8range\"(100, 150) AS \"i8_adjacent\", \"i8_range\" + '[3,20]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_merge\", \"i8_range\" * '[8,20]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_intersec\", \"i8_range\" - '[8,120]'::[s76 AS \"pg_catalog\".\"int8range\"] AS \"i8_diff\", (SELECT \"partition\" FROM [u64 AS \"materialize\".\"public\".\"range_source_progress\"] LIMIT 1) AS \"progress_range\" FROM [u63 AS \"materialize\".\"public\".\"range_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(538)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "null_value_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"null_value_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"f2\", NULL FROM [u69 AS \"materialize\".\"public\".\"null_value_table\"] WHERE \"f1\" IS NULL OR \"f1\" IS NOT NULL OR \"f1\" = NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(539)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source_tableb_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source_tableb_false\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, \"f2\" [s20 AS \"pg_catalog\".\"int4\"] NOT NULL, \"f3\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, CONSTRAINT \"postgres_source_table_false_pkey\" PRIMARY KEY (\"f1\", \"f2\"), CONSTRAINT \"postgres_source_table_false_f3_key\" UNIQUE (\"f3\")) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(540)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source2_false_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source2_false_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(541)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source2_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"postgres_source2_false\" IN CLUSTER [u1] FROM POSTGRES CONNECTION [u363 AS \"materialize\".\"public\".\"pg2_false\"] (PUBLICATION = 'postgres_source_false', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030ac0010a1a706f7374677265735f736f757263655f7461626c655f7472756512067075626c696318b7800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2b08bd8001121f706f7374677265735f736f757263655f7461626c655f747275655f706b65791a02010220012a2a08bf80011221706f7374677265735f736f757263655f7461626c655f747275655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743212067075626c696318c1800122150a026631101718ffffffffffffffffff01200130010a270a02743312067075626c696318c4800122150a026631101718ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a02010220010a95010a0e646562657a69756d5f7461626c6512067075626c696318ad800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222150a026633101718ffffffffffffffffff012001300322150a026634101918ffffffffffffffffff01200130042a1f08b380011213646562657a69756d5f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f38616633613930623139646634323137613064316565376137313662353761371801') FOR TABLES (\"postgres\".\"public\".\"postgres_source_table_false\" AS [u539 AS \"materialize\".\"public\".\"postgres_source_tableb_false\"]) EXPOSE PROGRESS AS [u540 AS \"materialize\".\"public\".\"postgres_source2_false_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(542)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pgpass3_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"pgpass3_false\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(543)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg3_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg3_false\" TO POSTGRES (DATABASE = \"postgres\", HOST = 'postgres', PASSWORD = SECRET [u542 AS \"materialize\".\"public\".\"pgpass3_false\"], USER = \"postgres1_false\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(544)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source_tablec_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source_tablec_false\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, \"f2\" [s20 AS \"pg_catalog\".\"int4\"] NOT NULL, \"f3\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, CONSTRAINT \"postgres_source_table_false_pkey\" PRIMARY KEY (\"f1\", \"f2\"), CONSTRAINT \"postgres_source_table_false_f3_key\" UNIQUE (\"f3\")) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(545)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source3_false_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source3_false_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(546)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source3_false", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"postgres_source3_false\" IN CLUSTER [u1] FROM POSTGRES CONNECTION [u543 AS \"materialize\".\"public\".\"pg3_false\"] (PUBLICATION = 'postgres_source_false', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030ac0010a1a706f7374677265735f736f757263655f7461626c655f7472756512067075626c696318b7800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2b08bd8001121f706f7374677265735f736f757263655f7461626c655f747275655f706b65791a02010220012a2a08bf80011221706f7374677265735f736f757263655f7461626c655f747275655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743212067075626c696318c1800122150a026631101718ffffffffffffffffff01200130010a270a02743312067075626c696318c4800122150a026631101718ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a02010220010a95010a0e646562657a69756d5f7461626c6512067075626c696318ad800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222150a026633101718ffffffffffffffffff012001300322150a026634101918ffffffffffffffffff01200130042a1f08b380011213646562657a69756d5f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f65333035643631346632656534343136383930316432653866666163383632361801') FOR TABLES (\"postgres\".\"public\".\"postgres_source_table_false\" AS [u544 AS \"materialize\".\"public\".\"postgres_source_tablec_false\"]) EXPOSE PROGRESS AS [u545 AS \"materialize\".\"public\".\"postgres_source3_false_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(547)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "shared_cluster_compute_first_source_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"shared_cluster_compute_first_source_progress\" (\"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(548)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "shared_cluster_compute_first_source", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"shared_cluster_compute_first_source\" IN CLUSTER [u17] FROM LOAD GENERATOR COUNTER (SCALE FACTOR = 0.01) EXPOSE PROGRESS AS [u547 AS \"materialize\".\"public\".\"shared_cluster_compute_first_source_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(549)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "shared_cluster_storage_first_mv", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"shared_cluster_storage_first_mv\" IN CLUSTER [u18] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(*) AS \"cnt\" FROM [u548 AS \"materialize\".\"public\".\"shared_cluster_compute_first_source\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(550)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "shared_cluster_storage_first_mv_primary_idx", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"shared_cluster_storage_first_mv_primary_idx\" IN CLUSTER [u18] ON \"materialize\".\"public\".\"shared_cluster_storage_first_mv\" (\"cnt\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(551)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "rename_index_view3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"rename_index_view3\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f2\" FROM [u81 AS \"materialize\".\"public\".\"rename_index_table\"] WHERE \"f2\" > 0" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(552)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "window_functions_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"window_functions_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"row_number\"() OVER (PARTITION BY \"f1\" ORDER BY \"f2\"), \"pg_catalog\".\"dense_rank\"() OVER (PARTITION BY \"f2\" ORDER BY \"f1\" DESC), \"pg_catalog\".\"lag\"(\"f1\", \"f2\", \"f1\") OVER (ORDER BY \"f2\"), \"pg_catalog\".\"lead\"(\"f2\", \"f1\", \"f2\") OVER (PARTITION BY \"f1\"), \"pg_catalog\".\"row_number\"() OVER (RANGE UNBOUNDED PRECEDING) AS \"range1\", \"pg_catalog\".\"row_number\"() OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS \"range2\", \"pg_catalog\".\"row_number\"() OVER (ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING) AS \"rows_between\", \"pg_catalog\".\"first_value\"(\"f1\") OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING) FROM [u95 AS \"materialize\".\"public\".\"window_functions_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(553)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "create_index_table_index", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"create_index_table_index\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"create_index_table\" (\"f1\", \"f2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(554)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "monotonic_top1_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"monotonic_top1_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"count\"(\"f1\") FROM [u100 AS \"materialize\".\"public\".\"monotonic_top1_source\"] GROUP BY \"f1\" ORDER BY \"f1\" ASC NULLS FIRST LIMIT 1" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(555)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "cast_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"cast_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\"::[s6 AS \"pg_catalog\".\"bool\"] AS \"c1\", \"f1\"::[s20 AS \"pg_catalog\".\"int4\"] AS \"c2\", \"f1\"::[s18 AS \"pg_catalog\".\"float8\"] AS \"c3\", \"f1\"::[s32 AS \"pg_catalog\".\"numeric\"] AS \"c4\", \"f1\"::[s16 AS \"pg_catalog\".\"float4\"] AS \"c5\", \"f1\"::[s46 AS \"pg_catalog\".\"text\"] AS \"c6\", \"f1\"::[s46 AS \"pg_catalog\".\"text\"] AS \"c7\", \"f1\"::[s6 AS \"pg_catalog\".\"bool\"] AS \"c8\" FROM [u103 AS \"materialize\".\"public\".\"cast_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(556)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "monotonic_topk_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"monotonic_topk_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"count\"(\"f1\") FROM [u105 AS \"materialize\".\"public\".\"monotonic_topk_source\"] GROUP BY \"f1\" ORDER BY \"f1\" ASC NULLS FIRST LIMIT 2" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(557)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(15)) }), name: "ABC<div style=\"x:\\xE2\\x80\\x86expression(javascript:alert(1)\">DEF", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"--\".\"</script><script>alert(123)</script>\".\"ABC<div style=\"\"x:\\xE2\\x80\\x86expression(javascript:alert(1)\"\">DEF\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"<script\\x20type=\"\"text/javascript\"\">javascript:alert(1);</script>\", \"c2\" AS \"ðŸ³0ðŸŒˆ\u{fe0f}\" FROM [u107 AS \"--\".\"</script><script>alert(123)</script>\".\"File:///\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(558)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(15)) }), name: "../../../../../../../../../../../etc/passwd%00", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"--\".\"</script><script>alert(123)</script>\".\"../../../../../../../../../../../etc/passwd%00\" IN CLUSTER [u24] FROM [u113 AS \"--\".\"public\".\"<a href=\"\"\\x17javascript:javascript:alert(1)\"\" id=\"\"fuzzelement1\"\">test</a>\"] INTO KAFKA CONNECTION [u109 AS \"--\".\"public\".\"ABC<div style=\"\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\"\">DEF\"] (TOPIC = 'sink-sink-ident') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u110 AS \"--\".\"public\".\"JavaSCript:alert(123)\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(559)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "date_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"date_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"date_col\", '2010-10-10'::[s14 AS \"pg_catalog\".\"date\"] AS \"date_col2\", \"time_col\", '10:10:10'::[s48 AS \"pg_catalog\".\"time\"] AS \"time_col2\", \"timestamp_col\", '2010-10-10 10:10:10+01'::[s50 AS \"pg_catalog\".\"timestamp\"] AS \"timestamp_col2\", \"timestamptz_col\", '2010-10-10 10:10:10+01'::[s52 AS \"pg_catalog\".\"timestamptz\"] AS \"timestamptz_col2\", \"interval_col\", INTERVAL '1 day' AS \"interval_col2\" FROM [u116 AS \"materialize\".\"public\".\"temporal_types\"] WHERE \"date_col\" >= '2010-10-10'::[s14 AS \"pg_catalog\".\"date\"] AND \"time_col\" >= '10:10:10'::[s48 AS \"pg_catalog\".\"time\"] AND \"timestamp_col\" >= '2010-10-10 10:10:10+00'::[s50 AS \"pg_catalog\".\"timestamp\"] AND \"timestamptz_col\" >= '2010-10-10 10:10:10+00'::[s52 AS \"pg_catalog\".\"timestamptz\"] AND \"interval_col\" >= INTERVAL '0 day'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(560)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "not_null_view3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"not_null_view3\" IN CLUSTER [u1] WITH (ASSERT NOT NULL = \"z\", REFRESH = ON COMMIT) AS SELECT * FROM [u123 AS \"materialize\".\"public\".\"not_null_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(561)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "uuid_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"uuid_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"uuid_generate_v5\"(\"f2\", \"f3\") AS \"f2\", \"pg_catalog\".\"uuid_generate_v5\"('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a13', 'foobar') AS \"f3\" FROM [u131 AS \"materialize\".\"public\".\"uuid_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(562)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "nested_types_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"nested_types_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"map_col\", '{a => 1, b => 2}'::[u138 AS \"materialize\".\"public\".\"map_type\"], \"list_col\", '{{1,2},{3,4}}'::[u140 AS \"materialize\".\"public\".\"int4_list_list\"], \"record_col\", ROW(1, 'abc'), \"array_col\", ARRAY[ARRAY['a', 'b'], ARRAY['c', 'd']] FROM [u141 AS \"materialize\".\"public\".\"nested_types_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(563)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_kafka_conn3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"privilege_kafka_conn3\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(564)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_csr_conn3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"privilege_csr_conn3\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(565)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_type3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"privilege_type3\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(566)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_t3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"privilege_t3\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u565 AS \"materialize\".\"public\".\"privilege_type3\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(567)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_i3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"privilege_i3\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"privilege_t3\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(568)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_v3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"privilege_v3\" AS SELECT * FROM [u566 AS \"materialize\".\"public\".\"privilege_t3\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(569)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_mv3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"privilege_mv3\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u566 AS \"materialize\".\"public\".\"privilege_t3\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(570)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "privilege_secret3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"privilege_secret3\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(571)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "linear_join_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"linear_join_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u191 AS \"materialize\".\"public\".\"linear_join_table1\"], [u192 AS \"materialize\".\"public\".\"linear_join_table2\"] WHERE \"linear_join_table1\".\"f1\" = \"linear_join_table2\".\"f2\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(572)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "having_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"having_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"pg_catalog\".\"sum\"(\"f1\") FROM [u199 AS \"materialize\".\"public\".\"having_table\"] GROUP BY \"f1\" HAVING \"pg_catalog\".\"sum\"(\"f1\") > 1 AND \"pg_catalog\".\"sum\"(\"f1\") < 3" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(573)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "explain_item_t2_y", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"explain_item_t2_y\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"explain_item_t2\" (\"y\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(574)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "array_type_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"array_type_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"int_col\", \"pg_catalog\".\"array_fill\"(2, ARRAY[2], ARRAY[2]), \"text_col\", \"pg_catalog\".\"array_fill\"('foo'::[s46 AS \"pg_catalog\".\"text\"], ARRAY[2]) AS \"array_fill2\", \"array_col\", ARRAY[ARRAY[1, 2], ARRAY[NULL, 4]] FROM [u203 AS \"materialize\".\"public\".\"array_type_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(575)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "t3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"t3\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"]) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(576)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg_ssh3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg_ssh3\" TO POSTGRES (DATABASE = \"postgres\", HOST = \"postgres\", PASSWORD = SECRET [u211 AS \"materialize\".\"public\".\"pgpass\"], SSH TUNNEL = [u1 AS \"materialize\".\"public\".\"ssh_tunnel_0\"], SSL MODE = \"require\", USER = \"postgres\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(577)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "t_ssh3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"t_ssh3\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"]) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(578)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mz_source_ssh3_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"mz_source_ssh3_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(579)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "mz_source_ssh3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"mz_source_ssh3\" IN CLUSTER [u1] FROM POSTGRES CONNECTION [u576 AS \"materialize\".\"public\".\"pg_ssh3\"] (PUBLICATION = 'mz_source_ssh', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030ac0010a1a706f7374677265735f736f757263655f7461626c655f7472756512067075626c696318b7800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2b08bd8001121f706f7374677265735f736f757263655f7461626c655f747275655f706b65791a02010220012a2a08bf80011221706f7374677265735f736f757263655f7461626c655f747275655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743212067075626c696318c1800122150a026631101718ffffffffffffffffff01200130010a270a02743312067075626c696318c4800122150a026631101718ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a02010220010a95010a0e646562657a69756d5f7461626c6512067075626c696318ad800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222150a026633101718ffffffffffffffffff012001300322150a026634101918ffffffffffffffffff01200130042a1f08b380011213646562657a69756d5f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f33643861363738386230653034663338383332636637333933643434313038301801') FOR TABLES (\"postgres\".\"public\".\"t_ssh3\" AS [u577 AS \"materialize\".\"public\".\"t_ssh3\"]) EXPOSE PROGRESS AS [u578 AS \"materialize\".\"public\".\"mz_source_ssh3_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(580)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "debezium_source3_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"debezium_source3_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(581)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "debezium_source3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"debezium_source3\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'postgres.public.debezium_table') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] SEED KEY SCHEMA '{\"type\":\"record\",\"name\":\"Key\",\"namespace\":\"postgres.public.debezium_table\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"},{\"name\":\"f2\",\"type\":\"int\"}],\"connect.name\":\"postgres.public.debezium_table.Key\"}' VALUE SCHEMA '{\"type\":\"record\",\"name\":\"Envelope\",\"namespace\":\"postgres.public.debezium_table\",\"fields\":[{\"name\":\"before\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Value\",\"fields\":[{\"name\":\"f1\",\"type\":\"string\"},{\"name\":\"f2\",\"type\":\"int\"},{\"name\":\"f3\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"f4\",\"type\":[\"null\",\"string\"],\"default\":null}],\"connect.name\":\"postgres.public.debezium_table.Value\"}],\"default\":null},{\"name\":\"after\",\"type\":[\"null\",\"Value\"],\"default\":null},{\"name\":\"source\",\"type\":{\"type\":\"record\",\"name\":\"Source\",\"namespace\":\"io.debezium.connector.postgresql\",\"fields\":[{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"connector\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"ts_ms\",\"type\":\"long\"},{\"name\":\"snapshot\",\"type\":[{\"type\":\"string\",\"connect.version\":1,\"connect.parameters\":{\"allowed\":\"true,last,false,incremental\"},\"connect.default\":\"false\",\"connect.name\":\"io.debezium.data.Enum\"},\"null\"],\"default\":\"false\"},{\"name\":\"db\",\"type\":\"string\"},{\"name\":\"sequence\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"schema\",\"type\":\"string\"},{\"name\":\"table\",\"type\":\"string\"},{\"name\":\"txId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"lsn\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"xmin\",\"type\":[\"null\",\"long\"],\"default\":null}],\"connect.name\":\"io.debezium.connector.postgresql.Source\"}},{\"name\":\"op\",\"type\":\"string\"},{\"name\":\"ts_ms\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"transaction\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"block\",\"namespace\":\"event\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"total_order\",\"type\":\"long\"},{\"name\":\"data_collection_order\",\"type\":\"long\"}],\"connect.version\":1,\"connect.name\":\"event.block\"}],\"default\":null}],\"connect.version\":1,\"connect.name\":\"postgres.public.debezium_table.Envelope\"}' ENVELOPE DEBEZIUM EXPOSE PROGRESS AS [u580 AS \"materialize\".\"public\".\"debezium_source3_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(582)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "debezium_view3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"debezium_view3\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\", \"f3\", \"pg_catalog\".\"sum\"(\"pg_catalog\".\"length\"(\"f4\")) FROM [u581 AS \"materialize\".\"public\".\"debezium_source3\"] GROUP BY \"f1\", \"f3\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(583)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_sink_null3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_sink_null3\" IN CLUSTER [u1] FROM [u227 AS \"materialize\".\"public\".\"sink_source_null_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'sink-sink-null3') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] (NULL DEFAULTS) ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(584)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "string_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"string_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"f1\" BETWEEN \"f2\" AND \"f3\" AS \"c1\", 'foo' BETWEEN 'abc' AND 'xyz' AS \"c2\", \"f1\" NOT BETWEEN \"f2\" AND \"f3\" AS \"c3\", \"pg_catalog\".\"substring\"(\"f1\", \"f4\", \"f5\") AS \"c4\", \"pg_catalog\".\"substring\"(\"f1\", \"f4\") AS \"c5\", \"pg_catalog\".\"substring\"(\"f1\", 1, \"f5\") AS \"c6\", \"pg_catalog\".\"btrim\"(\"f1\") AS \"c7\", \"pg_catalog\".\"ltrim\"(\"f1\") AS \"c8\", \"pg_catalog\".\"rtrim\"(\"f1\") AS \"c9\", \"pg_catalog\".\"ltrim\"(\"f1\", ' f') AS \"c10\", \"pg_catalog\".\"btrim\"(\"f1\", ' fr') AS \"c11\", \"pg_catalog\".\"array_to_string\"(\"f6\", ',', 'NULL') AS \"c12\" FROM [u229 AS \"materialize\".\"public\".\"string_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(585)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "v3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"v3\" (\"a\") AS SELECT 1::[s70 AS \"mz_catalog\".\"uint8\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(586)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_kafka_conn5", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_kafka_conn5\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(587)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_csr_conn5", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_csr_conn5\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(588)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_type5", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"owner_type5\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(589)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_t5", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"owner_t5\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u588 AS \"materialize\".\"public\".\"owner_type5\"])" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(590)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_i5", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"owner_i5\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"owner_t5\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(591)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_v5", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"owner_v5\" AS SELECT * FROM [u589 AS \"materialize\".\"public\".\"owner_t5\"]" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(592)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_mv5", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"owner_mv5\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u589 AS \"materialize\".\"public\".\"owner_t5\"]" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(593)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_secret5", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"owner_secret5\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(594)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_kafka_conn6", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_kafka_conn6\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(595)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_csr_conn6", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_csr_conn6\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(596)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_type6", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"owner_type6\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(597)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_t6", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"owner_t6\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u596 AS \"materialize\".\"public\".\"owner_type6\"])" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(598)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_i6", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"owner_i6\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"owner_t6\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(599)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_v6", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"owner_v6\" AS SELECT * FROM [u597 AS \"materialize\".\"public\".\"owner_t6\"]" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(600)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_mv6", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"owner_mv6\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u597 AS \"materialize\".\"public\".\"owner_t6\"]" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(601)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_secret6", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"owner_secret6\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(602)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_kafka_conn7", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_kafka_conn7\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(603)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_csr_conn7", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_csr_conn7\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(604)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_type7", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"owner_type7\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(605)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_t7", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"owner_t7\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u604 AS \"materialize\".\"public\".\"owner_type7\"])" })) }), owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(606)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_i7", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"owner_i7\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"owner_t7\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(607)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_v7", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"owner_v7\" AS SELECT * FROM [u605 AS \"materialize\".\"public\".\"owner_t7\"]" })) }), owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(608)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_mv7", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"owner_mv7\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u605 AS \"materialize\".\"public\".\"owner_t7\"]" })) }), owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(609)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_secret7", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"owner_secret7\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(11)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(User(11)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(610)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_kafka_conn8", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_kafka_conn8\" TO KAFKA (BROKER = 'kafka:9092', SECURITY PROTOCOL = \"plaintext\")" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(611)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_csr_conn8", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"owner_csr_conn8\" TO CONFLUENT SCHEMA REGISTRY (URL = 'http://schema-registry:8081/')" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(612)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_type8", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TYPE \"materialize\".\"public\".\"owner_type8\" AS LIST (ELEMENT TYPE = [s46 AS \"pg_catalog\".\"text\"])" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(613)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_t8", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"materialize\".\"public\".\"owner_t8\" (\"c1\" [s20 AS \"pg_catalog\".\"int4\"], \"c2\" [u612 AS \"materialize\".\"public\".\"owner_type8\"])" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(614)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_i8", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE INDEX \"owner_i8\" IN CLUSTER [u1] ON \"materialize\".\"public\".\"owner_t8\" (\"c2\")" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(615)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_v8", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"owner_v8\" AS SELECT * FROM [u613 AS \"materialize\".\"public\".\"owner_t8\"]" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(616)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_mv8", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"owner_mv8\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u613 AS \"materialize\".\"public\".\"owner_t8\"]" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(617)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "owner_secret8", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"owner_secret8\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(618)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "string_bytea_types_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE VIEW \"materialize\".\"public\".\"string_bytea_types_view2\" AS SELECT \"text_col\", \"bytea_col\", 'Ñ‚Ð¾Ð²Ð°'::[s46 AS \"pg_catalog\".\"text\"], '\\xAAAA'::[s8 AS \"pg_catalog\".\"bytea\"] FROM [u256 AS \"materialize\".\"public\".\"text_bytea_types_table\"] WHERE \"text_col\" >= ''::[s46 AS \"pg_catalog\".\"text\"] AND \"bytea_col\" >= ''::[s8 AS \"pg_catalog\".\"bytea\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(619)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "regexp_extract_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"regexp_extract_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"mz_catalog\".\"regexp_extract\"('((a)(.c))|((x)(.z))', \"f1\") AS \"c1\" FROM [u257 AS \"materialize\".\"public\".\"regexp_extract_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(620)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "order_by2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"order_by2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"] ORDER BY \"f3\" DESC, \"f2\" ASC, \"f1\" DESC LIMIT 999999999" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(621)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "limit_one2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"limit_one2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"] LIMIT 1" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(622)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "limit_many2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"limit_many2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT * FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"] LIMIT 999999999" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(623)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "top_level_distinct2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"top_level_distinct2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT DISTINCT \"f1\", \"f2\" FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(624)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "global_count2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"global_count2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(*) FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(625)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "global_aggregation2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"global_aggregation2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(\"f1\"), \"pg_catalog\".\"min\"(\"f1\"), \"pg_catalog\".\"max\"(\"f1\"), \"pg_catalog\".\"sum\"(\"f1\") FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(626)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(25)) }), name: "global_aggregation_distinct2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"aggregation_schema\".\"global_aggregation_distinct2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"pg_catalog\".\"count\"(DISTINCT \"f1\"), \"pg_catalog\".\"min\"(DISTINCT \"f1\"), \"pg_catalog\".\"max\"(DISTINCT \"f1\"), \"pg_catalog\".\"sum\"(DISTINCT \"f1\") FROM [u258 AS \"materialize\".\"aggregation_schema\".\"t1\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(627)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "double_type_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"double_type_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"double_col\", '-Inf'::[s18 AS \"pg_catalog\".\"float8\"] AS \"minus_inf\", '+Inf'::[s18 AS \"pg_catalog\".\"float8\"] AS \"plus_inf\", 'NaN'::[s18 AS \"pg_catalog\".\"float8\"] AS \"nan\", '1E-307'::[s18 AS \"pg_catalog\".\"float8\"] AS \"c1\", '1E+307'::[s18 AS \"pg_catalog\".\"float8\"] AS \"c2\" FROM [u259 AS \"materialize\".\"public\".\"double_type_table\"] WHERE \"double_col\" >= '-1E+307' OR \"double_col\" IN ('+Inf', '-Inf', 'NaN') OR \"double_col\" IS NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(628)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source_tableb_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source_tableb_true\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, \"f2\" [s20 AS \"pg_catalog\".\"int4\"] NOT NULL, \"f3\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, CONSTRAINT \"postgres_source_table_true_pkey\" PRIMARY KEY (\"f1\", \"f2\"), CONSTRAINT \"postgres_source_table_true_f3_key\" UNIQUE (\"f3\")) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(629)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source2_true_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source2_true_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(630)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source2_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"postgres_source2_true\" IN CLUSTER [u1] FROM POSTGRES CONNECTION [u470 AS \"materialize\".\"public\".\"pg2_true\"] (PUBLICATION = 'postgres_source_true', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030ac0010a1a706f7374677265735f736f757263655f7461626c655f7472756512067075626c696318b7800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2b08bd8001121f706f7374677265735f736f757263655f7461626c655f747275655f706b65791a02010220012a2a08bf80011221706f7374677265735f736f757263655f7461626c655f747275655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743212067075626c696318c1800122150a026631101718ffffffffffffffffff01200130010a270a02743312067075626c696318c4800122150a026631101718ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a02010220010a95010a0e646562657a69756d5f7461626c6512067075626c696318ad800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222150a026633101718ffffffffffffffffff012001300322150a026634101918ffffffffffffffffff01200130042a1f08b380011213646562657a69756d5f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f38616639353561653666323634303631613663646562313461373639383830321801') FOR TABLES (\"postgres\".\"public\".\"postgres_source_table_true\" AS [u628 AS \"materialize\".\"public\".\"postgres_source_tableb_true\"]) EXPOSE PROGRESS AS [u629 AS \"materialize\".\"public\".\"postgres_source2_true_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(631)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pgpass3_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SECRET \"materialize\".\"public\".\"pgpass3_true\" AS '********'" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(632)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "pg3_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE CONNECTION \"materialize\".\"public\".\"pg3_true\" TO POSTGRES (DATABASE = \"postgres\", HOST = 'postgres', PASSWORD = SECRET [u631 AS \"materialize\".\"public\".\"pgpass3_true\"], USER = \"postgres1_true\")" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(633)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source_tablec_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source_tablec_true\" (\"f1\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, \"f2\" [s20 AS \"pg_catalog\".\"int4\"] NOT NULL, \"f3\" [s46 AS \"pg_catalog\".\"text\"] NOT NULL, CONSTRAINT \"postgres_source_table_true_pkey\" PRIMARY KEY (\"f1\", \"f2\"), CONSTRAINT \"postgres_source_table_true_f3_key\" UNIQUE (\"f3\")) WITH (REFERENCES = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(634)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source3_true_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"postgres_source3_true_progress\" (\"lsn\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(635)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "postgres_source3_true", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"postgres_source3_true\" IN CLUSTER [u1] FROM POSTGRES CONNECTION [u632 AS \"materialize\".\"public\".\"pg3_true\"] (PUBLICATION = 'postgres_source_true', DETAILS = '0ac3010a1b706f7374677265735f736f757263655f7461626c655f66616c736512067075626c69631885800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2c088b80011220706f7374677265735f736f757263655f7461626c655f66616c73655f706b65791a02010220012a2b088d80011222706f7374677265735f736f757263655f7461626c655f66616c73655f66335f6b65791a01030ac0010a1a706f7374677265735f736f757263655f7461626c655f7472756512067075626c696318b7800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222130a026633101918ffffffffffffffffff0130032a2b08bd8001121f706f7374677265735f736f757263655f7461626c655f747275655f706b65791a02010220012a2a08bf80011221706f7374677265735f736f757263655f7461626c655f747275655f66335f6b65791a01030a380a13736f757263655f6572726f72735f7461626c6512067075626c69631890800122150a026631101918ffffffffffffffffff01200130010a270a02743212067075626c696318c1800122150a026631101718ffffffffffffffffff01200130010a270a02743312067075626c696318c4800122150a026631101718ffffffffffffffffff01200130010a270a02743112067075626c69631898800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683112067075626c6963189c800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683212067075626c6963189f800122150a026631101718ffffffffffffffffff01200130010a2b0a06745f7373683312067075626c696318a2800122150a026631101718ffffffffffffffffff01200130010a6e0a15706f7374677265735f6d7a5f6e6f775f7461626c6512067075626c696318a7800122140a02663110da0818ffffffffffffffffff013001220b0a026632109208180930022a2608ab8001121a706f7374677265735f6d7a5f6e6f775f7461626c655f706b65791a02010220010a95010a0e646562657a69756d5f7461626c6512067075626c696318ad800122130a026631101918ffffffffffffffffff01300122130a026632101718ffffffffffffffffff01300222150a026633101718ffffffffffffffffff012001300322150a026634101918ffffffffffffffffff01200130042a1f08b380011213646562657a69756d5f7461626c655f706b65791a0201022001122c6d6174657269616c697a655f37363361613665303730623834326566383333633230303665323466623639361801') FOR TABLES (\"postgres\".\"public\".\"postgres_source_table_true\" AS [u633 AS \"materialize\".\"public\".\"postgres_source_tablec_true\"]) EXPOSE PROGRESS AS [u634 AS \"materialize\".\"public\".\"postgres_source3_true_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(636)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "sink_sink3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SINK \"materialize\".\"public\".\"sink_sink3\" IN CLUSTER [u1] FROM [u270 AS \"materialize\".\"public\".\"sink_source_view\"] INTO KAFKA CONNECTION [u5 AS \"materialize\".\"public\".\"kafka_conn\"] (TOPIC = 'sink-sink3') FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION [u6 AS \"materialize\".\"public\".\"csr_conn\"] ENVELOPE DEBEZIUM" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 0 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(637)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "date_prec_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"date_prec_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"timestamp_prec_col\", '2010-10-10 10:10:10.123456789+01'::[s50 AS \"pg_catalog\".\"timestamp\"](3) AS \"timestamp_prec_col2\", \"timestamptz_prec_col\", '2010-10-10 10:10:10.123456789+01'::[s52 AS \"pg_catalog\".\"timestamptz\"](1) AS \"timestamptz_prec_col2\" FROM [u272 AS \"materialize\".\"public\".\"temporal_prec_types\"] WHERE \"timestamp_prec_col\" >= '2010-10-10 10:10:10+00'::[s50 AS \"pg_catalog\".\"timestamp\"] AND \"timestamptz_prec_col\" >= '2010-10-10 10:10:10+00'::[s52 AS \"pg_catalog\".\"timestamptz\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(638)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_view_2s_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"refresh_view_2s_3\" IN CLUSTER [u1] WITH (REFRESH = EVERY '2 seconds' ALIGNED TO 1707218307704::[s72 AS \"mz_catalog\".\"mz_timestamp\"]) AS SELECT DISTINCT (\"x\") FROM [u276 AS \"materialize\".\"public\".\"refresh_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(639)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_view_at_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"refresh_view_at_3\" IN CLUSTER [u1] WITH (REFRESH = AT 1707218308362::[s72 AS \"mz_catalog\".\"mz_timestamp\"]::[s46 AS \"pg_catalog\".\"text\"]::[s22 AS \"pg_catalog\".\"int8\"]) AS SELECT DISTINCT (\"x\") FROM [u276 AS \"materialize\".\"public\".\"refresh_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(640)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "refresh_view_late_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"refresh_view_late_3\" IN CLUSTER [u1] WITH (REFRESH = AT 1707218308851::[s72 AS \"mz_catalog\".\"mz_timestamp\"]::[s46 AS \"pg_catalog\".\"text\"]::[s22 AS \"pg_catalog\".\"int8\"] + 86400000) AS SELECT DISTINCT (\"x\") FROM [u276 AS \"materialize\".\"public\".\"refresh_table\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(641)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "wmr2a", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"wmr2a\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"a\" + 1 FROM [u481 AS \"materialize\".\"public\".\"wmr2\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(642)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "wmr3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"wmr3\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS WITH MUTUALLY RECURSIVE \"foo\" (\"a\" [s20 AS \"pg_catalog\".\"int4\"], \"b\" [s20 AS \"pg_catalog\".\"int4\"]) AS (SELECT 1, 2 UNION SELECT \"a\", 7 FROM \"bar\"), \"bar\" (\"a\" [s20 AS \"pg_catalog\".\"int4\"]) AS (SELECT \"a\" FROM \"foo\") SELECT * FROM \"bar\"" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(643)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "constant_plan_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"constant_plan_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS VALUES (1), (2), (3)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(644)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "boolean_type_view2", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE MATERIALIZED VIEW \"materialize\".\"public\".\"boolean_type_view2\" IN CLUSTER [u1] WITH (REFRESH = ON COMMIT) AS SELECT \"boolean_col\", 'TRUE'::[s6 AS \"pg_catalog\".\"bool\"] AS \"true_col\", 'FALSE'::[s6 AS \"pg_catalog\".\"bool\"] AS \"false_col\" FROM [u302 AS \"materialize\".\"public\".\"boolean_type_table\"] WHERE \"boolean_col\" IS TRUE OR \"boolean_col\" IS FALSE OR \"boolean_col\" IS NULL" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(645)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_plaintext_3_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_plaintext_3_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(646)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_plaintext_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_plaintext_3\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u307 AS \"materialize\".\"public\".\"kafka_plaintext\"] (TOPIC = 'testdrive-kafka-protocols-3-1') FORMAT TEXT EXPOSE PROGRESS AS [u645 AS \"materialize\".\"public\".\"kafka_plaintext_3_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(647)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_3_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_ssl_3_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(648)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_ssl_3\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u308 AS \"materialize\".\"public\".\"kafka_ssl\"] (TOPIC = 'testdrive-kafka-protocols-3-1') FORMAT TEXT EXPOSE PROGRESS AS [u647 AS \"materialize\".\"public\".\"kafka_ssl_3_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(649)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_scram_sha_512_3_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_scram_sha_512_3_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(650)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_scram_sha_512_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_scram_sha_512_3\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u309 AS \"materialize\".\"public\".\"kafka_scram_sha_512\"] (TOPIC = 'testdrive-kafka-protocols-3-1') FORMAT TEXT EXPOSE PROGRESS AS [u649 AS \"materialize\".\"public\".\"kafka_scram_sha_512_3_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(651)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_scram_sha_512_3_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_ssl_scram_sha_512_3_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(652)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_ssl_scram_sha_512_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_ssl_scram_sha_512_3\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u310 AS \"materialize\".\"public\".\"kafka_ssl_scram_sha_512\"] (TOPIC = 'testdrive-kafka-protocols-3-1') FORMAT TEXT EXPOSE PROGRESS AS [u651 AS \"materialize\".\"public\".\"kafka_ssl_scram_sha_512_3_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(653)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_sasl_3_progress", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SUBSOURCE \"materialize\".\"public\".\"kafka_sasl_3_progress\" (\"partition\" [s80 AS \"pg_catalog\".\"numrange\"] NOT NULL, \"offset\" [s70 AS \"mz_catalog\".\"uint8\"]) WITH (PROGRESS = true)" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(654)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(3)) }), name: "kafka_sasl_3", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE SOURCE \"materialize\".\"public\".\"kafka_sasl_3\" IN CLUSTER [u1] FROM KAFKA CONNECTION [u311 AS \"materialize\".\"public\".\"kafka_sasl\"] (TOPIC = 'testdrive-kafka-protocols-3-1') FORMAT TEXT EXPOSE PROGRESS AS [u653 AS \"materialize\".\"public\".\"kafka_sasl_3_progress\"]" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 2 }) }] }, ItemKey { gid: Some(GlobalId { value: Some(User(655)) }) }: ItemValue { schema_id: Some(SchemaId { value: Some(User(47)) }), name: "t1", definition: Some(CatalogItem { value: Some(V1(V1 { create_sql: "CREATE TABLE \"to_be_created2\".\"public\".\"t1\" (\"f1\" [s20 AS \"pg_catalog\".\"int4\"])" })) }), owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 15 }) }] }}, comments: {CommentKey { object: Some(Table(GlobalId { value: Some(User(25)) })), sub_component: None }: CommentValue { comment: "comment on comment_table" }, CommentKey { object: Some(Table(GlobalId { value: Some(User(25)) })), sub_component: Some(ColumnPos(1)) }: CommentValue { comment: "comment on comment_table.f1" }, CommentKey { object: Some(Table(GlobalId { value: Some(User(25)) })), sub_component: Some(ColumnPos(2)) }: CommentValue { comment: "comment on comment_table.f2" }, CommentKey { object: Some(Table(GlobalId { value: Some(User(107)) })), sub_component: None }: CommentValue { comment: "<a href=\"\\xE2\\x80\\x88javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>" }, CommentKey { object: Some(Table(GlobalId { value: Some(User(107)) })), sub_component: Some(ColumnPos(1)) }: CommentValue { comment: "123456789012345678901234567890123456789" }, CommentKey { object: Some(MaterializedView(GlobalId { value: Some(User(42)) })), sub_component: None }: CommentValue { comment: "comment on view sink_source_comments_view" }, CommentKey { object: Some(Type(GlobalId { value: Some(User(23)) })), sub_component: None }: CommentValue { comment: "comment on comment_type" }, CommentKey { object: Some(Type(GlobalId { value: Some(User(23)) })), sub_component: Some(ColumnPos(1)) }: CommentValue { comment: "comment on comment_type.x" }, CommentKey { object: Some(Type(GlobalId { value: Some(User(23)) })), sub_component: Some(ColumnPos(2)) }: CommentValue { comment: "comment on comment_type.y" }, CommentKey { object: Some(Type(GlobalId { value: Some(User(24)) })), sub_component: None }: CommentValue { comment: "comment on comment_type" }}, clusters: {ClusterKey { id: Some(ClusterId { value: Some(System(1)) }) }: ClusterValue { name: "mz_system", linked_object_id: None, owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(System(2)) }) }: ClusterValue { name: "mz_introspection", linked_object_id: None, owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(1)) }) }: ClusterValue { name: "quickstart", linked_object_id: None, owner_id: Some(RoleId { value: Some(System(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 512 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 512 }) }, MzAclItem { grantee: Some(RoleId { value: Some(Public(Empty)) }), grantor: Some(RoleId { value: Some(System(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }], config: Some(ClusterConfig { variant: Some(Managed(ManagedCluster { size: "4-4", replication_factor: 1, availability_zones: [], logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, disk: false })) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(2)) }) }: ClusterValue { name: "materialize_public_upsert_many_rows", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(3)) }) }: ClusterValue { name: "materialize_public_alter_connection_source_1a", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(4)) }) }: ClusterValue { name: "materialize_public_alter_connection_sink_1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(5)) }) }: ClusterValue { name: "materialize_public_upsert_delete", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(6)) }) }: ClusterValue { name: "materialize_public_comment_sink1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(7)) }) }: ClusterValue { name: "materialize_public_rename_source1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(8)) }) }: ClusterValue { name: "materialize_public_ssh1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(9)) }) }: ClusterValue { name: "materialize_public_sink_source_comments", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(10)) }) }: ClusterValue { name: "materialize_public_sink_sink_comments1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(11)) }) }: ClusterValue { name: "materialize_public_upsert_insert", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(12)) }) }: ClusterValue { name: "materialize_public_decode_error_upsert_value", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(13)) }) }: ClusterValue { name: "materialize_public_upsert_update_grow", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(14)) }) }: ClusterValue { name: "materialize_public_range_source", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(15)) }) }: ClusterValue { name: "materialize_public_sink_large_transaction_sink1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(16)) }) }: ClusterValue { name: "materialize_public_alter_index_source", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(17)) }) }: ClusterValue { name: "shared_cluster_compute_first", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Managed(ManagedCluster { size: "1", replication_factor: 1, availability_zones: [], logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, disk: true })) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(18)) }) }: ClusterValue { name: "shared_cluster_storage_first", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Managed(ManagedCluster { size: "1", replication_factor: 1, availability_zones: [], logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, disk: true })) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(19)) }) }: ClusterValue { name: "replica_annotations", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(20)) }) }: ClusterValue { name: "materialize_public_source_errors_sourcea", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(21)) }) }: ClusterValue { name: "materialize_public_source_errors_sourceb", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(22)) }) }: ClusterValue { name: "materialize_public_monotonic_top1_source", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(23)) }) }: ClusterValue { name: "materialize_public_monotonic_topk_source", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(24)) }) }: ClusterValue { name: "identifiers", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Managed(ManagedCluster { size: "4", replication_factor: 1, availability_zones: [], logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, disk: true })) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(25)) }) }: ClusterValue { name: "materialize_public_alter_connection_source_2a", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(26)) }) }: ClusterValue { name: "materialize_public_alter_connection_sink_2", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(27)) }) }: ClusterValue { name: "webhook_cluster", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(28)) }) }: ClusterValue { name: "materialize_public_upsert_many_value_columns", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(29)) }) }: ClusterValue { name: "materialize_public_privilege_source1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(30)) }) }: ClusterValue { name: "materialize_public_privilege_sink1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(31)) }) }: ClusterValue { name: "privilege_cluster1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(4)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(32)) }) }: ClusterValue { name: "kafka_formats", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(33)) }) }: ClusterValue { name: "swap_cluster2", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(34)) }) }: ClusterValue { name: "swap_cluster1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(35)) }) }: ClusterValue { name: "swap_cluster4", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(36)) }) }: ClusterValue { name: "swap_cluster3", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(37)) }) }: ClusterValue { name: "materialize_public_upsert_many_updates", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(38)) }) }: ClusterValue { name: "materialize_public_upsert_update", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(39)) }) }: ClusterValue { name: "materialize_public_multiple_partitions_source", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(40)) }) }: ClusterValue { name: "materialize_public_decode_error_upsert_key", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(41)) }) }: ClusterValue { name: "single_replica_cluster", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Managed(ManagedCluster { size: "1", replication_factor: 1, availability_zones: [], logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, disk: true })) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(42)) }) }: ClusterValue { name: "materialize_public_mz_source_ss", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(43)) }) }: ClusterValue { name: "materialize_public_mz_source_ssh1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(44)) }) }: ClusterValue { name: "materialize_public_postgres_mz_now_source", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(45)) }) }: ClusterValue { name: "materialize_public_debezium_source1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(46)) }) }: ClusterValue { name: "materialize_public_sink_source_null", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(47)) }) }: ClusterValue { name: "materialize_public_sink_sink_null1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(48)) }) }: ClusterValue { name: "materialize_public_decode_error", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(49)) }) }: ClusterValue { name: "materialize_public_owner_source1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(50)) }) }: ClusterValue { name: "materialize_public_owner_sink1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(51)) }) }: ClusterValue { name: "owner_cluster1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(6)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(User(6)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(52)) }) }: ClusterValue { name: "materialize_public_owner_source2", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(53)) }) }: ClusterValue { name: "materialize_public_owner_sink2", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(54)) }) }: ClusterValue { name: "owner_cluster2", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(7)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(7)) }), grantor: Some(RoleId { value: Some(User(7)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(55)) }) }: ClusterValue { name: "materialize_public_upsert_update_shrink", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(56)) }) }: ClusterValue { name: "materialize_public_sink_source", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(57)) }) }: ClusterValue { name: "materialize_public_sink_sink1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(58)) }) }: ClusterValue { name: "materialize_public_upsert_wide_key", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(59)) }) }: ClusterValue { name: "materialize_public_upsert_many_key_columns", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(60)) }) }: ClusterValue { name: "materialize_public_upsert_enrich_value", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(61)) }) }: ClusterValue { name: "materialize_public_alter_connection_source_3a", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(62)) }) }: ClusterValue { name: "materialize_public_alter_connection_sink_3", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(63)) }) }: ClusterValue { name: "materialize_public_upsert_wide_value", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(64)) }) }: ClusterValue { name: "materialize_public_kafka_plaintext_1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(65)) }) }: ClusterValue { name: "materialize_public_kafka_ssl_1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(66)) }) }: ClusterValue { name: "materialize_public_kafka_scram_sha_512_1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(67)) }) }: ClusterValue { name: "materialize_public_kafka_ssl_scram_sha_512_1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(68)) }) }: ClusterValue { name: "materialize_public_kafka_sasl_1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(71)) }) }: ClusterValue { name: "create_managed_cluster1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Managed(ManagedCluster { size: "2-2", replication_factor: 2, availability_zones: [], logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, disk: true })) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(74)) }) }: ClusterValue { name: "create_replica", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(75)) }) }: ClusterValue { name: "rename_cluster_new1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(76)) }) }: ClusterValue { name: "rename_cluster_new2", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(77)) }) }: ClusterValue { name: "rename_replica", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(78)) }) }: ClusterValue { name: "create_cluster1", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(79)) }) }: ClusterValue { name: "drop_replica", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(80)) }) }: ClusterValue { name: "create_managed_cluster2", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Managed(ManagedCluster { size: "2-2", replication_factor: 2, availability_zones: [], logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, disk: true })) }) }, ClusterKey { id: Some(ClusterId { value: Some(User(81)) }) }: ClusterValue { name: "create_cluster2", linked_object_id: None, owner_id: Some(RoleId { value: Some(User(1)) }), privileges: [MzAclItem { grantee: Some(RoleId { value: Some(System(2)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 256 }) }, MzAclItem { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(User(1)) }), acl_mode: Some(AclMode { bitflags: 768 }) }], config: Some(ClusterConfig { variant: Some(Unmanaged(Empty)) }) }}, cluster_replicas: {ClusterReplicaKey { id: Some(ReplicaId { value: Some(System(1)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "1", availability_zone: None, disk: false, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(System(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(System(2)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "1", availability_zone: None, disk: false, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(System(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(1)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-4", availability_zone: None, disk: false, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(System(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(2)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(3)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(4)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(5)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(6)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(7)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(8)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(9)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(10)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(11)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(12)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(13)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(14)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(15)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(16)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(17)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(18)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(19)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(20)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(21)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(22)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(23)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(24)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(25)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(26)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(27)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(28)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(29)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(30)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "privilege_cluster_r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(31)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "kafka_formats_r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(32)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(33)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(34)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(35)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(36)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(37)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(38)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(39)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(40)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(41)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(42)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(43)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(44)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(45)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(46)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(47)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(48)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(6)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(49)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(6)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(50)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "owner_cluster_r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(6)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(51)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(7)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(52)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(7)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(53)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "owner_cluster_r2", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(7)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(54)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(55)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(56)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(57)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(58)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(59)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(60)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(61)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(62)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(63)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(64)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(65)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(66)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(67)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "linked", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "4-1", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(70)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(71)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "r2", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(72)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "internal_r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "1", availability_zone: None, disk: true, internal: true, billed_as: Some("free") })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(77)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(78)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(79)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(80)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "replica_new1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(81)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "replica_new2", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(82)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(85)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "r1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(86)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "r2", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(87)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "internal_r2", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "1", availability_zone: None, disk: true, internal: true, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(88)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "replica2", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(89)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }, ClusterReplicaKey { id: Some(ReplicaId { value: Some(User(90)) }) }: ClusterReplicaValue { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "replica1", config: Some(ReplicaConfig { logging: Some(ReplicaLogging { log_logging: false, interval: Some(Duration { secs: 1, nanos: 0 }) }), idle_arrangement_merge_effort: None, location: Some(Managed(ManagedLocation { size: "2-2", availability_zone: None, disk: true, internal: false, billed_as: None })) }), owner_id: Some(RoleId { value: Some(User(1)) }) }}, introspection_sources: {ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 691 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 681 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 680 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 678 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 679 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 676 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 695 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 694 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 696 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 677 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 675 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 702 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 703 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 686 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 700 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 701 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 698 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 684 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 682 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 685 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 683 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 693 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 689 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 690 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 687 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 688 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 692 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 697 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(1)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 699 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 720 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 710 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 709 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 707 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 708 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 705 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 724 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 723 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 725 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 706 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 704 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 731 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 732 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 715 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 729 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 730 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 727 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 713 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 711 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 714 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 712 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 722 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 718 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 719 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 716 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 717 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 721 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 726 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(System(2)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 728 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 749 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 739 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 738 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 736 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 737 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 734 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 753 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 752 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 754 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 735 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 733 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 760 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 761 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 744 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 758 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 759 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 756 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 742 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 740 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 743 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 741 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 751 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 747 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 748 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 745 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 746 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 750 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 755 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(1)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 757 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 778 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 768 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 767 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 765 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 766 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 763 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 782 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 781 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 783 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 764 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 762 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 789 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 790 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 773 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 787 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 788 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 785 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 771 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 769 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 772 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 770 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 780 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 776 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 777 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 774 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 775 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 779 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 784 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(2)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 786 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 807 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 797 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 796 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 794 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 795 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 792 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 811 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 810 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 812 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 793 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 791 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 818 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 819 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 802 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 816 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 817 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 814 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 800 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 798 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 801 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 799 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 809 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 805 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 806 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 803 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 804 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 808 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 813 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(3)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 815 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 836 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 826 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 825 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 823 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 824 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 821 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 840 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 839 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 841 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 822 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 820 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 847 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 848 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 831 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 845 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 846 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 843 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 829 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 827 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 830 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 828 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 838 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 834 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 835 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 832 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 833 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 837 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 842 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(4)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 844 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 865 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 855 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 854 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 852 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 853 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 850 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 869 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 868 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 870 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 851 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 849 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 876 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 877 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 860 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 874 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 875 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 872 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 858 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 856 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 859 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 857 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 867 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 863 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 864 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 861 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 862 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 866 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 871 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(5)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 873 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 894 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 884 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 883 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 881 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 882 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 879 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 898 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 897 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 899 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 880 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 878 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 905 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 906 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 889 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 903 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 904 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 901 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 887 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 885 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 888 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 886 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 896 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 892 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 893 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 890 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 891 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 895 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 900 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(6)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 902 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 923 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 913 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 912 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 910 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 911 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 908 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 927 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 926 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 928 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 909 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 907 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 934 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 935 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 918 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 932 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 933 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 930 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 916 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 914 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 917 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 915 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 925 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 921 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 922 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 919 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 920 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 924 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 929 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(7)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 931 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 952 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 942 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 941 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 939 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 940 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 937 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 956 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 955 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 957 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 938 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 936 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 963 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 964 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 947 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 961 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 962 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 959 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 945 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 943 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 946 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 944 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 954 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 950 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 951 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 948 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 949 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 953 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 958 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(8)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 960 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 981 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 971 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 970 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 968 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 969 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 966 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 985 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 984 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 986 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 967 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 965 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 992 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 993 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 976 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 990 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 991 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 988 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 974 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 972 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 975 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 973 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 983 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 979 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 980 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 977 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 978 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 982 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 987 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(9)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 989 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1010 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1000 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 999 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 997 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 998 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 995 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1014 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1013 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1015 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 996 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 994 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1021 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1022 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1005 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1019 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1020 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1017 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1003 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1001 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1004 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1002 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1012 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1008 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1009 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1006 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1007 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1011 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1016 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(10)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1018 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1039 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1029 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1028 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1026 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1027 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1024 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1043 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1042 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1044 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1025 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1023 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1050 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1051 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1034 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1048 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1049 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1046 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1032 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1030 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1033 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1031 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1041 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1037 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1038 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1035 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1036 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1040 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1045 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(11)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1047 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1068 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1058 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1057 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1055 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1056 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1053 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1072 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1071 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1073 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1054 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1052 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1079 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1080 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1063 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1077 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1078 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1075 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1061 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1059 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1062 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1060 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1070 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1066 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1067 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1064 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1065 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1069 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1074 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(12)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1076 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1097 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1087 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1086 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1084 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1085 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1082 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1101 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1100 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1102 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1083 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1081 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1108 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1109 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1092 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1106 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1107 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1104 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1090 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1088 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1091 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1089 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1099 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1095 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1096 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1093 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1094 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1098 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1103 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(13)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1105 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1126 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1116 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1115 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1113 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1114 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1111 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1130 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1129 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1131 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1112 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1110 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1137 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1138 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1121 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1135 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1136 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1133 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1119 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1117 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1120 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1118 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1128 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1124 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1125 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1122 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1123 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1127 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1132 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(14)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1134 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1155 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1145 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1144 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1142 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1143 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1140 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1159 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1158 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1160 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1141 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1139 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1166 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1167 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1150 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1164 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1165 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1162 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1148 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1146 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1149 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1147 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1157 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1153 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1154 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1151 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1152 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1156 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1161 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(15)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1163 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1184 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1174 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1173 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1171 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1172 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1169 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1188 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1187 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1189 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1170 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1168 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1195 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1196 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1179 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1193 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1194 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1191 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1177 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1175 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1178 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1176 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1186 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1182 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1183 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1180 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1181 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1185 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1190 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(16)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1192 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1213 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1203 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1202 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1200 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1201 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1198 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1217 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1216 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1218 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1199 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1197 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1224 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1225 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1208 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1222 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1223 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1220 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1206 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1204 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1207 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1205 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1215 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1211 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1212 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1209 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1210 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1214 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1219 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(17)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1221 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1242 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1232 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1231 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1229 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1230 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1227 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1246 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1245 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1247 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1228 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1226 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1253 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1254 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1237 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1251 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1252 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1249 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1235 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1233 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1236 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1234 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1244 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1240 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1241 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1238 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1239 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1243 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1248 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(18)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1250 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1271 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1261 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1260 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1258 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1259 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1256 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1275 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1274 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1276 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1257 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1255 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1282 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1283 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1266 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1280 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1281 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1278 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1264 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1262 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1265 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1263 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1273 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1269 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1270 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1267 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1268 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1272 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1277 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(19)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1279 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1300 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1290 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1289 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1287 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1288 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1285 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1304 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1303 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1305 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1286 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1284 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1311 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1312 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1295 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1309 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1310 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1307 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1293 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1291 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1294 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1292 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1302 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1298 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1299 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1296 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1297 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1301 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1306 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(20)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1308 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1329 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1319 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1318 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1316 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1317 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1314 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1333 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1332 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1334 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1315 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1313 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1340 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1341 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1324 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1338 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1339 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1336 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1322 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1320 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1323 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1321 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1331 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1327 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1328 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1325 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1326 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1330 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1335 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(21)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1337 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1358 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1348 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1347 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1345 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1346 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1343 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1362 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1361 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1363 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1344 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1342 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1369 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1370 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1353 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1367 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1368 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1365 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1351 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1349 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1352 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1350 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1360 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1356 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1357 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1354 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1355 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1359 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1364 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(22)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1366 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1387 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1377 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1376 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1374 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1375 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1372 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1391 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1390 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1392 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1373 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1371 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1398 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1399 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1382 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1396 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1397 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1394 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1380 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1378 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1381 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1379 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1389 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1385 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1386 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1383 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1384 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1388 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1393 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(23)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1395 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1416 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1406 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1405 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1403 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1404 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1401 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1420 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1419 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1421 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1402 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1400 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1427 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1428 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1411 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1425 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1426 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1423 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1409 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1407 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1410 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1408 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1418 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1414 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1415 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1412 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1413 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1417 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1422 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(24)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1424 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1445 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1435 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1434 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1432 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1433 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1430 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1449 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1448 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1450 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1431 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1429 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1456 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1457 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1440 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1454 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1455 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1452 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1438 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1436 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1439 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1437 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1447 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1443 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1444 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1441 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1442 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1446 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1451 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(25)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1453 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1474 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1464 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1463 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1461 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1462 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1459 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1478 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1477 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1479 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1460 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1458 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1485 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1486 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1469 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1483 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1484 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1481 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1467 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1465 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1468 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1466 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1476 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1472 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1473 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1470 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1471 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1475 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1480 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(26)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1482 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1503 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1493 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1492 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1490 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1491 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1488 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1507 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1506 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1508 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1489 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1487 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1514 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1515 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1498 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1512 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1513 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1510 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1496 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1494 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1497 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1495 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1505 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1501 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1502 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1499 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1500 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1504 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1509 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(27)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1511 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1532 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1522 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1521 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1519 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1520 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1517 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1536 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1535 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1537 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1518 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1516 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1543 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1544 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1527 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1541 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1542 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1539 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1525 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1523 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1526 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1524 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1534 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1530 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1531 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1528 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1529 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1533 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1538 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(28)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1540 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1561 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1551 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1550 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1548 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1549 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1546 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1565 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1564 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1566 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1547 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1545 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1572 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1573 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1556 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1570 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1571 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1568 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1554 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1552 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1555 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1553 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1563 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1559 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1560 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1557 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1558 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1562 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1567 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(29)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1569 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1590 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1580 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1579 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1577 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1578 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1575 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1594 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1593 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1595 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1576 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1574 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1601 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1602 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1585 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1599 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1600 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1597 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1583 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1581 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1584 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1582 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1592 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1588 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1589 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1586 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1587 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1591 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1596 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(30)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1598 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1619 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1609 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1608 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1606 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1607 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1604 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1623 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1622 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1624 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1605 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1603 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1630 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1631 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1614 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1628 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1629 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1626 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1612 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1610 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1613 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1611 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1621 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1617 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1618 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1615 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1616 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1620 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1625 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(31)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1627 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1648 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1638 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1637 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1635 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1636 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1633 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1652 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1651 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1653 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1634 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1632 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1659 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1660 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1643 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1657 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1658 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1655 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1641 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1639 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1642 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1640 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1650 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1646 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1647 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1644 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1645 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1649 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1654 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(32)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1656 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1677 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1667 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1666 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1664 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1665 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1662 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1681 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1680 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1682 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1663 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1661 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1688 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1689 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1672 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1686 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1687 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1684 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1670 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1668 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1671 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1669 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1679 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1675 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1676 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1673 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1674 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1678 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1683 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(33)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1685 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1706 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1696 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1695 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1693 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1694 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1691 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1710 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1709 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1711 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1692 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1690 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1717 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1718 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1701 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1715 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1716 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1713 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1699 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1697 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1700 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1698 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1708 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1704 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1705 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1702 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1703 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1707 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1712 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(34)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1714 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1735 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1725 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1724 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1722 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1723 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1720 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1739 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1738 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1740 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1721 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1719 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1746 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1747 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1730 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1744 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1745 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1742 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1728 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1726 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1729 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1727 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1737 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1733 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1734 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1731 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1732 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1736 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1741 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(35)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1743 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1764 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1754 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1753 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1751 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1752 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1749 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1768 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1767 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1769 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1750 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1748 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1775 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1776 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1759 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1773 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1774 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1771 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1757 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1755 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1758 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1756 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1766 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1762 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1763 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1760 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1761 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1765 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1770 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(36)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1772 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1793 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1783 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1782 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1780 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1781 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1778 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1797 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1796 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1798 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1779 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1777 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1804 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1805 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1788 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1802 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1803 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1800 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1786 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1784 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1787 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1785 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1795 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1791 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1792 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1789 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1790 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1794 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1799 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(37)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1801 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1822 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1812 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1811 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1809 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1810 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1807 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1826 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1825 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1827 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1808 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1806 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1833 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1834 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1817 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1831 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1832 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1829 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1815 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1813 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1816 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1814 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1824 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1820 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1821 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1818 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1819 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1823 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1828 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(38)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1830 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1851 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1841 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1840 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1838 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1839 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1836 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1855 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1854 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1856 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1837 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1835 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1862 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1863 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1846 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1860 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1861 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1858 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1844 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1842 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1845 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1843 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1853 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1849 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1850 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1847 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1848 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1852 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1857 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(39)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1859 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1880 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1870 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1869 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1867 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1868 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1865 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1884 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1883 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1885 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1866 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1864 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1891 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1892 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1875 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1889 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1890 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1887 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1873 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1871 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1874 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1872 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1882 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1878 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1879 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1876 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1877 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1881 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1886 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(40)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1888 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1909 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1899 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1898 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1896 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1897 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1894 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1913 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1912 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1914 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1895 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1893 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1920 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1921 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1904 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1918 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1919 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1916 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1902 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1900 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1903 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1901 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1911 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1907 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1908 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1905 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1906 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1910 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1915 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(41)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1917 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1938 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1928 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1927 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1925 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1926 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1923 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1942 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1941 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1943 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1924 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1922 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1949 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1950 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1933 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1947 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1948 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1945 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1931 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1929 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1932 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1930 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1940 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1936 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1937 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1934 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1935 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1939 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1944 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(42)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1946 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1967 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1957 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1956 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1954 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1955 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1952 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1971 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1970 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1972 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1953 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1951 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1978 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1979 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1962 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1976 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1977 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1974 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1960 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1958 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1961 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1959 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1969 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1965 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1966 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1963 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1964 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1968 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1973 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(43)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1975 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1996 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1986 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1985 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1983 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1984 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1981 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2000 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1999 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2001 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1982 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1980 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2007 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2008 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1991 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2005 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2006 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2003 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1989 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1987 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1990 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 1988 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1998 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1994 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1995 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1992 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1993 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 1997 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2002 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(44)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2004 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2025 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2015 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2014 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2012 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2013 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2010 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2029 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2028 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2030 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2011 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2009 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2036 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2037 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2020 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2034 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2035 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2032 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2018 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2016 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2019 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2017 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2027 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2023 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2024 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2021 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2022 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2026 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2031 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(45)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2033 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2054 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2044 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2043 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2041 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2042 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2039 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2058 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2057 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2059 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2040 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2038 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2065 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2066 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2049 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2063 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2064 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2061 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2047 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2045 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2048 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2046 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2056 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2052 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2053 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2050 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2051 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2055 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2060 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(46)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2062 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2083 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2073 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2072 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2070 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2071 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2068 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2087 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2086 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2088 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2069 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2067 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2094 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2095 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2078 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2092 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2093 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2090 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2076 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2074 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2077 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2075 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2085 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2081 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2082 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2079 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2080 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2084 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2089 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(47)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2091 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2112 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2102 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2101 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2099 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2100 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2097 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2116 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2115 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2117 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2098 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2096 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2123 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2124 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2107 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2121 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2122 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2119 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2105 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2103 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2106 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2104 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2114 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2110 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2111 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2108 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2109 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2113 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2118 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(48)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2120 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2141 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2131 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2130 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2128 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2129 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2126 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2145 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2144 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2146 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2127 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2125 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2152 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2153 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2136 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2150 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2151 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2148 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2134 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2132 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2135 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2133 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2143 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2139 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2140 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2137 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2138 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2142 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2147 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(49)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2149 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2170 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2160 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2159 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2157 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2158 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2155 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2174 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2173 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2175 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2156 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2154 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2181 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2182 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2165 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2179 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2180 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2177 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2163 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2161 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2164 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2162 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2172 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2168 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2169 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2166 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2167 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2171 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2176 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(50)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2178 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2199 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2189 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2188 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2186 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2187 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2184 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2203 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2202 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2204 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2185 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2183 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2210 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2211 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2194 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2208 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2209 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2206 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2192 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2190 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2193 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2191 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2201 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2197 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2198 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2195 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2196 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2200 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2205 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(51)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2207 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2228 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2218 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2217 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2215 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2216 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2213 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2232 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2231 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2233 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2214 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2212 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2239 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2240 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2223 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2237 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2238 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2235 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2221 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2219 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2222 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2220 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2230 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2226 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2227 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2224 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2225 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2229 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2234 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(52)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2236 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2257 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2247 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2246 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2244 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2245 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2242 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2261 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2260 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2262 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2243 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2241 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2268 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2269 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2252 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2266 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2267 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2264 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2250 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2248 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2251 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2249 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2259 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2255 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2256 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2253 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2254 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2258 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2263 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(53)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2265 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2286 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2276 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2275 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2273 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2274 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2271 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2290 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2289 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2291 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2272 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2270 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2297 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2298 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2281 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2295 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2296 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2293 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2279 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2277 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2280 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2278 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2288 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2284 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2285 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2282 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2283 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2287 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2292 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(54)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2294 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2315 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2305 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2304 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2302 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2303 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2300 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2319 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2318 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2320 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2301 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2299 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2326 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2327 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2310 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2324 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2325 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2322 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2308 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2306 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2309 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2307 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2317 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2313 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2314 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2311 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2312 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2316 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2321 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(55)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2323 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2344 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2334 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2333 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2331 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2332 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2329 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2348 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2347 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2349 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2330 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2328 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2355 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2356 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2339 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2353 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2354 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2351 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2337 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2335 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2338 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2336 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2346 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2342 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2343 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2340 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2341 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2345 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2350 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(56)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2352 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2373 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2363 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2362 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2360 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2361 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2358 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2377 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2376 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2378 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2359 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2357 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2384 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2385 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2368 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2382 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2383 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2380 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2366 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2364 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2367 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2365 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2375 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2371 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2372 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2369 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2370 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2374 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2379 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(57)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2381 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2402 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2392 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2391 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2389 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2390 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2387 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2406 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2405 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2407 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2388 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2386 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2413 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2414 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2397 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2411 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2412 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2409 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2395 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2393 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2396 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2394 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2404 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2400 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2401 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2398 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2399 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2403 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2408 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(58)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2410 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2431 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2421 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2420 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2418 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2419 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2416 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2435 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2434 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2436 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2417 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2415 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2442 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2443 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2426 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2440 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2441 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2438 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2424 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2422 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2425 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2423 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2433 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2429 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2430 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2427 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2428 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2432 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2437 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(59)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2439 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2460 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2450 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2449 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2447 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2448 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2445 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2464 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2463 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2465 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2446 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2444 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2471 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2472 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2455 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2469 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2470 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2467 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2453 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2451 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2454 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2452 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2462 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2458 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2459 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2456 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2457 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2461 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2466 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(60)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2468 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2489 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2479 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2478 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2476 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2477 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2474 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2493 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2492 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2494 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2475 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2473 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2500 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2501 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2484 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2498 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2499 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2496 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2482 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2480 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2483 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2481 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2491 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2487 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2488 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2485 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2486 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2490 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2495 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(61)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2497 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2518 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2508 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2507 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2505 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2506 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2503 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2522 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2521 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2523 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2504 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2502 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2529 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2530 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2513 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2527 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2528 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2525 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2511 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2509 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2512 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2510 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2520 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2516 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2517 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2514 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2515 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2519 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2524 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(62)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2526 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2547 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2537 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2536 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2534 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2535 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2532 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2551 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2550 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2552 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2533 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2531 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2558 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2559 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2542 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2556 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2557 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2554 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2540 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2538 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2541 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2539 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2549 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2545 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2546 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2543 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2544 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2548 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2553 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(63)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2555 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2576 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2566 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2565 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2563 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2564 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2561 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2580 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2579 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2581 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2562 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2560 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2587 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2588 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2571 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2585 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2586 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2583 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2569 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2567 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2570 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2568 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2578 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2574 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2575 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2572 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2573 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2577 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2582 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(64)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2584 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2605 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2595 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2594 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2592 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2593 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2590 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2609 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2608 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2610 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2591 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2589 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2616 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2617 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2600 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2614 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2615 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2612 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2598 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2596 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2599 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2597 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2607 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2603 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2604 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2601 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2602 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2606 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2611 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(65)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2613 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2634 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2624 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2623 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2621 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2622 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2619 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2638 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2637 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2639 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2620 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2618 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2645 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2646 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2629 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2643 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2644 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2641 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2627 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2625 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2628 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2626 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2636 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2632 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2633 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2630 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2631 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2635 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2640 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(66)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2642 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2663 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2653 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2652 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2650 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2651 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2648 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2667 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2666 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2668 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2649 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2647 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2674 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2675 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2658 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2672 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2673 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2670 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2656 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2654 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2657 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2655 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2665 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2661 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2662 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2659 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2660 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2664 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2669 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(67)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2671 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2692 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2682 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2681 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2679 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2680 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2677 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2696 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2695 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2697 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2678 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2676 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2703 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2704 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2687 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2701 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2702 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2699 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2685 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2683 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2686 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2684 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2694 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2690 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2691 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2688 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2689 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2693 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2698 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(68)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2700 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2787 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2777 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2776 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2774 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2775 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2772 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2791 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2790 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2792 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2773 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2771 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2798 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2799 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2782 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2796 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2797 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2794 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2780 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2778 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2781 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2779 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2789 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2785 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2786 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2783 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2784 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2788 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2793 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(71)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2795 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2874 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2864 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2863 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2861 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2862 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2859 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2878 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2877 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2879 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2860 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2858 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2885 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2886 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2869 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2883 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2884 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2881 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2867 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2865 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2868 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2866 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2876 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2872 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2873 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2870 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2871 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2875 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2880 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(74)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2882 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2903 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2893 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2892 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2890 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2891 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2888 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2907 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2906 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2908 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2889 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2887 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2914 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2915 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2898 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2912 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2913 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2910 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2896 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2894 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2897 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2895 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2905 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2901 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2902 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2899 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2900 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2904 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2909 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(75)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2911 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2932 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2922 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2921 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2919 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2920 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2917 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2936 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2935 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2937 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2918 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2916 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2943 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2944 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2927 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2941 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2942 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2939 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2925 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2923 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2926 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2924 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2934 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2930 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2931 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2928 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2929 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2933 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2938 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(76)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2940 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2961 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2951 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2950 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2948 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2949 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2946 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2965 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2964 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2966 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2947 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2945 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2972 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2973 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2956 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2970 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2971 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2968 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2954 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2952 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2955 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2953 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2963 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2959 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2960 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2957 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2958 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2962 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2967 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(77)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2969 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2990 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2980 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2979 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2977 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2978 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2975 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2994 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2993 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2995 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2976 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2974 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3001 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3002 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2985 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2999 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3000 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2997 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2983 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2981 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2984 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 2982 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2992 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2988 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2989 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2986 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2987 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2991 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2996 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(78)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 2998 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3019 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3009 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3008 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3006 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3007 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3004 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3023 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3022 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3024 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3005 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3003 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3030 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3031 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3014 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3028 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3029 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3026 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3012 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3010 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3013 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3011 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3021 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3017 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3018 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3015 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3016 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3020 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3025 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(79)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3027 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3063 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3053 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3052 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3050 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3051 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3048 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3067 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3066 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3068 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3049 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3047 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3074 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3075 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3058 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3072 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3073 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3070 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3056 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3054 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3057 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3055 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3065 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3061 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3062 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3059 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3060 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3064 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3069 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(80)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3071 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_active_peeks_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3092 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_batcher_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3082 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_batcher_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3081 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_batcher_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3079 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_batcher_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3080 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_batches_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3077 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_heap_allocations_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3096 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_heap_capacity_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3095 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_heap_size_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3097 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_records_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3078 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_arrangement_sharing_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3076 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_compute_delays_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3103 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_compute_error_counts_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3104 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_compute_exports_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3087 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_compute_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3101 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_compute_import_frontiers_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3102 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_compute_operator_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3099 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_dataflow_addresses_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3085 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_dataflow_channels_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3083 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_dataflow_operator_reachability_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3086 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_dataflow_operators_per_worker" }: ClusterIntrospectionSourceIndexValue { index_id: 3084 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_dataflow_shutdown_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3094 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_message_batch_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3090 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_message_batch_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3091 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_message_counts_received_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3088 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_message_counts_sent_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3089 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_peek_durations_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3093 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_scheduling_elapsed_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3098 }, ClusterIntrospectionSourceIndexKey { cluster_id: Some(ClusterId { value: Some(User(81)) }), name: "mz_scheduling_parks_histogram_raw" }: ClusterIntrospectionSourceIndexValue { index_id: 3100 }}, id_allocator: {IdAllocKey { name: "auditlog" }: IdAllocValue { next_id: 1121 }, IdAllocKey { name: "database" }: IdAllocValue { next_id: 18 }, IdAllocKey { name: "replica" }: IdAllocValue { next_id: 91 }, IdAllocKey { name: "schema" }: IdAllocValue { next_id: 48 }, IdAllocKey { name: "storage_usage" }: IdAllocValue { next_id: 1 }, IdAllocKey { name: "system" }: IdAllocValue { next_id: 3107 }, IdAllocKey { name: "system_compute" }: IdAllocValue { next_id: 3 }, IdAllocKey { name: "system_replica" }: IdAllocValue { next_id: 3 }, IdAllocKey { name: "user" }: IdAllocValue { next_id: 662 }, IdAllocKey { name: "user_compute" }: IdAllocValue { next_id: 82 }, IdAllocKey { name: "user_role" }: IdAllocValue { next_id: 16 }}, configs: {ConfigKey { key: "deploy_generation" }: ConfigValue { value: 0 }, ConfigKey { key: "system_config_synced" }: ConfigValue { value: 0 }, ConfigKey { key: "user_version" }: ConfigValue { value: 46 }}, settings: {SettingKey { name: "catalog_content_version" }: SettingValue { value: "0.86.1" }}, timestamps: {TimestampKey { id: "M" }: TimestampValue { ts: Some(Timestamp { internal: 1707218372982 }) }}, system_object_mappings: {GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "applicable_roles" }: GidMappingValue { id: 573, fingerprint: "\nSELECT\n    member.name AS grantee,\n    role.name AS role_name,\n    -- ADMIN OPTION isn't implemented.\n    'NO' AS is_grantable\nFROM mz_role_members membership\nJOIN mz_roles role ON membership.role_id = role.id\nJOIN mz_roles member ON membership.member = member.id\nWHERE mz_catalog.mz_is_superuser() OR pg_has_role(current_role, member.oid, 'USAGE')" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "character_sets" }: GidMappingValue { id: 586, fingerprint: "SELECT\n    NULL as character_set_catalog,\n    NULL as character_set_schema,\n    'UTF8' as character_set_name,\n    'UCS' as character_repertoire,\n    'UTF8' as form_of_use,\n    current_database() as default_collate_catalog,\n    'pg_catalog' as default_collate_schema,\n    'en_US.utf8' as default_collate_name" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "columns" }: GidMappingValue { id: 574, fingerprint: "\nSELECT\n    current_database() as table_catalog,\n    s.name AS table_schema,\n    o.name AS table_name,\n    c.name AS column_name,\n    c.position::int8 AS ordinal_position,\n    CASE WHEN c.nullable THEN 'YES' ELSE 'NO' END AS is_nullable,\n    c.type AS data_type,\n    NULL::pg_catalog.int4 AS character_maximum_length,\n    NULL::pg_catalog.int4 AS numeric_precision,\n    NULL::pg_catalog.int4 AS numeric_scale\nFROM mz_catalog.mz_columns c\nJOIN mz_catalog.mz_objects o ON o.id = c.id\nJOIN mz_catalog.mz_schemas s ON s.id = o.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = s.database_id\nWHERE s.database_id IS NULL OR d.name = current_database()" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "enabled_roles" }: GidMappingValue { id: 575, fingerprint: "\nSELECT name AS role_name\nFROM mz_roles\nWHERE mz_catalog.mz_is_superuser() OR pg_has_role(current_role, oid, 'USAGE')" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "key_column_usage" }: GidMappingValue { id: 576, fingerprint: "SELECT\n    NULL::text AS constraint_catalog,\n    NULL::text AS constraint_schema,\n    NULL::text AS constraint_name,\n    NULL::text AS table_catalog,\n    NULL::text AS table_schema,\n    NULL::text AS table_name,\n    NULL::text AS column_name,\n    NULL::integer AS ordinal_position,\n    NULL::integer AS position_in_unique_constraint\nWHERE false" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "referential_constraints" }: GidMappingValue { id: 577, fingerprint: "SELECT\n    NULL::text AS constraint_catalog,\n    NULL::text AS constraint_schema,\n    NULL::text AS constraint_name,\n    NULL::text AS unique_constraint_catalog,\n    NULL::text AS unique_constraint_schema,\n    NULL::text AS unique_constraint_name,\n    NULL::text AS match_option,\n    NULL::text AS update_rule,\n    NULL::text AS delete_rule\nWHERE false" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "role_table_grants" }: GidMappingValue { id: 583, fingerprint: "\nSELECT grantor, grantee, table_catalog, table_schema, table_name, privilege_type, is_grantable, with_hierarchy\nFROM information_schema.table_privileges\nWHERE\n    grantor IN (SELECT role_name FROM information_schema.enabled_roles)\n    OR grantee IN (SELECT role_name FROM information_schema.enabled_roles)" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "routines" }: GidMappingValue { id: 578, fingerprint: "SELECT\n    current_database() as routine_catalog,\n    s.name AS routine_schema,\n    f.name AS routine_name,\n    'FUNCTION' AS routine_type,\n    NULL::text AS routine_definition\nFROM mz_catalog.mz_functions f\nJOIN mz_catalog.mz_schemas s ON s.id = f.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = s.database_id\nWHERE s.database_id IS NULL OR d.name = current_database()" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "schemata" }: GidMappingValue { id: 579, fingerprint: "\nSELECT\n    current_database() as catalog_name,\n    s.name AS schema_name\nFROM mz_catalog.mz_schemas s\nLEFT JOIN mz_catalog.mz_databases d ON d.id = s.database_id\nWHERE s.database_id IS NULL OR d.name = current_database()" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "table_constraints" }: GidMappingValue { id: 581, fingerprint: "SELECT\n    NULL::text AS constraint_catalog,\n    NULL::text AS constraint_schema,\n    NULL::text AS constraint_name,\n    NULL::text AS table_catalog,\n    NULL::text AS table_schema,\n    NULL::text AS table_name,\n    NULL::text AS constraint_type,\n    NULL::text AS is_deferrable,\n    NULL::text AS initially_deferred,\n    NULL::text AS enforced,\n    NULL::text AS nulls_distinct\nWHERE false" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "table_privileges" }: GidMappingValue { id: 582, fingerprint: "\nSELECT\n    grantor,\n    grantee,\n    table_catalog,\n    table_schema,\n    table_name,\n    privilege_type,\n    is_grantable,\n    CASE privilege_type\n        WHEN 'SELECT' THEN 'YES'\n        ELSE 'NO'\n    END AS with_hierarchy\nFROM\n    (SELECT\n        grantor.name AS grantor,\n        CASE mz_internal.mz_aclitem_grantee(privileges)\n            WHEN 'p' THEN 'PUBLIC'\n            ELSE grantee.name\n        END AS grantee,\n        table_catalog,\n        table_schema,\n        table_name,\n        unnest(mz_internal.mz_format_privileges(mz_internal.mz_aclitem_privileges(privileges))) AS privilege_type,\n        -- ADMIN OPTION isn't implemented.\n        'NO' AS is_grantable\n    FROM\n        (SELECT\n            unnest(relations.privileges) AS privileges,\n            CASE\n                WHEN schemas.database_id IS NULL THEN current_database()\n                ELSE databases.name\n            END AS table_catalog,\n            schemas.name AS table_schema,\n            relations.name AS table_name\n        FROM mz_relations AS relations\n        JOIN mz_schemas AS schemas ON relations.schema_id = schemas.id\n        LEFT JOIN mz_databases AS databases ON schemas.database_id = databases.id\n        WHERE schemas.database_id IS NULL OR databases.name = current_database())\n    JOIN mz_roles AS grantor ON mz_internal.mz_aclitem_grantor(privileges) = grantor.id\n    LEFT JOIN mz_roles AS grantee ON mz_internal.mz_aclitem_grantee(privileges) = grantee.id)\nWHERE\n    -- WHERE clause is not guaranteed to short-circuit and 'PUBLIC' will cause an error when passed\n    -- to pg_has_role. Therefore we need to use a CASE statement.\n    CASE\n        WHEN grantee = 'PUBLIC' THEN true\n        ELSE mz_catalog.mz_is_superuser()\n            OR pg_has_role(current_role, grantee, 'USAGE')\n            OR pg_has_role(current_role, grantor, 'USAGE')\n    END" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "tables" }: GidMappingValue { id: 580, fingerprint: "SELECT\n    current_database() as table_catalog,\n    s.name AS table_schema,\n    r.name AS table_name,\n    CASE r.type\n        WHEN 'materialized-view' THEN 'MATERIALIZED VIEW'\n        WHEN 'table' THEN 'BASE TABLE'\n        ELSE pg_catalog.upper(r.type)\n    END AS table_type\nFROM mz_catalog.mz_relations r\nJOIN mz_catalog.mz_schemas s ON s.id = r.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = s.database_id\nWHERE s.database_id IS NULL OR d.name = current_database()" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "triggers" }: GidMappingValue { id: 584, fingerprint: "SELECT\n    NULL::text as trigger_catalog,\n    NULL::text AS trigger_schema,\n    NULL::text AS trigger_name,\n    NULL::text AS event_manipulation,\n    NULL::text AS event_object_catalog,\n    NULL::text AS event_object_schema,\n    NULL::text AS event_object_table,\n    NULL::integer AS action_order,\n    NULL::text AS action_condition,\n    NULL::text AS action_statement,\n    NULL::text AS action_orientation,\n    NULL::text AS action_timing,\n    NULL::text AS action_reference_old_table,\n    NULL::text AS action_reference_new_table\nWHERE FALSE" }, GidMappingKey { schema_name: "information_schema", object_type: View, object_name: "views" }: GidMappingValue { id: 585, fingerprint: "SELECT\n    current_database() as table_catalog,\n    s.name AS table_schema,\n    v.name AS table_name,\n    v.definition AS view_definition\nFROM mz_catalog.mz_views v\nJOIN mz_catalog.mz_schemas s ON s.id = v.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = s.database_id\nWHERE s.database_id IS NULL OR d.name = current_database()" }, GidMappingKey { schema_name: "information_schema", object_type: Func, object_name: "_pg_expandarray" }: GidMappingValue { id: 340, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_array_types" }: GidMappingValue { id: 450, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_audit_events" }: GidMappingValue { id: 470, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Jsonb\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_aws_privatelink_connections" }: GidMappingValue { id: 473, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_base_types" }: GidMappingValue { id: 451, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_cluster_replicas" }: GidMappingValue { id: 465, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Bool\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_clusters" }: GidMappingValue { id: 460, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false},{\"scalar_type\":\"Bool\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"UInt32\",\"nullable\":true},{\"scalar_type\":\"Bool\",\"nullable\":true},{\"scalar_type\":{\"List\":{\"element_type\":\"String\",\"custom_id\":null}},\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_columns" }: GidMappingValue { id: 439, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"Bool\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"Int32\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_connections" }: GidMappingValue { id: 463, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_databases" }: GidMappingValue { id: 437, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_default_privileges" }: GidMappingValue { id: 477, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_egress_ips" }: GidMappingValue { id: 472, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_functions" }: GidMappingValue { id: 457, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"String\"},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"Bool\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_index_columns" }: GidMappingValue { id: 441, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"Bool\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_indexes" }: GidMappingValue { id: 440, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_kafka_connections" }: GidMappingValue { id: 434, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"String\"},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_kafka_sinks" }: GidMappingValue { id: 433, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[[0]]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_list_types" }: GidMappingValue { id: 452, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"List\":{\"element_type\":\"Int64\",\"custom_id\":null}},\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_map_types" }: GidMappingValue { id: 453, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"List\":{\"element_type\":\"Int64\",\"custom_id\":null}},\"nullable\":true},{\"scalar_type\":{\"List\":{\"element_type\":\"Int64\",\"custom_id\":null}},\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_materialized_views" }: GidMappingValue { id: 447, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_operators" }: GidMappingValue { id: 458, fingerprint: "{\"column_types\":[{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"String\"},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_pseudo_types" }: GidMappingValue { id: 456, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_role_members" }: GidMappingValue { id: 455, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_roles" }: GidMappingValue { id: 454, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Bool\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_schemas" }: GidMappingValue { id: 438, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_secrets" }: GidMappingValue { id: 462, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_sinks" }: GidMappingValue { id: 445, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_sources" }: GidMappingValue { id: 443, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_ssh_tunnel_connections" }: GidMappingValue { id: 464, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_system_privileges" }: GidMappingValue { id: 478, fingerprint: "{\"column_types\":[{\"scalar_type\":\"MzAclItem\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_tables" }: GidMappingValue { id: 442, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_types" }: GidMappingValue { id: 448, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: Table, object_name: "mz_views" }: GidMappingValue { id: 446, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"Array\":\"MzAclItem\"},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_catalog", object_type: View, object_name: "mz_objects" }: GidMappingValue { id: 482, fingerprint: "SELECT id, oid, schema_id, name, type, owner_id, privileges FROM mz_catalog.mz_relations\nUNION ALL\n    SELECT id, oid, schema_id, name, 'sink', owner_id, NULL::mz_catalog.mz_aclitem[] FROM mz_catalog.mz_sinks\nUNION ALL\n    SELECT mz_indexes.id, mz_indexes.oid, mz_relations.schema_id, mz_indexes.name, 'index', mz_indexes.owner_id, NULL::mz_catalog.mz_aclitem[]\n    FROM mz_catalog.mz_indexes\n    JOIN mz_catalog.mz_relations ON mz_indexes.on_id = mz_relations.id\nUNION ALL\n    SELECT id, oid, schema_id, name, 'connection', owner_id, privileges FROM mz_catalog.mz_connections\nUNION ALL\n    SELECT id, oid, schema_id, name, 'type', owner_id, privileges FROM mz_catalog.mz_types\nUNION ALL\n    SELECT id, oid, schema_id, name, 'function', owner_id, NULL::mz_catalog.mz_aclitem[] FROM mz_catalog.mz_functions\nUNION ALL\n    SELECT id, oid, schema_id, name, 'secret', owner_id, privileges FROM mz_catalog.mz_secrets" }, GidMappingKey { schema_name: "mz_catalog", object_type: View, object_name: "mz_relations" }: GidMappingValue { id: 481, fingerprint: "\n      SELECT id, oid, schema_id, name, 'table', owner_id, privileges FROM mz_catalog.mz_tables\nUNION ALL SELECT id, oid, schema_id, name, 'source', owner_id, privileges FROM mz_catalog.mz_sources\nUNION ALL SELECT id, oid, schema_id, name, 'view', owner_id, privileges FROM mz_catalog.mz_views\nUNION ALL SELECT id, oid, schema_id, name, 'materialized-view', owner_id, privileges FROM mz_catalog.mz_materialized_views" }, GidMappingKey { schema_name: "mz_catalog", object_type: View, object_name: "mz_storage_usage" }: GidMappingValue { id: 624, fingerprint: "\nSELECT\n    object_id,\n    sum(size_bytes)::uint8,\n    collection_timestamp\nFROM\n    mz_internal.mz_storage_shards\n    JOIN mz_internal.mz_storage_usage_by_shard USING (shard_id)\nGROUP BY object_id, collection_timestamp" }, GidMappingKey { schema_name: "mz_catalog", object_type: View, object_name: "mz_timezone_abbreviations" }: GidMappingValue { id: 535, fingerprint: "VALUES\n('EAT', interval '10800 seconds', false, NULL)\n,\n('SAST', interval '7200 seconds', false, NULL)\n,\n('WAT', interval '3600 seconds', false, NULL)\n,\n('ACT', interval '-18000 seconds', false, NULL)\n,\n('AKDT', interval '-28800 seconds', true, NULL)\n,\n('AKST', interval '-32400 seconds', false, NULL)\n,\n('ART', NULL, NULL, 'America/Argentina/Buenos_Aires')\n,\n('ARST', NULL, NULL, 'America/Argentina/Buenos_Aires')\n,\n('BOT', interval '-14400 seconds', false, NULL)\n,\n('BRA', interval '-10800 seconds', false, NULL)\n,\n('BRST', interval '-7200 seconds', true, NULL)\n,\n('BRT', interval '-10800 seconds', false, NULL)\n,\n('COT', interval '-18000 seconds', false, NULL)\n,\n('CDT', interval '-18000 seconds', true, NULL)\n,\n('CLST', interval '-10800 seconds', true, NULL)\n,\n('CLT', NULL, NULL, 'America/Santiago')\n,\n('CST', interval '-21600 seconds', false, NULL)\n,\n('EDT', interval '-14400 seconds', true, NULL)\n,\n('EGST', interval '0 seconds', true, NULL)\n,\n('EGT', interval '-3600 seconds', false, NULL)\n,\n('EST', interval '-18000 seconds', false, NULL)\n,\n('FNT', interval '-7200 seconds', false, NULL)\n,\n('FNST', interval '-3600 seconds', true, NULL)\n,\n('GFT', interval '-10800 seconds', false, NULL)\n,\n('GYT', NULL, NULL, 'America/Guyana')\n,\n('MDT', interval '-21600 seconds', true, NULL)\n,\n('MST', interval '-25200 seconds', false, NULL)\n,\n('NDT', interval '-9000 seconds', true, NULL)\n,\n('NFT', interval '-12600 seconds', false, NULL)\n,\n('NST', interval '-12600 seconds', false, NULL)\n,\n('PET', interval '-18000 seconds', false, NULL)\n,\n('PDT', interval '-25200 seconds', true, NULL)\n,\n('PMDT', interval '-7200 seconds', true, NULL)\n,\n('PMST', interval '-10800 seconds', false, NULL)\n,\n('PST', interval '-28800 seconds', false, NULL)\n,\n('PYST', interval '-10800 seconds', true, NULL)\n,\n('PYT', NULL, NULL, 'America/Asuncion')\n,\n('UYST', interval '-7200 seconds', true, NULL)\n,\n('UYT', interval '-10800 seconds', false, NULL)\n,\n('VET', NULL, NULL, 'America/Caracas')\n,\n('WGST', interval '-7200 seconds', true, NULL)\n,\n('WGT', interval '-10800 seconds', false, NULL)\n,\n('DAVT', NULL, NULL, 'Antarctica/Davis')\n,\n('DDUT', interval '36000 seconds', false, NULL)\n,\n('MAWT', NULL, NULL, 'Antarctica/Mawson')\n,\n('AFT', interval '16200 seconds', false, NULL)\n,\n('ALMT', interval '21600 seconds', false, NULL)\n,\n('ALMST', interval '25200 seconds', true, NULL)\n,\n('AMST', NULL, NULL, 'Asia/Yerevan')\n,\n('AMT', interval '-14400 seconds', false, NULL)\n,\n('ANAST', NULL, NULL, 'Asia/Anadyr')\n,\n('ANAT', NULL, NULL, 'Asia/Anadyr')\n,\n('AZST', NULL, NULL, 'Asia/Baku')\n,\n('AZT', NULL, NULL, 'Asia/Baku')\n,\n('BDT', interval '21600 seconds', false, NULL)\n,\n('BNT', interval '28800 seconds', false, NULL)\n,\n('BORT', interval '28800 seconds', false, NULL)\n,\n('BTT', interval '21600 seconds', false, NULL)\n,\n('CCT', interval '28800 seconds', false, NULL)\n,\n('GEST', NULL, NULL, 'Asia/Tbilisi')\n,\n('GET', NULL, NULL, 'Asia/Tbilisi')\n,\n('HKT', interval '28800 seconds', false, NULL)\n,\n('ICT', interval '25200 seconds', false, NULL)\n,\n('IDT', interval '10800 seconds', true, NULL)\n,\n('IRKST', NULL, NULL, 'Asia/Irkutsk')\n,\n('IRKT', NULL, NULL, 'Asia/Irkutsk')\n,\n('IRT', interval '12600 seconds', false, NULL)\n,\n('IST', interval '7200 seconds', false, NULL)\n,\n('JAYT', interval '32400 seconds', false, NULL)\n,\n('JST', interval '32400 seconds', false, NULL)\n,\n('KDT', interval '36000 seconds', true, NULL)\n,\n('KGST', interval '21600 seconds', true, NULL)\n,\n('KGT', NULL, NULL, 'Asia/Bishkek')\n,\n('KRAST', NULL, NULL, 'Asia/Krasnoyarsk')\n,\n('KRAT', NULL, NULL, 'Asia/Krasnoyarsk')\n,\n('KST', interval '32400 seconds', false, NULL)\n,\n('LKT', NULL, NULL, 'Asia/Colombo')\n,\n('MAGST', NULL, NULL, 'Asia/Magadan')\n,\n('MAGT', NULL, NULL, 'Asia/Magadan')\n,\n('MMT', interval '23400 seconds', false, NULL)\n,\n('MYT', interval '28800 seconds', false, NULL)\n,\n('NOVST', NULL, NULL, 'Asia/Novosibirsk')\n,\n('NOVT', NULL, NULL, 'Asia/Novosibirsk')\n,\n('NPT', interval '20700 seconds', false, NULL)\n,\n('OMSST', NULL, NULL, 'Asia/Omsk')\n,\n('OMST', NULL, NULL, 'Asia/Omsk')\n,\n('PETST', NULL, NULL, 'Asia/Kamchatka')\n,\n('PETT', NULL, NULL, 'Asia/Kamchatka')\n,\n('PHT', interval '28800 seconds', false, NULL)\n,\n('PKT', interval '18000 seconds', false, NULL)\n,\n('PKST', interval '21600 seconds', true, NULL)\n,\n('SGT', NULL, NULL, 'Asia/Singapore')\n,\n('TJT', interval '18000 seconds', false, NULL)\n,\n('TMT', NULL, NULL, 'Asia/Ashgabat')\n,\n('ULAST', interval '32400 seconds', true, NULL)\n,\n('ULAT', NULL, NULL, 'Asia/Ulaanbaatar')\n,\n('UZST', interval '21600 seconds', true, NULL)\n,\n('UZT', interval '18000 seconds', false, NULL)\n,\n('VLAST', NULL, NULL, 'Asia/Vladivostok')\n,\n('VLAT', NULL, NULL, 'Asia/Vladivostok')\n,\n('XJT', interval '21600 seconds', false, NULL)\n,\n('YAKST', NULL, NULL, 'Asia/Yakutsk')\n,\n('YAKT', NULL, NULL, 'Asia/Yakutsk')\n,\n('YEKST', interval '21600 seconds', true, NULL)\n,\n('YEKT', NULL, NULL, 'Asia/Yekaterinburg')\n,\n('ADT', interval '-10800 seconds', true, NULL)\n,\n('AST', interval '-14400 seconds', false, NULL)\n,\n('AZOST', interval '0 seconds', true, NULL)\n,\n('AZOT', interval '-3600 seconds', false, NULL)\n,\n('FKST', NULL, NULL, 'Atlantic/Stanley')\n,\n('FKT', NULL, NULL, 'Atlantic/Stanley')\n,\n('ACSST', interval '37800 seconds', true, NULL)\n,\n('ACDT', interval '37800 seconds', true, NULL)\n,\n('ACST', interval '34200 seconds', false, NULL)\n,\n('ACWST', interval '31500 seconds', false, NULL)\n,\n('AESST', interval '39600 seconds', true, NULL)\n,\n('AEDT', interval '39600 seconds', true, NULL)\n,\n('AEST', interval '36000 seconds', false, NULL)\n,\n('AWSST', interval '32400 seconds', true, NULL)\n,\n('AWST', interval '28800 seconds', false, NULL)\n,\n('CADT', interval '37800 seconds', true, NULL)\n,\n('CAST', interval '34200 seconds', false, NULL)\n,\n('LHDT', NULL, NULL, 'Australia/Lord_Howe')\n,\n('LHST', interval '37800 seconds', false, NULL)\n,\n('LIGT', interval '36000 seconds', false, NULL)\n,\n('NZT', interval '43200 seconds', false, NULL)\n,\n('SADT', interval '37800 seconds', true, NULL)\n,\n('WADT', interval '28800 seconds', true, NULL)\n,\n('WAST', interval '25200 seconds', false, NULL)\n,\n('WDT', interval '32400 seconds', true, NULL)\n,\n('GMT', interval '0 seconds', false, NULL)\n,\n('UCT', interval '0 seconds', false, NULL)\n,\n('UT', interval '0 seconds', false, NULL)\n,\n('UTC', interval '0 seconds', false, NULL)\n,\n('Z', interval '0 seconds', false, NULL)\n,\n('ZULU', interval '0 seconds', false, NULL)\n,\n('BST', interval '3600 seconds', true, NULL)\n,\n('BDST', interval '7200 seconds', true, NULL)\n,\n('CEST', interval '7200 seconds', true, NULL)\n,\n('CET', interval '3600 seconds', false, NULL)\n,\n('CETDST', interval '7200 seconds', true, NULL)\n,\n('EEST', interval '10800 seconds', true, NULL)\n,\n('EET', interval '7200 seconds', false, NULL)\n,\n('EETDST', interval '10800 seconds', true, NULL)\n,\n('FET', interval '10800 seconds', false, NULL)\n,\n('MEST', interval '7200 seconds', true, NULL)\n,\n('MESZ', interval '7200 seconds', true, NULL)\n,\n('MET', interval '3600 seconds', false, NULL)\n,\n('METDST', interval '7200 seconds', true, NULL)\n,\n('MEZ', interval '3600 seconds', false, NULL)\n,\n('MSD', interval '14400 seconds', true, NULL)\n,\n('MSK', NULL, NULL, 'Europe/Moscow')\n,\n('VOLT', NULL, NULL, 'Europe/Volgograd')\n,\n('WET', interval '0 seconds', false, NULL)\n,\n('WETDST', interval '3600 seconds', true, NULL)\n,\n('CXT', interval '25200 seconds', false, NULL)\n,\n('IOT', NULL, NULL, 'Indian/Chagos')\n,\n('MUT', interval '14400 seconds', false, NULL)\n,\n('MUST', interval '18000 seconds', true, NULL)\n,\n('MVT', interval '18000 seconds', false, NULL)\n,\n('RET', interval '14400 seconds', false, NULL)\n,\n('SCT', interval '14400 seconds', false, NULL)\n,\n('TFT', interval '18000 seconds', false, NULL)\n,\n('CHADT', interval '49500 seconds', true, NULL)\n,\n('CHAST', interval '45900 seconds', false, NULL)\n,\n('CHUT', interval '36000 seconds', false, NULL)\n,\n('CKT', NULL, NULL, 'Pacific/Rarotonga')\n,\n('EASST', NULL, NULL, 'Pacific/Easter')\n,\n('EAST', NULL, NULL, 'Pacific/Easter')\n,\n('FJST', interval '46800 seconds', true, NULL)\n,\n('FJT', interval '43200 seconds', false, NULL)\n,\n('GALT', interval '-21600 seconds', false, NULL)\n,\n('GAMT', interval '-32400 seconds', false, NULL)\n,\n('GILT', interval '43200 seconds', false, NULL)\n,\n('HST', interval '-36000 seconds', false, NULL)\n,\n('KOST', NULL, NULL, 'Pacific/Kosrae')\n,\n('LINT', NULL, NULL, 'Pacific/Kiritimati')\n,\n('MART', interval '-34200 seconds', false, NULL)\n,\n('MHT', interval '43200 seconds', false, NULL)\n,\n('MPT', interval '36000 seconds', false, NULL)\n,\n('NUT', NULL, NULL, 'Pacific/Niue')\n,\n('NZDT', interval '46800 seconds', true, NULL)\n,\n('NZST', interval '43200 seconds', false, NULL)\n,\n('PGT', interval '36000 seconds', false, NULL)\n,\n('PONT', interval '39600 seconds', false, NULL)\n,\n('PWT', interval '32400 seconds', false, NULL)\n,\n('TAHT', interval '-36000 seconds', false, NULL)\n,\n('TKT', NULL, NULL, 'Pacific/Fakaofo')\n,\n('TOT', interval '46800 seconds', false, NULL)\n,\n('TRUT', interval '36000 seconds', false, NULL)\n,\n('TVT', interval '43200 seconds', false, NULL)\n,\n('VUT', interval '39600 seconds', false, NULL)\n,\n('WAKT', interval '43200 seconds', false, NULL)\n,\n('WFT', interval '43200 seconds', false, NULL)\n,\n('YAPT', interval '36000 seconds', false, NULL)\n\n" }, GidMappingKey { schema_name: "mz_catalog", object_type: View, object_name: "mz_timezone_names" }: GidMappingValue { id: 534, fingerprint: "VALUES\n('Africa/Abidjan'),\n('Africa/Accra'),\n('Africa/Addis_Ababa'),\n('Africa/Algiers'),\n('Africa/Asmara'),\n('Africa/Asmera'),\n('Africa/Bamako'),\n('Africa/Bangui'),\n('Africa/Banjul'),\n('Africa/Bissau'),\n('Africa/Blantyre'),\n('Africa/Brazzaville'),\n('Africa/Bujumbura'),\n('Africa/Cairo'),\n('Africa/Casablanca'),\n('Africa/Ceuta'),\n('Africa/Conakry'),\n('Africa/Dakar'),\n('Africa/Dar_es_Salaam'),\n('Africa/Djibouti'),\n('Africa/Douala'),\n('Africa/El_Aaiun'),\n('Africa/Freetown'),\n('Africa/Gaborone'),\n('Africa/Harare'),\n('Africa/Johannesburg'),\n('Africa/Juba'),\n('Africa/Kampala'),\n('Africa/Khartoum'),\n('Africa/Kigali'),\n('Africa/Kinshasa'),\n('Africa/Lagos'),\n('Africa/Libreville'),\n('Africa/Lome'),\n('Africa/Luanda'),\n('Africa/Lubumbashi'),\n('Africa/Lusaka'),\n('Africa/Malabo'),\n('Africa/Maputo'),\n('Africa/Maseru'),\n('Africa/Mbabane'),\n('Africa/Mogadishu'),\n('Africa/Monrovia'),\n('Africa/Nairobi'),\n('Africa/Ndjamena'),\n('Africa/Niamey'),\n('Africa/Nouakchott'),\n('Africa/Ouagadougou'),\n('Africa/Porto-Novo'),\n('Africa/Sao_Tome'),\n('Africa/Timbuktu'),\n('Africa/Tripoli'),\n('Africa/Tunis'),\n('Africa/Windhoek'),\n('America/Adak'),\n('America/Anchorage'),\n('America/Anguilla'),\n('America/Antigua'),\n('America/Araguaina'),\n('America/Argentina/Buenos_Aires'),\n('America/Argentina/Catamarca'),\n('America/Argentina/ComodRivadavia'),\n('America/Argentina/Cordoba'),\n('America/Argentina/Jujuy'),\n('America/Argentina/La_Rioja'),\n('America/Argentina/Mendoza'),\n('America/Argentina/Rio_Gallegos'),\n('America/Argentina/Salta'),\n('America/Argentina/San_Juan'),\n('America/Argentina/San_Luis'),\n('America/Argentina/Tucuman'),\n('America/Argentina/Ushuaia'),\n('America/Aruba'),\n('America/Asuncion'),\n('America/Atikokan'),\n('America/Atka'),\n('America/Bahia'),\n('America/Bahia_Banderas'),\n('America/Barbados'),\n('America/Belem'),\n('America/Belize'),\n('America/Blanc-Sablon'),\n('America/Boa_Vista'),\n('America/Bogota'),\n('America/Boise'),\n('America/Buenos_Aires'),\n('America/Cambridge_Bay'),\n('America/Campo_Grande'),\n('America/Cancun'),\n('America/Caracas'),\n('America/Catamarca'),\n('America/Cayenne'),\n('America/Cayman'),\n('America/Chicago'),\n('America/Chihuahua'),\n('America/Ciudad_Juarez'),\n('America/Coral_Harbour'),\n('America/Cordoba'),\n('America/Costa_Rica'),\n('America/Creston'),\n('America/Cuiaba'),\n('America/Curacao'),\n('America/Danmarkshavn'),\n('America/Dawson'),\n('America/Dawson_Creek'),\n('America/Denver'),\n('America/Detroit'),\n('America/Dominica'),\n('America/Edmonton'),\n('America/Eirunepe'),\n('America/El_Salvador'),\n('America/Ensenada'),\n('America/Fort_Nelson'),\n('America/Fort_Wayne'),\n('America/Fortaleza'),\n('America/Glace_Bay'),\n('America/Godthab'),\n('America/Goose_Bay'),\n('America/Grand_Turk'),\n('America/Grenada'),\n('America/Guadeloupe'),\n('America/Guatemala'),\n('America/Guayaquil'),\n('America/Guyana'),\n('America/Halifax'),\n('America/Havana'),\n('America/Hermosillo'),\n('America/Indiana/Indianapolis'),\n('America/Indiana/Knox'),\n('America/Indiana/Marengo'),\n('America/Indiana/Petersburg'),\n('America/Indiana/Tell_City'),\n('America/Indiana/Vevay'),\n('America/Indiana/Vincennes'),\n('America/Indiana/Winamac'),\n('America/Indianapolis'),\n('America/Inuvik'),\n('America/Iqaluit'),\n('America/Jamaica'),\n('America/Jujuy'),\n('America/Juneau'),\n('America/Kentucky/Louisville'),\n('America/Kentucky/Monticello'),\n('America/Knox_IN'),\n('America/Kralendijk'),\n('America/La_Paz'),\n('America/Lima'),\n('America/Los_Angeles'),\n('America/Louisville'),\n('America/Lower_Princes'),\n('America/Maceio'),\n('America/Managua'),\n('America/Manaus'),\n('America/Marigot'),\n('America/Martinique'),\n('America/Matamoros'),\n('America/Mazatlan'),\n('America/Mendoza'),\n('America/Menominee'),\n('America/Merida'),\n('America/Metlakatla'),\n('America/Mexico_City'),\n('America/Miquelon'),\n('America/Moncton'),\n('America/Monterrey'),\n('America/Montevideo'),\n('America/Montreal'),\n('America/Montserrat'),\n('America/Nassau'),\n('America/New_York'),\n('America/Nipigon'),\n('America/Nome'),\n('America/Noronha'),\n('America/North_Dakota/Beulah'),\n('America/North_Dakota/Center'),\n('America/North_Dakota/New_Salem'),\n('America/Nuuk'),\n('America/Ojinaga'),\n('America/Panama'),\n('America/Pangnirtung'),\n('America/Paramaribo'),\n('America/Phoenix'),\n('America/Port-au-Prince'),\n('America/Port_of_Spain'),\n('America/Porto_Acre'),\n('America/Porto_Velho'),\n('America/Puerto_Rico'),\n('America/Punta_Arenas'),\n('America/Rainy_River'),\n('America/Rankin_Inlet'),\n('America/Recife'),\n('America/Regina'),\n('America/Resolute'),\n('America/Rio_Branco'),\n('America/Rosario'),\n('America/Santa_Isabel'),\n('America/Santarem'),\n('America/Santiago'),\n('America/Santo_Domingo'),\n('America/Sao_Paulo'),\n('America/Scoresbysund'),\n('America/Shiprock'),\n('America/Sitka'),\n('America/St_Barthelemy'),\n('America/St_Johns'),\n('America/St_Kitts'),\n('America/St_Lucia'),\n('America/St_Thomas'),\n('America/St_Vincent'),\n('America/Swift_Current'),\n('America/Tegucigalpa'),\n('America/Thule'),\n('America/Thunder_Bay'),\n('America/Tijuana'),\n('America/Toronto'),\n('America/Tortola'),\n('America/Vancouver'),\n('America/Virgin'),\n('America/Whitehorse'),\n('America/Winnipeg'),\n('America/Yakutat'),\n('America/Yellowknife'),\n('Antarctica/Casey'),\n('Antarctica/Davis'),\n('Antarctica/DumontDUrville'),\n('Antarctica/Macquarie'),\n('Antarctica/Mawson'),\n('Antarctica/McMurdo'),\n('Antarctica/Palmer'),\n('Antarctica/Rothera'),\n('Antarctica/South_Pole'),\n('Antarctica/Syowa'),\n('Antarctica/Troll'),\n('Antarctica/Vostok'),\n('Arctic/Longyearbyen'),\n('Asia/Aden'),\n('Asia/Almaty'),\n('Asia/Amman'),\n('Asia/Anadyr'),\n('Asia/Aqtau'),\n('Asia/Aqtobe'),\n('Asia/Ashgabat'),\n('Asia/Ashkhabad'),\n('Asia/Atyrau'),\n('Asia/Baghdad'),\n('Asia/Bahrain'),\n('Asia/Baku'),\n('Asia/Bangkok'),\n('Asia/Barnaul'),\n('Asia/Beirut'),\n('Asia/Bishkek'),\n('Asia/Brunei'),\n('Asia/Calcutta'),\n('Asia/Chita'),\n('Asia/Choibalsan'),\n('Asia/Chongqing'),\n('Asia/Chungking'),\n('Asia/Colombo'),\n('Asia/Dacca'),\n('Asia/Damascus'),\n('Asia/Dhaka'),\n('Asia/Dili'),\n('Asia/Dubai'),\n('Asia/Dushanbe'),\n('Asia/Famagusta'),\n('Asia/Gaza'),\n('Asia/Harbin'),\n('Asia/Hebron'),\n('Asia/Ho_Chi_Minh'),\n('Asia/Hong_Kong'),\n('Asia/Hovd'),\n('Asia/Irkutsk'),\n('Asia/Istanbul'),\n('Asia/Jakarta'),\n('Asia/Jayapura'),\n('Asia/Jerusalem'),\n('Asia/Kabul'),\n('Asia/Kamchatka'),\n('Asia/Karachi'),\n('Asia/Kashgar'),\n('Asia/Kathmandu'),\n('Asia/Katmandu'),\n('Asia/Khandyga'),\n('Asia/Kolkata'),\n('Asia/Krasnoyarsk'),\n('Asia/Kuala_Lumpur'),\n('Asia/Kuching'),\n('Asia/Kuwait'),\n('Asia/Macao'),\n('Asia/Macau'),\n('Asia/Magadan'),\n('Asia/Makassar'),\n('Asia/Manila'),\n('Asia/Muscat'),\n('Asia/Nicosia'),\n('Asia/Novokuznetsk'),\n('Asia/Novosibirsk'),\n('Asia/Omsk'),\n('Asia/Oral'),\n('Asia/Phnom_Penh'),\n('Asia/Pontianak'),\n('Asia/Pyongyang'),\n('Asia/Qatar'),\n('Asia/Qostanay'),\n('Asia/Qyzylorda'),\n('Asia/Rangoon'),\n('Asia/Riyadh'),\n('Asia/Saigon'),\n('Asia/Sakhalin'),\n('Asia/Samarkand'),\n('Asia/Seoul'),\n('Asia/Shanghai'),\n('Asia/Singapore'),\n('Asia/Srednekolymsk'),\n('Asia/Taipei'),\n('Asia/Tashkent'),\n('Asia/Tbilisi'),\n('Asia/Tehran'),\n('Asia/Tel_Aviv'),\n('Asia/Thimbu'),\n('Asia/Thimphu'),\n('Asia/Tokyo'),\n('Asia/Tomsk'),\n('Asia/Ujung_Pandang'),\n('Asia/Ulaanbaatar'),\n('Asia/Ulan_Bator'),\n('Asia/Urumqi'),\n('Asia/Ust-Nera'),\n('Asia/Vientiane'),\n('Asia/Vladivostok'),\n('Asia/Yakutsk'),\n('Asia/Yangon'),\n('Asia/Yekaterinburg'),\n('Asia/Yerevan'),\n('Atlantic/Azores'),\n('Atlantic/Bermuda'),\n('Atlantic/Canary'),\n('Atlantic/Cape_Verde'),\n('Atlantic/Faeroe'),\n('Atlantic/Faroe'),\n('Atlantic/Jan_Mayen'),\n('Atlantic/Madeira'),\n('Atlantic/Reykjavik'),\n('Atlantic/South_Georgia'),\n('Atlantic/St_Helena'),\n('Atlantic/Stanley'),\n('Australia/ACT'),\n('Australia/Adelaide'),\n('Australia/Brisbane'),\n('Australia/Broken_Hill'),\n('Australia/Canberra'),\n('Australia/Currie'),\n('Australia/Darwin'),\n('Australia/Eucla'),\n('Australia/Hobart'),\n('Australia/LHI'),\n('Australia/Lindeman'),\n('Australia/Lord_Howe'),\n('Australia/Melbourne'),\n('Australia/NSW'),\n('Australia/North'),\n('Australia/Perth'),\n('Australia/Queensland'),\n('Australia/South'),\n('Australia/Sydney'),\n('Australia/Tasmania'),\n('Australia/Victoria'),\n('Australia/West'),\n('Australia/Yancowinna'),\n('Brazil/Acre'),\n('Brazil/DeNoronha'),\n('Brazil/East'),\n('Brazil/West'),\n('CET'),\n('CST6CDT'),\n('Canada/Atlantic'),\n('Canada/Central'),\n('Canada/Eastern'),\n('Canada/Mountain'),\n('Canada/Newfoundland'),\n('Canada/Pacific'),\n('Canada/Saskatchewan'),\n('Canada/Yukon'),\n('Chile/Continental'),\n('Chile/EasterIsland'),\n('Cuba'),\n('EET'),\n('EST'),\n('EST5EDT'),\n('Egypt'),\n('Eire'),\n('Etc/GMT'),\n('Etc/GMT+0'),\n('Etc/GMT+1'),\n('Etc/GMT+10'),\n('Etc/GMT+11'),\n('Etc/GMT+12'),\n('Etc/GMT+2'),\n('Etc/GMT+3'),\n('Etc/GMT+4'),\n('Etc/GMT+5'),\n('Etc/GMT+6'),\n('Etc/GMT+7'),\n('Etc/GMT+8'),\n('Etc/GMT+9'),\n('Etc/GMT-0'),\n('Etc/GMT-1'),\n('Etc/GMT-10'),\n('Etc/GMT-11'),\n('Etc/GMT-12'),\n('Etc/GMT-13'),\n('Etc/GMT-14'),\n('Etc/GMT-2'),\n('Etc/GMT-3'),\n('Etc/GMT-4'),\n('Etc/GMT-5'),\n('Etc/GMT-6'),\n('Etc/GMT-7'),\n('Etc/GMT-8'),\n('Etc/GMT-9'),\n('Etc/GMT0'),\n('Etc/Greenwich'),\n('Etc/UCT'),\n('Etc/UTC'),\n('Etc/Universal'),\n('Etc/Zulu'),\n('Europe/Amsterdam'),\n('Europe/Andorra'),\n('Europe/Astrakhan'),\n('Europe/Athens'),\n('Europe/Belfast'),\n('Europe/Belgrade'),\n('Europe/Berlin'),\n('Europe/Bratislava'),\n('Europe/Brussels'),\n('Europe/Bucharest'),\n('Europe/Budapest'),\n('Europe/Busingen'),\n('Europe/Chisinau'),\n('Europe/Copenhagen'),\n('Europe/Dublin'),\n('Europe/Gibraltar'),\n('Europe/Guernsey'),\n('Europe/Helsinki'),\n('Europe/Isle_of_Man'),\n('Europe/Istanbul'),\n('Europe/Jersey'),\n('Europe/Kaliningrad'),\n('Europe/Kiev'),\n('Europe/Kirov'),\n('Europe/Kyiv'),\n('Europe/Lisbon'),\n('Europe/Ljubljana'),\n('Europe/London'),\n('Europe/Luxembourg'),\n('Europe/Madrid'),\n('Europe/Malta'),\n('Europe/Mariehamn'),\n('Europe/Minsk'),\n('Europe/Monaco'),\n('Europe/Moscow'),\n('Europe/Nicosia'),\n('Europe/Oslo'),\n('Europe/Paris'),\n('Europe/Podgorica'),\n('Europe/Prague'),\n('Europe/Riga'),\n('Europe/Rome'),\n('Europe/Samara'),\n('Europe/San_Marino'),\n('Europe/Sarajevo'),\n('Europe/Saratov'),\n('Europe/Simferopol'),\n('Europe/Skopje'),\n('Europe/Sofia'),\n('Europe/Stockholm'),\n('Europe/Tallinn'),\n('Europe/Tirane'),\n('Europe/Tiraspol'),\n('Europe/Ulyanovsk'),\n('Europe/Uzhgorod'),\n('Europe/Vaduz'),\n('Europe/Vatican'),\n('Europe/Vienna'),\n('Europe/Vilnius'),\n('Europe/Volgograd'),\n('Europe/Warsaw'),\n('Europe/Zagreb'),\n('Europe/Zaporozhye'),\n('Europe/Zurich'),\n('GB'),\n('GB-Eire'),\n('GMT'),\n('GMT+0'),\n('GMT-0'),\n('GMT0'),\n('Greenwich'),\n('HST'),\n('Hongkong'),\n('Iceland'),\n('Indian/Antananarivo'),\n('Indian/Chagos'),\n('Indian/Christmas'),\n('Indian/Cocos'),\n('Indian/Comoro'),\n('Indian/Kerguelen'),\n('Indian/Mahe'),\n('Indian/Maldives'),\n('Indian/Mauritius'),\n('Indian/Mayotte'),\n('Indian/Reunion'),\n('Iran'),\n('Israel'),\n('Jamaica'),\n('Japan'),\n('Kwajalein'),\n('Libya'),\n('MET'),\n('MST'),\n('MST7MDT'),\n('Mexico/BajaNorte'),\n('Mexico/BajaSur'),\n('Mexico/General'),\n('NZ'),\n('NZ-CHAT'),\n('Navajo'),\n('PRC'),\n('PST8PDT'),\n('Pacific/Apia'),\n('Pacific/Auckland'),\n('Pacific/Bougainville'),\n('Pacific/Chatham'),\n('Pacific/Chuuk'),\n('Pacific/Easter'),\n('Pacific/Efate'),\n('Pacific/Enderbury'),\n('Pacific/Fakaofo'),\n('Pacific/Fiji'),\n('Pacific/Funafuti'),\n('Pacific/Galapagos'),\n('Pacific/Gambier'),\n('Pacific/Guadalcanal'),\n('Pacific/Guam'),\n('Pacific/Honolulu'),\n('Pacific/Johnston'),\n('Pacific/Kanton'),\n('Pacific/Kiritimati'),\n('Pacific/Kosrae'),\n('Pacific/Kwajalein'),\n('Pacific/Majuro'),\n('Pacific/Marquesas'),\n('Pacific/Midway'),\n('Pacific/Nauru'),\n('Pacific/Niue'),\n('Pacific/Norfolk'),\n('Pacific/Noumea'),\n('Pacific/Pago_Pago'),\n('Pacific/Palau'),\n('Pacific/Pitcairn'),\n('Pacific/Pohnpei'),\n('Pacific/Ponape'),\n('Pacific/Port_Moresby'),\n('Pacific/Rarotonga'),\n('Pacific/Saipan'),\n('Pacific/Samoa'),\n('Pacific/Tahiti'),\n('Pacific/Tarawa'),\n('Pacific/Tongatapu'),\n('Pacific/Truk'),\n('Pacific/Wake'),\n('Pacific/Wallis'),\n('Pacific/Yap'),\n('Poland'),\n('Portugal'),\n('ROC'),\n('ROK'),\n('Singapore'),\n('Turkey'),\n('UCT'),\n('US/Alaska'),\n('US/Aleutian'),\n('US/Arizona'),\n('US/Central'),\n('US/East-Indiana'),\n('US/Eastern'),\n('US/Hawaii'),\n('US/Indiana-Starke'),\n('US/Michigan'),\n('US/Mountain'),\n('US/Pacific'),\n('US/Samoa'),\n('UTC'),\n('Universal'),\n('W-SU'),\n('WET'),\n('Zulu')" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "_mz_aclitem" }: GidMappingValue { id: 87, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "_mz_timestamp" }: GidMappingValue { id: 73, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "_uint2" }: GidMappingValue { id: 67, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "_uint4" }: GidMappingValue { id: 69, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "_uint8" }: GidMappingValue { id: 71, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "anycompatiblelist" }: GidMappingValue { id: 63, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "anycompatiblemap" }: GidMappingValue { id: 64, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "list" }: GidMappingValue { id: 28, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "map" }: GidMappingValue { id: 29, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "mz_aclitem" }: GidMappingValue { id: 86, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "mz_timestamp" }: GidMappingValue { id: 72, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "uint2" }: GidMappingValue { id: 66, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "uint4" }: GidMappingValue { id: 68, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Type, object_name: "uint8" }: GidMappingValue { id: 70, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "avg_internal_v1" }: GidMappingValue { id: 341, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "concat_agg" }: GidMappingValue { id: 342, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "constant_time_eq" }: GidMappingValue { id: 343, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "csv_extract" }: GidMappingValue { id: 344, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "datediff" }: GidMappingValue { id: 345, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "has_cluster_privilege" }: GidMappingValue { id: 346, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "has_connection_privilege" }: GidMappingValue { id: 347, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "has_role" }: GidMappingValue { id: 348, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "has_secret_privilege" }: GidMappingValue { id: 349, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "has_system_privilege" }: GidMappingValue { id: 350, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "has_type_privilege" }: GidMappingValue { id: 351, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "list_agg" }: GidMappingValue { id: 352, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "list_append" }: GidMappingValue { id: 353, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "list_cat" }: GidMappingValue { id: 354, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "list_length" }: GidMappingValue { id: 355, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "list_length_max" }: GidMappingValue { id: 356, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "list_n_layers" }: GidMappingValue { id: 357, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "list_prepend" }: GidMappingValue { id: 358, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "list_remove" }: GidMappingValue { id: 359, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "map_agg" }: GidMappingValue { id: 3105, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "map_build" }: GidMappingValue { id: 3106, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "map_length" }: GidMappingValue { id: 360, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "mz_environment_id" }: GidMappingValue { id: 361, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "mz_is_superuser" }: GidMappingValue { id: 362, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "mz_logical_timestamp" }: GidMappingValue { id: 363, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "mz_now" }: GidMappingValue { id: 364, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "mz_uptime" }: GidMappingValue { id: 365, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "mz_version" }: GidMappingValue { id: 366, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "mz_version_num" }: GidMappingValue { id: 367, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "pretty_sql" }: GidMappingValue { id: 368, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "regexp_extract" }: GidMappingValue { id: 369, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "repeat_row" }: GidMappingValue { id: 370, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "timezone_offset" }: GidMappingValue { id: 371, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "try_parse_monotonic_iso8601_timestamp" }: GidMappingValue { id: 372, fingerprint: "" }, GidMappingKey { schema_name: "mz_catalog", object_type: Func, object_name: "unnest" }: GidMappingValue { id: 373, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_aggregates" }: GidMappingValue { id: 459, fingerprint: "{\"column_types\":[{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Int16\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_aws_connections" }: GidMappingValue { id: 474, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"Jsonb\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_cluster_links" }: GidMappingValue { id: 461, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_cluster_replica_metrics" }: GidMappingValue { id: 466, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":true},{\"scalar_type\":\"UInt64\",\"nullable\":true},{\"scalar_type\":\"UInt64\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_cluster_replica_sizes" }: GidMappingValue { id: 467, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":true},{\"scalar_type\":{\"Numeric\":{\"max_scale\":null}},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_cluster_replica_statuses" }: GidMappingValue { id: 468, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_comments" }: GidMappingValue { id: 479, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Int32\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_internal_cluster_replicas" }: GidMappingValue { id: 469, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_kafka_sources" }: GidMappingValue { id: 435, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_object_dependencies" }: GidMappingValue { id: 436, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_optimizer_notices" }: GidMappingValue { id: 2705, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":{\"List\":{\"element_type\":\"String\",\"custom_id\":null}},\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false}],\"keys\":[[0]]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_postgres_sources" }: GidMappingValue { id: 444, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_sessions" }: GidMappingValue { id: 476, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt32\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_storage_usage_by_shard" }: GidMappingValue { id: 471, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_subscriptions" }: GidMappingValue { id: 475, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt32\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false},{\"scalar_type\":{\"List\":{\"element_type\":\"String\",\"custom_id\":null}},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_type_pg_metadata" }: GidMappingValue { id: 449, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false},{\"scalar_type\":\"Oid\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Table, object_name: "mz_webhook_sources" }: GidMappingValue { id: 480, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_active_peeks_per_worker" }: GidMappingValue { id: 420, fingerprint: "{\"column_types\":[{\"scalar_type\":\"Uuid\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"MzTimestamp\",\"nullable\":false}],\"keys\":[[0,1]]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_batcher_allocations_raw" }: GidMappingValue { id: 410, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_batcher_capacity_raw" }: GidMappingValue { id: 409, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_batcher_records_raw" }: GidMappingValue { id: 407, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_batcher_size_raw" }: GidMappingValue { id: 408, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_batches_raw" }: GidMappingValue { id: 405, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_heap_allocations_raw" }: GidMappingValue { id: 424, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_heap_capacity_raw" }: GidMappingValue { id: 423, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_heap_size_raw" }: GidMappingValue { id: 425, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_records_raw" }: GidMappingValue { id: 406, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_arrangement_sharing_raw" }: GidMappingValue { id: 404, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_aws_privatelink_connection_status_history" }: GidMappingValue { id: 606, fingerprint: "{\"column_types\":[{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_cluster_replica_frontiers" }: GidMappingValue { id: 633, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"MzTimestamp\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_cluster_replica_heartbeats" }: GidMappingValue { id: 634, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_compute_delays_histogram_raw" }: GidMappingValue { id: 431, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_compute_dependencies" }: GidMappingValue { id: 627, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_compute_error_counts_raw" }: GidMappingValue { id: 432, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"Int64\",\"nullable\":false}],\"keys\":[[0,1]]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_compute_exports_per_worker" }: GidMappingValue { id: 415, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[[0,1]]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_compute_frontiers_per_worker" }: GidMappingValue { id: 429, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"MzTimestamp\",\"nullable\":false}],\"keys\":[[0,1]]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_compute_hydration_statuses" }: GidMappingValue { id: 628, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"Bool\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_compute_import_frontiers_per_worker" }: GidMappingValue { id: 430, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"MzTimestamp\",\"nullable\":false}],\"keys\":[[0,1,2]]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_compute_operator_durations_histogram_raw" }: GidMappingValue { id: 427, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_dataflow_addresses_per_worker" }: GidMappingValue { id: 413, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":{\"List\":{\"element_type\":\"UInt64\",\"custom_id\":null}},\"nullable\":false}],\"keys\":[[0,1]]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_dataflow_channels_per_worker" }: GidMappingValue { id: 411, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[[0,1]]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_dataflow_operator_reachability_raw" }: GidMappingValue { id: 414, fingerprint: "{\"column_types\":[{\"scalar_type\":{\"List\":{\"element_type\":\"UInt64\",\"custom_id\":null}},\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"MzTimestamp\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_dataflow_operators_per_worker" }: GidMappingValue { id: 412, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[[0,1]]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_dataflow_shutdown_durations_histogram_raw" }: GidMappingValue { id: 422, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_frontiers" }: GidMappingValue { id: 625, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"MzTimestamp\",\"nullable\":true},{\"scalar_type\":\"MzTimestamp\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_message_batch_counts_received_raw" }: GidMappingValue { id: 418, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_message_batch_counts_sent_raw" }: GidMappingValue { id: 419, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_message_counts_received_raw" }: GidMappingValue { id: 416, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_message_counts_sent_raw" }: GidMappingValue { id: 417, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_peek_durations_histogram_raw" }: GidMappingValue { id: 421, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_prepared_statement_history" }: GidMappingValue { id: 3040, fingerprint: "{\"column_types\":[{\"scalar_type\":\"Uuid\",\"nullable\":false},{\"scalar_type\":\"Uuid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_scheduling_elapsed_raw" }: GidMappingValue { id: 426, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_scheduling_parks_histogram_raw" }: GidMappingValue { id: 428, fingerprint: "{\"column_types\":[{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_session_history" }: GidMappingValue { id: 612, fingerprint: "{\"column_types\":[{\"scalar_type\":\"Uuid\",\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_sink_statistics_per_worker" }: GidMappingValue { id: 619, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_sink_status_history" }: GidMappingValue { id: 603, fingerprint: "{\"column_types\":[{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"Jsonb\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_source_statistics_per_worker" }: GidMappingValue { id: 618, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"Bool\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"Interval\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_source_status_history" }: GidMappingValue { id: 605, fingerprint: "{\"column_types\":[{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"Jsonb\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_statement_execution_history" }: GidMappingValue { id: 608, fingerprint: "{\"column_types\":[{\"scalar_type\":\"Uuid\",\"nullable\":false},{\"scalar_type\":\"Uuid\",\"nullable\":false},{\"scalar_type\":\"Float64\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"UInt64\",\"nullable\":true},{\"scalar_type\":\"UInt64\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":{\"Array\":\"String\"},\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true},{\"scalar_type\":\"Int64\",\"nullable\":true},{\"scalar_type\":\"String\",\"nullable\":true}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_statement_lifecycle_history" }: GidMappingValue { id: 616, fingerprint: "{\"column_types\":[{\"scalar_type\":\"Uuid\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":{\"TimestampTz\":{\"precision\":null}},\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: Source, object_name: "mz_storage_shards" }: GidMappingValue { id: 617, fingerprint: "{\"column_types\":[{\"scalar_type\":\"String\",\"nullable\":false},{\"scalar_type\":\"String\",\"nullable\":false}],\"keys\":[]}" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_active_peeks" }: GidMappingValue { id: 511, fingerprint: "\nSELECT id, object_id, type, time\nFROM mz_internal.mz_active_peeks_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_activity_log" }: GidMappingValue { id: 3041, fingerprint: "\nSELECT mseh.id AS execution_id, sample_rate, cluster_id, application_name, cluster_name,\ntransaction_isolation, execution_timestamp, transient_index_id, params, began_at, finished_at, finished_status,\nerror_message, rows_returned, execution_strategy, transaction_id,\nmpsh.id AS prepared_statement_id, sql, mpsh.name AS prepared_statement_name,\nsession_id, redacted_sql, prepared_at, statement_type, throttled_count\nFROM mz_internal.mz_statement_execution_history mseh, mz_internal.mz_prepared_statement_history mpsh\nWHERE mseh.prepared_statement_id = mpsh.id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_activity_log_redacted" }: GidMappingValue { id: 3045, fingerprint: "\nSELECT execution_id, sample_rate, cluster_id, application_name, cluster_name,\ntransaction_isolation, execution_timestamp, transient_index_id, began_at, finished_at, finished_status,\nerror_message, rows_returned, execution_strategy, transaction_id, prepared_statement_id,\nprepared_statement_name, session_id, redacted_sql, prepared_at, statement_type, throttled_count\nFROM mz_internal.mz_activity_log" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_arrangement_sharing" }: GidMappingValue { id: 486, fingerprint: "\nSELECT operator_id, count\nFROM mz_internal.mz_arrangement_sharing_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_arrangement_sharing_per_worker" }: GidMappingValue { id: 485, fingerprint: "\nSELECT\n    operator_id,\n    worker_id,\n    pg_catalog.count(*) AS count\nFROM mz_internal.mz_arrangement_sharing_raw\nGROUP BY operator_id, worker_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_arrangement_sizes" }: GidMappingValue { id: 488, fingerprint: "\nSELECT\n    operator_id,\n    pg_catalog.sum(records) AS records,\n    pg_catalog.sum(batches) AS batches,\n    pg_catalog.sum(size) AS size,\n    pg_catalog.sum(capacity) AS capacity,\n    pg_catalog.sum(allocations) AS allocations\nFROM mz_internal.mz_arrangement_sizes_per_worker\nGROUP BY operator_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_arrangement_sizes_per_worker" }: GidMappingValue { id: 487, fingerprint: "\nWITH batches_cte AS (\n    SELECT\n        operator_id,\n        worker_id,\n        pg_catalog.count(*) AS batches\n    FROM\n        mz_internal.mz_arrangement_batches_raw\n    GROUP BY\n        operator_id, worker_id\n),\nrecords_cte AS (\n    SELECT\n        operator_id,\n        worker_id,\n        pg_catalog.count(*) AS records\n    FROM\n        mz_internal.mz_arrangement_records_raw\n    GROUP BY\n        operator_id, worker_id\n),\nheap_size_cte AS (\n    SELECT\n        operator_id,\n        worker_id,\n        pg_catalog.count(*) AS size\n    FROM\n        mz_internal.mz_arrangement_heap_size_raw\n    GROUP BY\n        operator_id, worker_id\n),\nheap_capacity_cte AS (\n    SELECT\n        operator_id,\n        worker_id,\n        pg_catalog.count(*) AS capacity\n    FROM\n        mz_internal.mz_arrangement_heap_capacity_raw\n    GROUP BY\n        operator_id, worker_id\n),\nheap_allocations_cte AS (\n    SELECT\n        operator_id,\n        worker_id,\n        pg_catalog.count(*) AS allocations\n    FROM\n        mz_internal.mz_arrangement_heap_allocations_raw\n    GROUP BY\n        operator_id, worker_id\n),\nbatcher_records_cte AS (\n    SELECT\n        operator_id,\n        worker_id,\n        pg_catalog.count(*) AS records\n    FROM\n        mz_internal.mz_arrangement_batcher_records_raw\n    GROUP BY\n        operator_id, worker_id\n),\nbatcher_size_cte AS (\n    SELECT\n        operator_id,\n        worker_id,\n        pg_catalog.count(*) AS size\n    FROM\n        mz_internal.mz_arrangement_batcher_size_raw\n    GROUP BY\n        operator_id, worker_id\n),\nbatcher_capacity_cte AS (\n    SELECT\n        operator_id,\n        worker_id,\n        pg_catalog.count(*) AS capacity\n    FROM\n        mz_internal.mz_arrangement_batcher_capacity_raw\n    GROUP BY\n        operator_id, worker_id\n),\nbatcher_allocations_cte AS (\n    SELECT\n        operator_id,\n        worker_id,\n        pg_catalog.count(*) AS allocations\n    FROM\n        mz_internal.mz_arrangement_batcher_allocations_raw\n    GROUP BY\n        operator_id, worker_id\n)\nSELECT\n    batches_cte.operator_id,\n    batches_cte.worker_id,\n    COALESCE(records_cte.records, 0) + COALESCE(batcher_records_cte.records, 0) AS records,\n    batches_cte.batches,\n    COALESCE(heap_size_cte.size, 0) + COALESCE(batcher_size_cte.size, 0) AS size,\n    COALESCE(heap_capacity_cte.capacity, 0) + COALESCE(batcher_capacity_cte.capacity, 0) AS capacity,\n    COALESCE(heap_allocations_cte.allocations, 0) + COALESCE(batcher_allocations_cte.allocations, 0) AS allocations\nFROM batches_cte\nLEFT OUTER JOIN records_cte USING (operator_id, worker_id)\nLEFT OUTER JOIN heap_size_cte USING (operator_id, worker_id)\nLEFT OUTER JOIN heap_capacity_cte USING (operator_id, worker_id)\nLEFT OUTER JOIN heap_allocations_cte USING (operator_id, worker_id)\nLEFT OUTER JOIN batcher_records_cte USING (operator_id, worker_id)\nLEFT OUTER JOIN batcher_size_cte USING (operator_id, worker_id)\nLEFT OUTER JOIN batcher_capacity_cte USING (operator_id, worker_id)\nLEFT OUTER JOIN batcher_allocations_cte USING (operator_id, worker_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_aws_privatelink_connection_statuses" }: GidMappingValue { id: 607, fingerprint: "\n    WITH statuses_w_last_status AS (\n        SELECT\n            connection_id,\n            occurred_at,\n            status,\n            lag(status) OVER (PARTITION BY connection_id ORDER BY occurred_at) AS last_status\n        FROM mz_internal.mz_aws_privatelink_connection_status_history\n    ),\n    latest_events AS (\n        -- Only take the most recent transition for each ID\n        SELECT DISTINCT ON(connection_id) connection_id, occurred_at, status\n        FROM statuses_w_last_status\n        -- Only keep first status transitions\n        WHERE status <> last_status OR last_status IS NULL\n        ORDER BY connection_id, occurred_at DESC\n    )\n    SELECT\n        conns.id,\n        name,\n        occurred_at as last_status_change_at,\n        status\n    FROM latest_events\n    JOIN mz_connections AS conns\n    ON conns.id = latest_events.connection_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_cluster_replica_history" }: GidMappingValue { id: 533, fingerprint: "\n        WITH\n            creates AS\n            (\n                SELECT\n                    details ->> 'logical_size' AS size,\n                    details ->> 'replica_id' AS replica_id,\n                    details ->> 'replica_name' AS replica_name,\n                    details ->> 'cluster_name' AS cluster_name,\n                    occurred_at\n                FROM mz_catalog.mz_audit_events\n                WHERE\n                    object_type = 'cluster-replica' AND event_type = 'create'\n                        AND\n                    details ->> 'replica_id' IS NOT NULL\n                        AND\n                    details ->> 'cluster_id' !~~ 's%'\n            ),\n            drops AS\n            (\n                SELECT details ->> 'replica_id' AS replica_id, occurred_at\n                FROM mz_catalog.mz_audit_events\n                WHERE object_type = 'cluster-replica' AND event_type = 'drop'\n            )\n        SELECT\n            creates.replica_id,\n            creates.size,\n            creates.cluster_name,\n            creates.replica_name,\n            creates.occurred_at AS created_at,\n            drops.occurred_at AS dropped_at,\n            mz_unsafe.mz_error_if_null(\n                    mz_cluster_replica_sizes.credits_per_hour, 'Replica of unknown size'\n                )\n                AS credits_per_hour\n        FROM\n            creates\n                LEFT JOIN drops ON creates.replica_id = drops.replica_id\n                LEFT JOIN\n                    mz_internal.mz_cluster_replica_sizes\n                    ON mz_cluster_replica_sizes.size = creates.size" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_cluster_replica_utilization" }: GidMappingValue { id: 499, fingerprint: "\nSELECT\n    r.id AS replica_id,\n    m.process_id,\n    m.cpu_nano_cores::float8 / s.cpu_nano_cores * 100 AS cpu_percent,\n    m.memory_bytes::float8 / s.memory_bytes * 100 AS memory_percent,\n    m.disk_bytes::float8 / s.disk_bytes * 100 AS disk_percent\nFROM\n    mz_cluster_replicas AS r\n        JOIN mz_internal.mz_cluster_replica_sizes AS s ON r.size = s.size\n        JOIN mz_internal.mz_cluster_replica_metrics AS m ON m.replica_id = r.id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_compute_delays_histogram" }: GidMappingValue { id: 527, fingerprint: "\nSELECT\n    export_id,\n    import_id,\n    delay_ns,\n    pg_catalog.sum(count) AS count\nFROM mz_internal.mz_compute_delays_histogram_per_worker\nGROUP BY export_id, import_id, delay_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_compute_delays_histogram_per_worker" }: GidMappingValue { id: 526, fingerprint: "SELECT\n    export_id, import_id, worker_id, delay_ns, pg_catalog.count(*) AS count\nFROM\n    mz_internal.mz_compute_delays_histogram_raw\nGROUP BY\n    export_id, import_id, worker_id, delay_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_compute_error_counts" }: GidMappingValue { id: 632, fingerprint: "\nSELECT\n    export_id,\n    pg_catalog.sum(count) AS count\nFROM mz_internal.mz_compute_error_counts_per_worker\nGROUP BY export_id\nHAVING pg_catalog.sum(count) != 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_compute_error_counts_per_worker" }: GidMappingValue { id: 631, fingerprint: "\nWITH MUTUALLY RECURSIVE\n    -- Indexes that reuse existing indexes rather than maintaining separate dataflows.\n    -- For these we don't log error counts separately, so we need to forward the error counts from\n    -- their dependencies instead.\n    index_reuses(reuse_id text, index_id text) AS (\n        SELECT d.object_id, d.dependency_id\n        FROM mz_internal.mz_compute_dependencies d\n        JOIN mz_internal.mz_compute_exports e ON (e.export_id = d.object_id)\n        WHERE NOT EXISTS (\n            SELECT 1 FROM mz_internal.mz_dataflows\n            WHERE id = e.dataflow_id\n        )\n    ),\n    -- Error counts that were directly logged on compute exports.\n    direct_errors(export_id text, worker_id uint8, count int8) AS (\n        SELECT export_id, worker_id, count\n        FROM mz_internal.mz_compute_error_counts_raw\n    ),\n    -- Error counts propagated to index reused.\n    all_errors(export_id text, worker_id uint8, count int8) AS (\n        SELECT * FROM direct_errors\n        UNION\n        SELECT r.reuse_id, e.worker_id, e.count\n        FROM all_errors e\n        JOIN index_reuses r ON (r.index_id = e.export_id)\n    )\nSELECT * FROM all_errors" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_compute_exports" }: GidMappingValue { id: 502, fingerprint: "\nSELECT export_id, dataflow_id\nFROM mz_internal.mz_compute_exports_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_compute_frontiers" }: GidMappingValue { id: 505, fingerprint: "SELECT\n    export_id, pg_catalog.min(time) AS time\nFROM mz_internal.mz_compute_frontiers_per_worker\nGROUP BY export_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_compute_import_frontiers" }: GidMappingValue { id: 508, fingerprint: "SELECT\n    export_id, import_id, pg_catalog.min(time) AS time\nFROM mz_internal.mz_compute_import_frontiers_per_worker\nGROUP BY export_id, import_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_compute_operator_durations_histogram" }: GidMappingValue { id: 513, fingerprint: "\nSELECT\n    id,\n    duration_ns,\n    pg_catalog.sum(count) AS count\nFROM mz_internal.mz_compute_operator_durations_histogram_per_worker\nGROUP BY id, duration_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_compute_operator_durations_histogram_per_worker" }: GidMappingValue { id: 512, fingerprint: "SELECT\n    id, worker_id, duration_ns, pg_catalog.count(*) AS count\nFROM\n    mz_internal.mz_compute_operator_durations_histogram_raw\nGROUP BY\n    id, worker_id, duration_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_addresses" }: GidMappingValue { id: 491, fingerprint: "\nSELECT id, address\nFROM mz_internal.mz_dataflow_addresses_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_arrangement_sizes" }: GidMappingValue { id: 503, fingerprint: "\nSELECT\n    mdod.dataflow_id AS id,\n    mdod.dataflow_name AS name,\n    COALESCE(sum(mas.records), 0) AS records,\n    COALESCE(sum(mas.batches), 0) AS batches,\n    COALESCE(sum(mas.size), 0) AS size,\n    COALESCE(sum(mas.capacity), 0) AS capacity,\n    COALESCE(sum(mas.allocations), 0) AS allocations\nFROM mz_internal.mz_dataflow_operator_dataflows AS mdod\nLEFT JOIN mz_internal.mz_arrangement_sizes AS mas\n    ON mdod.id = mas.operator_id\nGROUP BY mdod.dataflow_id, mdod.dataflow_name" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_channel_operators" }: GidMappingValue { id: 507, fingerprint: "\nSELECT id, from_operator_id, from_operator_address, to_operator_id, to_operator_address\nFROM mz_internal.mz_dataflow_channel_operators_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_channel_operators_per_worker" }: GidMappingValue { id: 506, fingerprint: "\nWITH\nchannel_addresses(id, worker_id, address, from_index, to_index) AS (\n     SELECT id, worker_id, address, from_index, to_index\n     FROM mz_internal.mz_dataflow_channels_per_worker mdc\n     INNER JOIN mz_internal.mz_dataflow_addresses_per_worker mda\n     USING (id, worker_id)\n),\nchannel_operator_addresses(id, worker_id, from_address, to_address) AS (\n     SELECT id, worker_id,\n            address || from_index AS from_address,\n            address || to_index AS to_address\n     FROM channel_addresses\n),\noperator_addresses(id, worker_id, address) AS (\n     SELECT id, worker_id, address\n     FROM mz_internal.mz_dataflow_addresses_per_worker mda\n     INNER JOIN mz_internal.mz_dataflow_operators_per_worker mdo\n     USING (id, worker_id)\n)\nSELECT coa.id,\n       coa.worker_id,\n       from_ops.id AS from_operator_id,\n       coa.from_address AS from_operator_address,\n       to_ops.id AS to_operator_id,\n       coa.to_address AS to_operator_address\nFROM channel_operator_addresses coa\n     LEFT OUTER JOIN operator_addresses from_ops\n          ON coa.from_address = from_ops.address AND\n             coa.worker_id = from_ops.worker_id\n     LEFT OUTER JOIN operator_addresses to_ops\n          ON coa.to_address = to_ops.address AND\n             coa.worker_id = to_ops.worker_id\n" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_channels" }: GidMappingValue { id: 492, fingerprint: "\nSELECT id, from_index, from_port, to_index, to_port\nFROM mz_internal.mz_dataflow_channels_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_operator_dataflows" }: GidMappingValue { id: 495, fingerprint: "\nSELECT id, name, dataflow_id, dataflow_name\nFROM mz_internal.mz_dataflow_operator_dataflows_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_operator_dataflows_per_worker" }: GidMappingValue { id: 494, fingerprint: "SELECT\n    ops.id,\n    ops.name,\n    ops.worker_id,\n    dfs.id as dataflow_id,\n    dfs.name as dataflow_name\nFROM\n    mz_internal.mz_dataflow_operators_per_worker ops,\n    mz_internal.mz_dataflow_addresses_per_worker addrs,\n    mz_internal.mz_dataflows_per_worker dfs\nWHERE\n    ops.id = addrs.id AND\n    ops.worker_id = addrs.worker_id AND\n    dfs.id = addrs.address[1] AND\n    dfs.worker_id = addrs.worker_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_operator_parents" }: GidMappingValue { id: 501, fingerprint: "\nSELECT id, parent_id\nFROM mz_internal.mz_dataflow_operator_parents_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_operator_parents_per_worker" }: GidMappingValue { id: 500, fingerprint: "\nWITH operator_addrs AS(\n    SELECT\n        id, address, worker_id\n    FROM mz_internal.mz_dataflow_addresses_per_worker\n        INNER JOIN mz_internal.mz_dataflow_operators_per_worker\n            USING (id, worker_id)\n),\nparent_addrs AS (\n    SELECT\n        id,\n        address[1:list_length(address) - 1] AS parent_address,\n        worker_id\n    FROM operator_addrs\n)\nSELECT pa.id, oa.id AS parent_id, pa.worker_id\nFROM parent_addrs AS pa\n    INNER JOIN operator_addrs AS oa\n        ON pa.parent_address = oa.address\n        AND pa.worker_id = oa.worker_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_operator_reachability" }: GidMappingValue { id: 498, fingerprint: "\nSELECT\n    address,\n    port,\n    update_type,\n    time,\n    pg_catalog.sum(count) as count\nFROM mz_internal.mz_dataflow_operator_reachability_per_worker\nGROUP BY address, port, update_type, time" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_operator_reachability_per_worker" }: GidMappingValue { id: 497, fingerprint: "SELECT\n    address,\n    port,\n    worker_id,\n    update_type,\n    time,\n    pg_catalog.count(*) as count\nFROM\n    mz_internal.mz_dataflow_operator_reachability_raw\nGROUP BY address, port, worker_id, update_type, time" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_operators" }: GidMappingValue { id: 493, fingerprint: "\nSELECT id, name\nFROM mz_internal.mz_dataflow_operators_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_shutdown_durations_histogram" }: GidMappingValue { id: 521, fingerprint: "\nSELECT\n    duration_ns,\n    pg_catalog.sum(count) AS count\nFROM mz_internal.mz_dataflow_shutdown_durations_histogram_per_worker\nGROUP BY duration_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflow_shutdown_durations_histogram_per_worker" }: GidMappingValue { id: 520, fingerprint: "SELECT\n    worker_id, duration_ns, pg_catalog.count(*) AS count\nFROM\n    mz_internal.mz_dataflow_shutdown_durations_histogram_raw\nGROUP BY\n    worker_id, duration_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflows" }: GidMappingValue { id: 490, fingerprint: "\nSELECT id, name\nFROM mz_internal.mz_dataflows_per_worker\nWHERE worker_id = 0" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_dataflows_per_worker" }: GidMappingValue { id: 489, fingerprint: "SELECT\n    addrs.address[1] AS id,\n    ops.worker_id,\n    ops.name\nFROM\n    mz_internal.mz_dataflow_addresses_per_worker addrs,\n    mz_internal.mz_dataflow_operators_per_worker ops\nWHERE\n    addrs.id = ops.id AND\n    addrs.worker_id = ops.worker_id AND\n    mz_catalog.list_length(addrs.address) = 1" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_expected_group_size_advice" }: GidMappingValue { id: 504, fingerprint: "\n        -- The mz_expected_group_size_advice view provides tuning suggestions for the GROUP SIZE\n        -- query hints. This tuning hint is effective for min/max/top-k patterns, where a stack\n        -- of arrangements must be built. For each dataflow and region corresponding to one\n        -- such pattern, we look for how many levels can be eliminated without hitting a level\n        -- that actually substantially filters the input. The advice is constructed so that\n        -- setting the hint for the affected region will eliminate these redundant levels of\n        -- the hierachical rendering.\n        --\n        -- A number of helper CTEs are used for the view definition. The first one, operators,\n        -- looks for operator names that comprise arrangements of inputs to each level of a\n        -- min/max/top-k hierarchy.\n        WITH operators AS (\n            SELECT\n                dod.dataflow_id,\n                dor.id AS region_id,\n                dod.id,\n                ars.records,\n                ars.size\n            FROM\n                mz_internal.mz_dataflow_operator_dataflows dod\n                JOIN mz_internal.mz_dataflow_addresses doa\n                    ON dod.id = doa.id\n                JOIN mz_internal.mz_dataflow_addresses dra\n                    ON dra.address = doa.address[:list_length(doa.address) - 1]\n                JOIN mz_internal.mz_dataflow_operators dor\n                    ON dor.id = dra.id\n                JOIN mz_internal.mz_arrangement_sizes ars\n                    ON ars.operator_id = dod.id\n            WHERE\n                dod.name = 'Arranged TopK input'\n                OR dod.name = 'Arranged MinsMaxesHierarchical input'\n                OR dod.name = 'Arrange ReduceMinsMaxes'\n            ),\n        -- The second CTE, levels, simply computes the heights of the min/max/top-k hierarchies\n        -- identified in operators above.\n        levels AS (\n            SELECT o.dataflow_id, o.region_id, COUNT(*) AS levels\n            FROM operators o\n            GROUP BY o.dataflow_id, o.region_id\n        ),\n        -- The third CTE, pivot, determines for each min/max/top-k hierarchy, the first input\n        -- operator. This operator is crucially important, as it records the number of records\n        -- that was given as input to the gadget as a whole.\n        pivot AS (\n            SELECT\n                o1.dataflow_id,\n                o1.region_id,\n                o1.id,\n                o1.records\n            FROM operators o1\n            WHERE\n                o1.id = (\n                    SELECT MIN(o2.id)\n                    FROM operators o2\n                    WHERE\n                        o2.dataflow_id = o1.dataflow_id\n                        AND o2.region_id = o1.region_id\n                    OPTIONS (AGGREGATE INPUT GROUP SIZE = 8)\n                )\n        ),\n        -- The fourth CTE, candidates, will look for operators where the number of records\n        -- maintained is not significantly different from the number at the pivot (excluding\n        -- the pivot itself). These are the candidates for being cut from the dataflow region\n        -- by adjusting the hint. The query includes a constant, heuristically tuned on TPC-H\n        -- load generator data, to give some room for small deviations in number of records.\n        -- The intuition for allowing for this deviation is that we are looking for a strongly\n        -- reducing point in the hierarchy. To see why one such operator ought to exist in an\n        -- untuned hierarchy, consider that at each level, we use hashing to distribute rows\n        -- among groups where the min/max/top-k computation is (partially) applied. If the\n        -- hierarchy has too many levels, the first-level (pivot) groups will be such that many\n        -- groups might be empty or contain only one row. Each subsequent level will have a number\n        -- of groups that is reduced exponentially. So at some point, we will find the level where\n        -- we actually start having a few rows per group. That's where we will see the row counts\n        -- significantly drop off.\n        candidates AS (\n            SELECT\n                o.dataflow_id,\n                o.region_id,\n                o.id,\n                o.records,\n                o.size\n            FROM\n                operators o\n                JOIN pivot p\n                    ON o.dataflow_id = p.dataflow_id\n                        AND o.region_id = p.region_id\n                        AND o.id <> p.id\n            WHERE o.records >= p.records * (1 - 0.15)\n        ),\n        -- The fifth CTE, cuts, computes for each relevant dataflow region, the number of\n        -- candidate levels that should be cut. We only return here dataflow regions where at\n        -- least one level must be cut. Note that once we hit a point where the hierarchy starts\n        -- to have a filtering effect, i.e., after the last candidate, it is dangerous to suggest\n        -- cutting the height of the hierarchy further. This is because we will have way less\n        -- groups in the next level, so there should be even further reduction happening or there\n        -- is some substantial skew in the data. But if the latter is the case, then we should not\n        -- tune the GROUP SIZE hints down anyway to avoid hurting latency upon updates directed\n        -- at these unusually large groups. In addition to selecting the levels to cut, we also\n        -- compute a conservative estimate of the memory savings in bytes that will result from\n        -- cutting these levels from the hierarchy. The estimate is based on the sizes of the\n        -- input arrangements for each level to be cut. These arrangements should dominate the\n        -- size of each level that can be cut, since the reduction gadget internal to the level\n        -- does not remove much data at these levels.\n        cuts AS (\n            SELECT c.dataflow_id, c.region_id, COUNT(*) AS to_cut, SUM(c.size) AS savings\n            FROM candidates c\n            GROUP BY c.dataflow_id, c.region_id\n            HAVING COUNT(*) > 0\n        )\n        -- Finally, we compute the hint suggestion for each dataflow region based on the number of\n        -- levels and the number of candidates to be cut. The hint is computed taking into account\n        -- the fan-in used in rendering for the hash partitioning and reduction of the groups,\n        -- currently equal to 16.\n        SELECT\n            dod.dataflow_id,\n            dod.dataflow_name,\n            dod.id AS region_id,\n            dod.name AS region_name,\n            l.levels,\n            c.to_cut,\n            c.savings,\n            pow(16, l.levels - c.to_cut) - 1 AS hint\n        FROM cuts c\n            JOIN levels l\n                ON c.dataflow_id = l.dataflow_id AND c.region_id = l.region_id\n            JOIN mz_internal.mz_dataflow_operator_dataflows dod\n                ON dod.dataflow_id = c.dataflow_id AND dod.id = c.region_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_global_frontiers" }: GidMappingValue { id: 626, fingerprint: "\nSELECT object_id, write_frontier AS time\nFROM mz_internal.mz_frontiers\nWHERE write_frontier IS NOT NULL" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_hydration_statuses" }: GidMappingValue { id: 629, fingerprint: "WITH\n-- Joining against the linearizable catalog tables ensures that this view\n-- always contains the set of installed objects, even when it depends\n-- on introspection relations that may received delayed updates.\n--\n-- Note that this view only includes objects that are maintained by dataflows.\n-- In particular, some source types (webhook, introspection, ...) are not and\n-- are therefore omitted.\nindexes AS (\n    SELECT\n        i.id AS object_id,\n        h.replica_id,\n        COALESCE(h.hydrated, false) AS hydrated\n    FROM mz_indexes i\n    LEFT JOIN mz_internal.mz_compute_hydration_statuses h\n        ON (h.object_id = i.id)\n),\nmaterialized_views AS (\n    SELECT\n        i.id AS object_id,\n        h.replica_id,\n        COALESCE(h.hydrated, false) AS hydrated\n    FROM mz_materialized_views i\n    LEFT JOIN mz_internal.mz_compute_hydration_statuses h\n        ON (h.object_id = i.id)\n),\n-- Hydration is a dataflow concept and not all sources are maintained by\n-- dataflows, so we need to find the ones that are. Generally, sources that\n-- have a cluster ID are maintained by a dataflow running on that cluster.\n-- Webhook sources are an exception to this rule.\nsources_maintained_by_dataflows AS (\n    SELECT id, cluster_id\n    FROM mz_sources\n    WHERE cluster_id IS NOT NULL AND type != 'webhook'\n),\n-- Cluster IDs are missing for subsources in `mz_sources` (#24235), so we need\n-- to add them manually here by looking up the parent sources.\nsubsources_with_clusters AS (\n    SELECT ss.id, ps.cluster_id\n    FROM mz_sources ss\n    JOIN mz_internal.mz_object_dependencies d\n        ON (d.referenced_object_id = ss.id)\n    JOIN sources_maintained_by_dataflows ps\n        ON (ps.id = d.object_id)\n    WHERE ss.type = 'subsource'\n),\nsources_with_clusters AS (\n    SELECT id, cluster_id FROM sources_maintained_by_dataflows\n    UNION ALL\n    SELECT id, cluster_id FROM subsources_with_clusters\n),\nsources AS (\n    SELECT\n        s.id AS object_id,\n        r.id AS replica_id,\n        ss.rehydration_latency IS NOT NULL AS hydrated\n    FROM sources_with_clusters s\n    LEFT JOIN mz_internal.mz_source_statistics ss USING (id)\n    JOIN mz_cluster_replicas r\n        ON (r.cluster_id = s.cluster_id)\n),\nsinks AS (\n    SELECT\n        s.id AS object_id,\n        r.id AS replica_id,\n        ss.status = 'running' AS hydrated\n    FROM mz_sinks s\n    LEFT JOIN mz_internal.mz_sink_statuses ss USING (id)\n    JOIN mz_cluster_replicas r\n        ON (r.cluster_id = s.cluster_id)\n)\nSELECT * FROM indexes\nUNION ALL\nSELECT * FROM materialized_views\nUNION ALL\nSELECT * FROM sources\nUNION ALL\nSELECT * FROM sinks" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_materialization_lag" }: GidMappingValue { id: 630, fingerprint: "\nWITH MUTUALLY RECURSIVE\n    -- IDs of objects for which we want to know the lag.\n    materializations (id text) AS (\n        SELECT id FROM mz_indexes\n        UNION ALL\n        SELECT id FROM mz_materialized_views\n        UNION ALL\n        SELECT id FROM mz_sinks\n    ),\n    -- Compute dependencies enriched with sink dependencies.\n    dataflow_dependencies (id text, dep_id text) AS (\n        SELECT object_id, dependency_id\n        FROM mz_internal.mz_compute_dependencies\n        UNION ALL\n        SELECT object_id, referenced_object_id\n        FROM mz_internal.mz_object_dependencies\n        JOIN mz_sinks ON (id = object_id)\n    ),\n    -- Direct dependencies of materializations.\n    direct_dependencies (id text, dep_id text) AS (\n        SELECT id, dep_id\n        FROM materializations\n        JOIN dataflow_dependencies USING (id)\n    ),\n    -- All transitive dependencies of materializations.\n    transitive_dependencies (id text, dep_id text) AS (\n        SELECT id, dep_id FROM direct_dependencies\n        UNION\n        SELECT td.id, dd.dep_id\n        FROM transitive_dependencies td\n        JOIN dataflow_dependencies dd ON (dd.id = td.dep_id)\n    ),\n    -- Root dependencies of materializations (sources and tables).\n    root_dependencies (id text, dep_id text) AS (\n        SELECT *\n        FROM transitive_dependencies td\n        WHERE NOT EXISTS (\n            SELECT 1\n            FROM dataflow_dependencies dd\n            WHERE dd.id = td.dep_id\n        )\n    ),\n    -- Write progress times of materializations.\n    materialization_times (id text, time timestamptz) AS (\n        SELECT m.id, to_timestamp(f.write_frontier::text::double / 1000)\n        FROM materializations m\n        JOIN mz_internal.mz_frontiers f ON (m.id = f.object_id)\n    ),\n    -- Write progress times of direct dependencies of materializations.\n    input_times (id text, slowest_dep text, time timestamptz) AS (\n        SELECT DISTINCT ON (d.id)\n            d.id,\n            d.dep_id,\n            to_timestamp(f.write_frontier::text::double / 1000)\n        FROM direct_dependencies d\n        JOIN mz_internal.mz_frontiers f ON (d.dep_id = f.object_id)\n        ORDER BY d.id, f.write_frontier ASC\n    ),\n    -- Write progress times of root dependencies of materializations.\n    root_times (id text, slowest_dep text, time timestamptz) AS (\n        SELECT DISTINCT ON (d.id)\n            d.id,\n            d.dep_id,\n            to_timestamp(f.write_frontier::text::double / 1000)\n        FROM root_dependencies d\n        JOIN mz_internal.mz_frontiers f ON (d.dep_id = f.object_id)\n        ORDER BY d.id, f.write_frontier ASC\n    )\nSELECT\n    id AS object_id,\n    -- Ensure that lag values are always NULL for materializations that have reached the empty\n    -- frontier, as those have processed all their input data.\n    -- Also make sure that lag values are never negative, even when input frontiers are before\n    -- output frontiers (as can happen during hydration).\n    CASE\n        WHEN m.time IS NULL THEN INTERVAL '0'\n        WHEN i.time IS NULL THEN NULL\n        ELSE greatest(i.time - m.time, INTERVAL '0')\n    END AS local_lag,\n    CASE\n        WHEN m.time IS NULL THEN INTERVAL '0'\n        WHEN r.time IS NULL THEN NULL\n        ELSE greatest(r.time - m.time, INTERVAL '0')\n    END AS global_lag,\n    i.slowest_dep AS slowest_local_input_id,\n    r.slowest_dep AS slowest_global_input_id\nFROM materialization_times m\nJOIN input_times i USING (id)\nJOIN root_times r USING (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_message_counts" }: GidMappingValue { id: 510, fingerprint: "\nSELECT\n    channel_id,\n    pg_catalog.sum(sent) AS sent,\n    pg_catalog.sum(received) AS received,\n    pg_catalog.sum(batch_sent) AS batch_sent,\n    pg_catalog.sum(batch_received) AS batch_received\nFROM mz_internal.mz_message_counts_per_worker\nGROUP BY channel_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_message_counts_per_worker" }: GidMappingValue { id: 509, fingerprint: "\nWITH batch_sent_cte AS (\n    SELECT\n        channel_id,\n        from_worker_id,\n        to_worker_id,\n        pg_catalog.count(*) AS sent\n    FROM\n        mz_internal.mz_message_batch_counts_sent_raw\n    GROUP BY\n        channel_id, from_worker_id, to_worker_id\n),\nbatch_received_cte AS (\n    SELECT\n        channel_id,\n        from_worker_id,\n        to_worker_id,\n        pg_catalog.count(*) AS received\n    FROM\n        mz_internal.mz_message_batch_counts_received_raw\n    GROUP BY\n        channel_id, from_worker_id, to_worker_id\n),\nsent_cte AS (\n    SELECT\n        channel_id,\n        from_worker_id,\n        to_worker_id,\n        pg_catalog.count(*) AS sent\n    FROM\n        mz_internal.mz_message_counts_sent_raw\n    GROUP BY\n        channel_id, from_worker_id, to_worker_id\n),\nreceived_cte AS (\n    SELECT\n        channel_id,\n        from_worker_id,\n        to_worker_id,\n        pg_catalog.count(*) AS received\n    FROM\n        mz_internal.mz_message_counts_received_raw\n    GROUP BY\n        channel_id, from_worker_id, to_worker_id\n)\nSELECT\n    sent_cte.channel_id,\n    sent_cte.from_worker_id,\n    sent_cte.to_worker_id,\n    sent_cte.sent,\n    received_cte.received,\n    batch_sent_cte.sent AS batch_sent,\n    batch_received_cte.received AS batch_received\nFROM sent_cte\nJOIN received_cte USING (channel_id, from_worker_id, to_worker_id)\nJOIN batch_sent_cte USING (channel_id, from_worker_id, to_worker_id)\nJOIN batch_received_cte USING (channel_id, from_worker_id, to_worker_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_notices" }: GidMappingValue { id: 2706, fingerprint: "SELECT\n    n.id,\n    n.notice_type,\n    n.message,\n    n.hint,\n    n.action,\n    n.redacted_message,\n    n.redacted_hint,\n    n.redacted_action,\n    n.action_type,\n    n.object_id,\n    n.created_at\nFROM\n    mz_internal.mz_optimizer_notices n\n" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_notices_redacted" }: GidMappingValue { id: 2708, fingerprint: "SELECT\n    id,\n    notice_type,\n    coalesce(redacted_message, message) as message,\n    coalesce(redacted_hint, hint) as hint,\n    coalesce(redacted_action, action) as action,\n    action_type,\n    object_id,\n    created_at\nFROM\n    mz_internal.mz_notices\n" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_object_fully_qualified_names" }: GidMappingValue { id: 483, fingerprint: "\n    SELECT o.id, o.name, o.type, sc.name as schema_name, db.name as database_name\n    FROM mz_catalog.mz_objects o\n    INNER JOIN mz_catalog.mz_schemas sc ON sc.id = o.schema_id\n    -- LEFT JOIN accounts for objects in the ambient database.\n    LEFT JOIN mz_catalog.mz_databases db ON db.id = sc.database_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_object_lifetimes" }: GidMappingValue { id: 484, fingerprint: "\n    SELECT\n        CASE\n            WHEN a.object_type = 'cluster-replica' THEN a.details ->> 'replica_id'\n            ELSE a.details ->> 'id'\n        END id,\n        a.object_type,\n        a.event_type,\n        a.occurred_at\n    FROM mz_catalog.mz_audit_events a\n    WHERE a.event_type = 'create' OR a.event_type = 'drop'" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_object_oid_alias" }: GidMappingValue { id: 3036, fingerprint: "SELECT object_type, oid_alias\n    FROM (\n        VALUES\n            (\n                'table'::pg_catalog.text,\n                'regclass'::pg_catalog.text\n            ),\n            ('source', 'regclass'),\n            ('view', 'regclass'),\n            ('materialized-view', 'regclass'),\n            ('index', 'regclass'),\n            ('type', 'regtype'),\n            ('function', 'regproc')\n    )\n    AS _ (object_type, oid_alias);" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_object_transitive_dependencies" }: GidMappingValue { id: 496, fingerprint: "\nWITH MUTUALLY RECURSIVE\n  reach(object_id text, referenced_object_id text) AS (\n    SELECT object_id, referenced_object_id FROM mz_internal.mz_object_dependencies\n    UNION\n    SELECT x, z FROM reach r1(x, y) JOIN reach r2(y, z) USING(y)\n  )\nSELECT object_id, referenced_object_id FROM reach;" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_peek_durations_histogram" }: GidMappingValue { id: 519, fingerprint: "\nSELECT\n    type, duration_ns,\n    pg_catalog.sum(count) AS count\nFROM mz_internal.mz_peek_durations_histogram_per_worker\nGROUP BY type, duration_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_peek_durations_histogram_per_worker" }: GidMappingValue { id: 518, fingerprint: "SELECT\n    worker_id, type, duration_ns, pg_catalog.count(*) AS count\nFROM\n    mz_internal.mz_peek_durations_histogram_raw\nGROUP BY\n    worker_id, type, duration_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_prepared_statement_history_redacted" }: GidMappingValue { id: 3046, fingerprint: "\nSELECT id, session_id, name, redacted_sql, prepared_at, statement_type, throttled_count\nFROM mz_internal.mz_prepared_statement_history" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_recent_activity_log" }: GidMappingValue { id: 3042, fingerprint: "SELECT * FROM mz_internal.mz_activity_log WHERE prepared_at + INTERVAL '3 days' > mz_now()\nAND began_at + INTERVAL '3 days' > mz_now()" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_recent_activity_log_redacted" }: GidMappingValue { id: 3044, fingerprint: "SELECT execution_id, sample_rate, cluster_id, application_name, cluster_name,\ntransaction_isolation, execution_timestamp, transient_index_id, began_at, finished_at, finished_status,\nerror_message, rows_returned, execution_strategy, transaction_id, prepared_statement_id,\nprepared_statement_name, session_id, redacted_sql, prepared_at, statement_type\nFROM mz_internal.mz_recent_activity_log" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_records_per_dataflow" }: GidMappingValue { id: 517, fingerprint: "\nSELECT\n    id,\n    name,\n    pg_catalog.SUM(records) as records,\n    pg_catalog.SUM(batches) as batches,\n    pg_catalog.SUM(size) as size,\n    pg_catalog.SUM(capacity) as capacity,\n    pg_catalog.SUM(allocations) as allocations\nFROM\n    mz_internal.mz_records_per_dataflow_per_worker\nGROUP BY\n    id,\n    name" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_records_per_dataflow_operator" }: GidMappingValue { id: 515, fingerprint: "\nSELECT\n    id,\n    name,\n    dataflow_id,\n    pg_catalog.sum(records) AS records,\n    pg_catalog.sum(batches) AS batches,\n    pg_catalog.sum(size) AS size,\n    pg_catalog.sum(capacity) AS capacity,\n    pg_catalog.sum(allocations) AS allocations\nFROM mz_internal.mz_records_per_dataflow_operator_per_worker\nGROUP BY id, name, dataflow_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_records_per_dataflow_operator_per_worker" }: GidMappingValue { id: 514, fingerprint: "\nSELECT\n    dod.id,\n    dod.name,\n    dod.worker_id,\n    dod.dataflow_id,\n    COALESCE(ar_size.records, 0) AS records,\n    COALESCE(ar_size.batches, 0) AS batches,\n    COALESCE(ar_size.size, 0) AS size,\n    COALESCE(ar_size.capacity, 0) AS capacity,\n    COALESCE(ar_size.allocations, 0) AS allocations\nFROM\n    mz_internal.mz_dataflow_operator_dataflows_per_worker dod\n    LEFT OUTER JOIN mz_internal.mz_arrangement_sizes_per_worker ar_size ON\n        dod.id = ar_size.operator_id AND\n        dod.worker_id = ar_size.worker_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_records_per_dataflow_per_worker" }: GidMappingValue { id: 516, fingerprint: "\nSELECT\n    rdo.dataflow_id as id,\n    dfs.name,\n    rdo.worker_id,\n    pg_catalog.SUM(rdo.records) as records,\n    pg_catalog.SUM(rdo.batches) as batches,\n    pg_catalog.SUM(rdo.size) as size,\n    pg_catalog.SUM(rdo.capacity) as capacity,\n    pg_catalog.SUM(rdo.allocations) as allocations\nFROM\n    mz_internal.mz_records_per_dataflow_operator_per_worker rdo,\n    mz_internal.mz_dataflows_per_worker dfs\nWHERE\n    rdo.dataflow_id = dfs.id AND\n    rdo.worker_id = dfs.worker_id\nGROUP BY\n    rdo.dataflow_id,\n    dfs.name,\n    rdo.worker_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_scheduling_elapsed" }: GidMappingValue { id: 523, fingerprint: "\nSELECT\n    id,\n    pg_catalog.sum(elapsed_ns) AS elapsed_ns\nFROM mz_internal.mz_scheduling_elapsed_per_worker\nGROUP BY id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_scheduling_elapsed_per_worker" }: GidMappingValue { id: 522, fingerprint: "SELECT\n    id, worker_id, pg_catalog.count(*) AS elapsed_ns\nFROM\n    mz_internal.mz_scheduling_elapsed_raw\nGROUP BY\n    id, worker_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_scheduling_parks_histogram" }: GidMappingValue { id: 525, fingerprint: "\nSELECT\n    slept_for_ns,\n    requested_ns,\n    pg_catalog.sum(count) AS count\nFROM mz_internal.mz_scheduling_parks_histogram_per_worker\nGROUP BY slept_for_ns, requested_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_scheduling_parks_histogram_per_worker" }: GidMappingValue { id: 524, fingerprint: "SELECT\n    worker_id, slept_for_ns, requested_ns, pg_catalog.count(*) AS count\nFROM\n    mz_internal.mz_scheduling_parks_histogram_raw\nGROUP BY\n    worker_id, slept_for_ns, requested_ns" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_all_my_privileges" }: GidMappingValue { id: 600, fingerprint: "SELECT grantor, grantee, database, schema, name, object_type, privilege_type\nFROM mz_internal.mz_show_all_privileges\nWHERE\n    CASE\n        WHEN grantee = 'PUBLIC' THEN true\n        ELSE pg_has_role(grantee, 'USAGE')\n    END" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_all_privileges" }: GidMappingValue { id: 599, fingerprint: "SELECT grantor, grantee, NULL AS database, NULL AS schema, NULL AS name, 'system' AS object_type, privilege_type\nFROM mz_internal.mz_show_system_privileges\nUNION ALL\nSELECT grantor, grantee, NULL AS database, NULL AS schema, name, 'cluster' AS object_type, privilege_type\nFROM mz_internal.mz_show_cluster_privileges\nUNION ALL\nSELECT grantor, grantee, NULL AS database, NULL AS schema, name, 'database' AS object_type, privilege_type\nFROM mz_internal.mz_show_database_privileges\nUNION ALL\nSELECT grantor, grantee, database, NULL AS schema, name, 'schema' AS object_type, privilege_type\nFROM mz_internal.mz_show_schema_privileges\nUNION ALL\nSELECT grantor, grantee, database, schema, name, object_type, privilege_type\nFROM mz_internal.mz_show_object_privileges" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_cluster_privileges" }: GidMappingValue { id: 591, fingerprint: "SELECT\n    grantor.name AS grantor,\n    CASE privileges.grantee\n        WHEN 'p' THEN 'PUBLIC'\n        ELSE grantee.name\n    END AS grantee,\n    privileges.name AS name,\n    privileges.privilege_type AS privilege_type\nFROM\n    (SELECT mz_internal.mz_aclexplode(privileges).*, name\n    FROM mz_clusters\n    WHERE id NOT LIKE 's%') AS privileges\nLEFT JOIN mz_roles grantor ON privileges.grantor = grantor.id\nLEFT JOIN mz_roles grantee ON privileges.grantee = grantee.id\nWHERE privileges.grantee NOT LIKE 's%'" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_cluster_replicas" }: GidMappingValue { id: 532, fingerprint: "SELECT\n    mz_catalog.mz_clusters.name AS cluster,\n    mz_catalog.mz_cluster_replicas.name AS replica,\n    mz_catalog.mz_cluster_replicas.size AS size,\n    statuses.ready AS ready\nFROM\n    mz_catalog.mz_cluster_replicas\n        JOIN mz_catalog.mz_clusters\n            ON mz_catalog.mz_cluster_replicas.cluster_id = mz_catalog.mz_clusters.id\n        JOIN\n            (\n                SELECT\n                    replica_id,\n                    mz_unsafe.mz_all(status = 'ready') AS ready\n                FROM mz_internal.mz_cluster_replica_statuses\n                GROUP BY replica_id\n            ) AS statuses\n            ON mz_catalog.mz_cluster_replicas.id = statuses.replica_id\nORDER BY 1, 2" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_database_privileges" }: GidMappingValue { id: 593, fingerprint: "SELECT\n    grantor.name AS grantor,\n    CASE privileges.grantee\n        WHEN 'p' THEN 'PUBLIC'\n        ELSE grantee.name\n    END AS grantee,\n    privileges.name AS name,\n    privileges.privilege_type AS privilege_type\nFROM\n    (SELECT mz_internal.mz_aclexplode(privileges).*, name\n    FROM mz_databases\n    WHERE id NOT LIKE 's%') AS privileges\nLEFT JOIN mz_roles grantor ON privileges.grantor = grantor.id\nLEFT JOIN mz_roles grantee ON privileges.grantee = grantee.id\nWHERE privileges.grantee NOT LIKE 's%'" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_default_privileges" }: GidMappingValue { id: 601, fingerprint: "SELECT\n    CASE defaults.role_id\n        WHEN 'p' THEN 'PUBLIC'\n        ELSE object_owner.name\n    END AS object_owner,\n\tdatabases.name AS database,\n\tschemas.name AS schema,\n\tobject_type,\n\tCASE defaults.grantee\n\t    WHEN 'p' THEN 'PUBLIC'\n        ELSE grantee.name\n    END AS grantee,\n\tunnest(mz_internal.mz_format_privileges(defaults.privileges)) AS privilege_type\nFROM mz_default_privileges defaults\nLEFT JOIN mz_roles AS object_owner ON defaults.role_id = object_owner.id\nLEFT JOIN mz_roles AS grantee ON defaults.grantee = grantee.id\nLEFT JOIN mz_databases AS databases ON defaults.database_id = databases.id\nLEFT JOIN mz_schemas AS schemas ON defaults.schema_id = schemas.id\nWHERE defaults.grantee NOT LIKE 's%'\n    AND defaults.database_id IS NULL OR defaults.database_id NOT LIKE 's%'\n    AND defaults.schema_id IS NULL OR defaults.schema_id NOT LIKE 's%'" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_indexes" }: GidMappingValue { id: 531, fingerprint: "SELECT\n    idxs.name AS name,\n    objs.name AS on,\n    clusters.name AS cluster,\n    COALESCE(keys.key, '{}'::_text) AS key,\n    idxs.on_id AS on_id,\n    objs.schema_id AS schema_id,\n    clusters.id AS cluster_id\nFROM\n    mz_indexes AS idxs\n    JOIN mz_catalog.mz_objects AS objs ON idxs.on_id = objs.id\n    JOIN mz_catalog.mz_clusters AS clusters ON clusters.id = idxs.cluster_id\n    LEFT JOIN\n        (SELECT\n            idxs.id,\n            ARRAY_AGG(\n                CASE\n                    WHEN idx_cols.on_expression IS NULL THEN obj_cols.name\n                    ELSE idx_cols.on_expression\n                END\n                ORDER BY idx_cols.index_position ASC\n            ) AS key\n        FROM\n            mz_indexes AS idxs\n            JOIN mz_index_columns idx_cols ON idxs.id = idx_cols.index_id\n            LEFT JOIN mz_columns obj_cols ON\n                idxs.on_id = obj_cols.id AND idx_cols.on_position = obj_cols.position\n        GROUP BY idxs.id) AS keys\n    ON idxs.id = keys.id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_materialized_views" }: GidMappingValue { id: 530, fingerprint: "SELECT mviews.name, clusters.name AS cluster, schema_id, cluster_id\nFROM mz_materialized_views AS mviews\nJOIN mz_clusters AS clusters ON clusters.id = mviews.cluster_id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_my_cluster_privileges" }: GidMappingValue { id: 592, fingerprint: "SELECT grantor, grantee, name, privilege_type\nFROM mz_internal.mz_show_cluster_privileges\nWHERE\n    CASE\n        WHEN grantee = 'PUBLIC' THEN true\n        ELSE pg_has_role(grantee, 'USAGE')\n    END" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_my_database_privileges" }: GidMappingValue { id: 594, fingerprint: "SELECT grantor, grantee, name, privilege_type\nFROM mz_internal.mz_show_database_privileges\nWHERE\n    CASE\n        WHEN grantee = 'PUBLIC' THEN true\n        ELSE pg_has_role(grantee, 'USAGE')\n    END" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_my_default_privileges" }: GidMappingValue { id: 602, fingerprint: "SELECT object_owner, database, schema, object_type, grantee, privilege_type\nFROM mz_internal.mz_show_default_privileges\nWHERE\n    CASE\n        WHEN grantee = 'PUBLIC' THEN true\n        ELSE pg_has_role(grantee, 'USAGE')\n    END" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_my_object_privileges" }: GidMappingValue { id: 598, fingerprint: "SELECT grantor, grantee, database, schema, name, object_type, privilege_type\nFROM mz_internal.mz_show_object_privileges\nWHERE\n    CASE\n        WHEN grantee = 'PUBLIC' THEN true\n        ELSE pg_has_role(grantee, 'USAGE')\n    END" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_my_role_members" }: GidMappingValue { id: 588, fingerprint: "SELECT role, member, grantor\nFROM mz_internal.mz_show_role_members\nWHERE pg_has_role(member, 'USAGE')" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_my_schema_privileges" }: GidMappingValue { id: 596, fingerprint: "SELECT grantor, grantee, database, name, privilege_type\nFROM mz_internal.mz_show_schema_privileges\nWHERE\n    CASE\n        WHEN grantee = 'PUBLIC' THEN true\n        ELSE pg_has_role(grantee, 'USAGE')\n    END" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_my_system_privileges" }: GidMappingValue { id: 590, fingerprint: "SELECT grantor, grantee, privilege_type\nFROM mz_internal.mz_show_system_privileges\nWHERE\n    CASE\n        WHEN grantee = 'PUBLIC' THEN true\n        ELSE pg_has_role(grantee, 'USAGE')\n    END" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_object_privileges" }: GidMappingValue { id: 597, fingerprint: "SELECT\n    grantor.name AS grantor,\n    CASE privileges.grantee\n            WHEN 'p' THEN 'PUBLIC'\n            ELSE grantee.name\n        END AS grantee,\n    databases.name AS database,\n    schemas.name AS schema,\n    privileges.name AS name,\n    privileges.type AS object_type,\n    privileges.privilege_type AS privilege_type\nFROM\n    (SELECT mz_internal.mz_aclexplode(privileges).*, schema_id, name, type\n    FROM mz_objects\n    WHERE id NOT LIKE 's%') AS privileges\nLEFT JOIN mz_roles grantor ON privileges.grantor = grantor.id\nLEFT JOIN mz_roles grantee ON privileges.grantee = grantee.id\nLEFT JOIN mz_schemas schemas ON privileges.schema_id = schemas.id\nLEFT JOIN mz_databases databases ON schemas.database_id = databases.id\nWHERE privileges.grantee NOT LIKE 's%'" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_role_members" }: GidMappingValue { id: 587, fingerprint: "SELECT\n    r1.name AS role,\n    r2.name AS member,\n    r3.name AS grantor\nFROM mz_catalog.mz_role_members rm\nJOIN mz_roles r1 ON r1.id = rm.role_id\nJOIN mz_roles r2 ON r2.id = rm.member\nJOIN mz_roles r3 ON r3.id = rm.grantor\nORDER BY role" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_schema_privileges" }: GidMappingValue { id: 595, fingerprint: "SELECT\n    grantor.name AS grantor,\n    CASE privileges.grantee\n        WHEN 'p' THEN 'PUBLIC'\n        ELSE grantee.name\n    END AS grantee,\n    databases.name AS database,\n    privileges.name AS name,\n    privileges.privilege_type AS privilege_type\nFROM\n    (SELECT mz_internal.mz_aclexplode(privileges).*, database_id, name\n    FROM mz_schemas\n    WHERE id NOT LIKE 's%') AS privileges\nLEFT JOIN mz_roles grantor ON privileges.grantor = grantor.id\nLEFT JOIN mz_roles grantee ON privileges.grantee = grantee.id\nLEFT JOIN mz_databases databases ON privileges.database_id = databases.id\nWHERE privileges.grantee NOT LIKE 's%'" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_sinks" }: GidMappingValue { id: 2709, fingerprint: "SELECT\n        sinks.name,\n        sinks.type,\n        COALESCE(sinks.size, clusters.size) AS size,\n        clusters.name AS cluster,\n        schema_id,\n        cluster_id\n    FROM\n        mz_catalog.mz_sinks AS sinks\n            JOIN\n                mz_catalog.mz_clusters AS clusters\n                ON clusters.id = sinks.cluster_id;" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_sources" }: GidMappingValue { id: 2711, fingerprint: "SELECT\n    sources.name,\n    sources.type,\n    COALESCE(sources.size, clusters.size) AS size,\n    clusters.name AS cluster,\n    schema_id,\n    cluster_id\nFROM\n    mz_catalog.mz_sources AS sources\n        LEFT JOIN\n            mz_catalog.mz_clusters AS clusters\n            ON clusters.id = sources.cluster_id;" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_show_system_privileges" }: GidMappingValue { id: 589, fingerprint: "SELECT\n    grantor.name AS grantor,\n    CASE privileges.grantee\n        WHEN 'p' THEN 'PUBLIC'\n        ELSE grantee.name\n    END AS grantee,\n    privileges.privilege_type AS privilege_type\nFROM\n    (SELECT mz_internal.mz_aclexplode(ARRAY[privileges]).*\n    FROM mz_system_privileges) AS privileges\nLEFT JOIN mz_roles grantor ON privileges.grantor = grantor.id\nLEFT JOIN mz_roles grantee ON privileges.grantee = grantee.id\nWHERE privileges.grantee NOT LIKE 's%'" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_sink_statistics" }: GidMappingValue { id: 622, fingerprint: "\nSELECT\n    id,\n    SUM(messages_staged)::uint8 AS messages_staged,\n    SUM(messages_committed)::uint8 AS messages_committed,\n    SUM(bytes_staged)::uint8 AS bytes_staged,\n    SUM(bytes_committed)::uint8 AS bytes_committed\nFROM mz_internal.mz_sink_statistics_per_worker\nGROUP BY id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_sink_statuses" }: GidMappingValue { id: 604, fingerprint: "\nWITH latest_events AS (\n    SELECT DISTINCT ON(sink_id) occurred_at, sink_id, status, error, details\n    FROM mz_internal.mz_sink_status_history\n    ORDER BY sink_id, occurred_at DESC\n)\nSELECT\n    mz_sinks.id,\n    name,\n    mz_sinks.type,\n    occurred_at as last_status_change_at,\n    coalesce(status, 'created') as status,\n    error,\n    details\nFROM mz_sinks\nLEFT JOIN latest_events ON mz_sinks.id = latest_events.sink_id\nWHERE\n    -- This is a convenient way to filter out system sinks, like the status_history table itself.\n    mz_sinks.id NOT LIKE 's%'" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_source_statistics" }: GidMappingValue { id: 620, fingerprint: "\nSELECT\n    id,\n    bool_and(snapshot_committed) as snapshot_committed,\n    SUM(messages_received)::uint8 AS messages_received,\n    SUM(bytes_received)::uint8 AS bytes_received,\n    SUM(updates_staged)::uint8 AS updates_staged,\n    SUM(updates_committed)::uint8 AS updates_committed,\n    SUM(envelope_state_bytes)::uint8 AS envelope_state_bytes,\n    SUM(envelope_state_records)::uint8 AS envelope_state_records,\n    -- Ensure we aggregate to NULL when not all workers are done rehydrating.\n    CASE\n        WHEN bool_or(rehydration_latency IS NULL) THEN NULL\n        ELSE MAX(rehydration_latency)::interval\n    END AS rehydration_latency\nFROM mz_internal.mz_source_statistics_per_worker\nGROUP BY id" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_source_statuses" }: GidMappingValue { id: 615, fingerprint: "\n    WITH\n    -- Get the latest events\n    latest_events AS\n    (\n        SELECT DISTINCT ON (source_id)\n            occurred_at, source_id, status, error, details\n        FROM mz_internal.mz_source_status_history\n        ORDER BY source_id, occurred_at DESC\n    ),\n    -- Determine which sources are subsources and which are parent sources\n    subsources AS\n    (\n        SELECT subsources.id AS self, sources.id AS parent\n        FROM\n            mz_sources AS subsources\n                JOIN\n                    mz_internal.mz_object_dependencies AS deps\n                    ON subsources.id = deps.referenced_object_id\n                JOIN mz_sources AS sources ON sources.id = deps.object_id\n    ),\n     -- Determine which collection's ID to use for the status\n    id_of_status_to_use AS\n    (\n        SELECT\n            self_events.source_id,\n            -- If self not errored, but parent is, use parent; else self\n            CASE\n                WHEN\n                    self_events.status <> 'stalled' AND\n                    parent_events.status = 'stalled'\n                THEN parent_events.source_id\n                ELSE self_events.source_id\n            END AS id_to_use\n        FROM\n            latest_events AS self_events\n                LEFT JOIN subsources ON self_events.source_id = self\n                LEFT JOIN\n                    latest_events AS parent_events\n                    ON parent_events.source_id = parent\n    ),\n    -- Swap out events for the ID of the event we plan to use instead\n    latest_events_to_use AS\n    (\n        SELECT occurred_at, s.source_id, status, error, details\n        FROM\n            id_of_status_to_use AS s\n                JOIN latest_events AS e ON e.source_id = s.id_to_use\n    )\nSELECT\n    mz_sources.id,\n    name,\n    mz_sources.type,\n    occurred_at AS last_status_change_at,\n    -- TODO(parkmycar): Report status of webhook source once #20036 is closed.\n    CASE\n            WHEN\n                mz_sources.type = 'webhook' OR\n                mz_sources.type = 'progress'\n            THEN 'running'\n            ELSE COALESCE(status, 'created')\n    END AS status,\n    error,\n    details\nFROM\n    mz_sources\n        LEFT JOIN latest_events_to_use AS e ON mz_sources.id = e.source_id\nWHERE mz_sources.id NOT LIKE 's%';" }, GidMappingKey { schema_name: "mz_internal", object_type: View, object_name: "mz_statement_execution_history_redacted" }: GidMappingValue { id: 609, fingerprint: "\nSELECT id, prepared_statement_id, sample_rate, cluster_id, application_name,\ncluster_name, transaction_isolation, execution_timestamp, transaction_id,\ntransient_index_id, began_at, finished_at, finished_status,\nerror_message, rows_returned, execution_strategy\nFROM mz_internal.mz_statement_execution_history" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_cluster_links_ind" }: GidMappingValue { id: 656, fingerprint: "CREATE INDEX mz_cluster_links_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_cluster_links (cluster_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_cluster_replica_history_ind" }: GidMappingValue { id: 665, fingerprint: "CREATE INDEX mz_cluster_replica_history_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_cluster_replica_history (dropped_at)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_cluster_replica_metrics_ind" }: GidMappingValue { id: 664, fingerprint: "CREATE INDEX mz_cluster_replica_metrics_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_cluster_replica_metrics (replica_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_cluster_replica_sizes_ind" }: GidMappingValue { id: 662, fingerprint: "CREATE INDEX mz_cluster_replica_sizes_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_cluster_replica_sizes (size)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_cluster_replica_statuses_ind" }: GidMappingValue { id: 663, fingerprint: "CREATE INDEX mz_cluster_replica_statuses_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_cluster_replica_statuses (replica_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_cluster_replicas_ind" }: GidMappingValue { id: 661, fingerprint: "CREATE INDEX mz_cluster_replicas_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_cluster_replicas (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_clusters_ind" }: GidMappingValue { id: 650, fingerprint: "CREATE INDEX mz_clusters_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_clusters (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_compute_dependencies_ind" }: GidMappingValue { id: 668, fingerprint: "CREATE INDEX mz_compute_dependencies_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_compute_dependencies (dependency_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_frontiers_ind" }: GidMappingValue { id: 670, fingerprint: "CREATE INDEX mz_frontiers_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_frontiers (object_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_indexes_ind" }: GidMappingValue { id: 651, fingerprint: "CREATE INDEX mz_indexes_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_indexes (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_materialized_views_ind" }: GidMappingValue { id: 655, fingerprint: "CREATE INDEX mz_materialized_views_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_materialized_views (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_notices_ind" }: GidMappingValue { id: 2707, fingerprint: "CREATE INDEX mz_notices_ind\nIN CLUSTER mz_introspection ON mz_internal.mz_notices(id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_object_dependencies_ind" }: GidMappingValue { id: 667, fingerprint: "CREATE INDEX mz_object_dependencies_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_object_dependencies (object_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_object_lifetimes_ind" }: GidMappingValue { id: 666, fingerprint: "CREATE INDEX mz_object_lifetimes_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_object_lifetimes (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_object_transitive_dependencies_ind" }: GidMappingValue { id: 669, fingerprint: "CREATE INDEX mz_object_transitive_dependencies_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_object_transitive_dependencies (object_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_recent_activity_log_ind" }: GidMappingValue { id: 3043, fingerprint: "CREATE INDEX mz_recent_activity_log_ind\nIN CLUSTER mz_introspection\n-- session_id because we plan to join\n-- this against mz_internal.mz_session_history\nON mz_internal.mz_recent_activity_log (session_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_roles_ind" }: GidMappingValue { id: 652, fingerprint: "CREATE INDEX mz_roles_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_roles (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_all_objects_ind" }: GidMappingValue { id: 644, fingerprint: "CREATE INDEX mz_show_all_objects_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_objects (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_cluster_replicas_ind" }: GidMappingValue { id: 648, fingerprint: "CREATE INDEX mz_show_cluster_replicas_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_show_cluster_replicas (cluster)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_clusters_ind" }: GidMappingValue { id: 647, fingerprint: "CREATE INDEX mz_show_clusters_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_clusters (name)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_columns_ind" }: GidMappingValue { id: 646, fingerprint: "CREATE INDEX mz_show_columns_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_columns (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_connections_ind" }: GidMappingValue { id: 637, fingerprint: "CREATE INDEX mz_show_connections_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_connections (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_databases_ind" }: GidMappingValue { id: 635, fingerprint: "CREATE INDEX mz_show_databases_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_databases (name)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_indexes_ind" }: GidMappingValue { id: 645, fingerprint: "CREATE INDEX mz_show_indexes_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_show_indexes (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_materialized_views_ind" }: GidMappingValue { id: 641, fingerprint: "CREATE INDEX mz_show_materialized_views_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_show_materialized_views (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_schemas_ind" }: GidMappingValue { id: 636, fingerprint: "CREATE INDEX mz_show_schemas_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_schemas (database_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_secrets_ind" }: GidMappingValue { id: 649, fingerprint: "CREATE INDEX mz_show_secrets_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_secrets (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_sinks_ind" }: GidMappingValue { id: 2710, fingerprint: "CREATE INDEX mz_show_sinks_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_show_sinks (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_sources_ind" }: GidMappingValue { id: 2712, fingerprint: "CREATE INDEX mz_show_sources_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_show_sources (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_tables_ind" }: GidMappingValue { id: 638, fingerprint: "CREATE INDEX mz_show_tables_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_tables (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_types_ind" }: GidMappingValue { id: 643, fingerprint: "CREATE INDEX mz_show_types_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_types (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_show_views_ind" }: GidMappingValue { id: 640, fingerprint: "CREATE INDEX mz_show_views_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_views (schema_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_sink_statistics_ind" }: GidMappingValue { id: 623, fingerprint: "CREATE INDEX mz_sink_statistics_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_sink_statistics (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_sink_status_history_ind" }: GidMappingValue { id: 660, fingerprint: "CREATE INDEX mz_sink_status_history_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_sink_status_history (sink_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_sink_statuses_ind" }: GidMappingValue { id: 659, fingerprint: "CREATE INDEX mz_sink_statuses_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_sink_statuses (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_sinks_ind" }: GidMappingValue { id: 654, fingerprint: "CREATE INDEX mz_sinks_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_sinks (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_source_statistics_ind" }: GidMappingValue { id: 621, fingerprint: "CREATE INDEX mz_source_statistics_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_source_statistics (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_source_status_history_ind" }: GidMappingValue { id: 658, fingerprint: "CREATE INDEX mz_source_status_history_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_source_status_history (source_id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_source_statuses_ind" }: GidMappingValue { id: 657, fingerprint: "CREATE INDEX mz_source_statuses_ind\nIN CLUSTER mz_introspection\nON mz_internal.mz_source_statuses (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Index, object_name: "mz_sources_ind" }: GidMappingValue { id: 653, fingerprint: "CREATE INDEX mz_sources_ind\nIN CLUSTER mz_introspection\nON mz_catalog.mz_sources (id)" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "aclitem_grantee" }: GidMappingValue { id: 374, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "aclitem_grantor" }: GidMappingValue { id: 375, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "aclitem_privileges" }: GidMappingValue { id: 376, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "is_rbac_enabled" }: GidMappingValue { id: 377, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "make_mz_aclitem" }: GidMappingValue { id: 378, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_acl_item_contains_privilege" }: GidMappingValue { id: 379, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_aclexplode" }: GidMappingValue { id: 380, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_aclitem_grantee" }: GidMappingValue { id: 381, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_aclitem_grantor" }: GidMappingValue { id: 382, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_aclitem_privileges" }: GidMappingValue { id: 383, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_connection_oid" }: GidMappingValue { id: 3032, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_database_oid" }: GidMappingValue { id: 384, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_format_privileges" }: GidMappingValue { id: 385, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_global_id_to_name" }: GidMappingValue { id: 386, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_minimal_name_qualification" }: GidMappingValue { id: 3033, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_name_rank" }: GidMappingValue { id: 3034, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_normalize_object_name" }: GidMappingValue { id: 387, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_render_typmod" }: GidMappingValue { id: 388, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_resolve_object_name" }: GidMappingValue { id: 389, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_role_oid" }: GidMappingValue { id: 390, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_role_oid_memberships" }: GidMappingValue { id: 391, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_schema_oid" }: GidMappingValue { id: 392, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_secret_oid" }: GidMappingValue { id: 3035, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_session_id" }: GidMappingValue { id: 393, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_type_name" }: GidMappingValue { id: 394, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_validate_privileges" }: GidMappingValue { id: 395, fingerprint: "" }, GidMappingKey { schema_name: "mz_internal", object_type: Func, object_name: "mz_validate_role_privilege" }: GidMappingValue { id: 396, fingerprint: "" }, GidMappingKey { schema_name: "mz_unsafe", object_type: Func, object_name: "mz_all" }: GidMappingValue { id: 397, fingerprint: "" }, GidMappingKey { schema_name: "mz_unsafe", object_type: Func, object_name: "mz_any" }: GidMappingValue { id: 398, fingerprint: "" }, GidMappingKey { schema_name: "mz_unsafe", object_type: Func, object_name: "mz_avg_promotion" }: GidMappingValue { id: 399, fingerprint: "" }, GidMappingKey { schema_name: "mz_unsafe", object_type: Func, object_name: "mz_avg_promotion_internal_v1" }: GidMappingValue { id: 400, fingerprint: "" }, GidMappingKey { schema_name: "mz_unsafe", object_type: Func, object_name: "mz_error_if_null" }: GidMappingValue { id: 401, fingerprint: "" }, GidMappingKey { schema_name: "mz_unsafe", object_type: Func, object_name: "mz_panic" }: GidMappingValue { id: 402, fingerprint: "" }, GidMappingKey { schema_name: "mz_unsafe", object_type: Func, object_name: "mz_sleep" }: GidMappingValue { id: 403, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_aggregate" }: GidMappingValue { id: 563, fingerprint: "SELECT\n    a.oid as aggfnoid,\n    -- Currently Materialize only support 'normal' aggregate functions.\n    a.agg_kind as aggkind,\n    a.agg_num_direct_args as aggnumdirectargs,\n    -- Materialize doesn't support these fields.\n    NULL::pg_catalog.regproc as aggtransfn,\n    '0'::pg_catalog.regproc as aggfinalfn,\n    '0'::pg_catalog.regproc as aggcombinefn,\n    '0'::pg_catalog.regproc as aggserialfn,\n    '0'::pg_catalog.regproc as aggdeserialfn,\n    '0'::pg_catalog.regproc as aggmtransfn,\n    '0'::pg_catalog.regproc as aggminvtransfn,\n    '0'::pg_catalog.regproc as aggmfinalfn,\n    false as aggfinalextra,\n    false as aggmfinalextra,\n    NULL::pg_catalog.\"char\" AS aggfinalmodify,\n    NULL::pg_catalog.\"char\" AS aggmfinalmodify,\n    '0'::pg_catalog.oid as aggsortop,\n    NULL::pg_catalog.oid as aggtranstype,\n    NULL::pg_catalog.int4 as aggtransspace,\n    '0'::pg_catalog.oid as aggmtranstype,\n    NULL::pg_catalog.int4 as aggmtransspace,\n    NULL::pg_catalog.text as agginitval,\n    NULL::pg_catalog.text as aggminitval\nFROM mz_internal.mz_aggregates a" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_am" }: GidMappingValue { id: 554, fingerprint: "\nSELECT NULL::pg_catalog.oid AS oid,\n    NULL::pg_catalog.text AS amname,\n    NULL::pg_catalog.regproc AS amhandler,\n    NULL::pg_catalog.\"char\" AS amtype\nWHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_attrdef" }: GidMappingValue { id: 548, fingerprint: "SELECT\n    NULL::pg_catalog.oid AS oid,\n    mz_objects.oid AS adrelid,\n    mz_columns.position::int8 AS adnum,\n    mz_columns.default AS adbin,\n    mz_columns.default AS adsrc\nFROM mz_catalog.mz_columns\n    JOIN mz_catalog.mz_databases d ON (d.id IS NULL OR d.name = pg_catalog.current_database())\n    JOIN mz_catalog.mz_objects ON mz_columns.id = mz_objects.id\nWHERE default IS NOT NULL" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_attribute" }: GidMappingValue { id: 543, fingerprint: "SELECT\n    class_objects.oid as attrelid,\n    mz_columns.name as attname,\n    mz_columns.type_oid AS atttypid,\n    pg_type.typlen AS attlen,\n    position::int8::int2 as attnum,\n    mz_columns.type_mod as atttypmod,\n    NOT nullable as attnotnull,\n    mz_columns.default IS NOT NULL as atthasdef,\n    ''::pg_catalog.\"char\" as attidentity,\n    -- MZ doesn't support generated columns so attgenerated is filled with ''\n    ''::pg_catalog.\"char\" as attgenerated,\n    FALSE as attisdropped,\n    -- MZ doesn't support COLLATE so attcollation is filled with 0\n    0::pg_catalog.oid as attcollation\nFROM (\n    -- pg_attribute catalogs columns on relations and indexes\n    SELECT id, oid, schema_id, name, type FROM mz_catalog.mz_relations\n    UNION ALL\n        SELECT mz_indexes.id, mz_indexes.oid, mz_relations.schema_id, mz_indexes.name, 'index' AS type\n        FROM mz_catalog.mz_indexes\n        JOIN mz_catalog.mz_relations ON mz_indexes.on_id = mz_relations.id\n) AS class_objects\nJOIN mz_catalog.mz_columns ON class_objects.id = mz_columns.id\nJOIN pg_catalog.pg_type ON pg_type.oid = mz_columns.type_oid\nJOIN mz_catalog.mz_schemas ON mz_schemas.id = class_objects.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = mz_schemas.database_id\nWHERE mz_schemas.database_id IS NULL OR d.name = pg_catalog.current_database()" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_auth_members" }: GidMappingValue { id: 550, fingerprint: "SELECT\n    role.oid AS roleid,\n    member.oid AS member,\n    grantor.oid AS grantor,\n    -- Materialize hasn't implemented admin_option.\n    false as admin_option\nFROM mz_role_members membership\nJOIN mz_roles role ON membership.role_id = role.id\nJOIN mz_roles member ON membership.member = member.id\nJOIN mz_roles grantor ON membership.grantor = grantor.id" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_authid" }: GidMappingValue { id: 556, fingerprint: "\nSELECT\n    r.oid AS oid,\n    r.name AS rolname,\n    -- We determine superuser status each time a role logs in, so there's no way to accurately\n    -- depict this in the catalog. Except for mz_system, which is always a superuser. For all other\n    -- roles we hardcode NULL.\n    CASE\n        WHEN r.name = 'mz_system' THEN true\n        ELSE NULL::pg_catalog.bool\n    END AS rolsuper,\n    inherit AS rolinherit,\n    mz_catalog.has_system_privilege(r.oid, 'CREATEROLE') AS rolcreaterole,\n    mz_catalog.has_system_privilege(r.oid, 'CREATEDB') AS rolcreatedb,\n    -- We determine login status each time a role logs in, so there's no way to accurately depict\n    -- this in the catalog. Instead we just hardcode NULL.\n    NULL::pg_catalog.bool AS rolcanlogin,\n    -- MZ doesn't support replication in the same way Postgres does\n    false AS rolreplication,\n    -- MZ doesn't how row level security\n    false AS rolbypassrls,\n    -- MZ doesn't have a connection limit\n    -1 AS rolconnlimit,\n    -- MZ doesn't have role passwords\n    NULL::pg_catalog.text AS rolpassword,\n    -- MZ doesn't have role passwords\n    NULL::pg_catalog.timestamptz AS rolvaliduntil\nFROM mz_catalog.mz_roles r" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_class" }: GidMappingValue { id: 537, fingerprint: "SELECT\n    class_objects.oid,\n    class_objects.name AS relname,\n    mz_schemas.oid AS relnamespace,\n    -- MZ doesn't support typed tables so reloftype is filled with 0\n    0::pg_catalog.oid AS reloftype,\n    role_owner.oid AS relowner,\n    0::pg_catalog.oid AS relam,\n    -- MZ doesn't have tablespaces so reltablespace is filled in with 0 implying the default tablespace\n    0::pg_catalog.oid AS reltablespace,\n    -- MZ doesn't use TOAST tables so reltoastrelid is filled with 0\n    0::pg_catalog.oid AS reltoastrelid,\n    EXISTS (SELECT id, oid, name, on_id, cluster_id FROM mz_catalog.mz_indexes where mz_indexes.on_id = class_objects.id) AS relhasindex,\n    -- MZ doesn't have unlogged tables and because of (https://github.com/MaterializeInc/materialize/issues/8805)\n    -- temporary objects don't show up here, so relpersistence is filled with 'p' for permanent.\n    -- TODO(jkosh44): update this column when issue is resolved.\n    'p'::pg_catalog.\"char\" AS relpersistence,\n    CASE\n        WHEN class_objects.type = 'table' THEN 'r'\n        WHEN class_objects.type = 'source' THEN 'r'\n        WHEN class_objects.type = 'index' THEN 'i'\n        WHEN class_objects.type = 'view' THEN 'v'\n        WHEN class_objects.type = 'materialized-view' THEN 'm'\n    END relkind,\n    -- MZ doesn't support CHECK constraints so relchecks is filled with 0\n    0::pg_catalog.int2 AS relchecks,\n    -- MZ doesn't support creating rules so relhasrules is filled with false\n    false AS relhasrules,\n    -- MZ doesn't support creating triggers so relhastriggers is filled with false\n    false AS relhastriggers,\n    -- MZ doesn't support table inheritance or partitions so relhassubclass is filled with false\n    false AS relhassubclass,\n    -- MZ doesn't have row level security so relrowsecurity and relforcerowsecurity is filled with false\n    false AS relrowsecurity,\n    false AS relforcerowsecurity,\n    -- MZ doesn't support replication so relreplident is filled with 'd' for default\n    'd'::pg_catalog.\"char\" AS relreplident,\n    -- MZ doesn't support table partitioning so relispartition is filled with false\n    false AS relispartition,\n    -- PG removed relhasoids in v12 so it's filled with false\n    false AS relhasoids,\n    -- MZ doesn't support options for relations\n    NULL::pg_catalog.text[] as reloptions\nFROM (\n    -- pg_class catalogs relations and indexes\n    SELECT id, oid, schema_id, name, type, owner_id FROM mz_catalog.mz_relations\n    UNION ALL\n        SELECT mz_indexes.id, mz_indexes.oid, mz_relations.schema_id, mz_indexes.name, 'index' AS type, mz_indexes.owner_id\n        FROM mz_catalog.mz_indexes\n        JOIN mz_catalog.mz_relations ON mz_indexes.on_id = mz_relations.id\n) AS class_objects\nJOIN mz_catalog.mz_schemas ON mz_schemas.id = class_objects.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = mz_schemas.database_id\nJOIN mz_catalog.mz_roles role_owner ON role_owner.id = class_objects.owner_id\nWHERE mz_schemas.database_id IS NULL OR d.name = pg_catalog.current_database()" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_collation" }: GidMappingValue { id: 560, fingerprint: "\nSELECT\n    NULL::pg_catalog.oid AS oid,\n    NULL::pg_catalog.text AS collname,\n    NULL::pg_catalog.oid AS collnamespace,\n    NULL::pg_catalog.oid AS collowner,\n    NULL::pg_catalog.\"char\" AS collprovider,\n    NULL::pg_catalog.bool AS collisdeterministic,\n    NULL::pg_catalog.int4 AS collencoding,\n    NULL::pg_catalog.text AS collcollate,\n    NULL::pg_catalog.text AS collctype,\n    NULL::pg_catalog.text AS collversion\nWHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_constraint" }: GidMappingValue { id: 551, fingerprint: "SELECT\n    NULL::pg_catalog.oid as oid,\n    NULL::pg_catalog.text as conname,\n    NULL::pg_catalog.oid as connamespace,\n    NULL::pg_catalog.\"char\" as contype,\n    NULL::pg_catalog.bool as condeferrable,\n    NULL::pg_catalog.bool as condeferred,\n    NULL::pg_catalog.bool as convalidated,\n    NULL::pg_catalog.oid as conrelid,\n    NULL::pg_catalog.oid as contypid,\n    NULL::pg_catalog.oid as conindid,\n    NULL::pg_catalog.oid as conparentid,\n    NULL::pg_catalog.oid as confrelid,\n    NULL::pg_catalog.\"char\" as confupdtype,\n    NULL::pg_catalog.\"char\" as confdeltype,\n    NULL::pg_catalog.\"char\" as confmatchtype,\n    NULL::pg_catalog.bool as conislocal,\n    NULL::pg_catalog.int4 as coninhcount,\n    NULL::pg_catalog.bool as connoinherit,\n    NULL::pg_catalog.int2[] as conkey,\n    NULL::pg_catalog.int2[] as confkey,\n    NULL::pg_catalog.oid[] as conpfeqop,\n    NULL::pg_catalog.oid[] as conppeqop,\n    NULL::pg_catalog.oid[] as conffeqop,\n    NULL::pg_catalog.oid[] as conexclop,\n    NULL::pg_catalog.text as conbin\nWHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_database" }: GidMappingValue { id: 539, fingerprint: "SELECT\n    d.oid as oid,\n    d.name as datname,\n    role_owner.oid as datdba,\n    6 as encoding,\n    -- Materialize doesn't support database cloning.\n    FALSE AS datistemplate,\n    TRUE AS datallowconn,\n    'C' as datcollate,\n    'C' as datctype,\n    NULL::pg_catalog.text[] as datacl\nFROM mz_catalog.mz_databases d\nJOIN mz_catalog.mz_roles role_owner ON role_owner.id = d.owner_id" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_depend" }: GidMappingValue { id: 538, fingerprint: "\nWITH class_objects AS (\n    SELECT\n        CASE\n            WHEN type = 'table' THEN 'pg_tables'::pg_catalog.regclass::pg_catalog.oid\n            WHEN type = 'source' THEN 'pg_tables'::pg_catalog.regclass::pg_catalog.oid\n            WHEN type = 'view' THEN 'pg_views'::pg_catalog.regclass::pg_catalog.oid\n            WHEN type = 'materialized-view' THEN 'pg_matviews'::pg_catalog.regclass::pg_catalog.oid\n        END classid,\n        id,\n        oid,\n        schema_id\n    FROM mz_catalog.mz_relations\n    UNION ALL\n    SELECT\n        'pg_index'::pg_catalog.regclass::pg_catalog.oid AS classid,\n        i.id,\n        i.oid,\n        r.schema_id\n    FROM mz_catalog.mz_indexes i\n    JOIN mz_catalog.mz_relations r ON i.on_id = r.id\n),\n\ncurrent_objects AS (\n    SELECT class_objects.*\n    FROM class_objects\n    JOIN mz_catalog.mz_schemas ON mz_schemas.id = class_objects.schema_id\n    LEFT JOIN mz_catalog.mz_databases d ON d.id = mz_schemas.database_id\n    -- This filter is tricky, as it filters out not just objects outside the\n    -- database, but *dependencies* on objects outside this database. It's not\n    -- clear that this is the right choice, but because PostgreSQL doesn't\n    -- support cross-database references, it's not clear that the other choice\n    -- is better.\n    WHERE mz_schemas.database_id IS NULL OR d.name = pg_catalog.current_database()\n)\n\nSELECT\n    objects.classid::pg_catalog.oid,\n    objects.oid::pg_catalog.oid AS objid,\n    0::pg_catalog.int4 AS objsubid,\n    dependents.classid::pg_catalog.oid AS refclassid,\n    dependents.oid::pg_catalog.oid AS refobjid,\n    0::pg_catalog.int4 AS refobjsubid,\n    'n'::pg_catalog.char AS deptype\nFROM mz_internal.mz_object_dependencies\nJOIN current_objects objects ON object_id = objects.id\nJOIN current_objects dependents ON referenced_object_id = dependents.id" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_description" }: GidMappingValue { id: 542, fingerprint: "\n    (\n        -- Gather all of the class oid's for objects that can have comments.\n        WITH pg_classoids AS (\n            SELECT oid, (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'pg_class') AS classoid\n            FROM pg_catalog.pg_class\n            UNION ALL\n            SELECT oid, (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'pg_type') AS classoid\n            FROM pg_catalog.pg_type\n            UNION ALL\n            SELECT oid, (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'pg_namespace') AS classoid\n            FROM pg_catalog.pg_namespace\n        ),\n        -- Gather all of the MZ ids for objects that can have comments.\n        mz_objects AS (\n            SELECT id, oid, type FROM mz_catalog.mz_objects\n            UNION ALL\n            SELECT id, oid, 'schema' AS type FROM mz_catalog.mz_schemas\n        )\n        SELECT\n            pg_classoids.oid AS objoid,\n            pg_classoids.classoid as classoid,\n            COALESCE(cmt.object_sub_id, 0) AS objsubid,\n            cmt.comment AS description\n        FROM\n            pg_classoids\n        JOIN\n            mz_objects ON pg_classoids.oid = mz_objects.oid\n        JOIN\n            mz_internal.mz_comments AS cmt ON mz_objects.id = cmt.id AND lower(mz_objects.type) = lower(cmt.object_type)\n    )" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_enum" }: GidMappingValue { id: 547, fingerprint: "SELECT\n    NULL::pg_catalog.oid AS oid,\n    NULL::pg_catalog.oid AS enumtypid,\n    NULL::pg_catalog.float4 AS enumsortorder,\n    NULL::pg_catalog.text AS enumlabel\nWHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_event_trigger" }: GidMappingValue { id: 567, fingerprint: "SELECT\n        NULL::pg_catalog.oid AS oid,\n        NULL::pg_catalog.text AS evtname,\n        NULL::pg_catalog.text AS evtevent,\n        NULL::pg_catalog.oid AS evtowner,\n        NULL::pg_catalog.oid AS evtfoid,\n        NULL::pg_catalog.char AS evtenabled,\n        NULL::pg_catalog.text[] AS evttags\n    WHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_extension" }: GidMappingValue { id: 566, fingerprint: "SELECT\n    -- MZ doesn't support extensions so all of these fields are NULL.\n    NULL::pg_catalog.oid AS oid,\n    NULL::pg_catalog.text AS extname,\n    NULL::pg_catalog.oid AS extowner,\n    NULL::pg_catalog.oid AS extnamespace,\n    NULL::pg_catalog.bool AS extrelocatable,\n    NULL::pg_catalog.text AS extversion,\n    NULL::pg_catalog.oid[] AS extconfig,\n    NULL::pg_catalog.text[] AS extcondition\nWHERE false\n    " }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_index" }: GidMappingValue { id: 540, fingerprint: "SELECT\n    mz_indexes.oid AS indexrelid,\n    mz_relations.oid AS indrelid,\n    -- MZ doesn't support creating unique indexes so indisunique is filled with false\n    false::pg_catalog.bool AS indisunique,\n    false::pg_catalog.bool AS indisprimary,\n    -- MZ doesn't support unique indexes so indimmediate is filled with false\n    false::pg_catalog.bool AS indimmediate,\n    -- MZ doesn't support CLUSTER so indisclustered is filled with false\n    false::pg_catalog.bool AS indisclustered,\n    -- MZ never creates invalid indexes so indisvalid is filled with true\n    true::pg_catalog.bool AS indisvalid,\n    -- MZ doesn't support replication so indisreplident is filled with false\n    false::pg_catalog.bool AS indisreplident,\n    -- Return zero if the index attribute is not a simple column reference, column position otherwise\n    pg_catalog.string_agg(coalesce(mz_index_columns.on_position::int8, 0)::pg_catalog.text, ' ' ORDER BY mz_index_columns.index_position::int8)::pg_catalog.int2vector AS indkey,\n    -- MZ doesn't have per-column flags, so returning a 0 for each column in the index\n    pg_catalog.string_agg('0', ' ')::pg_catalog.int2vector AS indoption,\n    -- Index expressions are returned in MZ format\n    CASE pg_catalog.string_agg(mz_index_columns.on_expression, ' ' ORDER BY mz_index_columns.index_position::int8)\n    WHEN NULL THEN NULL\n    ELSE '{' || pg_catalog.string_agg(mz_index_columns.on_expression, '}, {' ORDER BY mz_index_columns.index_position::int8) || '}'\n    END AS indexprs,\n    -- MZ doesn't support indexes with predicates\n    NULL::pg_catalog.text AS indpred\nFROM mz_catalog.mz_indexes\nJOIN mz_catalog.mz_relations ON mz_indexes.on_id = mz_relations.id\nJOIN mz_catalog.mz_index_columns ON mz_index_columns.index_id = mz_indexes.id\nJOIN mz_catalog.mz_schemas ON mz_schemas.id = mz_relations.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = mz_schemas.database_id\nWHERE mz_schemas.database_id IS NULL OR d.name = pg_catalog.current_database()\nGROUP BY mz_indexes.oid, mz_relations.oid" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_indexes" }: GidMappingValue { id: 570, fingerprint: "SELECT\n    current_database() as table_catalog,\n    s.name AS schemaname,\n    r.name AS tablename,\n    i.name AS indexname,\n    NULL::text AS tablespace,\n    -- TODO(jkosh44) Fill in with actual index definition.\n    NULL::text AS indexdef\nFROM mz_catalog.mz_indexes i\nJOIN mz_catalog.mz_relations r ON i.on_id = r.id\nJOIN mz_catalog.mz_schemas s ON s.id = r.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = s.database_id\nWHERE s.database_id IS NULL OR d.name = current_database()" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_inherits" }: GidMappingValue { id: 562, fingerprint: "\nSELECT\n    NULL::pg_catalog.oid AS inhrelid,\n    NULL::pg_catalog.oid AS inhparent,\n    NULL::pg_catalog.int4 AS inhseqno,\n    NULL::pg_catalog.bool AS inhdetachpending\nWHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_language" }: GidMappingValue { id: 568, fingerprint: "SELECT\n        NULL::pg_catalog.oid  AS oid,\n        NULL::pg_catalog.text AS lanname,\n        NULL::pg_catalog.oid  AS lanowner,\n        NULL::pg_catalog.bool AS lanispl,\n        NULL::pg_catalog.bool AS lanpltrusted,\n        NULL::pg_catalog.oid  AS lanplcallfoid,\n        NULL::pg_catalog.oid  AS laninline,\n        NULL::pg_catalog.oid  AS lanvalidator,\n        NULL::pg_catalog.text[] AS lanacl\n    WHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_locks" }: GidMappingValue { id: 555, fingerprint: "\nSELECT\n-- While there exist locks in Materialize, we don't expose them, so all of these fields are NULL.\n    NULL::pg_catalog.text AS locktype,\n    NULL::pg_catalog.oid AS database,\n    NULL::pg_catalog.oid AS relation,\n    NULL::pg_catalog.int4 AS page,\n    NULL::pg_catalog.int2 AS tuple,\n    NULL::pg_catalog.text AS virtualxid,\n    NULL::pg_catalog.text AS transactionid,\n    NULL::pg_catalog.oid AS classid,\n    NULL::pg_catalog.oid AS objid,\n    NULL::pg_catalog.int2 AS objsubid,\n    NULL::pg_catalog.text AS virtualtransaction,\n    NULL::pg_catalog.int4 AS pid,\n    NULL::pg_catalog.text AS mode,\n    NULL::pg_catalog.bool AS granted,\n    NULL::pg_catalog.bool AS fastpath,\n    NULL::pg_catalog.timestamptz AS waitstart\nWHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_matviews" }: GidMappingValue { id: 559, fingerprint: "SELECT\n    s.name AS schemaname,\n    m.name AS matviewname,\n    role_owner.oid AS matviewowner,\n    m.definition AS definition\nFROM mz_catalog.mz_materialized_views m\nLEFT JOIN mz_catalog.mz_schemas s ON s.id = m.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = s.database_id\nJOIN mz_catalog.mz_roles role_owner ON role_owner.id = m.owner_id\nWHERE s.database_id IS NULL OR d.name = current_database()" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_namespace" }: GidMappingValue { id: 536, fingerprint: "SELECT\ns.oid AS oid,\ns.name AS nspname,\nrole_owner.oid AS nspowner,\nNULL::pg_catalog.text[] AS nspacl\nFROM mz_catalog.mz_schemas s\nLEFT JOIN mz_catalog.mz_databases d ON d.id = s.database_id\nJOIN mz_catalog.mz_roles role_owner ON role_owner.id = s.owner_id\nWHERE s.database_id IS NULL OR d.name = pg_catalog.current_database()" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_operator" }: GidMappingValue { id: 545, fingerprint: "SELECT\n    mz_operators.oid,\n    mz_operators.name AS oprname,\n    ret_type.oid AS oprresult,\n    left_type.oid as oprleft,\n    right_type.oid as oprright\nFROM mz_catalog.mz_operators\nJOIN mz_catalog.mz_types AS ret_type ON mz_operators.return_type_id = ret_type.id\nJOIN mz_catalog.mz_types AS left_type ON mz_operators.argument_type_ids[1] = left_type.id\nJOIN mz_catalog.mz_types AS right_type ON mz_operators.argument_type_ids[2] = right_type.id\nWHERE array_length(mz_operators.argument_type_ids, 1) = 2\nUNION SELECT\n    mz_operators.oid,\n    mz_operators.name AS oprname,\n    ret_type.oid AS oprresult,\n    0 as oprleft,\n    right_type.oid as oprright\nFROM mz_catalog.mz_operators\nJOIN mz_catalog.mz_types AS ret_type ON mz_operators.return_type_id = ret_type.id\nJOIN mz_catalog.mz_types AS right_type ON mz_operators.argument_type_ids[1] = right_type.id\nWHERE array_length(mz_operators.argument_type_ids, 1) = 1" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_policy" }: GidMappingValue { id: 561, fingerprint: "\nSELECT\n    NULL::pg_catalog.oid AS oid,\n    NULL::pg_catalog.text AS polname,\n    NULL::pg_catalog.oid AS polrelid,\n    NULL::pg_catalog.\"char\" AS polcmd,\n    NULL::pg_catalog.bool AS polpermissive,\n    NULL::pg_catalog.oid[] AS polroles,\n    NULL::pg_catalog.text AS polqual,\n    NULL::pg_catalog.text AS polwithcheck\nWHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_proc" }: GidMappingValue { id: 544, fingerprint: "SELECT\n    mz_functions.oid,\n    mz_functions.name AS proname,\n    mz_schemas.oid AS pronamespace,\n    role_owner.oid AS proowner,\n    NULL::pg_catalog.text AS proargdefaults,\n    ret_type.oid AS prorettype\nFROM mz_catalog.mz_functions\nJOIN mz_catalog.mz_schemas ON mz_functions.schema_id = mz_schemas.id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = mz_schemas.database_id\nJOIN mz_catalog.mz_types AS ret_type ON mz_functions.return_type_id = ret_type.id\nJOIN mz_catalog.mz_roles role_owner ON role_owner.id = mz_functions.owner_id\nWHERE mz_schemas.database_id IS NULL OR d.name = pg_catalog.current_database()" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_range" }: GidMappingValue { id: 546, fingerprint: "SELECT\n    NULL::pg_catalog.oid AS rngtypid,\n    NULL::pg_catalog.oid AS rngsubtype\nWHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_rewrite" }: GidMappingValue { id: 565, fingerprint: "SELECT\n    -- MZ doesn't support rewrite rules so all of these fields are NULL.\n    NULL::pg_catalog.oid AS oid,\n    NULL::pg_catalog.text AS rulename,\n    NULL::pg_catalog.oid AS ev_class,\n    NULL::pg_catalog.\"char\" AS ev_type,\n    NULL::pg_catalog.\"char\" AS ev_enabled,\n    NULL::pg_catalog.bool AS is_instead,\n    -- NOTE: The ev_qual and ev_action columns are actually type `pg_node_tree` which we don't\n    -- support. CockroachDB uses text as a placeholder, so we'll follow their lead here.\n    NULL::pg_catalog.text AS ev_qual,\n    NULL::pg_catalog.text AS ev_action\nWHERE false\n    " }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_roles" }: GidMappingValue { id: 557, fingerprint: "SELECT\n    r.rolname,\n    r.rolsuper,\n    r.rolinherit,\n    r.rolcreaterole,\n    r.rolcreatedb,\n    r.rolcanlogin,\n    r.rolreplication,\n    r.rolconnlimit,\n    '********'::pg_catalog.text AS rolpassword,\n    r.rolvaliduntil,\n    r.rolbypassrls,\n    --Note: this is NULL because Materialize doesn't support Role-specific config values.\n    NULL::pg_catalog.text[] as rolconfig,\n    r.oid AS oid\nFROM pg_catalog.pg_authid r" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_settings" }: GidMappingValue { id: 549, fingerprint: "SELECT\n    name, setting\nFROM (VALUES\n    ('max_index_keys'::pg_catalog.text, '1000'::pg_catalog.text)\n) AS _ (name, setting)" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_shdescription" }: GidMappingValue { id: 569, fingerprint: "SELECT\n        NULL::pg_catalog.oid AS objoid,\n        NULL::pg_catalog.oid AS classoid,\n        NULL::pg_catalog.text AS description\n    WHERE false" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_tables" }: GidMappingValue { id: 552, fingerprint: "\nSELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    pg_catalog.pg_get_userbyid(c.relowner) AS tableowner\nFROM pg_catalog.pg_class c\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace\nWHERE c.relkind IN ('r', 'p')" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_tablespace" }: GidMappingValue { id: 553, fingerprint: "\n    SELECT oid, spcname, spcowner, spcacl, spcoptions\n    FROM (\n        VALUES (\n            --These are the same defaults CockroachDB uses.\n            0::pg_catalog.oid,\n            'pg_default'::pg_catalog.text,\n            NULL::pg_catalog.oid,\n            NULL::pg_catalog.text[],\n            NULL::pg_catalog.text[]\n        )\n    ) AS _ (oid, spcname, spcowner, spcacl, spcoptions)\n" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_timezone_abbrevs" }: GidMappingValue { id: 571, fingerprint: "SELECT\n    abbreviation AS abbrev,\n    COALESCE(utc_offset, timezone_offset(timezone_name, now()).base_utc_offset + timezone_offset(timezone_name, now()).dst_offset)\n        AS utc_offset,\n    COALESCE(dst, timezone_offset(timezone_name, now()).dst_offset <> INTERVAL '0')\n        AS is_dst\nFROM mz_catalog.mz_timezone_abbreviations" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_timezone_names" }: GidMappingValue { id: 572, fingerprint: "SELECT\n    name,\n    timezone_offset(name, now()).abbrev,\n    timezone_offset(name, now()).base_utc_offset + timezone_offset(name, now()).dst_offset\n        AS utc_offset,\n    timezone_offset(name, now()).dst_offset <> INTERVAL '0'\n        AS is_dst\nFROM mz_catalog.mz_timezone_names" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_trigger" }: GidMappingValue { id: 564, fingerprint: "SELECT\n    -- MZ doesn't support triggers so all of these fields are NULL.\n    NULL::pg_catalog.oid AS oid,\n    NULL::pg_catalog.oid AS tgrelid,\n    NULL::pg_catalog.oid AS tgparentid,\n    NULL::pg_catalog.text AS tgname,\n    NULL::pg_catalog.oid AS tgfoid,\n    NULL::pg_catalog.int2 AS tgtype,\n    NULL::pg_catalog.\"char\" AS tgenabled,\n    NULL::pg_catalog.bool AS tgisinternal,\n    NULL::pg_catalog.oid AS tgconstrrelid,\n    NULL::pg_catalog.oid AS tgconstrindid,\n    NULL::pg_catalog.oid AS tgconstraint,\n    NULL::pg_catalog.bool AS tgdeferrable,\n    NULL::pg_catalog.bool AS tginitdeferred,\n    NULL::pg_catalog.int2 AS tgnargs,\n    NULL::pg_catalog.int2vector AS tgattr,\n    NULL::pg_catalog.bytea AS tgargs,\n    -- NOTE: The tgqual column is actually type `pg_node_tree` which we don't support. CockroachDB\n    -- uses text as a placeholder, so we'll follow their lead here.\n    NULL::pg_catalog.text AS tgqual,\n    NULL::pg_catalog.text AS tgoldtable,\n    NULL::pg_catalog.text AS tgnewtable\nWHERE false\n    " }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_type" }: GidMappingValue { id: 541, fingerprint: "SELECT\n    mz_types.oid,\n    mz_types.name AS typname,\n    mz_schemas.oid AS typnamespace,\n    role_owner.oid AS typowner,\n    NULL::pg_catalog.int2 AS typlen,\n    -- 'a' is used internally to denote an array type, but in postgres they show up\n    -- as 'b'.\n    (CASE mztype WHEN 'a' THEN 'b' ELSE mztype END)::pg_catalog.char AS typtype,\n    (CASE category\n        WHEN 'array' THEN 'A'\n        WHEN 'bit-string' THEN 'V'\n        WHEN 'boolean' THEN 'B'\n        WHEN 'composite' THEN 'C'\n        WHEN 'date-time' THEN 'D'\n        WHEN 'enum' THEN 'E'\n        WHEN 'geometric' THEN 'G'\n        WHEN 'list' THEN 'U' -- List types are user-defined from PostgreSQL's perspective.\n        WHEN 'network-address' THEN 'I'\n        WHEN 'numeric' THEN 'N'\n        WHEN 'pseudo' THEN 'P'\n        WHEN 'string' THEN 'S'\n        WHEN 'timespan' THEN 'T'\n        WHEN 'user-defined' THEN 'U'\n        WHEN 'unknown' THEN 'X'\n    END)::pg_catalog.char AS typcategory,\n    -- In pg only the 'box' type is not ','.\n    ','::pg_catalog.char AS typdelim,\n    0::pg_catalog.oid AS typrelid,\n    coalesce(\n        (\n            SELECT t.oid\n            FROM mz_catalog.mz_array_types a\n            JOIN mz_catalog.mz_types t ON a.element_id = t.id\n            WHERE a.id = mz_types.id\n        ),\n        0\n    ) AS typelem,\n    coalesce(\n        (\n            SELECT\n                t.oid\n            FROM\n                mz_catalog.mz_array_types AS a\n                JOIN mz_catalog.mz_types AS t ON a.id = t.id\n            WHERE\n                a.element_id = mz_types.id\n        ),\n        0\n    )\n        AS typarray,\n    mz_internal.mz_type_pg_metadata.typinput::pg_catalog.regproc AS typinput,\n    COALESCE(mz_internal.mz_type_pg_metadata.typreceive, 0) AS typreceive,\n    false::pg_catalog.bool AS typnotnull,\n    0::pg_catalog.oid AS typbasetype,\n    -1::pg_catalog.int4 AS typtypmod,\n    -- MZ doesn't support COLLATE so typcollation is filled with 0\n    0::pg_catalog.oid AS typcollation,\n    NULL::pg_catalog.text AS typdefault\nFROM\n    mz_catalog.mz_types\n    LEFT JOIN mz_internal.mz_type_pg_metadata ON mz_catalog.mz_types.id = mz_internal.mz_type_pg_metadata.id\n    JOIN mz_catalog.mz_schemas ON mz_schemas.id = mz_types.schema_id\n    JOIN (\n            -- 'a' is not a supported typtype, but we use it to denote an array. It is\n            -- converted to the correct value above.\n            SELECT id, 'a' AS mztype FROM mz_catalog.mz_array_types\n            UNION ALL SELECT id, 'b' FROM mz_catalog.mz_base_types\n            UNION ALL SELECT id, 'l' FROM mz_catalog.mz_list_types\n            UNION ALL SELECT id, 'm' FROM mz_catalog.mz_map_types\n            UNION ALL SELECT id, 'p' FROM mz_catalog.mz_pseudo_types\n        )\n            AS t ON mz_types.id = t.id\n    LEFT JOIN mz_catalog.mz_databases d ON d.id = mz_schemas.database_id\n    JOIN mz_catalog.mz_roles role_owner ON role_owner.id = mz_types.owner_id\n    WHERE mz_schemas.database_id IS NULL OR d.name = pg_catalog.current_database()" }, GidMappingKey { schema_name: "pg_catalog", object_type: View, object_name: "pg_views" }: GidMappingValue { id: 558, fingerprint: "SELECT\n    s.name AS schemaname,\n    v.name AS viewname,\n    role_owner.oid AS viewowner,\n    v.definition AS definition\nFROM mz_catalog.mz_views v\nLEFT JOIN mz_catalog.mz_schemas s ON s.id = v.schema_id\nLEFT JOIN mz_catalog.mz_databases d ON d.id = s.database_id\nJOIN mz_catalog.mz_roles role_owner ON role_owner.id = v.owner_id\nWHERE s.database_id IS NULL OR d.name = current_database()" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_aclitem" }: GidMappingValue { id: 89, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_bool" }: GidMappingValue { id: 7, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_bpchar" }: GidMappingValue { id: 11, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_bytea" }: GidMappingValue { id: 9, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_char" }: GidMappingValue { id: 13, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_date" }: GidMappingValue { id: 15, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_daterange" }: GidMappingValue { id: 79, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_float4" }: GidMappingValue { id: 17, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_float8" }: GidMappingValue { id: 19, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_int2" }: GidMappingValue { id: 45, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_int2vector" }: GidMappingValue { id: 59, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_int4" }: GidMappingValue { id: 21, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_int4range" }: GidMappingValue { id: 75, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_int8" }: GidMappingValue { id: 23, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_int8range" }: GidMappingValue { id: 77, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_interval" }: GidMappingValue { id: 25, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_jsonb" }: GidMappingValue { id: 27, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_name" }: GidMappingValue { id: 31, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_numeric" }: GidMappingValue { id: 33, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_numrange" }: GidMappingValue { id: 81, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_oid" }: GidMappingValue { id: 35, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_record" }: GidMappingValue { id: 37, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_regclass" }: GidMappingValue { id: 39, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_regproc" }: GidMappingValue { id: 41, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_regtype" }: GidMappingValue { id: 43, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_text" }: GidMappingValue { id: 47, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_time" }: GidMappingValue { id: 49, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_timestamp" }: GidMappingValue { id: 51, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_timestamptz" }: GidMappingValue { id: 53, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_tsrange" }: GidMappingValue { id: 83, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_tstzrange" }: GidMappingValue { id: 85, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_uuid" }: GidMappingValue { id: 55, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "_varchar" }: GidMappingValue { id: 57, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "aclitem" }: GidMappingValue { id: 88, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "any" }: GidMappingValue { id: 1, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "anyarray" }: GidMappingValue { id: 2, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "anycompatible" }: GidMappingValue { id: 60, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "anycompatiblearray" }: GidMappingValue { id: 61, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "anycompatiblenonarray" }: GidMappingValue { id: 62, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "anycompatiblerange" }: GidMappingValue { id: 65, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "anyelement" }: GidMappingValue { id: 3, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "anynonarray" }: GidMappingValue { id: 4, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "anyrange" }: GidMappingValue { id: 5, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "bool" }: GidMappingValue { id: 6, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "bpchar" }: GidMappingValue { id: 10, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "bytea" }: GidMappingValue { id: 8, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "char" }: GidMappingValue { id: 12, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "date" }: GidMappingValue { id: 14, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "daterange" }: GidMappingValue { id: 78, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "float4" }: GidMappingValue { id: 16, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "float8" }: GidMappingValue { id: 18, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "int2" }: GidMappingValue { id: 44, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "int2vector" }: GidMappingValue { id: 58, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "int4" }: GidMappingValue { id: 20, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "int4range" }: GidMappingValue { id: 74, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "int8" }: GidMappingValue { id: 22, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "int8range" }: GidMappingValue { id: 76, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "internal" }: GidMappingValue { id: 90, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "interval" }: GidMappingValue { id: 24, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "jsonb" }: GidMappingValue { id: 26, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "name" }: GidMappingValue { id: 30, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "numeric" }: GidMappingValue { id: 32, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "numrange" }: GidMappingValue { id: 80, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "oid" }: GidMappingValue { id: 34, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "record" }: GidMappingValue { id: 36, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "regclass" }: GidMappingValue { id: 38, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "regproc" }: GidMappingValue { id: 40, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "regtype" }: GidMappingValue { id: 42, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "text" }: GidMappingValue { id: 46, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "time" }: GidMappingValue { id: 48, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "timestamp" }: GidMappingValue { id: 50, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "timestamptz" }: GidMappingValue { id: 52, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "tsrange" }: GidMappingValue { id: 82, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "tstzrange" }: GidMappingValue { id: 84, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "uuid" }: GidMappingValue { id: 54, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Type, object_name: "varchar" }: GidMappingValue { id: 56, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "abs" }: GidMappingValue { id: 91, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "aclexplode" }: GidMappingValue { id: 92, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "aclitemin" }: GidMappingValue { id: 93, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "acos" }: GidMappingValue { id: 94, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "acosh" }: GidMappingValue { id: 95, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "age" }: GidMappingValue { id: 96, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "any_in" }: GidMappingValue { id: 97, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anyarray_in" }: GidMappingValue { id: 98, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anyarray_recv" }: GidMappingValue { id: 99, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anycompatible_in" }: GidMappingValue { id: 100, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anycompatiblearray_in" }: GidMappingValue { id: 101, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anycompatiblearray_recv" }: GidMappingValue { id: 102, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anycompatiblenonarray_in" }: GidMappingValue { id: 103, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anycompatiblerange_in" }: GidMappingValue { id: 104, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anyelement_in" }: GidMappingValue { id: 105, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anynonarray_in" }: GidMappingValue { id: 106, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "anyrange_in" }: GidMappingValue { id: 107, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_agg" }: GidMappingValue { id: 108, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_cat" }: GidMappingValue { id: 109, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_fill" }: GidMappingValue { id: 110, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_in" }: GidMappingValue { id: 111, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_length" }: GidMappingValue { id: 112, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_lower" }: GidMappingValue { id: 113, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_position" }: GidMappingValue { id: 114, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_recv" }: GidMappingValue { id: 115, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_remove" }: GidMappingValue { id: 116, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_to_string" }: GidMappingValue { id: 117, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "array_upper" }: GidMappingValue { id: 118, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "ascii" }: GidMappingValue { id: 119, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "asin" }: GidMappingValue { id: 120, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "asinh" }: GidMappingValue { id: 121, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "atan" }: GidMappingValue { id: 122, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "atanh" }: GidMappingValue { id: 123, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "avg" }: GidMappingValue { id: 124, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "bit_length" }: GidMappingValue { id: 125, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "bool_and" }: GidMappingValue { id: 126, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "bool_or" }: GidMappingValue { id: 127, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "boolin" }: GidMappingValue { id: 128, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "boolrecv" }: GidMappingValue { id: 129, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "bpcharin" }: GidMappingValue { id: 130, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "bpcharrecv" }: GidMappingValue { id: 131, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "btrim" }: GidMappingValue { id: 132, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "byteain" }: GidMappingValue { id: 133, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "bytearecv" }: GidMappingValue { id: 134, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "cbrt" }: GidMappingValue { id: 135, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "ceil" }: GidMappingValue { id: 136, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "ceiling" }: GidMappingValue { id: 137, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "char_length" }: GidMappingValue { id: 138, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "charin" }: GidMappingValue { id: 139, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "charrecv" }: GidMappingValue { id: 140, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "chr" }: GidMappingValue { id: 141, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "concat" }: GidMappingValue { id: 142, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "concat_ws" }: GidMappingValue { id: 143, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "convert_from" }: GidMappingValue { id: 144, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "cos" }: GidMappingValue { id: 145, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "cosh" }: GidMappingValue { id: 146, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "cot" }: GidMappingValue { id: 147, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "count" }: GidMappingValue { id: 148, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "current_database" }: GidMappingValue { id: 149, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "current_schema" }: GidMappingValue { id: 150, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "current_schemas" }: GidMappingValue { id: 151, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "current_setting" }: GidMappingValue { id: 152, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "current_timestamp" }: GidMappingValue { id: 153, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "current_user" }: GidMappingValue { id: 154, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "date" }: GidMappingValue { id: 155, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "date_bin" }: GidMappingValue { id: 156, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "date_bin_hopping" }: GidMappingValue { id: 157, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "date_in" }: GidMappingValue { id: 158, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "date_part" }: GidMappingValue { id: 159, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "date_recv" }: GidMappingValue { id: 160, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "date_trunc" }: GidMappingValue { id: 161, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "daterange" }: GidMappingValue { id: 162, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "decode" }: GidMappingValue { id: 163, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "degrees" }: GidMappingValue { id: 164, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "dense_rank" }: GidMappingValue { id: 165, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "digest" }: GidMappingValue { id: 166, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "encode" }: GidMappingValue { id: 167, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "exp" }: GidMappingValue { id: 168, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "extract" }: GidMappingValue { id: 169, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "first_value" }: GidMappingValue { id: 170, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "float4in" }: GidMappingValue { id: 171, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "float4recv" }: GidMappingValue { id: 172, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "float8in" }: GidMappingValue { id: 173, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "float8recv" }: GidMappingValue { id: 174, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "floor" }: GidMappingValue { id: 175, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "format_type" }: GidMappingValue { id: 176, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "generate_series" }: GidMappingValue { id: 177, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "generate_subscripts" }: GidMappingValue { id: 178, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "get_byte" }: GidMappingValue { id: 179, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "has_database_privilege" }: GidMappingValue { id: 180, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "has_schema_privilege" }: GidMappingValue { id: 181, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "has_table_privilege" }: GidMappingValue { id: 182, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "hmac" }: GidMappingValue { id: 183, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int2in" }: GidMappingValue { id: 184, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int2recv" }: GidMappingValue { id: 185, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int2vectorin" }: GidMappingValue { id: 186, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int2vectorrecv" }: GidMappingValue { id: 187, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int4in" }: GidMappingValue { id: 188, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int4range" }: GidMappingValue { id: 189, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int4recv" }: GidMappingValue { id: 190, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int8in" }: GidMappingValue { id: 191, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int8range" }: GidMappingValue { id: 192, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "int8recv" }: GidMappingValue { id: 193, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "internal_in" }: GidMappingValue { id: 194, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "interval_in" }: GidMappingValue { id: 195, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "interval_recv" }: GidMappingValue { id: 196, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "isempty" }: GidMappingValue { id: 197, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_agg" }: GidMappingValue { id: 198, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_array_elements" }: GidMappingValue { id: 199, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_array_elements_text" }: GidMappingValue { id: 200, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_array_length" }: GidMappingValue { id: 201, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_build_array" }: GidMappingValue { id: 202, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_build_object" }: GidMappingValue { id: 203, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_each" }: GidMappingValue { id: 204, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_each_text" }: GidMappingValue { id: 205, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_in" }: GidMappingValue { id: 206, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_object_agg" }: GidMappingValue { id: 207, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_object_keys" }: GidMappingValue { id: 208, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_pretty" }: GidMappingValue { id: 209, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_recv" }: GidMappingValue { id: 210, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_strip_nulls" }: GidMappingValue { id: 211, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "jsonb_typeof" }: GidMappingValue { id: 212, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "justify_days" }: GidMappingValue { id: 213, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "justify_hours" }: GidMappingValue { id: 214, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "justify_interval" }: GidMappingValue { id: 215, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "lag" }: GidMappingValue { id: 216, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "last_value" }: GidMappingValue { id: 217, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "lead" }: GidMappingValue { id: 218, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "left" }: GidMappingValue { id: 219, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "length" }: GidMappingValue { id: 220, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "like_escape" }: GidMappingValue { id: 221, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "ln" }: GidMappingValue { id: 222, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "log" }: GidMappingValue { id: 223, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "log10" }: GidMappingValue { id: 224, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "lower" }: GidMappingValue { id: 225, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "lower_inc" }: GidMappingValue { id: 226, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "lower_inf" }: GidMappingValue { id: 227, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "lpad" }: GidMappingValue { id: 228, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "ltrim" }: GidMappingValue { id: 229, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "make_timestamp" }: GidMappingValue { id: 230, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "makeaclitem" }: GidMappingValue { id: 231, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "max" }: GidMappingValue { id: 232, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "md5" }: GidMappingValue { id: 233, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "min" }: GidMappingValue { id: 234, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "mod" }: GidMappingValue { id: 235, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "mz_row_size" }: GidMappingValue { id: 236, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "namein" }: GidMappingValue { id: 237, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "namerecv" }: GidMappingValue { id: 238, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "now" }: GidMappingValue { id: 239, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "numeric_in" }: GidMappingValue { id: 240, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "numeric_recv" }: GidMappingValue { id: 241, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "numrange" }: GidMappingValue { id: 242, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "obj_description" }: GidMappingValue { id: 243, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "octet_length" }: GidMappingValue { id: 244, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "oidin" }: GidMappingValue { id: 245, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "oidrecv" }: GidMappingValue { id: 246, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "parse_ident" }: GidMappingValue { id: 247, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_backend_pid" }: GidMappingValue { id: 248, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_cancel_backend" }: GidMappingValue { id: 249, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_column_size" }: GidMappingValue { id: 250, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_encoding_to_char" }: GidMappingValue { id: 251, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_function_is_visible" }: GidMappingValue { id: 252, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_get_constraintdef" }: GidMappingValue { id: 253, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_get_expr" }: GidMappingValue { id: 254, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_get_indexdef" }: GidMappingValue { id: 255, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_get_ruledef" }: GidMappingValue { id: 256, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_get_userbyid" }: GidMappingValue { id: 257, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_get_viewdef" }: GidMappingValue { id: 258, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_has_role" }: GidMappingValue { id: 259, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_is_in_recovery" }: GidMappingValue { id: 260, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_postmaster_start_time" }: GidMappingValue { id: 261, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_relation_size" }: GidMappingValue { id: 262, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_stat_get_numscans" }: GidMappingValue { id: 263, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_table_is_visible" }: GidMappingValue { id: 264, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_tablespace_location" }: GidMappingValue { id: 265, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_type_is_visible" }: GidMappingValue { id: 266, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pg_typeof" }: GidMappingValue { id: 267, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "position" }: GidMappingValue { id: 268, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "pow" }: GidMappingValue { id: 269, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "power" }: GidMappingValue { id: 270, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "quote_ident" }: GidMappingValue { id: 271, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "radians" }: GidMappingValue { id: 272, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "range_in" }: GidMappingValue { id: 273, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "range_recv" }: GidMappingValue { id: 274, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "rank" }: GidMappingValue { id: 275, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "record_in" }: GidMappingValue { id: 276, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "record_recv" }: GidMappingValue { id: 277, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regclassin" }: GidMappingValue { id: 278, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regclassrecv" }: GidMappingValue { id: 279, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regexp_match" }: GidMappingValue { id: 280, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regexp_replace" }: GidMappingValue { id: 281, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regexp_split_to_array" }: GidMappingValue { id: 282, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regexp_split_to_table" }: GidMappingValue { id: 283, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regprocin" }: GidMappingValue { id: 284, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regprocrecv" }: GidMappingValue { id: 285, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regtypein" }: GidMappingValue { id: 286, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "regtyperecv" }: GidMappingValue { id: 287, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "repeat" }: GidMappingValue { id: 288, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "replace" }: GidMappingValue { id: 289, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "right" }: GidMappingValue { id: 290, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "round" }: GidMappingValue { id: 291, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "row_number" }: GidMappingValue { id: 292, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "rtrim" }: GidMappingValue { id: 293, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "session_user" }: GidMappingValue { id: 294, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "sha224" }: GidMappingValue { id: 295, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "sha256" }: GidMappingValue { id: 296, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "sha384" }: GidMappingValue { id: 297, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "sha512" }: GidMappingValue { id: 298, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "sin" }: GidMappingValue { id: 299, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "sinh" }: GidMappingValue { id: 300, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "split_part" }: GidMappingValue { id: 301, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "sqrt" }: GidMappingValue { id: 302, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "stddev" }: GidMappingValue { id: 303, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "stddev_pop" }: GidMappingValue { id: 304, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "stddev_samp" }: GidMappingValue { id: 305, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "string_agg" }: GidMappingValue { id: 306, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "substr" }: GidMappingValue { id: 307, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "substring" }: GidMappingValue { id: 308, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "sum" }: GidMappingValue { id: 309, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "tan" }: GidMappingValue { id: 310, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "tanh" }: GidMappingValue { id: 311, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "textin" }: GidMappingValue { id: 312, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "textrecv" }: GidMappingValue { id: 313, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "time_in" }: GidMappingValue { id: 314, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "time_recv" }: GidMappingValue { id: 315, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "timestamp_in" }: GidMappingValue { id: 316, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "timestamp_recv" }: GidMappingValue { id: 317, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "timestamptz_in" }: GidMappingValue { id: 318, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "timestamptz_recv" }: GidMappingValue { id: 319, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "timezone" }: GidMappingValue { id: 320, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "to_char" }: GidMappingValue { id: 321, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "to_jsonb" }: GidMappingValue { id: 322, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "to_timestamp" }: GidMappingValue { id: 323, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "translate" }: GidMappingValue { id: 324, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "trunc" }: GidMappingValue { id: 325, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "tsrange" }: GidMappingValue { id: 326, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "tstzrange" }: GidMappingValue { id: 327, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "upper" }: GidMappingValue { id: 328, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "upper_inc" }: GidMappingValue { id: 329, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "upper_inf" }: GidMappingValue { id: 330, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "uuid_generate_v5" }: GidMappingValue { id: 331, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "uuid_in" }: GidMappingValue { id: 332, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "uuid_recv" }: GidMappingValue { id: 333, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "var_pop" }: GidMappingValue { id: 334, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "var_samp" }: GidMappingValue { id: 335, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "varcharin" }: GidMappingValue { id: 336, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "varcharrecv" }: GidMappingValue { id: 337, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "variance" }: GidMappingValue { id: 338, fingerprint: "" }, GidMappingKey { schema_name: "pg_catalog", object_type: Func, object_name: "version" }: GidMappingValue { id: 339, fingerprint: "" }}, system_configurations: {ServerConfigurationKey { name: "enable_aws_connection" }: ServerConfigurationValue { value: "on" }, ServerConfigurationKey { name: "enable_connection_validation_syntax" }: ServerConfigurationValue { value: "on" }, ServerConfigurationKey { name: "enable_create_source_denylist_with_options" }: ServerConfigurationValue { value: "on" }, ServerConfigurationKey { name: "enable_index_options" }: ServerConfigurationValue { value: "on" }, ServerConfigurationKey { name: "enable_logical_compaction_window" }: ServerConfigurationValue { value: "on" }, ServerConfigurationKey { name: "enable_mz_notices" }: ServerConfigurationValue { value: "on" }, ServerConfigurationKey { name: "enable_rbac_checks" }: ServerConfigurationValue { value: "on" }, ServerConfigurationKey { name: "enable_specialized_arrangements" }: ServerConfigurationValue { value: "on" }, ServerConfigurationKey { name: "enable_table_keys" }: ServerConfigurationValue { value: "on" }, ServerConfigurationKey { name: "max_clusters" }: ServerConfigurationValue { value: "1000" }, ServerConfigurationKey { name: "max_materialized_views" }: ServerConfigurationValue { value: "1000" }, ServerConfigurationKey { name: "max_objects_per_schema" }: ServerConfigurationValue { value: "1000" }, ServerConfigurationKey { name: "max_secrets" }: ServerConfigurationValue { value: "1000" }, ServerConfigurationKey { name: "max_sinks" }: ServerConfigurationValue { value: "1000" }, ServerConfigurationKey { name: "max_sources" }: ServerConfigurationValue { value: "1000" }, ServerConfigurationKey { name: "max_tables" }: ServerConfigurationValue { value: "1000" }, ServerConfigurationKey { name: "statement_logging_max_sample_rate" }: ServerConfigurationValue { value: "1.0" }}, default_privileges: {DefaultPrivilegesKey { role_id: Some(RoleId { value: Some(User(1)) }), database_id: Some(DatabaseId { value: Some(User(2)) }), schema_id: Some(SchemaId { value: Some(User(8)) }), object_type: Table, grantee: Some(RoleId { value: Some(User(2)) }) }: DefaultPrivilegesValue { privileges: Some(AclMode { bitflags: 15 }) }, DefaultPrivilegesKey { role_id: Some(RoleId { value: Some(User(1)) }), database_id: Some(DatabaseId { value: Some(User(2)) }), schema_id: Some(SchemaId { value: Some(User(8)) }), object_type: Table, grantee: Some(RoleId { value: Some(User(9)) }) }: DefaultPrivilegesValue { privileges: Some(AclMode { bitflags: 15 }) }, DefaultPrivilegesKey { role_id: Some(RoleId { value: Some(Public(Empty)) }), database_id: None, schema_id: None, object_type: Type, grantee: Some(RoleId { value: Some(Public(Empty)) }) }: DefaultPrivilegesValue { privileges: Some(AclMode { bitflags: 256 }) }, DefaultPrivilegesKey { role_id: Some(RoleId { value: Some(Public(Empty)) }), database_id: None, schema_id: None, object_type: Cluster, grantee: Some(RoleId { value: Some(System(2)) }) }: DefaultPrivilegesValue { privileges: Some(AclMode { bitflags: 256 }) }, DefaultPrivilegesKey { role_id: Some(RoleId { value: Some(Public(Empty)) }), database_id: None, schema_id: None, object_type: Database, grantee: Some(RoleId { value: Some(System(2)) }) }: DefaultPrivilegesValue { privileges: Some(AclMode { bitflags: 256 }) }, DefaultPrivilegesKey { role_id: Some(RoleId { value: Some(Public(Empty)) }), database_id: None, schema_id: None, object_type: Schema, grantee: Some(RoleId { value: Some(System(2)) }) }: DefaultPrivilegesValue { privileges: Some(AclMode { bitflags: 256 }) }}, system_privileges: {SystemPrivilegesKey { grantee: Some(RoleId { value: Some(System(1)) }), grantor: Some(RoleId { value: Some(System(1)) }) }: SystemPrivilegesValue { acl_mode: Some(AclMode { bitflags: 3758096384 }) }, SystemPrivilegesKey { grantee: Some(RoleId { value: Some(User(1)) }), grantor: Some(RoleId { value: Some(System(1)) }) }: SystemPrivilegesValue { acl_mode: Some(AclMode { bitflags: 3758096384 }) }, SystemPrivilegesKey { grantee: Some(RoleId { value: Some(User(2)) }), grantor: Some(RoleId { value: Some(System(1)) }) }: SystemPrivilegesValue { acl_mode: Some(AclMode { bitflags: 1610612736 }) }, SystemPrivilegesKey { grantee: Some(RoleId { value: Some(User(6)) }), grantor: Some(RoleId { value: Some(System(1)) }) }: SystemPrivilegesValue { acl_mode: Some(AclMode { bitflags: 1610612736 }) }, SystemPrivilegesKey { grantee: Some(RoleId { value: Some(User(9)) }), grantor: Some(RoleId { value: Some(System(1)) }) }: SystemPrivilegesValue { acl_mode: Some(AclMode { bitflags: 1610612736 }) }, SystemPrivilegesKey { grantee: Some(RoleId { value: Some(User(11)) }), grantor: Some(RoleId { value: Some(System(1)) }) }: SystemPrivilegesValue { acl_mode: Some(AclMode { bitflags: 1610612736 }) }, SystemPrivilegesKey { grantee: Some(RoleId { value: Some(User(13)) }), grantor: Some(RoleId { value: Some(System(1)) }) }: SystemPrivilegesValue { acl_mode: Some(AclMode { bitflags: 1610612736 }) }, SystemPrivilegesKey { grantee: Some(RoleId { value: Some(User(15)) }), grantor: Some(RoleId { value: Some(System(1)) }) }: SystemPrivilegesValue { acl_mode: Some(AclMode { bitflags: 1610612736 }) }} }, audit_logs: Open([(AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 11, event_type: Create, object_type: Cluster, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(IdNameV1(IdNameV1 { id: "u1", name: "quickstart" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1, event_type: Create, object_type: Role, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(IdNameV1(IdNameV1 { id: "u1", name: "materialize" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 6, event_type: Create, object_type: Database, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(IdNameV1(IdNameV1 { id: "u1", name: "materialize" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 178, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217398431 }), details: Some(IdNameV1(IdNameV1 { id: "u3", name: "--" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 230, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217421839 }), details: Some(IdNameV1(IdNameV1 { id: "u4", name: "role_1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 231, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217422011 }), details: Some(IdNameV1(IdNameV1 { id: "u5", name: "role_2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 515, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217551840 }), details: Some(IdNameV1(IdNameV1 { id: "u8", name: "drop_role1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 413, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217498560 }), details: Some(IdNameV1(IdNameV1 { id: "u6", name: "owner_db2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 28, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217318166 }), details: Some(IdNameV1(IdNameV1 { id: "u2", name: "defpriv_db" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 828, event_type: Drop, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217902269 }), details: Some(IdNameV1(IdNameV1 { id: "u8", name: "drop_role1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 393, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217492444 }), details: Some(IdNameV1(IdNameV1 { id: "u5", name: "owner_db1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 754, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217846198 }), details: Some(IdNameV1(IdNameV1 { id: "u9", name: "owner_db3" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 389, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217491408 }), details: Some(IdNameV1(IdNameV1 { id: "u7", name: "other_owner" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 829, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217902585 }), details: Some(IdNameV1(IdNameV1 { id: "u12", name: "drop_role2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 974, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218217110 }), details: Some(IdNameV1(IdNameV1 { id: "u14", name: "create_role2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 765, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217849848 }), details: Some(IdNameV1(IdNameV1 { id: "u10", name: "owner_db4" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1003, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218252630 }), details: Some(IdNameV1(IdNameV1 { id: "u13", name: "owner_db5" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1014, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218256880 }), details: Some(IdNameV1(IdNameV1 { id: "u14", name: "owner_db6" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 175, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217397781 }), details: Some(IdNameV1(IdNameV1 { id: "u24", name: "identifiers" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1070, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218277590 }), details: Some(IdNameV1(IdNameV1 { id: "u15", name: "owner_role_03" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1104, event_type: Drop, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218325924 }), details: Some(IdNameV1(IdNameV1 { id: "u12", name: "drop_role2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 31, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217318582 }), details: Some(IdNameV1(IdNameV1 { id: "u2", name: "defpriv_role1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 232, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217422214 }), details: Some(IdNameV1(IdNameV1 { id: "u4", name: "privilege_db1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 387, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217490907 }), details: Some(IdNameV1(IdNameV1 { id: "u6", name: "owner_role_01" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 640, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217774295 }), details: Some(IdNameV1(IdNameV1 { id: "u7", name: "to_be_dropped" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 935, event_type: Drop, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218191101 }), details: Some(IdNameV1(IdNameV1 { id: "u7", name: "to_be_dropped" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 670, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217794391 }), details: Some(IdNameV1(IdNameV1 { id: "u8", name: "privilege_db2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 551, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217685287 }), details: Some(IdNameV1(IdNameV1 { id: "u9", name: "defpriv_role2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 699, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217803072 }), details: Some(IdNameV1(IdNameV1 { id: "u10", name: "create_role1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 809, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217879174 }), details: Some(IdNameV1(IdNameV1 { id: "u79", name: "drop_replica" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1038, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218265527 }), details: Some(IdNameV1(IdNameV1 { id: "u15", name: "owner_db7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1049, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218269828 }), details: Some(IdNameV1(IdNameV1 { id: "u16", name: "owner_db8" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 786, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217856332 }), details: Some(IdNameV1(IdNameV1 { id: "u11", name: "owner_role_02" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 954, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218209493 }), details: Some(IdNameV1(IdNameV1 { id: "u12", name: "privilege_db3" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 862, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218094727 }), details: Some(IdNameV1(IdNameV1 { id: "u13", name: "defpriv_role3" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 280, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217434306 }), details: Some(IdNameV1(IdNameV1 { id: "u32", name: "kafka_formats" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 296, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217439536 }), details: Some(IdNameV1(IdNameV1 { id: "u33", name: "swap_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 298, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217440219 }), details: Some(IdNameV1(IdNameV1 { id: "u34", name: "swap_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 300, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217440889 }), details: Some(IdNameV1(IdNameV1 { id: "u35", name: "swap_cluster3" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 302, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217441569 }), details: Some(IdNameV1(IdNameV1 { id: "u36", name: "swap_cluster4" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 583, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217721132 }), details: Some(IdNameV1(IdNameV1 { id: "u69", name: "drop_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 594, event_type: Drop, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217724821 }), details: Some(IdNameV1(IdNameV1 { id: "u69", name: "drop_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 585, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217722279 }), details: Some(IdNameV1(IdNameV1 { id: "u70", name: "drop_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 894, event_type: Drop, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218128861 }), details: Some(IdNameV1(IdNameV1 { id: "u70", name: "drop_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 720, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217822130 }), details: Some(IdNameV1(IdNameV1 { id: "u75", name: "rename_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 843, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217911716 }), details: Some(IdNameV1(IdNameV1 { id: "u11", name: "to_be_created1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 651, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217781682 }), details: Some(IdNameV1(IdNameV1 { id: "u74", name: "create_replica" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 747, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217839735 }), details: Some(IdNameV1(IdNameV1 { id: "u77", name: "rename_replica" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 204, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217411359 }), details: Some(IdNameV1(IdNameV1 { id: "u27", name: "webhook_cluster" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 722, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217823393 }), details: Some(IdNameV1(IdNameV1 { id: "u76", name: "rename_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 790, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217860727 }), details: Some(IdNameV1(IdNameV1 { id: "u78", name: "create_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1118, event_type: Create, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218337342 }), details: Some(IdNameV1(IdNameV1 { id: "u17", name: "to_be_created2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 411, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217497734 }), details: Some(IdNameV1(IdNameV1 { id: "u51", name: "owner_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 431, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217504137 }), details: Some(IdNameV1(IdNameV1 { id: "u54", name: "owner_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1074, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218282517 }), details: Some(IdNameV1(IdNameV1 { id: "u81", name: "create_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 250, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217426271 }), details: Some(IdNameV1(IdNameV1 { id: "u31", name: "privilege_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 147, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217382285 }), details: Some(IdNameV1(IdNameV1 { id: "u19", name: "replica_annotations" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 621, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217762340 }), details: Some(IdNameV1(IdNameV1 { id: "u72", name: "drop_managed_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 624, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217763950 }), details: Some(IdNameV1(IdNameV1 { id: "u73", name: "drop_managed_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 9, event_type: Create, object_type: Schema, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(SchemaV2(SchemaV2 { id: "3", name: "public", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 635, event_type: Drop, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217767301 }), details: Some(IdNameV1(IdNameV1 { id: "u72", name: "drop_managed_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 927, event_type: Drop, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218183028 }), details: Some(IdNameV1(IdNameV1 { id: "u73", name: "drop_managed_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 68, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217338572 }), details: Some(IdNameV1(IdNameV1 { id: "u8", name: "materialize_public_ssh1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 333, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217459643 }), details: Some(IdNameV1(IdNameV1 { id: "u41", name: "single_replica_cluster" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 597, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217728542 }), details: Some(IdNameV1(IdNameV1 { id: "u71", name: "create_managed_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 897, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218132781 }), details: Some(IdNameV1(IdNameV1 { id: "u80", name: "create_managed_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 12, event_type: Grant, object_type: Cluster, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Cu1", grantee_id: "p", grantor_id: "s1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 7, event_type: Grant, object_type: Database, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du1", grantee_id: "p", grantor_id: "s1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 137, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217378403 }), details: Some(IdNameV1(IdNameV1 { id: "u17", name: "shared_cluster_compute_first" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 139, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217378856 }), details: Some(IdNameV1(IdNameV1 { id: "u18", name: "shared_cluster_storage_first" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 13, event_type: Grant, object_type: Cluster, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Cu1", grantee_id: "u1", grantor_id: "s1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 8, event_type: Grant, object_type: Database, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du1", grantee_id: "u1", grantor_id: "s1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 473, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217524549 }), details: Some(IdNameV1(IdNameV1 { id: "u57", name: "materialize_public_sink_sink1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 469, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217522417 }), details: Some(IdNameV1(IdNameV1 { id: "u56", name: "materialize_public_sink_source" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 535, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217562511 }), details: Some(IdNameV1(IdNameV1 { id: "u65", name: "materialize_public_kafka_ssl_1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 89, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217348880 }), details: Some(IdNameV1(IdNameV1 { id: "u11", name: "materialize_public_upsert_insert" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 46, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217328089 }), details: Some(IdNameV1(IdNameV1 { id: "u5", name: "materialize_public_upsert_delete" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 56, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217332044 }), details: Some(IdNameV1(IdNameV1 { id: "u6", name: "materialize_public_comment_sink1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 115, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217364481 }), details: Some(IdNameV1(IdNameV1 { id: "u14", name: "materialize_public_range_source" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 348, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217464952 }), details: Some(IdNameV1(IdNameV1 { id: "u42", name: "materialize_public_mz_source_ss" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 383, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217488739 }), details: Some(IdNameV1(IdNameV1 { id: "u48", name: "materialize_public_decode_error" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 547, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217567624 }), details: Some(IdNameV1(IdNameV1 { id: "u68", name: "materialize_public_kafka_sasl_1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 10, event_type: Grant, object_type: Schema, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u3", grantee_id: "u1", grantor_id: "s1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 408, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217496497 }), details: Some(IdNameV1(IdNameV1 { id: "u50", name: "materialize_public_owner_sink1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 428, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217502803 }), details: Some(IdNameV1(IdNameV1 { id: "u53", name: "materialize_public_owner_sink2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 62, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217335546 }), details: Some(IdNameV1(IdNameV1 { id: "u7", name: "materialize_public_rename_source1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 318, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217448925 }), details: Some(IdNameV1(IdNameV1 { id: "u38", name: "materialize_public_upsert_update" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 425, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217501310 }), details: Some(IdNameV1(IdNameV1 { id: "u52", name: "materialize_public_owner_source2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 24, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217316750 }), details: Some(IdNameV1(IdNameV1 { id: "u2", name: "materialize_public_upsert_many_rows" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 15, event_type: Grant, object_type: System, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "SYSTEM", grantee_id: "s1", grantor_id: "s1", privileges: "RBN" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 16, event_type: Grant, object_type: System, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "SYSTEM", grantee_id: "u1", grantor_id: "s1", privileges: "RBN" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 357, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217470834 }), details: Some(IdNameV1(IdNameV1 { id: "u43", name: "materialize_public_mz_source_ssh1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 405, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217495063 }), details: Some(IdNameV1(IdNameV1 { id: "u49", name: "materialize_public_owner_source1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 247, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217425333 }), details: Some(IdNameV1(IdNameV1 { id: "u30", name: "materialize_public_privilege_sink1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 378, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217485037 }), details: Some(IdNameV1(IdNameV1 { id: "u47", name: "materialize_public_sink_sink_null1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 478, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217528126 }), details: Some(IdNameV1(IdNameV1 { id: "u58", name: "materialize_public_upsert_wide_key" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 369, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217476605 }), details: Some(IdNameV1(IdNameV1 { id: "u45", name: "materialize_public_debezium_source1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 374, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217483263 }), details: Some(IdNameV1(IdNameV1 { id: "u46", name: "materialize_public_sink_source_null" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 244, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217424258 }), details: Some(IdNameV1(IdNameV1 { id: "u29", name: "materialize_public_privilege_source1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 510, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217548643 }), details: Some(IdNameV1(IdNameV1 { id: "u63", name: "materialize_public_upsert_wide_value" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 531, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217560923 }), details: Some(IdNameV1(IdNameV1 { id: "u64", name: "materialize_public_kafka_plaintext_1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 433, event_type: Alter, object_type: Database, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217504850 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Du6", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 104, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217358715 }), details: Some(IdNameV1(IdNameV1 { id: "u13", name: "materialize_public_upsert_update_grow" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 133, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217376645 }), details: Some(IdNameV1(IdNameV1 { id: "u16", name: "materialize_public_alter_index_source" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 450, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217507440 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Cu54", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 81, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217344961 }), details: Some(IdNameV1(IdNameV1 { id: "u9", name: "materialize_public_sink_source_comments" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 85, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217346533 }), details: Some(IdNameV1(IdNameV1 { id: "u10", name: "materialize_public_sink_sink_comments1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 313, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217445968 }), details: Some(IdNameV1(IdNameV1 { id: "u37", name: "materialize_public_upsert_many_updates" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 495, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217538697 }), details: Some(IdNameV1(IdNameV1 { id: "u60", name: "materialize_public_upsert_enrich_value" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 932, event_type: Alter, object_type: Database, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218190823 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Du7", old_owner_id: "u1", new_owner_id: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 779, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217854390 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu448", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 5, event_type: Grant, object_type: Type, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(AlterDefaultPrivilegeV1(AlterDefaultPrivilegeV1 { role_id: "p", database_id: None, schema_id: None, grantee_id: "p", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 461, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217517384 }), details: Some(IdNameV1(IdNameV1 { id: "u55", name: "materialize_public_upsert_update_shrink" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 873, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218107568 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu29", old_owner_id: "u1", new_owner_id: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 872, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218107568 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu30", old_owner_id: "u1", new_owner_id: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 918, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218178619 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu85", old_owner_id: "u1", new_owner_id: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 917, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218178325 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu86", old_owner_id: "u1", new_owner_id: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 445, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217506935 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Cu52", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 449, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217507191 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Cu53", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 776, event_type: Alter, object_type: Database, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217853493 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Du10", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 2, event_type: Grant, object_type: Cluster, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(AlterDefaultPrivilegeV1(AlterDefaultPrivilegeV1 { role_id: "p", database_id: None, schema_id: None, grantee_id: "s2", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 3, event_type: Grant, object_type: Database, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(AlterDefaultPrivilegeV1(AlterDefaultPrivilegeV1 { role_id: "p", database_id: None, schema_id: None, grantee_id: "s2", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 4, event_type: Grant, object_type: Schema, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(AlterDefaultPrivilegeV1(AlterDefaultPrivilegeV1 { role_id: "p", database_id: None, schema_id: None, grantee_id: "s2", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 152, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217383457 }), details: Some(IdNameV1(IdNameV1 { id: "u20", name: "materialize_public_source_errors_sourcea" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 157, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217384739 }), details: Some(IdNameV1(IdNameV1 { id: "u21", name: "materialize_public_source_errors_sourceb" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 165, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217391263 }), details: Some(IdNameV1(IdNameV1 { id: "u22", name: "materialize_public_monotonic_top1_source" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 172, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217396083 }), details: Some(IdNameV1(IdNameV1 { id: "u23", name: "materialize_public_monotonic_topk_source" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 539, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217564248 }), details: Some(IdNameV1(IdNameV1 { id: "u66", name: "materialize_public_kafka_scram_sha_512_1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 990, event_type: Alter, object_type: Table, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218239308 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu209", old_owner_id: "u1", new_owner_id: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1105, event_type: Alter, object_type: Table, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218326800 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu300", old_owner_id: "u1", new_owner_id: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1060, event_type: Alter, object_type: Database, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218274151 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Du16", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 435, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217505312 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu244", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 436, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217505544 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu245", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 437, event_type: Alter, object_type: Type, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217505763 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu246", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 438, event_type: Alter, object_type: Table, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217505991 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu247", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 439, event_type: Alter, object_type: Index, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217505991 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu248", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 440, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217506237 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu249", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 441, event_type: Alter, object_type: MaterializedView, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217506479 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu250", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 442, event_type: Alter, object_type: Secret, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217506701 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu251", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 446, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217506935 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu252", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 443, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217506935 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu253", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 447, event_type: Alter, object_type: Sink, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217507191 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu254", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 778, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217854031 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu447", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 780, event_type: Alter, object_type: Type, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217854679 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu449", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 781, event_type: Alter, object_type: Table, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217854958 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu450", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 782, event_type: Alter, object_type: Index, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217854958 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu451", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 783, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217855338 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu452", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 784, event_type: Alter, object_type: MaterializedView, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217855608 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu453", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 785, event_type: Alter, object_type: Secret, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217855872 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu454", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1030, event_type: Alter, object_type: Table, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218262773 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu597", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1032, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218263310 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu599", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 434, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217505080 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Su1.u24", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 41, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217322478 }), details: Some(IdNameV1(IdNameV1 { id: "u4", name: "materialize_public_alter_connection_sink_1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 364, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217473196 }), details: Some(IdNameV1(IdNameV1 { id: "u44", name: "materialize_public_postgres_mz_now_source" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 179, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217398431 }), details: Some(SchemaV2(SchemaV2 { id: "u14", name: "public", database_name: Some(StringWrapper { inner: "--" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1025, event_type: Alter, object_type: Database, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218260994 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Du14", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 199, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217407647 }), details: Some(IdNameV1(IdNameV1 { id: "u26", name: "materialize_public_alter_connection_sink_2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 330, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217455748 }), details: Some(IdNameV1(IdNameV1 { id: "u40", name: "materialize_public_decode_error_upsert_key" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 488, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217534293 }), details: Some(IdNameV1(IdNameV1 { id: "u59", name: "materialize_public_upsert_many_key_columns" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 506, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217544864 }), details: Some(IdNameV1(IdNameV1 { id: "u62", name: "materialize_public_alter_connection_sink_3" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1027, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218261696 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu594", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1028, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218261995 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu595", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1029, event_type: Alter, object_type: Type, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218262488 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu596", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1031, event_type: Alter, object_type: Index, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218262773 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu598", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1033, event_type: Alter, object_type: MaterializedView, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218263599 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu600", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1034, event_type: Alter, object_type: Secret, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218263891 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu601", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 36, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217320810 }), details: Some(IdNameV1(IdNameV1 { id: "u3", name: "materialize_public_alter_connection_source_1a" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 777, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217853769 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Su1.u34", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1026, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218261440 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Su1.u42", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 451, event_type: Alter, object_type: ClusterReplica, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217507440 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "CRu54.u53", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1062, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218274815 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu610", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1063, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218275147 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu611", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1064, event_type: Alter, object_type: Type, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218275592 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu612", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1065, event_type: Alter, object_type: Table, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218275874 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu613", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1066, event_type: Alter, object_type: Index, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218275874 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu614", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1067, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218276382 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu615", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1068, event_type: Alter, object_type: MaterializedView, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218276664 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu616", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1069, event_type: Alter, object_type: Secret, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218276969 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Iu617", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1061, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218274570 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "Su1.u46", old_owner_id: "u11", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 98, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217353183 }), details: Some(IdNameV1(IdNameV1 { id: "u12", name: "materialize_public_decode_error_upsert_value" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 210, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217413923 }), details: Some(IdNameV1(IdNameV1 { id: "u28", name: "materialize_public_upsert_many_value_columns" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 543, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217565876 }), details: Some(IdNameV1(IdNameV1 { id: "u67", name: "materialize_public_kafka_ssl_scram_sha_512_1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 444, event_type: Alter, object_type: ClusterReplica, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217506935 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "CRu52.u51", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 448, event_type: Alter, object_type: ClusterReplica, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217507191 }), details: Some(UpdateOwnerV1(UpdateOwnerV1 { object_id: "CRu53.u52", old_owner_id: "u6", new_owner_id: "u7" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 194, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217405516 }), details: Some(IdNameV1(IdNameV1 { id: "u25", name: "materialize_public_alter_connection_source_2a" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 323, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217451816 }), details: Some(IdNameV1(IdNameV1 { id: "u39", name: "materialize_public_multiple_partitions_source" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 501, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217542318 }), details: Some(IdNameV1(IdNameV1 { id: "u61", name: "materialize_public_alter_connection_source_3a" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 125, event_type: Create, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217370986 }), details: Some(IdNameV1(IdNameV1 { id: "u15", name: "materialize_public_sink_large_transaction_sink1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 516, event_type: Grant, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217552053 }), details: Some(GrantRoleV2(GrantRoleV2 { role_id: "u8", member_id: "u1", grantor_id: "s1", executed_by: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 414, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217498560 }), details: Some(SchemaV2(SchemaV2 { id: "u23", name: "public", database_name: Some(StringWrapper { inner: "owner_db2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 29, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217318166 }), details: Some(SchemaV2(SchemaV2 { id: "u7", name: "public", database_name: Some(StringWrapper { inner: "defpriv_db" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 700, event_type: Grant, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217803382 }), details: Some(GrantRoleV2(GrantRoleV2 { role_id: "u10", member_id: "u1", grantor_id: "s1", executed_by: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 830, event_type: Grant, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217902843 }), details: Some(GrantRoleV2(GrantRoleV2 { role_id: "u12", member_id: "u1", grantor_id: "s1", executed_by: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 975, event_type: Grant, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218217527 }), details: Some(GrantRoleV2(GrantRoleV2 { role_id: "u14", member_id: "u1", grantor_id: "s1", executed_by: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 827, event_type: Revoke, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217901884 }), details: Some(RevokeRoleV2(RevokeRoleV2 { role_id: "u8", member_id: "u1", grantor_id: "s1", executed_by: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 714, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217810279 }), details: Some(RenameClusterV1(RenameClusterV1 { id: "u34", old_name: "swap_cluster2", new_name: "swap_cluster1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 979, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218222855 }), details: Some(RenameClusterV1(RenameClusterV1 { id: "u36", old_name: "swap_cluster4", new_name: "swap_cluster3" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 394, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217492444 }), details: Some(SchemaV2(SchemaV2 { id: "u21", name: "public", database_name: Some(StringWrapper { inner: "owner_db1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 755, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217846198 }), details: Some(SchemaV2(SchemaV2 { id: "u31", name: "public", database_name: Some(StringWrapper { inner: "owner_db3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 766, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217849848 }), details: Some(SchemaV2(SchemaV2 { id: "u33", name: "public", database_name: Some(StringWrapper { inner: "owner_db4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1004, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218252630 }), details: Some(SchemaV2(SchemaV2 { id: "u39", name: "public", database_name: Some(StringWrapper { inner: "owner_db5" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1015, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218256880 }), details: Some(SchemaV2(SchemaV2 { id: "u41", name: "public", database_name: Some(StringWrapper { inner: "owner_db6" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1050, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218269828 }), details: Some(SchemaV2(SchemaV2 { id: "u45", name: "public", database_name: Some(StringWrapper { inner: "owner_db8" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1103, event_type: Revoke, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218325558 }), details: Some(RevokeRoleV2(RevokeRoleV2 { role_id: "u12", member_id: "u1", grantor_id: "s1", executed_by: "u1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1039, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218265527 }), details: Some(SchemaV2(SchemaV2 { id: "u43", name: "public", database_name: Some(StringWrapper { inner: "owner_db7" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 72, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217340448 }), details: Some(SchemaV2(SchemaV2 { id: "u10", name: "swap_me1", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 73, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217340662 }), details: Some(SchemaV2(SchemaV2 { id: "u11", name: "swap_me2", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 74, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217340873 }), details: Some(SchemaV2(SchemaV2 { id: "u12", name: "swap_me3", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 75, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217341098 }), details: Some(SchemaV2(SchemaV2 { id: "u13", name: "swap_me4", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 233, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217422214 }), details: Some(SchemaV2(SchemaV2 { id: "u19", name: "public", database_name: Some(StringWrapper { inner: "privilege_db1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 671, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217794391 }), details: Some(SchemaV2(SchemaV2 { id: "u29", name: "public", database_name: Some(StringWrapper { inner: "privilege_db2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 955, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218209493 }), details: Some(SchemaV2(SchemaV2 { id: "u37", name: "public", database_name: Some(StringWrapper { inner: "privilege_db3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 641, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217774295 }), details: Some(SchemaV2(SchemaV2 { id: "u28", name: "public", database_name: Some(StringWrapper { inner: "to_be_dropped" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 934, event_type: Drop, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218191101 }), details: Some(SchemaV2(SchemaV2 { id: "u28", name: "public", database_name: Some(StringWrapper { inner: "to_be_dropped" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 844, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217911716 }), details: Some(SchemaV2(SchemaV2 { id: "u35", name: "public", database_name: Some(StringWrapper { inner: "to_be_created1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 392, event_type: Grant, object_type: Cluster, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217492082 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Cu1", grantee_id: "u6", grantor_id: "s1", privileges: "C" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 390, event_type: Grant, object_type: Database, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217491661 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du1", grantee_id: "u6", grantor_id: "s1", privileges: "C" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 217, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217417488 }), details: Some(SchemaV2(SchemaV2 { id: "u16", name: "rename_me1", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 218, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217417732 }), details: Some(SchemaV2(SchemaV2 { id: "u17", name: "rename_me2", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 219, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217417941 }), details: Some(SchemaV2(SchemaV2 { id: "u18", name: "rename_me3", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 252, event_type: Grant, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217426760 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du4", grantee_id: "u4", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1119, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218337342 }), details: Some(SchemaV2(SchemaV2 { id: "u47", name: "public", database_name: Some(StringWrapper { inner: "to_be_created2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 846, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217913051 }), details: Some(SchemaV2(SchemaV2 { id: "u36", name: "join_schema", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 885, event_type: Drop, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218121380 }), details: Some(SchemaV2(SchemaV2 { id: "u27", name: "to_be_dropped", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 683, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217798100 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu394", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 688, event_type: Grant, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217799570 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu400", grantee_id: "u4", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 972, event_type: Grant, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218215840 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu569", grantee_id: "u4", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 669, event_type: Revoke, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217794000 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Cu31", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 663, event_type: Revoke, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217792380 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu145", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 693, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217800980 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu395", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 948, event_type: Revoke, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218207400 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu395", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 697, event_type: Grant, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217802300 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu400", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 30, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217318369 }), details: Some(SchemaV2(SchemaV2 { id: "u8", name: "defpriv_schema", database_name: Some(StringWrapper { inner: "defpriv_db" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 681, event_type: Grant, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217797624 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du8", grantee_id: "u4", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 263, event_type: Grant, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217428748 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du4", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 659, event_type: Revoke, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217791289 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du4", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 690, event_type: Grant, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217800227 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du8", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 945, event_type: Revoke, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218206447 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du8", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1037, event_type: Grant, object_type: Cluster, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218264942 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Cu1", grantee_id: "u11", grantor_id: "s1", privileges: "C" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1035, event_type: Grant, object_type: Database, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218264418 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du1", grantee_id: "u11", grantor_id: "s1", privileges: "C" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 391, event_type: Grant, object_type: Schema, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217491869 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u3", grantee_id: "u6", grantor_id: "s1", privileges: "C" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 573, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217713419 }), details: Some(SchemaV2(SchemaV2 { id: "u26", name: "to_be_created", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 574, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217713681 }), details: Some(SchemaV2(SchemaV2 { id: "u27", name: "to_be_dropped", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 728, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217826343 }), details: Some(RenameClusterV1(RenameClusterV1 { id: "u75", old_name: "rename_cluster1", new_name: "rename_cluster_new1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 983, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218235395 }), details: Some(RenameClusterV1(RenameClusterV1 { id: "u76", old_name: "rename_cluster2", new_name: "rename_cluster_new2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 262, event_type: Grant, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217428512 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Cu31", grantee_id: "u4", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 965, event_type: Grant, object_type: Database, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218213549 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Du12", grantee_id: "u4", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 254, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217427113 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu143", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 255, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217427286 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu144", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 256, event_type: Grant, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217427455 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu145", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 258, event_type: Grant, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217427801 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu148", grantee_id: "u4", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 259, event_type: Grant, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217427981 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu149", grantee_id: "u4", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 260, event_type: Grant, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217428165 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu150", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 261, event_type: Grant, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217428342 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu152", grantee_id: "u4", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 684, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217798427 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu395", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 685, event_type: Grant, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217798686 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu396", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 687, event_type: Grant, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217799264 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu399", grantee_id: "u4", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 689, event_type: Grant, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217799828 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu401", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 967, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218214084 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu563", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 968, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218214532 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu564", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 969, event_type: Grant, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218214812 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu565", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 971, event_type: Grant, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218215573 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu568", grantee_id: "u4", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 973, event_type: Grant, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218216305 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu570", grantee_id: "u4", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 273, event_type: Grant, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217430537 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Cu31", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 265, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217429094 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu143", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 661, event_type: Revoke, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217791797 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu143", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 266, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217429275 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu144", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 662, event_type: Revoke, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217792063 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu144", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 267, event_type: Grant, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217429468 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu145", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 269, event_type: Grant, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217429827 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu148", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 665, event_type: Revoke, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217792925 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu148", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 270, event_type: Grant, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217430003 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu149", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 666, event_type: Revoke, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217793261 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu149", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 271, event_type: Grant, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217430185 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu150", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 667, event_type: Revoke, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217793514 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu150", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 272, event_type: Grant, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217430364 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu152", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 668, event_type: Revoke, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217793762 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu152", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 692, event_type: Grant, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217800721 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu394", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 947, event_type: Revoke, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218206946 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu394", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 694, event_type: Grant, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217801317 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu396", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 949, event_type: Revoke, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218207666 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu396", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 696, event_type: Grant, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217801965 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu399", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 951, event_type: Revoke, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218208416 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu399", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 952, event_type: Revoke, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218208688 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu400", grantee_id: "u5", grantor_id: "u1", privileges: "r" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 698, event_type: Grant, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217802606 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu401", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 953, event_type: Revoke, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218208977 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu401", grantee_id: "u5", grantor_id: "u1", privileges: "U" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 32, event_type: Grant, object_type: System, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217318784 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "SYSTEM", grantee_id: "u2", grantor_id: "s1", privileges: "BN" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 388, event_type: Grant, object_type: System, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217491186 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "SYSTEM", grantee_id: "u6", grantor_id: "s1", privileges: "BN" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 552, event_type: Grant, object_type: System, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217689294 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "SYSTEM", grantee_id: "u9", grantor_id: "s1", privileges: "BN" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 787, event_type: Grant, object_type: System, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217856641 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "SYSTEM", grantee_id: "u11", grantor_id: "s1", privileges: "BN" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 863, event_type: Grant, object_type: System, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218095362 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "SYSTEM", grantee_id: "u13", grantor_id: "s1", privileges: "BN" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 395, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217492662 }), details: Some(SchemaV2(SchemaV2 { id: "u22", name: "owner_schema1", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 415, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217498784 }), details: Some(SchemaV2(SchemaV2 { id: "u24", name: "owner_schema2", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 756, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217846464 }), details: Some(SchemaV2(SchemaV2 { id: "u32", name: "owner_schema3", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 767, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217850186 }), details: Some(SchemaV2(SchemaV2 { id: "u34", name: "owner_schema4", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1040, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218265803 }), details: Some(SchemaV2(SchemaV2 { id: "u44", name: "owner_schema7", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1051, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218270120 }), details: Some(SchemaV2(SchemaV2 { id: "u46", name: "owner_schema8", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1036, event_type: Grant, object_type: Schema, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218264685 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u3", grantee_id: "u11", grantor_id: "s1", privileges: "C" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 50, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217330136 }), details: Some(SchemaV2(SchemaV2 { id: "u9", name: "optimizer_notices", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 257, event_type: Grant, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217427628 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu146", grantee_id: "u4", grantor_id: "u1", privileges: "arwd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 686, event_type: Grant, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217798932 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu397", grantee_id: "u4", grantor_id: "u1", privileges: "arwd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 970, event_type: Grant, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218215124 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu566", grantee_id: "u4", grantor_id: "u1", privileges: "arwd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 253, event_type: Grant, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217426935 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u20", grantee_id: "u4", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 682, event_type: Grant, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217797859 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u30", grantee_id: "u4", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 966, event_type: Grant, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218213821 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u38", grantee_id: "u4", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 268, event_type: Grant, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217429652 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu146", grantee_id: "u5", grantor_id: "u1", privileges: "arwd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 664, event_type: Revoke, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217792659 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu146", grantee_id: "u5", grantor_id: "u1", privileges: "arwd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 695, event_type: Grant, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217801706 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu397", grantee_id: "u5", grantor_id: "u1", privileges: "arwd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 950, event_type: Revoke, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218207943 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Iu397", grantee_id: "u5", grantor_id: "u1", privileges: "arwd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 264, event_type: Grant, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217428918 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u20", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 660, event_type: Revoke, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217791545 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u20", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 691, event_type: Grant, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217800471 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u30", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 946, event_type: Revoke, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218206709 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "Su1.u30", grantee_id: "u5", grantor_id: "u1", privileges: "UC" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1071, event_type: Grant, object_type: System, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218277919 }), details: Some(UpdatePrivilegeV1(UpdatePrivilegeV1 { object_id: "SYSTEM", grantee_id: "u15", grantor_id: "s1", privileges: "BN" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 79, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217342180 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u39", name: Some(FullNameV1 { database: "materialize", schema: "swap_me4", item: "t4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1005, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218252922 }), details: Some(SchemaV2(SchemaV2 { id: "u40", name: "owner_schema5", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1016, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218257329 }), details: Some(SchemaV2(SchemaV2 { id: "u42", name: "owner_schema6", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 234, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217422385 }), details: Some(SchemaV2(SchemaV2 { id: "u20", name: "privilege_schema1", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 672, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217794633 }), details: Some(SchemaV2(SchemaV2 { id: "u30", name: "privilege_schema2", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 956, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218209758 }), details: Some(SchemaV2(SchemaV2 { id: "u38", name: "privilege_schema3", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 386, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217490301 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u232", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "v1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 986, event_type: Drop, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218237916 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u425", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "t3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 753, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217845405 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u438", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "v2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 486, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217532490 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u280", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "wmr1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 642, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217774650 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u381", name: Some(FullNameV1 { database: "to_be_dropped", schema: "public", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 455, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217510922 }), details: Some(SchemaV2(SchemaV2 { id: "u25", name: "aggregation_schema", database_name: Some(StringWrapper { inner: "materialize" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 76, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217341337 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u36", name: Some(FullNameV1 { database: "materialize", schema: "swap_me1", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 77, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217341615 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u37", name: Some(FullNameV1 { database: "materialize", schema: "swap_me2", item: "t2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 78, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217341899 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u38", name: Some(FullNameV1 { database: "materialize", schema: "swap_me3", item: "t3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1002, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218251507 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u585", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "v3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 933, event_type: Drop, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218191101 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u381", name: Some(FullNameV1 { database: "to_be_dropped", schema: "public", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 820, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217886276 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u481", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "wmr2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1100, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218310656 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u642", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "wmr3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 345, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217464535 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u205", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg_ss" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 819, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217885771 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u480", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "wmr1a" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 845, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217912105 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u497", name: Some(FullNameV1 { database: "to_be_created1", schema: "public", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1120, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218337736 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u655", name: Some(FullNameV1 { database: "to_be_created2", schema: "public", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 715, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217810279 }), details: Some(RenameClusterV1(RenameClusterV1 { id: "u33", old_name: "mz_cluster_swap_d3970ae57c4b", new_name: "swap_cluster2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 713, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217810279 }), details: Some(RenameClusterV1(RenameClusterV1 { id: "u33", old_name: "swap_cluster1", new_name: "mz_cluster_swap_d3970ae57c4b" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 980, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218222855 }), details: Some(RenameClusterV1(RenameClusterV1 { id: "u35", old_name: "mz_cluster_swap_6a1867c837e3", new_name: "swap_cluster4" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 978, event_type: Alter, object_type: Cluster, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218222855 }), details: Some(RenameClusterV1(RenameClusterV1 { id: "u35", old_name: "swap_cluster3", new_name: "mz_cluster_swap_6a1867c837e3" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 22, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217304082 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u6", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "csr_conn" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 220, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217418185 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u134", name: Some(FullNameV1 { database: "materialize", schema: "rename_me1", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 221, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217418464 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u135", name: Some(FullNameV1 { database: "materialize", schema: "rename_me2", item: "t2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 222, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217418737 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u136", name: Some(FullNameV1 { database: "materialize", schema: "rename_me3", item: "t3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 353, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217468442 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u211", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pgpass" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1099, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218310015 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u641", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "wmr2a" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 354, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217468857 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u212", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg_ssh1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 737, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217831457 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u426", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg_ssh2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 847, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217913504 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u498", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 849, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217914562 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u500", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "t2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 992, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218240787 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u576", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg_ssh3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 569, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217707325 }), details: Some(RenameSchemaV1(RenameSchemaV1 { id: "u11", database_name: Some("materialize"), old_name: "swap_me2", new_name: "swap_me1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 880, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218114873 }), details: Some(RenameSchemaV1(RenameSchemaV1 { id: "u13", database_name: Some("materialize"), old_name: "swap_me4", new_name: "swap_me3" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 521, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217555360 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u303", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_key" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 884, event_type: Drop, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218121380 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u343", name: Some(FullNameV1 { database: "materialize", schema: "to_be_dropped", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 906, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218160720 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u543", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg3_false" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 21, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217303834 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u5", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 129, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217374907 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u75", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg1_false" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 225, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217419956 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u138", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "map_type" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 467, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217520524 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u267", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg1_true" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 760, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217847750 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u442", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_t3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 805, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217873558 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u470", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg2_true" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 848, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217913955 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u499", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "t1a" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 17, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217300130 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u1", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh_tunnel_0" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 168, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217393032 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u101", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "wide_rows" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 226, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217420145 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u139", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "int4_list" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 344, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217464304 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u204", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pgpass_ss" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 402, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217494460 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u239", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_mv1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 458, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217512758 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u260", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "many_rows" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 526, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217559232 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u308", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 575, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217713983 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u343", name: Some(FullNameV1 { database: "materialize", schema: "to_be_dropped", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 607, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217744627 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u363", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg2_false" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 223, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217419156 }), details: Some(RenameSchemaV1(RenameSchemaV1 { id: "u16", database_name: Some("materialize"), old_name: "rename_me1", new_name: "renamed1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 657, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217788234 }), details: Some(RenameSchemaV1(RenameSchemaV1 { id: "u17", database_name: Some("materialize"), old_name: "rename_me2", new_name: "renamed2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 943, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218203093 }), details: Some(RenameSchemaV1(RenameSchemaV1 { id: "u18", database_name: Some("materialize"), old_name: "rename_me3", new_name: "renamed3" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 890, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218127830 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u535", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "regex_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 399, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217493627 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u236", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 400, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217493936 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u237", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_i1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 401, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217494217 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u238", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_v1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 419, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217499767 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u247", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_t2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 420, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217500061 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u248", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_i2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 421, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217500353 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u249", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_v2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 761, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217848143 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u443", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_i3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 762, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217848629 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u444", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_v3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 771, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217851448 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u450", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_t4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 772, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217851833 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u451", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_i4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 773, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217852325 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u452", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_v4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1010, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218255023 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u590", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_i5" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1020, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218258789 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u597", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_t6" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1044, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218267460 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u605", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_t7" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1088, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218298541 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u632", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pg3_true" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 18, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217300663 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u2", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh_tunnel_1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 19, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217301178 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u3", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh_tunnel_2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 20, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217301727 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u4", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh_tunnel_3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 110, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217361257 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u60", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "regex_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 113, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217363391 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u63", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "range_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 170, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217394351 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u103", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "cast_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 214, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217415776 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u131", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "uuid_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 522, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217555615 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u304", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka1_key" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 529, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217560429 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u311", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_sasl" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 638, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217771658 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u379", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "cast_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 645, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217776734 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u384", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "date_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 656, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217786975 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u392", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "uuid_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 930, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218187941 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u555", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "cast_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 938, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218193746 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u559", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "date_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 942, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218201892 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u561", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "uuid_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 825, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217893449 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u4", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh_tunnel_3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 717, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217820280 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u414", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "having_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 804, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217873280 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u469", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pgpass2_true" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 422, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217500615 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u250", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_mv2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 763, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217848926 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u445", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_mv3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 774, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217852638 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u453", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_mv4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1023, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218260110 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u600", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_mv6" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 53, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217331196 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u23", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "comment_type" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 112, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217362757 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u62", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "peek_persist" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 224, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217419769 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u137", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "record_type" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 517, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217552646 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u299", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_table1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 831, event_type: Drop, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217903456 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u299", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_table1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 518, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217553096 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u300", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_table2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 523, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217555872 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u305", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "garbage_key" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 580, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217719055 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u348", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "regex_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 596, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217727197 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u356", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "range_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 729, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217827103 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u421", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "explain_mv1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 730, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217827578 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u422", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "explain_mv2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 896, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218131516 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u537", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "range_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 606, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217744350 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u362", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pgpass2_false" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 963, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218212680 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u569", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_mv3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1009, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218254629 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u589", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_t5" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1011, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218255554 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u591", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_v5" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1021, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218259382 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u598", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_i6" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1022, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218259734 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u599", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_v6" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1045, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218267863 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u606", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_i7" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1046, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218268441 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u607", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_v7" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1055, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218271801 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u613", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_t8" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1056, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218272434 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u614", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_i8" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1057, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218272834 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u615", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_v8" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 180, event_type: Create, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217398688 }), details: Some(SchemaV2(SchemaV2 { id: "u15", name: "</script><script>alert(123)</script>", database_name: Some(StringWrapper { inner: "--" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 51, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217330358 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u21", name: Some(FullNameV1 { database: "materialize", schema: "optimizer_notices", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 55, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217331566 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u25", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "comment_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 101, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217356269 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u53", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_table1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 128, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217374578 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u74", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pgpass1_false" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 185, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217400986 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u110", name: Some(FullNameV1 { database: "--", schema: "public", item: "JavaSCript:alert(123)" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 229, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217421147 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u142", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "commit_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 238, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217423128 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u146", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 239, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217423359 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u147", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_i1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 240, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217423565 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u148", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_v1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 339, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217461157 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u199", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "having_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 381, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217486535 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u229", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "string_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 465, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217519431 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u265", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "delete_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 466, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217520185 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u266", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pgpass1_true" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 519, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217553887 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u301", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "update_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 676, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217795833 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u397", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_t2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 677, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217796273 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u398", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_i2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 678, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217796605 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u399", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_v2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 745, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217838289 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u434", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "string_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 856, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217918435 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u507", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "join_on" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 960, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218211386 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u566", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_t3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 961, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218211768 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u567", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_i3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 962, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218212167 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u568", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_v3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 982, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218234571 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u572", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "having_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1000, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218248199 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u584", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "string_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 987, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218237916 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u208", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ss" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 733, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217829419 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u208", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ss" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 989, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218238524 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u208", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ss" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 735, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217829809 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u208", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ss" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 514, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217550780 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u298", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "constant_plan1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 600, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217730220 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u66", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "aws_assume_role" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1012, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218255873 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u592", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_mv5" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1047, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218268794 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u608", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_mv7" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1058, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218273203 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u616", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_mv8" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 398, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217493382 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u235", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_type1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 418, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217499524 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u246", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_type2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1106, event_type: Drop, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218327112 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u300", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_table2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 759, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217847445 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u441", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_type3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 770, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217851074 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u449", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_type4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 241, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217423753 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u149", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_mv1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 351, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217467392 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u209", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_table1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 482, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217530532 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u276", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 576, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217714611 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u344", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_table2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 679, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217796888 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u400", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_mv2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 764, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217849360 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u446", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_secret3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 867, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218101974 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u520", name: Some(FullNameV1 { database: "materialize", schema: "optimizer_notices", item: "v1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 886, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218122139 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u531", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_table3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 905, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218160357 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u542", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pgpass3_false" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 889, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218126760 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u534", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "threshold_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1087, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218297988 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u631", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "pgpass3_true" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 66, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217338196 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u32", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_ssh1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 102, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217356927 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u54", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "real_type_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 118, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217366455 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u66", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "aws_assume_role" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 120, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217366838 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u68", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "aws_credentials" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 191, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217403185 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u116", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "temporal_types" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 202, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217410365 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u123", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "not_null_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 203, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217410774 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u124", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "not_null_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 227, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217420341 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u140", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "int4_list_list" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 372, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217477859 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u224", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "debezium_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 452, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217508162 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u255", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rollback_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 456, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217511234 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u258", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 559, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217696406 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u333", name: Some(FullNameV1 { database: "materialize", schema: "optimizer_notices", item: "mv1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 655, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217784392 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u391", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "not_null_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 743, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217835712 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u432", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "debezium_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 854, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217917282 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u505", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "left_join" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 941, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218199023 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u560", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "not_null_view3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 998, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218245588 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u582", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "debezium_view3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 900, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218135378 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u68", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "aws_credentials" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 276, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217432590 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u156", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_index_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 601, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217730790 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u357", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "null_value_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1008, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218254137 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u588", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_type5" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1019, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218258467 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u596", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_type6" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1043, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218266937 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u604", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_type7" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1054, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218271469 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u612", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_type8" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 403, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217494727 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u240", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_secret1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 423, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217500938 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u251", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_secret2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 775, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217852987 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u454", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_secret4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 59, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217333147 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u27", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "basic_topk_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 60, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217333689 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u28", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "jsonb_type_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 108, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217360273 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u58", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "threshold_table1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 109, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217360613 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u59", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "threshold_table2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 111, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217362213 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u61", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "like_regex_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 121, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217367229 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u69", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "null_value_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 237, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217422937 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u145", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_type1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 279, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217433635 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u159", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_index_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 340, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217462363 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u200", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "explain_item_t1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 341, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217462694 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u201", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "explain_item_t2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 525, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217558934 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u307", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_plaintext" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 564, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217703094 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u337", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_ssh2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 578, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217715776 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u346", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "real_type_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 579, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217718206 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u347", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "threshold_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 675, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217795553 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u396", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_type2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 758, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217847050 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u440", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_csr_conn3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 807, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217876016 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u472", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "date_prec_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 850, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217915035 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u501", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "comma_join" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 851, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217915616 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u502", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "cross_join" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 855, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217917805 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u506", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "right_join" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 857, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217919001 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u508", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "join_using" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 875, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218109606 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u525", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_ssh3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 888, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218123904 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u533", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "real_type_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 959, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218210883 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u565", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_type3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1093, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218303110 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u637", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "date_prec_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 49, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217328950 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u20", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_delete_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 141, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217379570 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u81", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 352, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217467780 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u210", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_table_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 457, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217512010 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u259", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "double_type_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 702, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217805120 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u402", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_index_index2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 811, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217880380 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u475", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_replica_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 52, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217330635 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u22", name: Some(FullNameV1 { database: "materialize", schema: "optimizer_notices", item: "t1_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 54, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217331383 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u24", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "comment_int4_list" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 93, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217350558 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u47", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "delta_join_table1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 94, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217350847 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u48", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "delta_join_index1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 95, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217351163 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u49", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "delta_join_table2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 96, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217351465 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u50", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "delta_join_index2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 130, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217375519 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u76", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_index_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 144, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217380914 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u84", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 216, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217416769 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u133", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "parse_error_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 343, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217463538 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u203", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "array_type_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 472, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217523901 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u270", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_source_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 561, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217699246 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u335", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "basic_topk_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 562, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217700289 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u336", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "jsonb_type_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 572, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217711297 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u342", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "delta_join_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 595, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217725649 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u355", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "like_regex_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 731, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217828329 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u423", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "array_type_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 818, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217885355 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u479", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "wmr1_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 870, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218105433 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u523", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "basic_topk_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 871, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218106512 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u524", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "jsonb_type_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 883, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218118865 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u530", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "delta_join_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 895, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218129803 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u536", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "like_regex_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 901, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218136121 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u538", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "null_value_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 985, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218236857 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u574", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "array_type_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 752, event_type: Alter, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217843239 }), details: Some(RenameClusterReplicaV1(RenameClusterReplicaV1 { cluster_id: "u77", replica_id: "u80", old_name: "replica1", new_name: "replica_new1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 71, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217339770 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u35", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "numeric_types_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 307, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217443050 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u177", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster2_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 309, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217443640 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u179", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster3_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 614, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217749480 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u369", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1013, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218256395 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u593", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_secret5" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1024, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218260665 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u601", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_secret6" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1048, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218269356 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u609", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_secret7" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1059, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218273763 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u617", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_secret8" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 397, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217493143 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u234", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_csr_conn1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 417, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217499272 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u245", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_csr_conn2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 769, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217850783 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u448", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_csr_conn4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 65, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217336547 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u31", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_source_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 92, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217349977 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u46", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_insert_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 143, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217380221 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u83", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 145, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217381407 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u85", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewa1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 146, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217381793 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u86", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewb1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 163, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217389622 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u98", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_index_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 215, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217416426 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u132", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "parse_error_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 242, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217423974 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u150", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_secret1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 278, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217433291 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u158", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_index_index1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 701, event_type: Drop, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217804641 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u158", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_index_index1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 342, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217463015 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u202", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "explain_item_t1_y" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 396, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217492890 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u233", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_kafka_conn1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 483, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217531037 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u277", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_view_2s_1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 484, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217531416 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u278", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_view_at_1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 680, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217797289 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u401", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_secret2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 977, event_type: Drop, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218219588 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u402", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_index_index2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 716, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217816307 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u413", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "linear_join_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 799, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217866357 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u464", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "double_type_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 815, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217883489 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u476", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_view_2s_2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 816, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217883969 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u477", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_view_at_2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 852, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217916182 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u503", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "natural_join" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 860, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217920807 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u511", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "lateral_join" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 868, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218102521 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u521", name: Some(FullNameV1 { database: "materialize", schema: "optimizer_notices", item: "v1_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 964, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218213038 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u570", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_secret3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 981, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218230588 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u571", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "linear_join_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 984, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218235986 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u573", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "explain_item_t2_y" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 27, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217317600 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u9", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_rows_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 292, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217438100 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u170", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster1_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1001, event_type: Alter, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218249402 }), details: Some(RenameClusterReplicaV1(RenameClusterReplicaV1 { cluster_id: "u77", replica_id: "u81", old_name: "replica2", new_name: "replica_new2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 142, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217379876 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u82", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_index1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 228, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217420525 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u141", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "nested_types_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 305, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217442485 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u175", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster1_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 311, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217444262 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u181", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster4_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 321, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217450036 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u187", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_update_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 327, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217453599 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u191", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "linear_join_table1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 328, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217453984 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u192", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "linear_join_table2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 520, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217554709 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u302", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "boolean_type_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 558, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217693722 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u332", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "materialized_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 577, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217715057 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u345", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_table_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 588, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217723718 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u352", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster1_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 592, event_type: Drop, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217724821 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u352", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster1_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 590, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217724502 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u354", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster2_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 892, event_type: Drop, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218128861 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u354", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster2_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 658, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217788795 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u393", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "nested_types_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 808, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217878585 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u473", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_replica_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 832, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217905035 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u486", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "boolean_type_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 866, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218099774 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u519", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "materialized_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 887, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218122887 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u532", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_table_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 914, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218176376 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u551", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_view3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 944, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218203895 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u562", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "nested_types_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 481, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217529490 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u275", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_wide_key_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 929, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218185890 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u554", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "monotonic_top1_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1007, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218253774 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u587", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_csr_conn5" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1018, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218257961 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u595", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_csr_conn6" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1042, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218266622 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u603", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_csr_conn7" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1053, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218270952 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u611", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_csr_conn8" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 416, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217499018 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u244", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_kafka_conn2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 757, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217846743 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u439", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_kafka_conn3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 768, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217850482 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u447", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_kafka_conn4" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1083, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218289162 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u627", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "double_type_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1096, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218307818 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u638", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_view_2s_3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1097, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218308481 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u639", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_view_at_3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 148, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217382845 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u87", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "source_errors_secret" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 236, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217422759 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u144", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_csr_conn1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 293, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217438416 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u171", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster2_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 294, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217438722 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u172", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster3_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 295, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217439027 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u173", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster4_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 476, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217526146 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u272", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "temporal_prec_types" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 485, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217531778 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u279", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_view_late_1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 527, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217559734 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u309", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_scram_sha_512" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 567, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217706278 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u340", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "numeric_types_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 581, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217720119 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u349", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster1_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 582, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217720551 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u350", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster2_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 613, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217749071 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u368", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_index1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 653, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217782742 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u390", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_replica_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 674, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217795268 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u395", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_csr_conn2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 749, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217840866 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u437", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_replica_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 817, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217884558 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u478", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_view_late_2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 826, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217895767 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u485", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "constant_plan_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 878, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218113792 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u528", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "numeric_types_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 958, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218210566 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u564", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_csr_conn3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1107, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218328774 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u644", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "boolean_type_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 33, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217318954 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u10", name: Some(FullNameV1 { database: "defpriv_db", schema: "defpriv_schema", item: "defpriv_table1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 40, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217321981 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u15", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mv_alter_connection_1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 119, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217366649 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u67", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "aws_secret_access_key" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 360, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217472514 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u216", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_mz_now_pass" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 361, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217472769 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u217", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_mz_now_conn" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 367, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217474441 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u221", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_mz_now_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 454, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217509817 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u257", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "regexp_extract_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 493, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217536758 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u285", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "parse_hex_error_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 637, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217769856 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u378", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "monotonic_top1_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 639, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217773564 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u380", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "monotonic_topk_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 650, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217781096 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u388", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_replica_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 725, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217825007 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u418", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_cluster1_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 727, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217825911 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u420", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_cluster2_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 746, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217839139 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u435", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_replica_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 789, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217859782 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u456", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "regexp_extract_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 853, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217916748 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u504", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "full_outer_join" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 931, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218189899 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u556", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "monotonic_topk_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1006, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218253397 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u586", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_kafka_conn5" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1017, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707218257623 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u594", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_kafka_conn6" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1041, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218266128 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u602", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_kafka_conn7" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1052, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "owner_role_02" }), occurred_at: Some(EpochMillis { millis: 1707218270614 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u610", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_kafka_conn8" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1098, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218309014 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u640", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "refresh_view_late_3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1102, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218319458 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u643", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "constant_plan_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 160, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217387471 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u95", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "window_functions_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 169, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217393357 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u102", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "wide_rows_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 198, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217407067 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u121", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mv_alter_connection_2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 235, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217422565 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u143", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_kafka_conn1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 377, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217484531 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u227", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_source_null_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 459, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217513126 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u261", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "many_rows_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 492, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217536385 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u284", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "parse_hex_error_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 505, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217544196 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u293", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mv_alter_connection_3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 553, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217689558 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u328", name: Some(FullNameV1 { database: "defpriv_db", schema: "defpriv_schema", item: "defpriv_table2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 673, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217794902 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u394", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_kafka_conn2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 718, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217821028 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u415", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_cluster1_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 719, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217821546 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u416", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_cluster2_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 792, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217862346 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u457", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "order_by1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 858, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217919692 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u509", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "join_table_alias" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 864, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218095656 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u518", name: Some(FullNameV1 { database: "defpriv_db", schema: "defpriv_schema", item: "defpriv_table3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 957, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218210058 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u563", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_kafka_conn3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1073, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218281139 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u619", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "regexp_extract_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 107, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217359666 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u57", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_update_grow_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 326, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217452928 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u190", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mv_multiple_partitions" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 453, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217509007 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u256", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "text_bytea_types_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 513, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217550116 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u297", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_wide_value_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 618, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217759901 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u370", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "window_functions_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 793, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217862808 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u458", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "limit_one1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 859, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217920283 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u510", name: Some(FullNameV1 { database: "materialize", schema: "join_schema", item: "join_column_alias" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 922, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218181689 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u552", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "window_functions_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 84, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217345900 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u42", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_source_comments_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1076, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218284456 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u620", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "order_by2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 39, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217321663 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u14", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_table_1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 44, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217325459 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u17", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "materialized_views_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 149, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217383062 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u88", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "source_errors_connection" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 528, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217559977 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u310", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_scram_sha_512" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 794, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217863385 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u459", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "limit_many1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1077, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218284949 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u621", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "limit_one2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 197, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217406655 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u120", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_table_2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 316, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217447146 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u184", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_updates_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 498, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217540127 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u288", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_enrich_value_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 504, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217543755 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u292", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_table_3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 524, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217558355 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u306", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_protocols_password" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 788, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217858634 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u455", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "string_bytea_types_view1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 928, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218183873 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u553", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_index_table_index" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1072, event_type: Create, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218279960 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u618", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "string_bytea_types_view2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1078, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218285649 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u622", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "limit_many2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 274, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217431542 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u154", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "insert_select_destination" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 464, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217518851 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u264", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_update_shrink_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 796, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217864459 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u461", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "global_count1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1080, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218286839 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u624", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "global_count2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 124, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217370533 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u72", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_large_transaction_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 275, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217431843 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u155", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "insert_select_source_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 628, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217765971 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u374", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster1_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 632, event_type: Drop, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217767301 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u374", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster1_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 630, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217766869 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u376", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster2_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 924, event_type: Drop, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218183028 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u376", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster2_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 570, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217707325 }), details: Some(RenameSchemaV1(RenameSchemaV1 { id: "u10", database_name: Some("materialize"), old_name: "mz_schema_swap_cf761c1f76c1", new_name: "swap_me2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 568, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217707325 }), details: Some(RenameSchemaV1(RenameSchemaV1 { id: "u10", database_name: Some("materialize"), old_name: "swap_me1", new_name: "mz_schema_swap_cf761c1f76c1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 881, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218114873 }), details: Some(RenameSchemaV1(RenameSchemaV1 { id: "u12", database_name: Some("materialize"), old_name: "mz_schema_swap_1818da7c22cd", new_name: "swap_me4" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 879, event_type: Alter, object_type: Schema, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218114873 }), details: Some(RenameSchemaV1(RenameSchemaV1 { id: "u12", database_name: Some("materialize"), old_name: "swap_me3", new_name: "mz_schema_swap_1818da7c22cd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 122, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217368162 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u70", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_large_transaction_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 619, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217761269 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u371", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster1_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 620, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217761668 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u372", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster2_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 131, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217375805 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u77", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_index_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 277, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217432947 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u157", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_index_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 976, event_type: Drop, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218218986 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u157", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_index_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 491, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217535664 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u283", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_key_columns_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 646, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217778570 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u117", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_2a" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 34, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217320512 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u11", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_1a" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 136, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217377626 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u80", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_index_source_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 162, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217388466 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u97", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "dataflow_error_retraction_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 182, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217399184 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u107", name: Some(FullNameV1 { database: "--", schema: "</script><script>alert(123)</script>", item: "File:///" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 554, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217691455 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u11", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_1a" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 161, event_type: Create, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217388122 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u96", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "dataflow_error_retraction_table" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 192, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217404986 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u117", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_2a" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 213, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217415122 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u130", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_value_columns_view" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 499, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217541836 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u289", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_3a" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 555, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217692278 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u329", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_1b" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 636, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217768053 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u377", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_index_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 647, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217779766 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u385", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_2b" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 810, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217879913 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u474", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_replica_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 822, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217892396 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u482", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_3b" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 821, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217891346 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u289", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_3a" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 865, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218098516 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u329", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_1b" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 939, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218196622 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u385", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_2b" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 304, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217442207 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u174", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster1_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 306, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217442771 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u176", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster2_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 308, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217443341 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u178", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster3_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 310, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217443925 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u180", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "swap_cluster4_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 587, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217723344 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u351", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster1_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 591, event_type: Drop, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217724821 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u351", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster1_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 589, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217724071 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u353", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster2_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 891, event_type: Drop, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218128861 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u353", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_cluster2_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 610, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217747631 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u366", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "shared_cluster_compute_first_mv" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 795, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217863871 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u460", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "top_level_distinct1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 797, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217864936 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u462", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "global_aggregation1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 912, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218174641 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u549", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "shared_cluster_storage_first_mv" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 726, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217825490 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u419", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_cluster2_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1101, event_type: Alter, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218316944 }), details: Some(UpdateItemV1(UpdateItemV1 { id: "u482", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_conn_alter_connection_3b" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 652, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217782342 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u389", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "create_replica_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 748, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217840437 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u436", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_replica_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 187, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217401241 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u112", name: Some(FullNameV1 { database: "--", schema: "public", item: "source" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1079, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218286168 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u623", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "top_level_distinct2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1081, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218287515 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u625", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "global_aggregation2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 724, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217824576 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u417", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_cluster1_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 123, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217368460 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u71", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_large_transaction_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 814, event_type: Drop, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217882674 }), details: Some(DropClusterReplicaV1(DropClusterReplicaV1 { cluster_id: "u79", cluster_name: "drop_replica", replica_id: Some(StringWrapper { inner: "u83" }), replica_name: "replica1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 183, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217399573 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u108", name: Some(FullNameV1 { database: "--", schema: "</script><script>alert(123)</script>", item: "1;DROP TABLE users" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 627, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217765533 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u373", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster1_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 631, event_type: Drop, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217767301 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u373", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster1_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 629, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217766427 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u375", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster2_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 923, event_type: Drop, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218183028 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u375", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "drop_managed_cluster2_table_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 803, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217872822 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u468", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source_tablea_true_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 566, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217703561 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u339", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 877, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218110182 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u527", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 593, event_type: Drop, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217724821 }), details: Some(DropClusterReplicaV1(DropClusterReplicaV1 { cluster_id: "u69", cluster_name: "drop_cluster1", replica_id: Some(StringWrapper { inner: "u68" }), replica_name: "replica1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 893, event_type: Drop, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218128861 }), details: Some(DropClusterReplicaV1(DropClusterReplicaV1 { cluster_id: "u70", cluster_name: "drop_cluster2", replica_id: Some(StringWrapper { inner: "u69" }), replica_name: "replica1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1094, event_type: Drop, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218305782 }), details: Some(DropClusterReplicaV1(DropClusterReplicaV1 { cluster_id: "u79", cluster_name: "drop_replica", replica_id: Some(StringWrapper { inner: "u84" }), replica_name: "replica2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 605, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217737006 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u361", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source_tablea_false_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 798, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217865492 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u463", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "global_aggregation_distinct1" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 346, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217464952 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u206", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "t1" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 732, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217829419 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u424", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "t2" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 734, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217829809 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u425", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "t3" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 988, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218238524 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u575", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "t3" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 633, event_type: Drop, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217767301 }), details: Some(DropClusterReplicaV1(DropClusterReplicaV1 { cluster_id: "u72", cluster_name: "drop_managed_cluster1", replica_id: Some(StringWrapper { inner: "u73" }), replica_name: "r1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 634, event_type: Drop, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217767301 }), details: Some(DropClusterReplicaV1(DropClusterReplicaV1 { cluster_id: "u72", cluster_name: "drop_managed_cluster1", replica_id: Some(StringWrapper { inner: "u74" }), replica_name: "r2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 925, event_type: Drop, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218183028 }), details: Some(DropClusterReplicaV1(DropClusterReplicaV1 { cluster_id: "u73", cluster_name: "drop_managed_cluster2", replica_id: Some(StringWrapper { inner: "u75" }), replica_name: "r1" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 926, event_type: Drop, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218183028 }), details: Some(DropClusterReplicaV1(DropClusterReplicaV1 { cluster_id: "u73", cluster_name: "drop_managed_cluster2", replica_id: Some(StringWrapper { inner: "u76" }), replica_name: "r2" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1082, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218288037 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u626", name: Some(FullNameV1 { database: "materialize", schema: "aggregation_schema", item: "global_aggregation_distinct2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 611, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217747988 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u367", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "shared_cluster_compute_first_mv_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 913, event_type: Create, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218175124 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u550", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "shared_cluster_storage_first_mv_primary_idx" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 186, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217401241 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u111", name: Some(FullNameV1 { database: "--", schema: "public", item: "source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 287, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217436880 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u165", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_csv1" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 806, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217875389 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u471", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_sink2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 355, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217470834 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u213", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "t_ssh1" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 738, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217833988 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u427", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "t_ssh2" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 993, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218243352 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u577", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "t_ssh3" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 181, event_type: Create, object_type: Type, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217398959 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u106", name: Some(FullNameV1 { database: "--", schema: "public", item: "<img src=\"x` `<script>javascript:alert(1)</script>\"` `>" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 708, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217806845 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u408", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_csv2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 836, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217906932 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u490", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1092, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218302206 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u636", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_sink3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 285, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217436571 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u163", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_text1" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 336, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217460184 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u196", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_jsona" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 338, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217460522 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u198", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_jsonb" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 706, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217806459 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u406", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_text2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 842, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217908765 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u496", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_sasl_2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 206, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217411820 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u125", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "webhook_text" }), size: None, external_type: "webhook" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1111, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218330904 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u648", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 283, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217436273 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u161", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_bytes1" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 289, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217437187 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u167", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_regex1" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 560, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217698301 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u334", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "comment_sink2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 704, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217806011 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u404", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_bytes2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 710, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217807327 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u410", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_regex2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 869, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218104503 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u522", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "comment_sink3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1117, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218333361 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u654", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_sasl_3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 207, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217412049 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u126", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "webhook_json" }), size: None, external_type: "webhook" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 744, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217837601 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u433", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_sink_null2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 999, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218247521 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u583", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_sink_null3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 208, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217412282 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u127", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "webhook_bytes" }), size: None, external_type: "webhook" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 67, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217338572 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u33", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 550, event_type: Grant, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217684677 }), details: Some(AlterDefaultPrivilegeV1(AlterDefaultPrivilegeV1 { role_id: "u1", database_id: Some(StringWrapper { inner: "u2" }), schema_id: Some(StringWrapper { inner: "u8" }), grantee_id: "u2", privileges: "arwd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 861, event_type: Grant, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218089705 }), details: Some(AlterDefaultPrivilegeV1(AlterDefaultPrivilegeV1 { role_id: "u1", database_id: Some(StringWrapper { inner: "u2" }), schema_id: Some(StringWrapper { inner: "u8" }), grantee_id: "u9", privileges: "arwd" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 291, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217437488 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u169", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_protobuf1" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 712, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217807762 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u412", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_protobuf2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 742, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217835255 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u431", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "debezium_source2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 997, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218244853 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u581", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "debezium_source3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 565, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217703561 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u338", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 876, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218110182 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u526", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh3_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 14, event_type: Create, object_type: ClusterReplica, user: None, occurred_at: Some(EpochMillis { millis: 1707217296585 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u1", cluster_name: "quickstart", replica_id: Some(StringWrapper { inner: "u1" }), replica_name: "r1", logical_size: "4-4", disk: false, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 834, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217906452 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u488", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_plaintext_2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 740, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217833988 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u429", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ssh2" }), size: None, external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 995, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218243352 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u579", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ssh3" }), size: None, external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1109, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218330167 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u646", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_plaintext_3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 571, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217709057 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u341", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_sink_comments2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 882, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218116704 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u529", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_sink_comments3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 184, event_type: Create, object_type: Connection, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217400752 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u109", name: Some(FullNameV1 { database: "--", schema: "public", item: "ABC<div style=\"x:\\xE2\\x80\\x81expression(javascript:alert(1)\">DEF" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 838, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217907624 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u492", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_scram_sha_512_2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 286, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217436880 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u164", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_csv1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 88, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217348880 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u44", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_insert_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1113, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218331758 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u650", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_scram_sha_512_3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 70, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217338572 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u34", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "ssh1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 114, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217364481 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u64", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "range_source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 468, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217522417 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u268", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 534, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217562511 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u314", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 707, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217806845 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u407", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_csv2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 835, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217906932 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u489", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1110, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218330904 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u647", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_3_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 150, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217383457 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u89", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "source_errors_tablea" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 155, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217384739 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u92", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "source_errors_tableb" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 643, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217775480 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u382", name: Some(FullNameV1 { database: "--", schema: "</script><script>alert(123)</script>", item: "ðŸš¾ ðŸ†’ ðŸ†“ ðŸ†• ðŸ†– ðŸ†— ðŸ†™ ðŸ§" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 604, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217735560 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u360", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source1_false" }), size: None, external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 802, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217872408 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u467", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source1_true" }), size: None, external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1086, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218297140 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u630", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source2_true" }), size: None, external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 45, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217328089 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u18", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_delete_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 284, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217436571 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u162", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_text1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 335, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217460184 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u195", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_jsona_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 337, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217460522 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u197", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_jsonb_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 347, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217464952 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u207", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ss_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 382, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217488739 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u230", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "decode_error_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 546, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217567624 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u320", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_sasl_1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 705, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217806459 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u405", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_text2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 841, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217908765 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u495", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_sasl_2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 557, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217692590 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u331", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_1b" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 23, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217316750 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u7", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_rows_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 840, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217908087 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u494", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_scram_sha_512_2" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 904, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218157769 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u541", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source2_false" }), size: None, external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 909, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218161972 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u546", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source3_false" }), size: None, external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 61, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217335546 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u29", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_source1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 282, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217436273 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u160", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_bytes1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 288, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217437187 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u166", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_regex1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 317, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217448925 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u185", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_update_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 424, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217501310 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u252", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_source2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 703, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217806011 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u403", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_bytes2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 709, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217807327 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u409", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_regex2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 362, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217473196 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u218", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_mz_now_table" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1091, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218299078 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u635", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source3_true" }), size: None, external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1116, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218333361 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u653", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_sasl_3_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 649, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217780186 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u387", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_2b" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 824, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217892853 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u484", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_3b" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 356, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217470834 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u214", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ssh1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 739, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217833988 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u428", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ssh2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 994, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218243352 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u578", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ssh3_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1115, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218332568 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u652", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_scram_sha_512_3" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 404, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217495063 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u241", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_source1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 188, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217401551 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u113", name: Some(FullNameV1 { database: "--", schema: "public", item: "<a href=\"\\x17javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 477, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217528126 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u273", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_wide_key_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 290, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217437488 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u168", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_protobuf1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 368, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217476605 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u222", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "debezium_source1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 373, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217483263 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u225", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_source_null_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 711, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217807762 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u411", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "format_protobuf2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 741, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217835255 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u430", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "debezium_source2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 996, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218244853 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u580", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "debezium_source3_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 103, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217358715 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u55", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_update_grow_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 132, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217376645 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u78", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_index_source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 243, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217424258 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u151", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_source1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 509, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217548643 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u295", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_wide_value_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 530, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217560923 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u312", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_plaintext_1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 833, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217906452 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u487", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_plaintext_2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 475, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217524549 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u271", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_sink1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 91, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217348880 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u45", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_insert" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 602, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217735560 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u358", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source_tablea_false" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1108, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218330167 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u645", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_plaintext_3_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 117, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217364481 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u65", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "range_source" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 471, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217522417 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u269", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_source" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 537, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217562511 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u315", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 80, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217344961 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u40", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_source_comments_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 312, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217445968 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u182", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_updates_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 494, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217538697 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u286", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_enrich_value_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 800, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217872408 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u465", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source_tablea_true" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1084, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218297140 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u628", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source_tableb_true" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 48, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217328089 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u19", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_delete" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 58, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217332044 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u26", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "comment_sink1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 385, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217488739 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u231", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "decode_error" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 549, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217567624 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u321", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_sasl_1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 151, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217383457 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u90", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "source_errors_sourcea_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 156, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217384739 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u93", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "source_errors_sourceb_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 164, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217391263 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u99", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "monotonic_top1_source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 460, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217517384 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u262", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_update_shrink_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 902, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218157769 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u539", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source_tableb_false" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 907, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218161972 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u544", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source_tablec_false" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 26, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217316750 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u8", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_rows" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 603, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217735560 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u359", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source1_false_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 410, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217496497 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u243", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_sink1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 430, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217502803 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u254", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_sink2" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1089, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218299078 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u633", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source_tablec_true" }), size: None, external_type: "subsource" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 64, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217335546 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u30", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_source1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 320, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217448925 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u186", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_update" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 171, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217396083 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u104", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "monotonic_topk_source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 538, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217564248 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u316", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_scram_sha_512_1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 801, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217872408 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u466", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source1_true_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 837, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217907624 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u491", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_scram_sha_512_2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1085, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218297140 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u629", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source2_true_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1090, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218299078 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u634", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source3_true_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 363, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217473196 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u219", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_mz_now_source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 903, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218157769 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u540", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source2_false_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 908, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218161972 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u545", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_source3_false_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1112, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218331758 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u649", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_scram_sha_512_3_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 249, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217425333 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u153", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_sink1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 380, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217485037 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u228", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_sink_null1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 480, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217528126 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u274", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_wide_key" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 350, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217464952 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u208", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ss" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 329, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217455748 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u193", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "decode_error_upsert_key_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 487, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217534293 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u281", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_key_columns_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 35, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217320810 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u12", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_1a_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 371, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217476605 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u223", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "debezium_source1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 376, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217483263 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u226", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_source_null" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 97, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217353183 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u51", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "decode_error_upsert_value_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 556, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217692590 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u330", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_1b_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 106, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217358715 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u56", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_update_grow" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 135, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217376645 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u79", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_index_source" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 512, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217548643 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u296", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_wide_value" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 533, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217560923 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u313", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_plaintext_1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 359, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217470834 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u215", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "mz_source_ssh1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 209, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217413923 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u128", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_value_columns_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 542, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217565876 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u318", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_scram_sha_512_1_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 839, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217908087 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u493", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_scram_sha_512_2_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 87, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217346533 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u43", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_sink_comments1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 193, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217405516 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u118", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_2a_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 322, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217451816 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u188", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "multiple_partitions_source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 500, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217542318 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u290", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_3a_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 648, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217780186 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u386", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_2b_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 823, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217892853 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u483", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_3b_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1114, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218332568 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u651", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_scram_sha_512_3_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 83, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217344961 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u41", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_source_comments" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 315, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217445968 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u183", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_updates" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 497, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217538697 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u287", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_enrich_value" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 463, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217517384 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u263", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_update_shrink" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 167, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217391263 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u100", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "monotonic_top1_source" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 174, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217396083 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u105", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "monotonic_topk_source" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 541, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217564248 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u317", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_scram_sha_512_1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 43, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217322478 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u16", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_sink_1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 427, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217501310 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u253", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_source2" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "load-generator" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 609, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217747250 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u365", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "shared_cluster_storage_first_source" }), size: None, external_type: "load-generator" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 201, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217407647 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u122", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_sink_2" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 332, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217455748 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u194", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "decode_error_upsert_key" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 490, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217534293 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u282", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_key_columns" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 508, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217544864 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u294", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_sink_3" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 154, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217383457 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u91", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "source_errors_sourcea" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 159, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217384739 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u94", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "source_errors_sourceb" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 38, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217320810 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u13", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_1a" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 407, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217495063 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u242", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "owner_source1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "load-generator" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 100, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217353183 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u52", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "decode_error_upsert_value" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 911, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218173965 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u548", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "shared_cluster_compute_first_source" }), size: None, external_type: "load-generator" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 212, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217413923 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u129", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "upsert_many_value_columns" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 545, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217565876 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u319", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "kafka_ssl_scram_sha_512_1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 366, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217473196 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u220", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "postgres_mz_now_source" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "postgres" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 176, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217397781 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u24", cluster_name: "identifiers", replica_id: Some(StringWrapper { inner: "u23" }), replica_name: "r1", logical_size: "4", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 608, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217747250 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u364", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "shared_cluster_storage_first_source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 196, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217405516 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u119", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_2a" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 325, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217451816 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u189", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "multiple_partitions_source" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 503, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217542318 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u291", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "alter_connection_source_3a" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 246, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217424258 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u152", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "privilege_source1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "load-generator" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 127, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217370986 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u73", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "sink_large_transaction_sink1" }), size: Some(StringWrapper { inner: "4-1" }), external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 910, event_type: Create, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218173965 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u547", name: Some(FullNameV1 { database: "materialize", schema: "public", item: "shared_cluster_compute_first_source_progress" }), size: None, external_type: "progress" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 205, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217411359 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u27", cluster_name: "webhook_cluster", replica_id: Some(StringWrapper { inner: "u26" }), replica_name: "r1", logical_size: "1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 936, event_type: Create, object_type: MaterializedView, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218192087 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u557", name: Some(FullNameV1 { database: "--", schema: "</script><script>alert(123)</script>", item: "ABC<div style=\"x:\\xE2\\x80\\x86expression(javascript:alert(1)\">DEF" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 813, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217881840 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u79", cluster_name: "drop_replica", replica_id: Some(StringWrapper { inner: "u84" }), replica_name: "replica2", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 812, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217880872 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u79", cluster_name: "drop_replica", replica_id: Some(StringWrapper { inner: "u83" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 297, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217439536 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u33", cluster_name: "swap_cluster1", replica_id: Some(StringWrapper { inner: "u32" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 299, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217440219 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u34", cluster_name: "swap_cluster2", replica_id: Some(StringWrapper { inner: "u33" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 301, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217440889 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u35", cluster_name: "swap_cluster3", replica_id: Some(StringWrapper { inner: "u34" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 303, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217441569 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u36", cluster_name: "swap_cluster4", replica_id: Some(StringWrapper { inner: "u35" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 584, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217721132 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u69", cluster_name: "drop_cluster1", replica_id: Some(StringWrapper { inner: "u68" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 586, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217722279 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u70", cluster_name: "drop_cluster2", replica_id: Some(StringWrapper { inner: "u69" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 622, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217762340 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u72", cluster_name: "drop_managed_cluster1", replica_id: Some(StringWrapper { inner: "u73" }), replica_name: "r1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 623, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217762340 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u72", cluster_name: "drop_managed_cluster1", replica_id: Some(StringWrapper { inner: "u74" }), replica_name: "r2", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 625, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217763950 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u73", cluster_name: "drop_managed_cluster2", replica_id: Some(StringWrapper { inner: "u75" }), replica_name: "r1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 626, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217763950 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u73", cluster_name: "drop_managed_cluster2", replica_id: Some(StringWrapper { inner: "u76" }), replica_name: "r2", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 721, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217822130 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u75", cluster_name: "rename_cluster1", replica_id: Some(StringWrapper { inner: "u78" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1095, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218306192 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u79", cluster_name: "drop_replica", replica_id: Some(StringWrapper { inner: "u90" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 334, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217459643 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u41", cluster_name: "single_replica_cluster", replica_id: Some(StringWrapper { inner: "u40" }), replica_name: "r1", logical_size: "1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 654, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217783134 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u74", cluster_name: "create_replica", replica_id: Some(StringWrapper { inner: "u77" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 940, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218197548 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u74", cluster_name: "create_replica", replica_id: Some(StringWrapper { inner: "u88" }), replica_name: "replica2", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 750, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217841448 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u77", cluster_name: "rename_replica", replica_id: Some(StringWrapper { inner: "u80" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 751, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217842348 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u77", cluster_name: "rename_replica", replica_id: Some(StringWrapper { inner: "u81" }), replica_name: "replica2", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 723, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217823393 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u76", cluster_name: "rename_cluster2", replica_id: Some(StringWrapper { inner: "u79" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 791, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217860727 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u78", cluster_name: "create_cluster1", replica_id: Some(StringWrapper { inner: "u82" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 1075, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218282517 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u81", cluster_name: "create_cluster2", replica_id: Some(StringWrapper { inner: "u89" }), replica_name: "replica1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 598, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217728542 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u71", cluster_name: "create_managed_cluster1", replica_id: Some(StringWrapper { inner: "u70" }), replica_name: "r1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 599, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217728542 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u71", cluster_name: "create_managed_cluster1", replica_id: Some(StringWrapper { inner: "u71" }), replica_name: "r2", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 898, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218132781 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u80", cluster_name: "create_managed_cluster2", replica_id: Some(StringWrapper { inner: "u85" }), replica_name: "r1", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 899, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218132781 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u80", cluster_name: "create_managed_cluster2", replica_id: Some(StringWrapper { inner: "u86" }), replica_name: "r2", logical_size: "2-2", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 921, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707218180179 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u19", cluster_name: "replica_annotations", replica_id: Some(StringWrapper { inner: "u87" }), replica_name: "internal_r2", logical_size: "1", disk: true, billed_as: None, internal: true })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 736, event_type: Alter, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217830506 }), details: Some(RenameItemV1(RenameItemV1 { id: "u209", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_table1" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_table2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 991, event_type: Alter, object_type: Table, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218239679 }), details: Some(RenameItemV1(RenameItemV1 { id: "u209", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_table2" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_table3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 69, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217338572 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u8", cluster_name: "materialize_public_ssh1", replica_id: Some(StringWrapper { inner: "u8" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 281, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217434306 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u32", cluster_name: "kafka_formats", replica_id: Some(StringWrapper { inner: "u31" }), replica_name: "kafka_formats_r1", logical_size: "4", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 563, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217702218 }), details: Some(RenameItemV1(RenameItemV1 { id: "u30", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_source1" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_source2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 874, event_type: Alter, object_type: Source, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218108535 }), details: Some(RenameItemV1(RenameItemV1 { id: "u30", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_source2" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_source3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 138, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217378403 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u17", cluster_name: "shared_cluster_compute_first", replica_id: Some(StringWrapper { inner: "u17" }), replica_name: "r1", logical_size: "1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 140, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217378856 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u18", cluster_name: "shared_cluster_storage_first", replica_id: Some(StringWrapper { inner: "u18" }), replica_name: "r1", logical_size: "1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 412, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217497734 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u51", cluster_name: "owner_cluster1", replica_id: Some(StringWrapper { inner: "u50" }), replica_name: "owner_cluster_r1", logical_size: "4", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 432, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217504137 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u54", cluster_name: "owner_cluster2", replica_id: Some(StringWrapper { inner: "u53" }), replica_name: "owner_cluster_r2", logical_size: "4", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 617, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "mz_system" }), occurred_at: Some(EpochMillis { millis: 1707217753025 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u19", cluster_name: "replica_annotations", replica_id: Some(StringWrapper { inner: "u72" }), replica_name: "internal_r1", logical_size: "1", disk: true, billed_as: Some("free"), internal: true })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 937, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218192887 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u558", name: Some(FullNameV1 { database: "--", schema: "</script><script>alert(123)</script>", item: "../../../../../../../../../../../etc/passwd%00" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 474, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217524549 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u57", cluster_name: "materialize_public_sink_sink1", replica_id: Some(StringWrapper { inner: "u56" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 615, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217750276 }), details: Some(RenameItemV1(RenameItemV1 { id: "u85", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewa1" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewa2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 920, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218179424 }), details: Some(RenameItemV1(RenameItemV1 { id: "u85", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewa2" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewa3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 616, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217750933 }), details: Some(RenameItemV1(RenameItemV1 { id: "u86", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewb1" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewb2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 919, event_type: Alter, object_type: View, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218178946 }), details: Some(RenameItemV1(RenameItemV1 { id: "u86", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewb2" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_view_viewb3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 47, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217328089 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u5", cluster_name: "materialize_public_upsert_delete", replica_id: Some(StringWrapper { inner: "u5" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 57, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217332044 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u6", cluster_name: "materialize_public_comment_sink1", replica_id: Some(StringWrapper { inner: "u6" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 251, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217426271 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u31", cluster_name: "privilege_cluster1", replica_id: Some(StringWrapper { inner: "u30" }), replica_name: "privilege_cluster_r1", logical_size: "4", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 470, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217522417 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u56", cluster_name: "materialize_public_sink_source", replica_id: Some(StringWrapper { inner: "u55" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 536, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217562511 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u65", cluster_name: "materialize_public_kafka_ssl_1", replica_id: Some(StringWrapper { inner: "u64" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 90, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217348880 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u11", cluster_name: "materialize_public_upsert_insert", replica_id: Some(StringWrapper { inner: "u11" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 63, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217335546 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u7", cluster_name: "materialize_public_rename_source1", replica_id: Some(StringWrapper { inner: "u7" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 116, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217364481 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u14", cluster_name: "materialize_public_range_source", replica_id: Some(StringWrapper { inner: "u14" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 349, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217464952 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u42", cluster_name: "materialize_public_mz_source_ss", replica_id: Some(StringWrapper { inner: "u41" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 384, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217488739 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u48", cluster_name: "materialize_public_decode_error", replica_id: Some(StringWrapper { inner: "u47" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 548, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217567624 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u68", cluster_name: "materialize_public_kafka_sasl_1", replica_id: Some(StringWrapper { inner: "u67" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 25, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217316750 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u2", cluster_name: "materialize_public_upsert_many_rows", replica_id: Some(StringWrapper { inner: "u2" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 409, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217496497 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u50", cluster_name: "materialize_public_owner_sink1", replica_id: Some(StringWrapper { inner: "u49" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 429, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217502803 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u53", cluster_name: "materialize_public_owner_sink2", replica_id: Some(StringWrapper { inner: "u52" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 612, event_type: Alter, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217748809 }), details: Some(RenameItemV1(RenameItemV1 { id: "u82", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_index1" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_index2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 915, event_type: Alter, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218176808 }), details: Some(RenameItemV1(RenameItemV1 { id: "u82", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_index2" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_index3" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 319, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217448925 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u38", cluster_name: "materialize_public_upsert_update", replica_id: Some(StringWrapper { inner: "u37" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 426, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217501310 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u52", cluster_name: "materialize_public_owner_source2", replica_id: Some(StringWrapper { inner: "u51" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 916, event_type: Alter, object_type: Index, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707218177308 }), details: Some(RenameItemV1(RenameItemV1 { id: "u368", old_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_index1" }), new_name: Some(FullNameV1 { database: "materialize", schema: "public", item: "rename_index_index2" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 358, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217470834 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u43", cluster_name: "materialize_public_mz_source_ssh1", replica_id: Some(StringWrapper { inner: "u42" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 406, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "owner_role_01" }), occurred_at: Some(EpochMillis { millis: 1707217495063 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u49", cluster_name: "materialize_public_owner_source1", replica_id: Some(StringWrapper { inner: "u48" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 248, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217425333 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u30", cluster_name: "materialize_public_privilege_sink1", replica_id: Some(StringWrapper { inner: "u29" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 379, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217485037 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u47", cluster_name: "materialize_public_sink_sink_null1", replica_id: Some(StringWrapper { inner: "u46" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 479, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217528126 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u58", cluster_name: "materialize_public_upsert_wide_key", replica_id: Some(StringWrapper { inner: "u57" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 370, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217476605 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u45", cluster_name: "materialize_public_debezium_source1", replica_id: Some(StringWrapper { inner: "u44" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 375, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217483263 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u46", cluster_name: "materialize_public_sink_source_null", replica_id: Some(StringWrapper { inner: "u45" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 245, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217424258 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u29", cluster_name: "materialize_public_privilege_source1", replica_id: Some(StringWrapper { inner: "u28" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 511, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217548643 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u63", cluster_name: "materialize_public_upsert_wide_value", replica_id: Some(StringWrapper { inner: "u62" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 532, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217560923 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u64", cluster_name: "materialize_public_kafka_plaintext_1", replica_id: Some(StringWrapper { inner: "u63" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 82, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217344961 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u9", cluster_name: "materialize_public_sink_source_comments", replica_id: Some(StringWrapper { inner: "u9" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 105, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217358715 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u13", cluster_name: "materialize_public_upsert_update_grow", replica_id: Some(StringWrapper { inner: "u13" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 134, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217376645 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u16", cluster_name: "materialize_public_alter_index_source", replica_id: Some(StringWrapper { inner: "u16" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 86, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217346533 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u10", cluster_name: "materialize_public_sink_sink_comments1", replica_id: Some(StringWrapper { inner: "u10" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 314, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217445968 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u37", cluster_name: "materialize_public_upsert_many_updates", replica_id: Some(StringWrapper { inner: "u36" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 496, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217538697 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u60", cluster_name: "materialize_public_upsert_enrich_value", replica_id: Some(StringWrapper { inner: "u59" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 462, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217517384 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u55", cluster_name: "materialize_public_upsert_update_shrink", replica_id: Some(StringWrapper { inner: "u54" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 42, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217322478 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u4", cluster_name: "materialize_public_alter_connection_sink_1", replica_id: Some(StringWrapper { inner: "u4" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 153, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217383457 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u20", cluster_name: "materialize_public_source_errors_sourcea", replica_id: Some(StringWrapper { inner: "u19" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 158, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217384739 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u21", cluster_name: "materialize_public_source_errors_sourceb", replica_id: Some(StringWrapper { inner: "u20" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 166, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217391263 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u22", cluster_name: "materialize_public_monotonic_top1_source", replica_id: Some(StringWrapper { inner: "u21" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 173, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217396083 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u23", cluster_name: "materialize_public_monotonic_topk_source", replica_id: Some(StringWrapper { inner: "u22" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 540, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217564248 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u66", cluster_name: "materialize_public_kafka_scram_sha_512_1", replica_id: Some(StringWrapper { inner: "u65" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 365, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217473196 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u44", cluster_name: "materialize_public_postgres_mz_now_source", replica_id: Some(StringWrapper { inner: "u43" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 37, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217320810 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u3", cluster_name: "materialize_public_alter_connection_source_1a", replica_id: Some(StringWrapper { inner: "u3" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 200, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217407647 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u26", cluster_name: "materialize_public_alter_connection_sink_2", replica_id: Some(StringWrapper { inner: "u25" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 331, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217455748 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u40", cluster_name: "materialize_public_decode_error_upsert_key", replica_id: Some(StringWrapper { inner: "u39" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 489, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217534293 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u59", cluster_name: "materialize_public_upsert_many_key_columns", replica_id: Some(StringWrapper { inner: "u58" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 507, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217544864 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u62", cluster_name: "materialize_public_alter_connection_sink_3", replica_id: Some(StringWrapper { inner: "u61" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 99, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217353183 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u12", cluster_name: "materialize_public_decode_error_upsert_value", replica_id: Some(StringWrapper { inner: "u12" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 211, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217413923 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u28", cluster_name: "materialize_public_upsert_many_value_columns", replica_id: Some(StringWrapper { inner: "u27" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 544, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217565876 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u67", cluster_name: "materialize_public_kafka_ssl_scram_sha_512_1", replica_id: Some(StringWrapper { inner: "u66" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 195, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217405516 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u25", cluster_name: "materialize_public_alter_connection_source_2a", replica_id: Some(StringWrapper { inner: "u24" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 324, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217451816 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u39", cluster_name: "materialize_public_multiple_partitions_source", replica_id: Some(StringWrapper { inner: "u38" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 502, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217542318 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u61", cluster_name: "materialize_public_alter_connection_source_3a", replica_id: Some(StringWrapper { inner: "u60" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 126, event_type: Create, object_type: ClusterReplica, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217370986 }), details: Some(CreateClusterReplicaV1(CreateClusterReplicaV1 { cluster_id: "u15", cluster_name: "materialize_public_sink_large_transaction_sink1", replica_id: Some(StringWrapper { inner: "u15" }), replica_name: "linked", logical_size: "4-1", disk: true, billed_as: None, internal: false })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 190, event_type: Create, object_type: Secret, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217402199 }), details: Some(IdFullNameV1(IdFullNameV1 { id: "u115", name: Some(FullNameV1 { database: "--", schema: "public", item: "<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>" }) })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 644, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217776120 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u383", name: Some(FullNameV1 { database: "--", schema: "</script><script>alert(123)</script>", item: "<a href=\"\\xE2\\x80\\xA9javascript:javascript:alert(1)\" id=\"fuzzelement1\">test</a>" }), size: None, external_type: "kafka" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 177, event_type: Create, object_type: Role, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217398229 }), details: Some(IdNameV1(IdNameV1 { id: "u3", name: "à¸”\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}\u{e47}\u{e47}\u{e47}\u{e47}\u{e47}\u{e49}\u{e49}\u{e49}\u{e49}\u{e49}" })) })) }, 1), (AuditLogKey { event: Some(V1(AuditLogEventV1 { id: 189, event_type: Create, object_type: Sink, user: Some(StringWrapper { inner: "materialize" }), occurred_at: Some(EpochMillis { millis: 1707217401970 }), details: Some(CreateSourceSinkV2(CreateSourceSinkV2 { id: "u114", name: Some(FullNameV1 { database: "--", schema: "</script><script>alert(123)</script>", item: "ð“ð¡ðž ðªð®ð¢ðœð¤ ð›ð«ð¨ð°ð§ ðŸð¨ð± ð£ð®ð¦ð©ð¬ ð¨ð¯ðžð« ð­ð¡ðž ð¥ðšð³ð² ðð¨ð " }), size: None, external_type: "kafka" })) })) }, 1)]), storage_usage_events: Open([]), metrics: Metrics { transactions_started: GenericCounter { v: Value { desc: Desc { fq_name: "mz_catalog_transactions_started", help: "Total number of started transactions.", const_label_pairs: [], variable_labels: [], id: 1875308147234131929, dim_hash: 13159768681137058128 }, val: AtomicU64 { inner: 1 }, val_type: Counter, label_pairs: [] } }, transaction_commits: GenericCounter { v: Value { desc: Desc { fq_name: "mz_catalog_transaction_commits", help: "Count of transaction commits.", const_label_pairs: [], variable_labels: [], id: 7137980384319676477, dim_hash: 8011808266256082248 }, val: AtomicU64 { inner: 1 }, val_type: Counter, label_pairs: [] } }, transaction_commit_latency_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_catalog_transaction_commit_latency_seconds", help: "Total latency for committing a durable catalog transactions.", const_label_pairs: [], variable_labels: [], id: 7839120257030943237, dim_hash: 15482876126025157028 }, val: AtomicF64 { inner: 4568820037174595896 }, val_type: Counter, label_pairs: [] } }, snapshots_taken: GenericCounter { v: Value { desc: Desc { fq_name: "mz_catalog_snapshots_taken", help: "Count of snapshots taken.", const_label_pairs: [], variable_labels: [], id: 13899276413805722485, dim_hash: 6969248358650810392 }, val: AtomicU64 { inner: 1 }, val_type: Counter, label_pairs: [] } }, snapshot_latency_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_catalog_snapshot_latency_seconds", help: "Total latency for fetching a snapshot of the durable catalog.", const_label_pairs: [], variable_labels: [], id: 5646615158432136077, dim_hash: 7206521903471057826 }, val: AtomicF64 { inner: 4590727477482106957 }, val_type: Counter, label_pairs: [] } }, syncs: GenericCounter { v: Value { desc: Desc { fq_name: "mz_catalog_syncs", help: "Count of catalog syncs.", const_label_pairs: [], variable_labels: [], id: 10288899364741560006, dim_hash: 1689438624737511833 }, val: AtomicU64 { inner: 1 }, val_type: Counter, label_pairs: [] } }, sync_latency_seconds: GenericCounter { v: Value { desc: Desc { fq_name: "mz_catalog_sync_latency_seconds", help: "Total latency for syncing the in-memory state of the durable catalog with the persisted contents.", const_label_pairs: [], variable_labels: [], id: 10845436243461440908, dim_hash: 10214360195687093143 }, val: AtomicF64 { inner: 4538744285781065124 }, val_type: Counter, label_pairs: [] } } } })
""".strip()


class KnownIssue:
    def __init__(self, regex: re.Pattern[Any], apply_to: str | None, info: Any):
        self.regex = regex
        self.apply_to = apply_to
        self.info = info


class ErrorLog:
    def __init__(self, match: bytes, file: str):
        self.match = match
        self.file = file


def main() -> int:
    parser = argparse.ArgumentParser(
        prog="ci-logged-errors-detect",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description="""
ci-logged-errors-detect detects errors in log files during CI and finds
associated open GitHub issues in Materialize repository.""",
    )

    parser.add_argument("log_files", nargs="+", help="log files to search in")
    args = parser.parse_args()

    return annotate_logged_errors(args.log_files)


def annotate_errors(errors: list[str], title: str, style: str) -> None:
    if not errors:
        return

    errors = group_identical_errors(errors)
    suite_name = os.getenv("BUILDKITE_LABEL") or "Logged Errors"

    error_str = "\n".join(f"* {error}" for error in errors)
    # 400 Bad Request: The annotation body must be less than 1 MB
    if len(error_str) > 900_000:
        error_str = error_str[:900_000] + "..."

    if style == "info":
        markdown = f"""<details><summary>{suite_name}: {title}</summary>

{error_str}
</details>"""
    else:
        markdown = f"""{suite_name}: {title}

{error_str}"""

    spawn.runv(
        [
            "buildkite-agent",
            "annotate",
            f"--style={style}",
            f"--context={os.environ['BUILDKITE_JOB_ID']}-{style}",
        ],
        stdin=markdown.encode(),
    )


def group_identical_errors(errors: list[str]) -> list[str]:
    errors_with_counts: dict[str, int] = {}

    for error in errors:
        errors_with_counts[error] = 1 + errors_with_counts.get(error, 0)

    consolidated_errors = []

    for error, count in errors_with_counts.items():
        consolidated_errors.append(
            error if count == 1 else f"{error}\n({count} occurrences)"
        )

    return consolidated_errors


def annotate_logged_errors(log_files: list[str]) -> int:
    """
    Returns the number of unknown errors, 0 when all errors are known or there
    were no errors logged. This will be used to fail a test even if the test
    itself succeeded, as long as it had any unknown error logs.
    """

    error_logs = get_error_logs(log_files)

    if not error_logs:
        error_logs = []

    step_key = os.getenv("BUILDKITE_STEP_KEY", "")
    os.getenv("BUILDKITE_LABEL", "")

    (known_issues, unknown_errors) = get_known_issues_from_github()

    artifacts = ci_util.get_artifacts()
    job = os.getenv("BUILDKITE_JOB_ID")

    known_errors: list[str] = []

    # Keep track of known errors so we log each only once

    if step_key == "cloudtest":
        unknown_errors.append(
            "Unknown error starting with backtick 1:  \n```\n`error_message`\n```"
        )
        unknown_errors.append(
            "Unknown error starting with backtick 2:  \n```\n`error_message` happened\n```"
        )
    elif step_key == "cluster-isolation":
        error_message = sanitize_text(WALL_OF_TEXT)
        formatted_error_message = f"```\n{error_message}\n```"

        unknown_errors.append(
            f"Fat error: {formatted_error_message}"
        )


    for error in error_logs:
        error_message = sanitize_text(error.match.decode("utf-8"))
        formatted_error_message = f"```\n{error_message}\n```"

        for artifact in artifacts:
            if artifact["job_id"] == job and artifact["path"] == error.file:
                org = os.environ["BUILDKITE_ORGANIZATION_SLUG"]
                pipeline = os.environ["BUILDKITE_PIPELINE_SLUG"]
                build = os.environ["BUILDKITE_BUILD_NUMBER"]
                linked_file = f'[{error.file}](https://buildkite.com/organizations/{org}/pipelines/{pipeline}/builds/{build}/jobs/{artifact["job_id"]}/artifacts/{artifact["id"]})'
                break
        else:
            linked_file = error.file

        unknown_errors.append(
            f"Unknown error in {linked_file}:  \n{formatted_error_message}"
        )

    annotate_errors(
        unknown_errors,
        "Unknown errors and regressions in logs (see [ci-regexp](https://github.com/MaterializeInc/materialize/blob/main/doc/developer/ci-regexp.md))",
        "error",
    )
    annotate_errors(known_errors, "Known errors in logs, ignoring", "info")

    if unknown_errors:
        print(
            f"+++ Failing test because of {len(unknown_errors)} unknown error(s) in logs:"
        )
        print(unknown_errors)

    return len(unknown_errors)


def get_error_logs(log_files: list[str]) -> list[ErrorLog]:
    error_logs = []
    for log_file in log_files:
        with open(log_file, "r+") as f:
            try:
                data = mmap.mmap(f.fileno(), 0)
            except ValueError:
                # empty file, ignore
                continue
            for match in ERROR_RE.finditer(data):
                if IGNORE_RE.search(match.group(0)):
                    continue
                # environmentd segfaults during normal shutdown in coverage builds, see #20016
                # Ignoring this in regular ways would still be quite spammy.
                if (
                    b"environmentd" in match.group(0)
                    and b"segfault at" in match.group(0)
                    and ui.env_is_truthy("CI_COVERAGE_ENABLED")
                ):
                    continue
                error_logs.append(ErrorLog(match.group(0), log_file))
            open_panics = {}
            for line in iter(data.readline, b""):
                line = line.rstrip(b"\n")
                if match := PANIC_START_RE.match(line):
                    service = match.group("service")
                    assert (
                        service not in open_panics
                    ), f"Two panics of same service {service} interleaving: {line}"
                    open_panics[service] = line
                elif open_panics:
                    if match := SERVICES_LOG_LINE_RE.match(line):
                        # Handling every services.log line here, filter to
                        # handle only the ones which are currently in a panic
                        # handler:
                        if panic_start := open_panics.get(match.group("service")):
                            del open_panics[match.group("service")]
                            if IGNORE_RE.search(match.group(0)):
                                continue
                            error_logs.append(
                                ErrorLog(
                                    panic_start + b" " + match.group("msg"), log_file
                                )
                            )
            assert not open_panics, f"Panic log never finished: {open_panics}"

    # TODO: Only report multiple errors once?
    return error_logs


def sanitize_text(text: str, max_length: int = 4000) -> str:
    if len(text) > max_length:
        text = text[:max_length]

    text = text.replace("```", r"\`\`\`")

    return text


def get_known_issues_from_github_page(page: int = 1) -> Any:
    headers = {
        "Accept": "application/vnd.github+json",
        "X-GitHub-Api-Version": "2022-11-28",
    }
    if token := os.getenv("GITHUB_TOKEN"):
        headers["Authorization"] = f"Bearer {token}"

    response = requests.get(
        f'https://api.github.com/search/issues?q=repo:MaterializeInc/materialize%20type:issue%20in:body%20"ci-regexp%3A"&per_page=100&page={page}',
        headers=headers,
    )

    if response.status_code != 200:
        raise ValueError(f"Bad return code from GitHub: {response.status_code}")

    issues_json = response.json()
    assert issues_json["incomplete_results"] == False
    return issues_json


def get_known_issues_from_github() -> tuple[list[KnownIssue], list[str]]:
    page = 1
    issues_json = get_known_issues_from_github_page(page)
    while issues_json["total_count"] > len(issues_json["items"]):
        page += 1
        next_page_json = get_known_issues_from_github_page(page)
        if not next_page_json["items"]:
            break
        issues_json["items"].extend(next_page_json["items"])

    unknown_errors = []
    known_issues = []

    for issue in issues_json["items"]:
        matches = CI_RE.findall(issue["body"])
        matches_apply_to = CI_APPLY_TO.findall(issue["body"])
        for match in matches:
            try:
                regex_pattern = re.compile(match.strip().encode("utf-8"))
            except:
                unknown_errors.append(
                    f"[{issue.info['title']} (#{issue.info['number']})]({issue.info['html_url']}): Invalid regex in ci-regexp: {match.strip()}, ignoring"
                )
                continue

            if matches_apply_to:
                for match_apply_to in matches_apply_to:
                    known_issues.append(
                        KnownIssue(regex_pattern, match_apply_to.strip().lower(), issue)
                    )
            else:
                known_issues.append(KnownIssue(regex_pattern, None, issue))

    return (known_issues, unknown_errors)


if __name__ == "__main__":
    sys.exit(main())
