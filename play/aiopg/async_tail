#!/usr/bin/env python3

import argparse
import asyncio

import aiopg

async def tail_count_order(args):
    """Record the current table status of all views installed in Materialize.

    Will continue until the query runs out or interrupted.
    """

    dsn = f'dbname=materialize host={args.host} port={args.port}'

    async with aiopg.create_pool(dsn) as pool:
        async with pool.acquire() as conn:
            async with conn.cursor() as cursor:
                await cursor.execute("SELECT 1")
                async for row in cursor:
                    print(row)

"""
                async with cursor.copy(f"COPY (TAIL {args.view} WITH (PROGRESS)) TO STDOUT") as tail:
                    async for row in tail:
                        row = row.decode('utf-8')
                        (timestamp, progressed, diff, *columns) = row.strip().split('\t')
                        print(f"{timestamp} {progressed} {diff} {columns}")
"""

if __name__ == '__main__':

    parser = argparse.ArgumentParser()
    parser.add_argument("--host", help="Materialize hostname", default="localhost", type=str)
    parser.add_argument("-p", "--port", help="Materialize port number", default=6875, type=int)

    parser.add_argument("view", help="Name of the view to TAIL", type=str)

    args = parser.parse_args()

    loop = asyncio.get_event_loop()
    loop.run_until_complete(tail_count_order(args))
    loop.close()
