# When using Rustup, this file specifies the version of the Rust toolchain used
# to build Materialize.
#
# ==> Rust version policy <==
#
# * We track a recent stable version of Rust.
#
# * Bumping the Rust version happens ad hoc, not on a fixed schedule. We usually
#   upgrade because a Materialize developer wants access to the features in the
#   new version. (This developer could be you!)
#
# * We are not concerned about letting stable releases of Rust "bake" for a few
#   days/weeks/months before we upgrade. Empirically, Rust releases have been
#   quite stable on the day of their release.
#
# * We actually only care about enforcing a *minimum* version, but the
#   `rust-toolchain` file doesn't provide that expressivity. It is okay if
#   downstream packagers or users want to compile Materialize with newer
#   versions of Rust.
#
#   See https://github.com/rust-lang/rust/issues/65262 for a feature that would
#   allow us to specify a minimum version rather than a fixed version.
#
# * Homebrew *must* be shipping at least the version of Rust we specify here.
#   When Homebrew builds Materialize from source, it ignores this file and uses
#   a Homebrew-installed Rust. If that version isn't at least as new as the
#   version specified here, Materialize is likely to use features that are
#   unavailable in the Homebrew-provided version, and it will fail to compile.
#
# ==> Version bump checklist <==
#
# * Update the version number below.
#
# * Verify the new version, or an even newer version, is available in Homebrew.
#   See: https://github.com/Homebrew/homebrew-core/blob/master/Formula/rust.rb#L7
#
# * Rebuild the CI builder image.
#   See: ci/builder/README.md

[toolchain]
channel = "1.57.0"
profile = "default"
