[package]
name = "mz-adapter"
description = "Materialize's adapter layer."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[dependencies]
anyhow = "1.0.98"
arrow = { version = "53.3.0", default-features = false }
async-trait = "0.1.88"
bytes = "1.10.1"
bytesize = "1.3.0"
chrono = { version = "0.4.41", default-features = false, features = ["std"] }
dec = "0.4.8"
derivative = "2.2.0"
differential-dataflow = "0.14.2"
enum-kinds = "0.5.1"
fail = { version = "0.5.1", features = ["failpoints"] }
futures = "0.3.31"
governor = "0.6.3"
hex = "0.4.3"
http = "1.2.0"
hyper-tls = "0.5.0"
ipnet = "2.11.0"
itertools = "0.14.0"
launchdarkly-server-sdk = { version = "2.5.1", default-features = false }
maplit = "1.0.2"
mz-adapter-types = { path = "../adapter-types" }
mz-audit-log = { path = "../audit-log" }
mz-auth = { path = "../auth" }
mz-build-info = { path = "../build-info" }
mz-catalog = { path = "../catalog" }
mz-cloud-provider = { path = "../cloud-provider", default-features = false }
mz-cloud-resources = { path = "../cloud-resources" }
mz-cluster-client = { path = "../cluster-client" }
mz-compute-client = { path = "../compute-client" }
mz-compute-types = { path = "../compute-types" }
mz-controller = { path = "../controller" }
mz-controller-types = { path = "../controller-types" }
mz-dyncfg = { path = "../dyncfg" }
mz-expr = { path = "../expr" }
mz-license-keys = { path = "../license-keys" }
mz-kafka-util = { path = "../kafka-util" }
mz-metrics = { path = "../metrics" }
mz-mysql-util = { path = "../mysql-util" }
mz-orchestrator = { path = "../orchestrator" }
mz-ore = { path = "../ore", features = ["chrono", "async", "panic", "process", "tracing", "id_gen"] }
mz-persist-types = { path = "../persist-types" }
mz-persist-client = { path = "../persist-client" }
mz-pgcopy = { path = "../pgcopy" }
mz-pgrepr = { path = "../pgrepr" }
mz-pgwire-common = { path = "../pgwire-common" }
mz-postgres-util = { path = "../postgres-util" }
mz-proto = { path = "../proto" }
mz-repr = { path = "../repr", features = ["tracing"] }
mz-rocksdb-types = { path = "../rocksdb-types" }
mz-secrets = { path = "../secrets" }
mz-segment = { path = "../segment" }
mz-service = { path = "../service" }
mz-sql = { path = "../sql" }
mz-sql-parser = { path = "../sql-parser" }
mz-ssh-util = { path = "../ssh-util" }
mz-storage-client = { path = "../storage-client" }
mz-storage-types = { path = "../storage-types" }
mz-tracing = { path = "../tracing" }
mz-transform = { path = "../transform" }
mz-timestamp-oracle = { path = "../timestamp-oracle" }
opentelemetry = { version = "0.24.0", features = ["trace"] }
prometheus = { version = "0.13.4", default-features = false }
prost = { version = "0.13.5", features = ["no-recursion-limit"] }
qcell = "0.5"
rand = "0.8.5"
rand_chacha = "0.3"
semver = "1.0.26"
serde = "1.0.219"
serde_json = "1.0.127"
serde_plain = "1.0.2"
sha2 = "0.10.8"
smallvec = { version = "1.14.0", features = ["union"] }
static_assertions = "1.1"
timely = "0.20.0"
tokio = { version = "1.44.1", features = ["rt", "time"] }
tokio-postgres = { version = "0.7.8" }
tracing = "0.1.37"
tracing-core = "0.1.30"
tracing-opentelemetry = { version = "0.25.0" }
tracing-subscriber = "0.3.19"
thiserror = "2.0.12"
url = "2.3.1"
uuid = { version = "1.16.0" }
workspace-hack = { version = "0.0.0", path = "../workspace-hack", optional = true }

[dev-dependencies]
criterion = { version = "0.5.1", features = ["async_tokio"] }
datadriven = "0.8.0"

[[bench]]
name = "catalog"
harness = false

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]

[package.metadata.cargo-gazelle.lib]
# TODO(parkmycar): No idea what, but something in this crate is non-deterministic and it breaks
# pipelining.
disable_pipelining = true

[package.metadata.cargo-gazelle.test.sql]
data = ["tests/testdata/sql"]

[package.metadata.cargo-gazelle.test.timestamp_selection]
data = ["tests/testdata/timestamp_selection"]

[features]
default = ["workspace-hack"]
