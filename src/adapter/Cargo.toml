[package]
name = "mz-adapter"
description = "Materialize's adapter layer."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[dependencies]
anyhow = "1.0.66"
async-trait = "0.1.68"
bytes = "1.3.0"
bytesize = "1.1.0"
chrono = { version = "0.4.23", default-features = false, features = ["std"] }
dec = "0.4.8"
deadpool-postgres = "0.10.3"
derivative = "2.2.0"
differential-dataflow = "0.12.0"
enum-kinds = "0.5.1"
fail = { version = "0.5.1", features = ["failpoints"] }
futures = "0.3.25"
governor = "0.6.0"
hex = "0.4.3"
http = "0.2.8"
itertools = "0.10.5"
once_cell = "1.16.0"
launchdarkly-server-sdk = { version = "1.0.0", default_features = false, features = [
  "hypertls",
] }
maplit = "1.0.2"
mz-adapter-types = { path = "../adapter-types" }
mz-audit-log = { path = "../audit-log" }
mz-build-info = { path = "../build-info" }
mz-catalog = { path = "../catalog" }
mz-ccsr = { path = "../ccsr" }
mz-cloud-resources = { path = "../cloud-resources" }
mz-cluster-client = { path = "../cluster-client" }
mz-compute-client = { path = "../compute-client" }
mz-compute-types = { path = "../compute-types" }
mz-controller = { path = "../controller" }
mz-controller-types = { path = "../controller-types" }
mz-expr = { path = "../expr" }
mz-kafka-util = { path = "../kafka-util" }
mz-orchestrator = { path = "../orchestrator" }
mz-ore = { path = "../ore", features = ["chrono", "async", "tracing_"] }
mz-persist-types = { path = "../persist-types" }
mz-persist-client = { path = "../persist-client" }
mz-pgcopy = { path = "../pgcopy" }
mz-pgrepr = { path = "../pgrepr" }
mz-pgwire-common = { path = "../pgwire-common" }
mz-postgres-client = { path = "../postgres-client" }
mz-postgres-util = { path = "../postgres-util" }
mz-proto = { path = "../proto" }
mz-repr = { path = "../repr", features = ["tracing_"] }
mz-rocksdb-types = { path = "../rocksdb-types" }
mz-secrets = { path = "../secrets" }
mz-segment = { path = "../segment" }
mz-service = { path = "../service" }
mz-sql = { path = "../sql" }
mz-sql-parser = { path = "../sql-parser" }
mz-ssh-util = { path = "../ssh-util" }
mz-stash = { path = "../stash" }
mz-storage-client = { path = "../storage-client" }
mz-storage-types = { path = "../storage-types" }
mz-tls-util = { path = "../tls-util" }
mz-tracing = { path = "../tracing" }
mz-transform = { path = "../transform" }
mz-timestamp-oracle = { path = "../timestamp-oracle" }
opentelemetry = { version = "0.21.0", features = ["trace"] }
prometheus = { version = "0.13.3", default-features = false }
proptest = { version = "1.0.0", default-features = false, features = ["std"] }
proptest-derive = { version = "0.3.0", features = ["boxed_union"] }
prost = { version = "0.11.3", features = ["no-recursion-limit"] }
qcell = "0.5"
rand = "0.8.5"
rand_chacha = "0.3"
rdkafka = { version = "0.29.0", features = [
  "cmake-build",
  "ssl-vendored",
  "libz-static",
  "zstd",
] }
regex = "1.7.0"
reqwest = "0.11.13"
semver = "1.0.16"
serde = "1.0.152"
serde_json = "1.0.89"
serde_plain = "1.0.1"
sha2 = "0.10.6"
smallvec = { version = "1.10.0", features = ["union"] }
static_assertions = "1.1"
timely = { version = "0.12.0", default-features = false, features = [
  "bincode",
] }
tokio = { version = "1.32.0", features = ["rt", "time"] }
tokio-postgres = { version = "0.7.8" }
tokio-stream = "0.1.11"
tracing = "0.1.37"
tracing-core = "0.1.30"
tracing-opentelemetry = { version = "0.22.0" }
tracing-subscriber = "0.3.16"
thiserror = "1.0.37"
uncased = "0.9.7"
url = "2.3.1"
uuid = { version = "1.7.0", features = ["v4"] }
workspace-hack = { version = "0.0.0", path = "../workspace-hack" }

[dev-dependencies]
criterion = { version = "0.4.0", features = ["async_tokio"] }
datadriven = "0.6.0"


[[bench]]
name = "catalog"
harness = false

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]
