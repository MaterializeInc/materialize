# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

#  __  __                         _ _        __        __    _ _   _
# |  \/  | __ _ _ __  _   _  __ _| | |_   _  \ \      / / __(_) |_| |_ ___ _ __
# | |\/| |/ _` | '_ \| | | |/ _` | | | | | |  \ \ /\ / / '__| | __| __/ _ \ '_ \
# | |  | | (_| | | | | |_| | (_| | | | |_| |   \ V  V /| |  | | |_| ||  __/ | | |
# |_|  |_|\__,_|_| |_|\__,_|\__,_|_|_|\__, |    \_/\_/ |_|  |_|\__|\__\___|_| |_|
#                                     |___/
#
# We manually maintain/write this BUILD.bazel file for the following reasons:
#   1. We only use `jemalloc` on Linux and when a Bazel build setting is enabled.

load("@crates_io//:defs.bzl", "aliases", "all_crate_deps")
load("@rules_rust//cargo:defs.bzl", "extract_cargo_lints")
load("@rules_rust//rust:defs.bzl", "rust_doc_test", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "mz_alloc",
    srcs = glob(["src/**/*.rs"]),
    aliases = aliases(
        normal = True,
        proc_macro = True,
    ),
    compile_data = [],
    crate_features = ["default"] + select({
        "@//misc/bazel/platforms:use_jemalloc": [
            "jemalloc",
            "mz-prof",
            "tikv-jemallocator",
        ],
        "//conditions:default": [],
    }),
    data = [],
    lint_config = ":lints",
    proc_macro_deps = [] + all_crate_deps(proc_macro = True),
    rustc_env = {},
    rustc_flags = [],
    version = "0.0.0",
    deps = [
        "//src/ore:mz_ore",
        "//src/prof:mz_prof",
        "//src/prof-http:mz_prof_http",
    ] + all_crate_deps(normal = True),
)

alias(
    name = "alloc",
    actual = "mz_alloc",
)

rust_test(
    name = "mz_alloc_lib_tests",
    size = "medium",
    aliases = aliases(
        normal = True,
        normal_dev = True,
        proc_macro = True,
        proc_macro_dev = True,
    ),
    compile_data = [],
    crate = ":mz_alloc",
    crate_features = ["default"] + select({
        "@//misc/bazel/platforms:linux_arm": [
            "jemalloc",
            "mz-prof",
            "tikv-jemallocator",
        ],
        "@//misc/bazel/platforms:linux_x86_64": [
            "jemalloc",
            "mz-prof",
            "tikv-jemallocator",
        ],
        "//conditions:default": [],
    }),
    data = [],
    env = {},
    lint_config = ":lints",
    proc_macro_deps = [] + all_crate_deps(
        proc_macro = True,
        proc_macro_dev = True,
    ),
    rustc_env = {},
    rustc_flags = [],
    version = "0.0.0",
    deps = [
        "//src/ore:mz_ore",
        "//src/prof:mz_prof",
        "//src/prof-http:mz_prof_http",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)

rust_doc_test(
    name = "mz_alloc_doc_test",
    crate = ":mz_alloc",
    deps = [
        "//src/ore:mz_ore",
        "//src/prof:mz_prof",
        "//src/prof-http:mz_prof_http",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)

extract_cargo_lints(
    name = "lints",
    manifest = "Cargo.toml",
    workspace = "@//:Cargo.toml",
)
