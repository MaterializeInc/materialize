[package]
name = "mz-catalog-protos"
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[dependencies]
mz-audit-log = { path = "../audit-log" }
mz-compute-types = { path = "../compute-types" }
mz-controller-types = { path = "../controller-types" }
mz-proto = { path = "../proto" }
mz-repr = { path = "../repr" }
mz-sql = { path = "../sql" }
mz-storage-types = { path = "../storage-types" }
paste = "1.0.11"
proptest = { version = "1.6.0", default-features = false, features = ["std"] }
proptest-derive = { version = "0.5.1", features = ["boxed_union"] }
prost = "0.13.5"
serde = { version = "1.0.219", features = ["derive"] }
workspace-hack = { version = "0.0.0", path = "../workspace-hack", optional = true }

[dev-dependencies]
mz-build-tools = { path = "../build-tools", default-features = false }
mz-ore = { path = "../ore", features = ["test"] }
mz-proto = { path = "../proto" }
proptest = { version = "1.6.0", default-features = false, features = ["std"] }
similar-asserts = "1.4"

[build-dependencies]
anyhow = "1.0.98"
md-5 = "0.10.6"
mz-build-tools = { path = "../build-tools", default-features = false }
prost-build = "0.13.5"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.127"

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]

[package.metadata.cargo-gazelle]
# TODO(parkmycar): Get rid of this hack by introducing a `catalog-types` crate.
# This exists because there is a test in the `catalog` crate (`test_proto_serialization_stability`)
# that needs both the protobuf definitions, but also some catalog types.
additive_content = """
filegroup(
    name = "all_protos",
    srcs = glob(["protos/**"]),
)
"""

[package.metadata.cargo-gazelle.build]
data = ["protos/**"]

[package.metadata.cargo-gazelle.test.lib]
data = ["protos/**"]

[features]
default = ["workspace-hack"]
