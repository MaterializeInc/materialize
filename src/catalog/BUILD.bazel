# Code generate by cargo-gazelle DO NOT EDIT

package(default_visibility = ["//visibility:public"])

load("@crate_index//:defs.bzl", "aliases", "all_crate_deps",)
load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test",)
load("@rules_rust//cargo:defs.bzl", "cargo_build_script")

rust_library(
	name = "mz_catalog",
	srcs = glob(["src/**/*.rs"]),
	crate_features = [
	],
	aliases = aliases(
		normal = True,
		proc_macro = True,
	),
	deps = [
		":mz_catalog-build",
		"//src/adapter-types:mz_adapter_types",
		"//src/audit-log:mz_audit_log",
		"//src/build-info:mz_build_info",
		"//src/cloud-resources:mz_cloud_resources",
		"//src/compute-client:mz_compute_client",
		"//src/controller:mz_controller",
		"//src/controller-types:mz_controller_types",
		"//src/expr:mz_expr",
		"//src/orchestrator:mz_orchestrator",
		"//src/ore:mz_ore",
		"//src/persist-client:mz_persist_client",
		"//src/persist-types:mz_persist_types",
		"//src/pgrepr:mz_pgrepr",
		"//src/pgtz:mz_pgtz",
		"//src/proto:mz_proto",
		"//src/repr:mz_repr",
		"//src/secrets:mz_secrets",
		"//src/sql:mz_sql",
		"//src/sql-parser:mz_sql_parser",
		"//src/storage-client:mz_storage_client",
		"//src/storage-controller:mz_storage_controller",
		"//src/storage-types:mz_storage_types",
	] + all_crate_deps(normal = True),
	proc_macro_deps = [
	] + all_crate_deps(proc_macro = True),
	rustc_env = {
		"TARGET_TRIPLE": "aarch64-apple-darwin",
	},
)

cargo_build_script(
    name = "mz_catalog-build",
    srcs = ["build.rs"],
    deps = all_crate_deps(build = True) + [
		"//src/build-tools:mz_build_tools",
	],
    proc_macro_deps = all_crate_deps(build_proc_macro = True),
    data = glob(["protos/**/*"]),
)
