[package]
name = "mz-clusterd"
description = "Materialize's cluster server."
version = "0.107.3"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[dependencies]
anyhow = "1.0.66"
axum = "0.6.20"
clap = { version = "3.2.24", features = ["derive", "env"] }
fail = { version = "0.5.1", features = ["failpoints"] }
futures = "0.3.25"
mz-alloc = { path = "../alloc" }
mz-alloc-default = { path = "../alloc-default", optional = true }
mz-build-info = { path = "../build-info" }
mz-cloud-resources = { path = "../cloud-resources" }
mz-compute = { path = "../compute" }
mz-cluster = { path = "../cluster" }
mz-compute-client = { path = "../compute-client" }
mz-dyncfgs = { path = "../dyncfgs" }
mz-http-util = { path = "../http-util" }
mz-metrics = { path = "../metrics" }
mz-orchestrator-tracing = { path = "../orchestrator-tracing" }
mz-ore = { path = "../ore", features = ["async", "tracing_"] }
mz-persist-client = { path = "../persist-client" }
mz-prof-http = { path = "../prof-http" }
mz-service = { path = "../service" }
mz-storage = { path = "../storage" }
mz-storage-client = { path = "../storage-client" }
mz-storage-types = { path = "../storage-types" }
mz-timely-util = { path = "../timely-util" }
mz-txn-wal = { path = "../txn-wal" }
once_cell = { version = "1.16.0" }
timely = { version = "0.12.0", default-features = false, features = ["bincode"] }
tokio = { version = "1.32.0", features = ["fs", "rt", "sync", "test-util"] }
tracing = "0.1.37"
workspace-hack = { version = "0.0.0", path = "../workspace-hack" }

[features]
default = ["tokio-console", "mz-alloc-default"]
jemalloc = ["mz-alloc/jemalloc"]
tokio-console = ["mz-ore/tokio-console"]

[package.metadata.cargo-udeps.ignore]
normal = ["mz-alloc-default", "workspace-hack"]
