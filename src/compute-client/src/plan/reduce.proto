// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

// See https://developers.google.com/protocol-buffers for what's going on here.

syntax = "proto3";

import "expr/src/linear.proto";
import "expr/src/relation.proto";
import "google/protobuf/empty.proto";

package mz_compute_client.plan.reduce;

message ProtoReducePlan {
    oneof kind {
        google.protobuf.Empty distinct = 1;
        google.protobuf.Empty distinct_negated = 2;
        ProtoAccumulablePlan accumulable = 3;
        ProtoHierarchicalPlan hierarchical = 4;
        ProtoBasicPlan basic = 5;
        ProtoCollationPlan collation = 6;
    }
}

message ProtoAccumulablePlan {
    message ProtoAggr {
        uint64 index_agg = 1;
        uint64 index_inp = 2;
        mz_expr.relation.ProtoAggregateExpr expr = 3;
    }

    repeated mz_expr.relation.ProtoAggregateExpr full_aggrs = 1;
    repeated ProtoAggr simple_aggrs = 2;
    repeated ProtoAggr distinct_aggrs = 3;
}

message ProtoHierarchicalPlan {
    oneof kind {
        ProtoMonotonicPlan monotonic = 1;
        ProtoBucketedPlan bucketed = 2;
    }
}

message ProtoMonotonicPlan {
    repeated mz_expr.relation.ProtoAggregateFunc aggr_funcs = 1;
    repeated uint64 skips = 2;
    bool must_consolidate = 3;
}


message ProtoBucketedPlan {
    repeated mz_expr.relation.ProtoAggregateFunc aggr_funcs = 1;
    repeated uint64 skips = 2;
    repeated uint64 buckets = 3;
}

message ProtoBasicPlan {
    message ProtoSingleBasicPlan {
        uint64 index = 1;
        mz_expr.relation.ProtoAggregateExpr expr = 2;
    };

    message ProtoMultipleBasicPlan {
        repeated ProtoSingleBasicPlan aggrs = 1;
    }


    oneof kind {
        ProtoSingleBasicPlan single = 1;
        ProtoMultipleBasicPlan multiple = 2;
    }
}

message ProtoCollationPlan {
    ProtoAccumulablePlan accumulable = 1;
    ProtoHierarchicalPlan hierarchical = 2;
    ProtoBasicPlan basic = 3;
    repeated ProtoReductionType aggregate_types = 4;
}

message ProtoReductionType {
    oneof kind {
        google.protobuf.Empty accumulable = 1;
        google.protobuf.Empty hierarchical = 2;
        google.protobuf.Empty basic = 3;
    }
}

message ProtoKeyValPlan {
    mz_expr.linear.ProtoSafeMfpPlan key_plan = 1;
    mz_expr.linear.ProtoSafeMfpPlan val_plan = 2;
}
