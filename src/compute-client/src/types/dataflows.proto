// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

import "compute-client/src/plan.proto";
import "compute-client/src/types/sinks.proto";
import "compute-client/src/types/sources.proto";
import "expr/src/scalar.proto";
import "repr/src/antichain.proto";
import "repr/src/global_id.proto";
import "repr/src/relation_and_scalar.proto";

package mz_compute_client.types.dataflows;

message ProtoDataflowDescription {
    message ProtoSourceImport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        sources.ProtoSourceInstanceDesc source_instance_desc = 2;
        bool monotonic = 3;
    }

    message ProtoIndexImport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        ProtoIndexDesc index_desc = 2;
        mz_repr.relation_and_scalar.ProtoRelationType typ = 3;
        bool monotonic = 4;
    }

    message ProtoIndexExport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        ProtoIndexDesc index_desc = 2;
        mz_repr.relation_and_scalar.ProtoRelationType typ = 3;
    }

    message ProtoSinkExport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        sinks.ProtoComputeSinkDesc sink_desc = 2;
    }

    repeated ProtoSourceImport source_imports = 1;
    repeated ProtoIndexImport index_imports = 2;
    repeated ProtoBuildDesc objects_to_build = 3;
    repeated ProtoIndexExport index_exports = 4;
    repeated ProtoSinkExport sink_exports = 5;
    optional mz_repr.antichain.ProtoU64Antichain as_of = 6;
    mz_repr.antichain.ProtoU64Antichain until = 7;
    string debug_name = 8;
}

message ProtoIndexDesc {
    mz_repr.global_id.ProtoGlobalId on_id = 1;
    repeated mz_expr.scalar.ProtoMirScalarExpr key = 2;
}

message ProtoBuildDesc {
    mz_repr.global_id.ProtoGlobalId id = 1;
    plan.ProtoPlan plan = 2;
}
