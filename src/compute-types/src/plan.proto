// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

// See https://developers.google.com/protocol-buffers for what's going on here.

// buf breaking: ignore (does currently not require backward-compatibility)

syntax = "proto3";

package mz_compute_types.plan;

import "compute-types/src/plan/threshold.proto";
import "expr/src/linear.proto";
import "expr/src/scalar.proto";
import "google/protobuf/empty.proto";
import "repr/src/relation_and_scalar.proto";
import "repr/src/row.proto";

message ProtoAvailableCollections {
  message ProtoColumnTypes {
    repeated mz_repr.relation_and_scalar.ProtoColumnType types = 1;
  }

  bool raw = 1;
  repeated mz_compute_types.plan.threshold.ProtoArrangement arranged = 2;
  optional ProtoColumnTypes types = 3;
}

message ProtoGetPlan {
  message ProtoGetPlanArrangement {
    repeated mz_expr.scalar.ProtoMirScalarExpr key = 1;
    mz_repr.row.ProtoRow seek = 2;
    mz_expr.linear.ProtoMapFilterProject mfp = 3;
  }

  oneof kind {
    google.protobuf.Empty pass_arrangements = 1;
    ProtoGetPlanArrangement arrangement = 2;
    mz_expr.linear.ProtoMapFilterProject collection = 3;
  }
}

message ProtoLetRecLimit {
  uint64 max_iters = 1;
  bool return_at_limit = 2;
}
