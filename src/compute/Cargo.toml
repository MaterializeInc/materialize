[package]
name = "mz-compute"
description = "Materialize's compute layer."
version = "0.0.0"
edition = "2021"
rust-version = "1.60.0"
publish = false

[dependencies]
anyhow = "1.0.56"
async-compression = { version = "0.3.12", features = ["tokio", "gzip"] }
async-trait = "0.1.53"
aws-sdk-kinesis = { version = "0.10.1", default-features = false }
aws-sdk-s3 = { version = "0.10.1", default-features = false }
aws-sdk-sqs = { version = "0.10.1", default-features = false }
axum = "0.5.1"
bincode = "1.3.3"
byteorder = "1.4.3"
bytes = "1.1.0"
chrono = { version = "0.4.0", default-features = false, features = ["std"] }
clap = { version = "3.1.9", features = ["derive", "env"] }
crossbeam-channel = "0.5.4"
csv-core = "0.1.10"
dec = { version = "0.4.8", features = ["serde"] }
differential-dataflow = { git = "https://github.com/TimelyDataflow/differential-dataflow.git" }
dogsdogsdogs = { git = "https://github.com/TimelyDataflow/differential-dataflow.git" }
enum-iterator = "0.7.0"
flate2 = "1.0.23"
futures = "0.3.21"
globset = "0.4.8"
hyper = "0.14"
inotify = "0.10.0"
itertools = "0.10.3"
lazy_static = "1.4.0"
log = "0.4.16"
mz-avro = { path = "../avro", features = ["snappy"] }
mz-aws-util = { path = "../aws-util", features = ["kinesis", "s3", "sqs"] }
mz-build-info = { path = "../build-info" }
mz-ccsr = { path = "../ccsr" }
mz-dataflow-types = { path = "../dataflow-types" }
mz-expr = { path = "../expr" }
mz-interchange = { path = "../interchange" }
mz-kafka-util = { path = "../kafka-util" }
mz-ore = { path = "../ore", features = ["task"] }
mz-pgcopy = { path = "../pgcopy" }
mz-postgres-util = { path = "../postgres-util" }
mz-prof = { path = "../prof" }
mz-repr = { path = "../repr" }
mz-storage = { path = "../storage" }
mz-timely-util = { path = "../timely-util" }
postgres-protocol = { git = "https://github.com/MaterializeInc/rust-postgres", branch = "mz-0.7.2" }
prometheus = { version = "0.13.0", default-features = false }
prost = "0.10.1"
pubnub-hyper = { git = "https://github.com/MaterializeInc/pubnub-rust", default-features = false }
rand = "0.8.5"
rdkafka = { git = "https://github.com/fede1024/rust-rdkafka.git", features = ["cmake-build", "ssl-vendored", "libz-static", "zstd"] }
regex = "1.5.4"
scopeguard = "1.1.0"
serde = { version = "1.0.136", features = ["derive"] }
serde_json = "1.0.79"
tempfile = "3.2.0"
timely = { git = "https://github.com/TimelyDataflow/timely-dataflow", default-features = false, features = ["bincode"] }
tokio = { version = "1.17.0", features = ["fs", "rt", "sync"] }
tokio-byteorder = "0.3.0"
tokio-postgres = { git = "https://github.com/MaterializeInc/rust-postgres", branch = "mz-0.7.2" }
tokio-serde = { version = "0.8.0", features = ["bincode"] }
tokio-util = { version = "0.7.1", features = ["codec", "io"] }
tracing = "0.1.34"
tracing-subscriber = "0.3.11"
thiserror = "1.0.30"
url = { version = "2.2.2", features = ["serde"] }
uuid = { version = "0.8.2", features = ["serde", "v4"] }

[target.'cfg(not(target_os = "macos"))'.dependencies]
# According to jemalloc developers, `background_threads` should always be
# enabled, except in "esoteric" situations that don't apply to Materialize
# (Namely: if the application relies on new threads not being created for whatever reason)
#
# See: https://github.com/jemalloc/jemalloc/issues/956#issuecomment-316224733
tikv-jemallocator = { version = "0.4.3", features = ["profiling", "stats", "unprefixed_malloc_on_supported_platforms", "background_threads"] }

[build-dependencies]
prost-build = { version = "0.10.1", features = ["vendored"] }

[package.metadata.cargo-udeps.ignore]
# only used on linux
normal = ["inotify"]
