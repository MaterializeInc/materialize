// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

import "dataflow-types/src/logging.proto";
import "dataflow-types/src/types.proto";
import "expr/src/linear.proto";
import "expr/src/relation.proto";
import "persist/src/persist.proto";
import "repr/src/global_id.proto";
import "repr/src/row.proto";
import "repr/src/proto.proto";

import "google/protobuf/empty.proto";

package mz_dataflow_types.client;

message ProtoPeek {
    mz_repr.global_id.ProtoGlobalId id = 1;
    mz_repr.row.ProtoRow key = 2;
    mz_repr.proto.ProtoU128 uuid = 3;
    uint64 timestamp = 4;
    mz_expr.relation.ProtoRowSetFinishing finishing = 5;
    mz_expr.linear.ProtoSafeMfpPlan map_filter_project = 6;
}

message ProtoComputeCommand {
    message ProtoCreateInstance {
        mz_dataflow_types.logging.ProtoLoggingConfig logging = 1;
    }

    message ProtoCreateDataflows {
        repeated mz_dataflow_types.types.ProtoDataflowDescription dataflows = 1;
    }

    message ProtoCompaction {
        mz_repr.global_id.ProtoGlobalId id = 1;
        mz_persist.gen.persist.ProtoU64Antichain frontier = 2;
    }

    message ProtoAllowCompaction {
        repeated ProtoCompaction collections = 1;
    }

    message ProtoCancelPeeks {
        repeated mz_repr.proto.ProtoU128 uuids = 1;
    }

    oneof kind {
        ProtoCreateInstance create_instance = 1;
        google.protobuf.Empty drop_instance = 2;
        ProtoCreateDataflows create_dataflows = 3;
        ProtoAllowCompaction allow_compaction = 4;
        ProtoPeek peek = 5;
        ProtoCancelPeeks cancel_peeks = 6;
    }
}

message ProtoComputeResponse {
    message ProtoUpdate {
        uint64 timestamp = 1;
        int64 diff = 2;
    }

    message ProtoTrace {
        mz_repr.global_id.ProtoGlobalId id = 1;
        repeated ProtoUpdate updates = 2;
    }

    message ProtoFrontierUppersKind {
        repeated ProtoTrace traces = 1;
    }

    message ProtoPeekResponseKind {
        mz_repr.proto.ProtoU128 id = 1;
        mz_dataflow_types.types.ProtoPeekResponse resp = 2;
    }

    message ProtoTailResponseKind {
        mz_repr.global_id.ProtoGlobalId id = 1;
        mz_dataflow_types.types.ProtoTailResponse resp = 2;
    }

    oneof kind {
        ProtoFrontierUppersKind frontier_uppers = 1;
        ProtoPeekResponseKind peek_response = 2;
        ProtoTailResponseKind tail_response = 3;
    }
}
