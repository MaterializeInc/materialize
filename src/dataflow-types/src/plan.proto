// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

// See https://developers.google.com/protocol-buffers for what's going on here.

syntax = "proto3";

import "expr/src/scalar.proto";
import "expr/src/linear.proto";
import "repr/src/row.proto";
import "google/protobuf/empty.proto";

package mz_dataflow_types.plan;

message ProtoArrangement {
    message ProtoArrangementPermutation {
        uint64 key = 1;
        uint64 val = 2;
    };

    repeated mz_expr.scalar.ProtoMirScalarExpr all_columns = 1;
    repeated ProtoArrangementPermutation  permutation = 2;
    repeated uint64 thinning = 3;

};

message ProtoAvailableCollections {
    bool raw = 1;
    repeated ProtoArrangement arranged = 2;
}

message ProtoGetPlan {
    message ProtoGetPlanArrangement {
        repeated mz_expr.scalar.ProtoMirScalarExpr key = 1;
        mz_repr.row.ProtoRow seek = 2;
        mz_expr.linear.ProtoMapFilterProject mfp = 3;
    };

    oneof kind {
        google.protobuf.Empty pass_arrangements = 1;
        ProtoGetPlanArrangement arrangement = 2;
        mz_expr.linear.ProtoMapFilterProject collection = 3;
    }
}
