// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

// See https://developers.google.com/protocol-buffers for what's going on here.

syntax = "proto3";

import "dataflow-types/src/client/controller/storage.proto";
import "dataflow-types/src/plan.proto";
import "expr/src/scalar.proto";
import "persist/src/persist.proto";
import "repr/src/global_id.proto";
import "repr/src/proto.proto";
import "repr/src/relation_and_scalar.proto";

package mz_dataflow_types.types;

message ProtoDataflowDescription {
    message ProtoSourceImport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        ProtoSourceInstanceDesc source_instance_desc = 2;
    }

    message ProtoIndex{
        mz_repr.global_id.ProtoGlobalId id = 1;
        ProtoIndexDesc index_desc = 2;
        mz_repr.relation_and_scalar.ProtoRelationType typ = 3;
    }

    message ProtoSinkExport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        string sink_desc = 2;
    }

    repeated ProtoSourceImport source_imports = 1;
    repeated ProtoIndex index_imports = 2;
    repeated ProtoBuildDesc objects_to_build = 3;
    repeated ProtoIndex index_exports = 4;
    repeated ProtoSinkExport sink_exports = 5;
    optional mz_persist.gen.persist.ProtoU64Antichain as_of = 6;
    string debug_name = 7;
    mz_repr.proto.ProtoU128 id = 8;
}

message ProtoIndexDesc {
    mz_repr.global_id.ProtoGlobalId on_id = 1;
    repeated mz_expr.scalar.ProtoMirScalarExpr key = 3;
}

message ProtoBuildDesc {
    mz_repr.global_id.ProtoGlobalId id = 1;
    mz_dataflow_types.plan.ProtoPlan plan = 2;
}

message ProtoSourceInstanceDesc {
    string description = 1;
    ProtoSourceInstanceArguments arguments = 2;
    mz_dataflow_types.client.controller.storage.ProtoCollectionMetadata storage_metadata = 3;
}

message ProtoSourceInstanceArguments {
    optional ProtoLinearOperator operators = 1;
}

message ProtoLinearOperator {
    repeated mz_expr.scalar.ProtoMirScalarExpr predicates = 1;
    repeated uint64 projection = 2;
}
