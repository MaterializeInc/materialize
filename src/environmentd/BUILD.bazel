# Code generate by cargo-gazelle DO NOT EDIT

package(default_visibility = ["//visibility:public"])

load("@crate_index//:defs.bzl", "aliases", "all_crate_deps",)
load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test",)
load("@rules_rust//cargo:defs.bzl", "cargo_build_script")

rust_library(
	name = "mz_environmentd",
	srcs = glob(["src/**/*.rs"]),
	crate_features = [
		"default",
		"dev-web",
		"jemalloc",
		"test",
		"tokio-console",
	],
	aliases = aliases(
		normal = True,
		proc_macro = True,
	),
	deps = [
		":mz_environmentd-build",
		"//src/adapter:mz_adapter",
		"//src/adapter-types:mz_adapter_types",
		"//src/alloc:mz_alloc",
		"//src/aws-secrets-controller:mz_aws_secrets_controller",
		"//src/build-info:mz_build_info",
		"//src/catalog:mz_catalog",
		"//src/cloud-resources:mz_cloud_resources",
		"//src/controller:mz_controller",
		"//src/dyncfgs:mz_dyncfgs",
		"//src/expr:mz_expr",
		"//src/frontegg-auth:mz_frontegg_auth",
		"//src/frontegg-mock:mz_frontegg_mock",
		"//src/http-util:mz_http_util",
		"//src/interchange:mz_interchange",
		"//src/metrics:mz_metrics",
		"//src/orchestrator:mz_orchestrator",
		"//src/orchestrator-kubernetes:mz_orchestrator_kubernetes",
		"//src/orchestrator-process:mz_orchestrator_process",
		"//src/orchestrator-tracing:mz_orchestrator_tracing",
		"//src/ore:mz_ore",
		"//src/persist-client:mz_persist_client",
		"//src/pgrepr:mz_pgrepr",
		"//src/pgwire:mz_pgwire",
		"//src/pgwire-common:mz_pgwire_common",
		"//src/prof-http:mz_prof_http",
		"//src/repr:mz_repr",
		"//src/secrets:mz_secrets",
		"//src/segment:mz_segment",
		"//src/server-core:mz_server_core",
		"//src/service:mz_service",
		"//src/sql:mz_sql",
		"//src/storage-client:mz_storage_client",
		"//src/storage-types:mz_storage_types",
		"//src/tls-util:mz_tls_util",
		"//src/tracing:mz_tracing",
	] + all_crate_deps(normal = True),
	proc_macro_deps = [
	] + all_crate_deps(proc_macro = True),
	compile_data = ["askama.toml"] + glob(["src/**/*"]),
	rustc_env = {
		"TARGET_TRIPLE": "aarch64-apple-darwin",
	},
)

cargo_build_script(
    name = "mz_environmentd-build",
    srcs = ["build.rs"],
    deps = ["//src/npm:mz_npm"] + all_crate_deps(build = True),
    proc_macro_deps = all_crate_deps(build_proc_macro = True),
    data = ["src/bin/environmentd/sys.c"] + glob(["src/http/**/*"]),
)
