[package]
name = "mz-environmentd"
description = "Manages a single Materialize environment."
version = "0.26.1-dev"
authors = ["Materialize, Inc."]
license = "proprietary"
edition = "2021"
rust-version = "1.63.0"
publish = false

[dependencies]
anyhow = "1.0.65"
askama = { version = "0.11.1", default-features = false, features = ["config", "serde-json"] }
async-trait = "0.1.57"
axum = { version = "0.5.16", features = ["headers"] }
base64 = "0.13.0"
bytes = "1.2.1"
chrono = { version = "0.4.22", default-features = false, features = ["std"] }
clap = { version = "3.2.20", features = ["wrap_help", "env", "derive"] }
fail = { version = "0.5.0", features = ["failpoints"] }
futures = "0.3.24"
headers = "0.3.7"
http = "0.2.8"
hyper = { version = "0.14.20", features = ["http1", "server"] }
hyper-openssl = "0.9.2"
include_dir = "0.7.2"
itertools = "0.10.4"
jsonwebtoken = "8.1.1"
once_cell = "1.14.0"
libc = "0.2.132"
mime = "0.3.16"
mz-build-info = { path = "../build-info" }
mz-adapter = { path = "../adapter" }
mz-controller = { path = "../controller" }
mz-frontegg-auth = { path = "../frontegg-auth" }
mz-http-util = { path = "../http-util" }
mz-orchestrator = { path = "../orchestrator" }
mz-orchestrator-kubernetes = { path = "../orchestrator-kubernetes" }
mz-orchestrator-process = { path = "../orchestrator-process" }
mz-orchestrator-tracing = { path = "../orchestrator-tracing" }
mz-ore = { path = "../ore", features = ["task", "tracing_"] }
mz-persist-client = { path = "../persist-client" }
mz-pgrepr = { path = "../pgrepr" }
mz-pgwire = { path = "../pgwire" }
mz-postgres-util = { path = "../postgres-util" }
mz-prof = { path = "../prof" }
mz-repr = { path = "../repr" }
mz-secrets = { path = "../secrets" }
mz-sql = { path = "../sql" }
mz-stash = { path = "../stash" }
mz-storage = { path = "../storage" }
nix = "0.25.0"
num_cpus = "1.13.1"
openssl = { version = "0.10.41", features = ["vendored"] }
openssl-sys = { version = "0.9.75", features = ["vendored"] }
os_info = "3.5.0"
rdkafka-sys = { git = "https://github.com/fede1024/rust-rdkafka.git", features = ["cmake-build", "ssl-vendored", "libz-static", "zstd"] }
rand = "0.8.5"
reqwest = { version = "0.11.11", features = ["json"] }
rlimit = "0.8.3"
serde = { version = "1.0.144", features = ["derive"] }
serde_json = "1.0.85"
shell-words = "1.1.0"
sysctl = "0.5.2"
sysinfo = "0.26.2"
tempfile = "3.2.0"
thiserror = "1.0.34"
tokio = { version = "1.19.2", features = ["sync"] }
tokio-openssl = "0.6.3"
tokio-postgres = { git = "https://github.com/MaterializeInc/rust-postgres" }
tokio-stream = { version = "0.1.9", features = ["net"] }
tower-http = { version = "0.3.4", features = ["cors"] }
tracing = "0.1.36"
tracing-subscriber = "0.3.15"
url = "2.3.1"
uuid = "1.1.2"

[target.'cfg(not(target_os = "macos"))'.dependencies]
# According to jemalloc developers, `background_threads` should always be
# enabled, except in "esoteric" situations that don't apply to Materialize
# (Namely: if the application relies on new threads not being created for whatever reason)
#
# See: https://github.com/jemalloc/jemalloc/issues/956#issuecomment-316224733
tikv-jemallocator = { version = "0.4.3", features = ["profiling", "stats", "unprefixed_malloc_on_supported_platforms", "background_threads"], optional = true }

[dev-dependencies]
assert_cmd = "2.0.4"
bytes = "1.2.1"
datadriven = "0.6.0"
fallible-iterator = "0.2.0"
itertools = "0.10.4"
jsonwebtoken = "8.1.1"
mz-kafka-util = { path = "../kafka-util" }
mz-pgrepr = { path = "../pgrepr" }
mz-pgtest = { path = "../pgtest" }
mz-repr = { path = "../repr" }
postgres = { git = "https://github.com/MaterializeInc/rust-postgres", features = ["with-chrono-0_4"] }
postgres-openssl = { git = "https://github.com/MaterializeInc/rust-postgres" }
postgres-protocol = { git = "https://github.com/MaterializeInc/rust-postgres" }
postgres_array = { git = "https://github.com/MaterializeInc/rust-postgres-array" }
predicates = "2.1.1"
regex = "1.6.0"
reqwest = { version = "0.11.11", features = ["blocking"] }
serde_json = "1.0.85"
tokio-postgres = { git = "https://github.com/MaterializeInc/rust-postgres", features = ["with-chrono-0_4"] }

[build-dependencies]
anyhow = "1.0.65"
cc = "1.0.73"
mz-npm = { path = "../npm" }

[features]
default = ["jemalloc"]
# When enabled, static assets for the web UI are loaded from disk on every HTTP
# request rather than compiled into the binary. This vastly speeds up the
# iteration cycle when developing the web UI.
#
# WARNING: For development use only! When enabled, may allow unrestricted read
# access to the file system.
dev-web = []
jemalloc = ["mz-prof/jemalloc", "tikv-jemallocator"]
tokio-console = ["mz-ore/tokio-console", "mz-orchestrator-tracing/tokio-console"]

[package.metadata.cargo-udeps.ignore]
# sysctl is only used on macOS.
normal = ["sysctl"]
