[package]
name = "mz-environmentd"
description = "Manages a single Materialize environment."
version = "0.61.0-dev"
authors = ["Materialize, Inc."]
license = "proprietary"
edition.workspace = true
rust-version.workspace = true
publish = false

[dependencies]
anyhow = "1.0.66"
askama = { version = "0.11.1", default-features = false, features = ["config", "serde-json"] }
async-trait = "0.1.68"
axum = { version = "0.6.7", features = ["headers", "ws"] }
base64 = "0.13.1"
bytes = "1.3.0"
bytesize = "1.1.0"
chrono = { version = "0.4.23", default-features = false, features = ["std"] }
clap = { version = "3.2.24", features = ["wrap_help", "env", "derive"] }
fail = { version = "0.5.1", features = ["failpoints"] }
futures = "0.3.25"
headers = "0.3.8"
http = "0.2.8"
http-body = "0.4.5"
humantime = "2.1.0"
hyper = { version = "0.14.23", features = ["http1", "server"] }
hyper-openssl = "0.9.2"
include_dir = "0.7.3"
itertools = "0.10.5"
jsonwebtoken = "8.2.0"
once_cell = "1.16.0"
libc = "0.2.138"
mime = "0.3.16"
mz-alloc = { path = "../alloc" }
mz-build-info = { path = "../build-info" }
mz-adapter = { path = "../adapter" }
mz-cloud-resources = { path = "../cloud-resources" }
mz-controller = { path = "../controller" }
mz-expr = { path = "../expr" }
mz-frontegg-auth = { path = "../frontegg-auth" }
mz-http-util = { path = "../http-util" }
mz-interchange = { path = "../interchange" }
mz-orchestrator = { path = "../orchestrator" }
mz-orchestrator-kubernetes = { path = "../orchestrator-kubernetes" }
mz-orchestrator-process = { path = "../orchestrator-process" }
mz-orchestrator-tracing = { path = "../orchestrator-tracing" }
mz-ore = { path = "../ore", features = ["async", "tracing_"] }
mz-persist-client = { path = "../persist-client" }
mz-pgrepr = { path = "../pgrepr" }
mz-pgwire = { path = "../pgwire" }
mz-postgres-util = { path = "../postgres-util" }
mz-prof = { path = "../prof" }
mz-repr = { path = "../repr" }
mz-secrets = { path = "../secrets" }
mz-segment = { path = "../segment" }
mz-service = { path = "../service" }
mz-sql = { path = "../sql" }
mz-stash = { path = "../stash" }
mz-storage-client = { path = "../storage-client" }
nix = "0.26.1"
num_cpus = "1.14.0"
openssl = { version = "0.10.48", features = ["vendored"] }
openssl-sys = { version = "0.9.80", features = ["vendored"] }
opentelemetry = { version = "0.19.0", features = ["rt-tokio", "trace"] }
pin-project = "1.0.12"
prometheus = { version = "0.13.3", default-features = false }
rdkafka-sys = { version = "4.3.0", features = ["cmake-build", "ssl-vendored", "libz-static", "zstd"] }
rand = "0.8.5"
reqwest = { version = "0.11.13", features = ["json"] }
rlimit = "0.8.3"
sentry = { version = "0.29.1", optional = true }
sentry-tracing = "0.29.1"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = "1.0.89"
shell-words = "1.1.0"
socket2 = "0.4.7"
sysctl = "0.5.4"
tempfile = "3.2.0"
thiserror = "1.0.37"
tokio = { version = "1.24.2", features = ["sync"] }
tokio-openssl = "0.6.3"
tokio-postgres = { version = "0.7.8" }
tokio-stream = { version = "0.1.11", features = ["net"] }
tower = "0.4.13"
tower-http = { version = "0.3.5", features = ["cors"] }
tracing = "0.1.37"
tracing-core = "0.1.30"
tracing-opentelemetry = { version = "0.19.0" }
tracing-subscriber = "0.3.16"
tungstenite = { version = "0.18.0", features = ["native-tls"] }
url = "2.3.1"
uuid = "1.2.2"
workspace-hack = { version = "0.0.0", path = "../workspace-hack" }

[dev-dependencies]
assert_cmd = "2.0.5"
bytes = "1.3.0"
datadriven = "0.6.0"
fallible-iterator = "0.2.0"
itertools = "0.10.5"
jsonwebtoken = "8.2.0"
mz-pgrepr = { path = "../pgrepr" }
mz-pgtest = { path = "../pgtest" }
mz-repr = { path = "../repr" }
mz-sql-parser = { path = "../sql-parser" }
postgres = { version = "0.19.5", features = ["with-chrono-0_4"] }
postgres-openssl = { version = "0.5.0" }
postgres-protocol = { version = "0.6.5" }
postgres_array = { version = "0.11.0" }
predicates = "2.1.4"
proptest = { version = "1.0.0", default-features = false, features = ["std"]}
regex = "1.7.0"
reqwest = { version = "0.11.13", features = ["blocking"] }
serde_json = "1.0.89"
serde_urlencoded = "0.7.1"
similar-asserts = "1.4"
timely = { version = "0.12.0", default-features = false, features = ["bincode"] }
tokio-postgres = { version = "0.7.8", features = ["with-chrono-0_4"] }

[build-dependencies]
anyhow = "1.0.66"
cc = "1.0.78"
mz-npm = { path = "../npm" }

[features]
default = ["jemalloc"]
# When enabled, static assets for the web UI are loaded from disk on every HTTP
# request rather than compiled into the binary. This vastly speeds up the
# iteration cycle when developing the web UI.
#
# WARNING: For development use only! When enabled, may allow unrestricted read
# access to the file system.
dev-web = []
jemalloc = ["mz-alloc/jemalloc"]
tokio-console = ["mz-ore/tokio-console", "mz-orchestrator-tracing/tokio-console"]

[package.metadata.cargo-udeps.ignore]
# sysctl is only used on macOS.
normal = ["sysctl", "workspace-hack"]
