# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

ws-text
{"query": "bad sql"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"Expected a keyword at the beginning of a statement, found identifier \"bad\"","code":"42601","position":0}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": [{"query": "bad sql"}]}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"Expected a keyword at the beginning of a statement, found identifier \"bad\"","code":"42601","position":0}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": [{"query": "SELECT 1 1"}]}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"Expected end of statement, found number \"1\"","code":"42601","position":9}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "select NULL"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":25,"type_len":-1,"type_mod":-1}]}}
{"type":"Row","payload":[null]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

ws-binary
{"query": "select 'binary'"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":25,"type_len":-1,"type_mod":-1}]}}
{"type":"Row","payload":["binary"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "select 1,2; values ('a'), ('b')"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1},{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["1","2"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"column1","type_oid":25,"type_len":-1,"type_mod":-1}]}}
{"type":"Row","payload":["a"]}
{"type":"Row","payload":["b"]}
{"type":"CommandComplete","payload":"SELECT 2"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "SET application_name TO a"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"SET"}
{"type":"ParameterStatus","payload":{"name":"application_name","value":"a"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": ""}
----
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": ";;;"}
----
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": ";;select 1;"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["1"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": ";;select 1;; select 2;;"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["1"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["2"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": []}
----
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": [{"query": ""}]}
----
{"type":"Error","payload":{"message":"each query must contain exactly 1 statement, but \"\" contains 0","code":"XX000"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": [{"query": "select $1"}]}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"request supplied 0 parameters, but SELECT $1 requires 1","code":"XX000"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": [{"query": "select $1::int", "params": []}]}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"request supplied 0 parameters, but SELECT ($1)::int4 requires 1","code":"XX000"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": [{"query": "select $1::int", "params": ["2"]}]}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"int4","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["2"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": [{"query": "select $1::int", "params": ["z"]}]}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"unable to decode parameter: invalid input syntax for type integer: invalid digit found in string: \"z\"","code":"XX000"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": [{"query": "select $1::int", "params": [2]}]}
----
{"type":"Error","payload":{"message":"data did not match any variant of untagged enum SqlRequest","code":"XX000"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"queries": [{"query": "select $1::int", "params": [null]}]}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"int4","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":[null]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

# Test notice severity filtering.
ws-text
{"query": "BEGIN; BEGIN"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"BEGIN"}
{"type":"Notice","payload":{"message":"there is already a transaction in progress","code":"25001","severity":"warning"}}
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"BEGIN"}
{"type":"ReadyForQuery","payload":"T"}

ws-text
{"query": "SET client_min_messages = error"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"SET"}
{"type":"ReadyForQuery","payload":"T"}

ws-text
{"query": "BEGIN; BEGIN"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"BEGIN"}
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"BEGIN"}
{"type":"ReadyForQuery","payload":"T"}

ws-text
{"query": "ROLLBACK; RESET client_min_messages"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"ROLLBACK"}
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"RESET"}
{"type":"ReadyForQuery","payload":"I"}

# Test that transactions are preserved across requests.

ws-text
{"query": "BEGIN; SELECT 1"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"BEGIN"}
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["1"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"T"}

# Session parameters should get reset when the transaction is rolled back.

ws-text
{"query": "SET application_name TO b"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"SET"}
{"type":"ParameterStatus","payload":{"name":"application_name","value":"b"}}
{"type":"ReadyForQuery","payload":"T"}

ws-text
{"query": "CREATE VIEW v AS SELECT 1"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"transaction in read-only mode","code":"25006","detail":"SELECT queries cannot be combined with other query types, including SUBSCRIBE."}}
{"type":"ReadyForQuery","payload":"E"}

ws-text
{"query": "CREATE VIEW v AS SELECT 1"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"current transaction is aborted, commands ignored until end of transaction block","code":"25P02"}}
{"type":"ReadyForQuery","payload":"E"}


ws-text
{"query": "SELECT 2"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"current transaction is aborted, commands ignored until end of transaction block","code":"25P02"}}
{"type":"ReadyForQuery","payload":"E"}

ws-text
{"query": "ROLLBACK; SELECT 2"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"ROLLBACK"}
{"type":"ParameterStatus","payload":{"name":"application_name","value":"a"}}
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["2"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

# Session variables local to a transaction should get reset

ws-text
{"query": "BEGIN"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"BEGIN"}
{"type":"ReadyForQuery","payload":"T"}

ws-text
{"query": "SET LOCAL application_name TO c"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"SET"}
{"type":"ParameterStatus","payload":{"name":"application_name","value":"c"}}
{"type":"ReadyForQuery","payload":"T"}

ws-text
{"query": "SHOW application_name"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"application_name","type_oid":25,"type_len":-1,"type_mod":-1}]}}
{"type":"Row","payload":["c"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"T"}

ws-text
{"query": "COMMIT"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"COMMIT"}
{"type":"ParameterStatus","payload":{"name":"application_name","value":"a"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "SHOW application_name"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"application_name","type_oid":25,"type_len":-1,"type_mod":-1}]}}
{"type":"Row","payload":["a"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "SUBSCRIBE v"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"unknown catalog item 'v'","code":"XX000"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "CREATE TABLE t (i INT)"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"CREATE TABLE"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "INSERT INTO t VALUES (1), (2), (3), (4)"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"INSERT 0 4"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "SUBSCRIBE (VALUES (1)); SELECT 1"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":true}}
{"type":"Rows","payload":{"columns":[{"name":"mz_timestamp","type_oid":1700,"type_len":-1,"type_mod":2555908},{"name":"mz_diff","type_oid":20,"type_len":8,"type_mod":-1},{"name":"column1","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["18446744073709551615","1","1"]}
{"type":"CommandComplete","payload":"SUBSCRIBE"}
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"SUBSCRIBE in transactions must be the only read statement","code":"25000"}}
{"type":"ReadyForQuery","payload":"I"}

# Test timestamp precision.
ws-text
{"query":"select TIMESTAMP '2023-12-19T06:50:37.123056' as col"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"col","type_oid":1114,"type_len":8,"type_mod":-1}]}}
{"type":"Row","payload":["1702968637123.056"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query":"select TIMESTAMPTZ '2023-12-19T06:50:37.123056' as col"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"col","type_oid":1184,"type_len":8,"type_mod":-1}]}}
{"type":"Row","payload":["1702968637123.056"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

# Enable debug notices for the next test...

ws-text
{"query":"SET client_min_messages = debug"}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"SET"}
{"type":"ReadyForQuery","payload":"I"}

# This test ensures that notices are emitted as they are produced (i.e., before
# the CommandComplete message). See materialize#22739.

ws-text
{"query":"SELECT 1 FROM mz_sources LIMIT 1"}
----
{"type":"Notice","payload":{"message":"query was automatically run on the \"mz_catalog_server\" cluster","code":"00000","severity":"debug"}}
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["1"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

# The next several tests ensure that the plan insights notice occurs immediately
# before the CommandStarting message for the command it applies to.
#
# In theory it would be more sensible for it to appear *between* the
# CommandStarted and CommandComplete, but the structure of the HTTP SQL handler
# today makes that difficult.

ws-text
{"queries": [{"query": "SET emit_plan_insights_notice = on"}, {"query": "SET client_min_messages = notice"}]}
----
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"SET"}
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"CommandComplete","payload":"SET"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "SELECT 1"}
----
{"type":"Notice","payload":{"message":"{\n  \"plans\": {\n    \"raw\": {\n      \"text\": \"Finish output=[#0]\\n  Map (1)\\n    Constant\\n      - ()\\n\\nTarget cluster: mz_catalog_server\\n\",\n      \"json\": {\n        \"Map\": {\n          \"input\": {\n            \"Constant\": {\n              \"rows\": [\n                {\n                  \"data\": []\n                }\n              ],\n              \"typ\": {\n                \"column_types\": [],\n                \"keys\": []\n              }\n            }\n          },\n          \"scalars\": [\n            {\n              \"Literal\": [\n                {\n                  \"data\": [\n                    45,\n                    1\n                  ]\n                },\n                {\n                  \"scalar_type\": \"Int32\",\n                  \"nullable\": false\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    \"optimized\": {\n      \"global\": {\n        \"text\": \"t66:\\n  Finish output=[#0]\\n    ArrangeBy keys=[[#0]]\\n      ReadGlobalFromSameDataflow t65\\n\\nt65:\\n  Constant\\n    - (1)\\n\\nTarget cluster: mz_catalog_server\\n\",\n        \"json\": {\n          \"plans\": [\n            {\n              \"id\": \"t66\",\n              \"plan\": {\n                \"ArrangeBy\": {\n                  \"input\": {\n                    \"Get\": {\n                      \"id\": {\n                        \"Global\": {\n                          \"Transient\": 65\n                        }\n                      },\n                      \"typ\": {\n                        \"column_types\": [\n                          {\n                            \"scalar_type\": \"Int32\",\n                            \"nullable\": false\n                          }\n                        ],\n                        \"keys\": [\n                          []\n                        ]\n                      },\n                      \"access_strategy\": \"SameDataflow\"\n                    }\n                  },\n                  \"keys\": [\n                    [\n                      {\n                        \"Column\": 0\n                      }\n                    ]\n                  ]\n                }\n              }\n            },\n            {\n              \"id\": \"t65\",\n              \"plan\": {\n                \"Constant\": {\n                  \"rows\": {\n                    \"Ok\": [\n                      [\n                        {\n                          \"data\": [\n                            45,\n                            1\n                          ]\n                        },\n                        1\n                      ]\n                    ]\n                  },\n                  \"typ\": {\n                    \"column_types\": [\n                      {\n                        \"scalar_type\": \"Int32\",\n                        \"nullable\": false\n                      }\n                    ],\n                    \"keys\": []\n                  }\n                }\n              }\n            }\n          ],\n          \"sources\": []\n        }\n      },\n      \"fast_path\": {\n        \"text\": \"Explained Query (fast path):\\n  Finish output=[#0]\\n    Constant\\n      - (1)\\n\\nTarget cluster: mz_catalog_server\\n\",\n        \"json\": {\n          \"plans\": [\n            {\n              \"id\": \"Explained Query (fast path)\",\n              \"plan\": {\n                \"Constant\": [\n                  {\n                    \"Ok\": [\n                      [\n                        {\n                          \"data\": [\n                            45,\n                            1\n                          ]\n                        },\n                        1\n                      ]\n                    ]\n                  },\n                  {\n                    \"column_types\": [\n                      {\n                        \"scalar_type\": \"Int32\",\n                        \"nullable\": false\n                      }\n                    ],\n                    \"keys\": []\n                  }\n                ]\n              }\n            }\n          ],\n          \"sources\": []\n        }\n      }\n    }\n  },\n  \"insights\": {\n    \"imports\": {},\n    \"fast_path_clusters\": {},\n    \"fast_path_limit\": null,\n    \"persist_count\": []\n  },\n  \"cluster\": {\n    \"name\": \"mz_catalog_server\",\n    \"id\": {\n      \"System\": 2\n    }\n  },\n  \"redacted_sql\": \"SELECT '<REDACTED>'\"\n}","code":"MZ001","severity":"notice"}}
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["1"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "SELECT 1 / 0"}
----
{"type":"Notice","payload":{"message":"{\n  \"plans\": {\n    \"raw\": {\n      \"text\": \"Finish output=[#0]\\n  Map ((1 / 0))\\n    Constant\\n      - ()\\n\\nTarget cluster: quickstart\\n\",\n      \"json\": {\n        \"Map\": {\n          \"input\": {\n            \"Constant\": {\n              \"rows\": [\n                {\n                  \"data\": []\n                }\n              ],\n              \"typ\": {\n                \"column_types\": [],\n                \"keys\": []\n              }\n            }\n          },\n          \"scalars\": [\n            {\n              \"CallBinary\": {\n                \"func\": \"DivInt32\",\n                \"expr1\": {\n                  \"Literal\": [\n                    {\n                      \"data\": [\n                        45,\n                        1\n                      ]\n                    },\n                    {\n                      \"scalar_type\": \"Int32\",\n                      \"nullable\": false\n                    }\n                  ]\n                },\n                \"expr2\": {\n                  \"Literal\": [\n                    {\n                      \"data\": [\n                        44\n                      ]\n                    },\n                    {\n                      \"scalar_type\": \"Int32\",\n                      \"nullable\": false\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    },\n    \"optimized\": {\n      \"global\": {\n        \"text\": \"t69:\\n  Finish output=[#0]\\n    ArrangeBy keys=[[#0]]\\n      ReadGlobalFromSameDataflow t68\\n\\nt68:\\n  Error \\\"division by zero\\\"\\n\\nTarget cluster: quickstart\\n\",\n        \"json\": {\n          \"plans\": [\n            {\n              \"id\": \"t69\",\n              \"plan\": {\n                \"ArrangeBy\": {\n                  \"input\": {\n                    \"Get\": {\n                      \"id\": {\n                        \"Global\": {\n                          \"Transient\": 68\n                        }\n                      },\n                      \"typ\": {\n                        \"column_types\": [\n                          {\n                            \"scalar_type\": \"Int32\",\n                            \"nullable\": false\n                          }\n                        ],\n                        \"keys\": []\n                      },\n                      \"access_strategy\": \"SameDataflow\"\n                    }\n                  },\n                  \"keys\": [\n                    [\n                      {\n                        \"Column\": 0\n                      }\n                    ]\n                  ]\n                }\n              }\n            },\n            {\n              \"id\": \"t68\",\n              \"plan\": {\n                \"Constant\": {\n                  \"rows\": {\n                    \"Err\": \"DivisionByZero\"\n                  },\n                  \"typ\": {\n                    \"column_types\": [\n                      {\n                        \"scalar_type\": \"Int32\",\n                        \"nullable\": false\n                      }\n                    ],\n                    \"keys\": []\n                  }\n                }\n              }\n            }\n          ],\n          \"sources\": []\n        }\n      },\n      \"fast_path\": {\n        \"text\": \"Explained Query (fast path):\\n  Finish output=[#0]\\n    Error \\\"division by zero\\\"\\n\\nTarget cluster: quickstart\\n\",\n        \"json\": {\n          \"plans\": [\n            {\n              \"id\": \"Explained Query (fast path)\",\n              \"plan\": {\n                \"Constant\": [\n                  {\n                    \"Err\": \"DivisionByZero\"\n                  },\n                  {\n                    \"column_types\": [\n                      {\n                        \"scalar_type\": \"Int32\",\n                        \"nullable\": false\n                      }\n                    ],\n                    \"keys\": []\n                  }\n                ]\n              }\n            }\n          ],\n          \"sources\": []\n        }\n      }\n    }\n  },\n  \"insights\": {\n    \"imports\": {},\n    \"fast_path_clusters\": {},\n    \"fast_path_limit\": null,\n    \"persist_count\": []\n  },\n  \"cluster\": {\n    \"name\": \"quickstart\",\n    \"id\": {\n      \"User\": 1\n    }\n  },\n  \"redacted_sql\": \"SELECT '<REDACTED>' / '<REDACTED>'\"\n}","code":"MZ001","severity":"notice"}}
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"division by zero","code":"XX000"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "SELECT 1 FROM mz_sources LIMIT 1"}
----
{"type":"Notice","payload":{"message":"{\n  \"plans\": {\n    \"raw\": {\n      \"text\": \"Finish limit=1 output=[#0]\\n  Project (#15)\\n    Map (1)\\n      Get mz_catalog.mz_sources\\n\\nTarget cluster: mz_catalog_server\\n\",\n      \"json\": {\n        \"Project\": {\n          \"input\": {\n            \"Map\": {\n              \"input\": {\n                \"Get\": {\n                  \"id\": {\n                    \"Global\": {\n                      \"System\": 463\n                    }\n                  },\n                  \"typ\": {\n                    \"column_types\": [\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"Oid\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": {\n                          \"Array\": \"MzAclItem\"\n                        },\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      }\n                    ],\n                    \"keys\": [\n                      [\n                        0\n                      ],\n                      [\n                        1\n                      ]\n                    ]\n                  }\n                }\n              },\n              \"scalars\": [\n                {\n                  \"Literal\": [\n                    {\n                      \"data\": [\n                        45,\n                        1\n                      ]\n                    },\n                    {\n                      \"scalar_type\": \"Int32\",\n                      \"nullable\": false\n                    }\n                  ]\n                }\n              ]\n            }\n          },\n          \"outputs\": [\n            15\n          ]\n        }\n      }\n    },\n    \"optimized\": {\n      \"global\": {\n        \"text\": \"t72:\\n  Finish limit=1 output=[#0]\\n    ArrangeBy keys=[[#0]]\\n      ReadGlobalFromSameDataflow t71\\n\\nt71:\\n  Project (#15)\\n    Map (1)\\n      ReadIndex on=mz_sources mz_sources_ind=[*** full scan ***]\\n\\nTarget cluster: mz_catalog_server\\n\",\n        \"json\": {\n          \"plans\": [\n            {\n              \"id\": \"t72\",\n              \"plan\": {\n                \"ArrangeBy\": {\n                  \"input\": {\n                    \"Get\": {\n                      \"id\": {\n                        \"Global\": {\n                          \"Transient\": 71\n                        }\n                      },\n                      \"typ\": {\n                        \"column_types\": [\n                          {\n                            \"scalar_type\": \"Int32\",\n                            \"nullable\": false\n                          }\n                        ],\n                        \"keys\": []\n                      },\n                      \"access_strategy\": \"SameDataflow\"\n                    }\n                  },\n                  \"keys\": [\n                    [\n                      {\n                        \"Column\": 0\n                      }\n                    ]\n                  ]\n                }\n              }\n            },\n            {\n              \"id\": \"t71\",\n              \"plan\": {\n                \"Project\": {\n                  \"input\": {\n                    \"Map\": {\n                      \"input\": {\n                        \"Get\": {\n                          \"id\": {\n                            \"Global\": {\n                              \"System\": 463\n                            }\n                          },\n                          \"typ\": {\n                            \"column_types\": [\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"Oid\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": {\n                                  \"Array\": \"MzAclItem\"\n                                },\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              }\n                            ],\n                            \"keys\": [\n                              [\n                                0\n                              ],\n                              [\n                                1\n                              ]\n                            ]\n                          },\n                          \"access_strategy\": {\n                            \"Index\": [\n                              [\n                                {\n                                  \"System\": 739\n                                },\n                                \"FullScan\"\n                              ]\n                            ]\n                          }\n                        }\n                      },\n                      \"scalars\": [\n                        {\n                          \"Literal\": [\n                            {\n                              \"Ok\": {\n                                \"data\": [\n                                  45,\n                                  1\n                                ]\n                              }\n                            },\n                            {\n                              \"scalar_type\": \"Int32\",\n                              \"nullable\": false\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  \"outputs\": [\n                    15\n                  ]\n                }\n              }\n            }\n          ],\n          \"sources\": []\n        }\n      },\n      \"fast_path\": {\n        \"text\": \"Explained Query (fast path):\\n  Finish limit=1 output=[#0]\\n    Project (#15)\\n      Map (1)\\n        ReadIndex on=mz_catalog.mz_sources mz_sources_ind=[*** full scan ***]\\n\\nTarget cluster: mz_catalog_server\\n\",\n        \"json\": {\n          \"plans\": [\n            {\n              \"id\": \"Explained Query (fast path)\",\n              \"plan\": {\n                \"PeekExisting\": [\n                  {\n                    \"System\": 463\n                  },\n                  {\n                    \"System\": 739\n                  },\n                  null,\n                  {\n                    \"mfp\": {\n                      \"expressions\": [\n                        {\n                          \"Literal\": [\n                            {\n                              \"Ok\": {\n                                \"data\": [\n                                  45,\n                                  1\n                                ]\n                              }\n                            },\n                            {\n                              \"scalar_type\": \"Int32\",\n                              \"nullable\": false\n                            }\n                          ]\n                        }\n                      ],\n                      \"predicates\": [],\n                      \"projection\": [\n                        15\n                      ],\n                      \"input_arity\": 15\n                    }\n                  }\n                ]\n              }\n            }\n          ],\n          \"sources\": []\n        }\n      }\n    }\n  },\n  \"insights\": {\n    \"imports\": {\n      \"s739\": {\n        \"name\": {\n          \"schema\": \"mz_catalog\",\n          \"item\": \"mz_sources_ind\"\n        },\n        \"type\": \"compute\"\n      }\n    },\n    \"fast_path_clusters\": {},\n    \"fast_path_limit\": null,\n    \"persist_count\": []\n  },\n  \"cluster\": {\n    \"name\": \"mz_catalog_server\",\n    \"id\": {\n      \"System\": 2\n    }\n  },\n  \"redacted_sql\": \"SELECT '<REDACTED>' FROM [s463 AS mz_catalog.mz_sources] LIMIT '<REDACTED>'\"\n}","code":"MZ001","severity":"notice"}}
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":false}}
{"type":"Rows","payload":{"columns":[{"name":"?column?","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["1"]}
{"type":"CommandComplete","payload":"SELECT 1"}
{"type":"ReadyForQuery","payload":"I"}

ws-text
{"query": "SELECT 1 / 0 FROM mz_sources LIMIT 1"}
----
{"type":"Notice","payload":{"message":"{\n  \"plans\": {\n    \"raw\": {\n      \"text\": \"Finish limit=1 output=[#0]\\n  Project (#15)\\n    Map ((1 / 0))\\n      Get mz_catalog.mz_sources\\n\\nTarget cluster: mz_catalog_server\\n\",\n      \"json\": {\n        \"Project\": {\n          \"input\": {\n            \"Map\": {\n              \"input\": {\n                \"Get\": {\n                  \"id\": {\n                    \"Global\": {\n                      \"System\": 463\n                    }\n                  },\n                  \"typ\": {\n                    \"column_types\": [\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"Oid\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": {\n                          \"Array\": \"MzAclItem\"\n                        },\n                        \"nullable\": false\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      },\n                      {\n                        \"scalar_type\": \"String\",\n                        \"nullable\": true\n                      }\n                    ],\n                    \"keys\": [\n                      [\n                        0\n                      ],\n                      [\n                        1\n                      ]\n                    ]\n                  }\n                }\n              },\n              \"scalars\": [\n                {\n                  \"CallBinary\": {\n                    \"func\": \"DivInt32\",\n                    \"expr1\": {\n                      \"Literal\": [\n                        {\n                          \"data\": [\n                            45,\n                            1\n                          ]\n                        },\n                        {\n                          \"scalar_type\": \"Int32\",\n                          \"nullable\": false\n                        }\n                      ]\n                    },\n                    \"expr2\": {\n                      \"Literal\": [\n                        {\n                          \"data\": [\n                            44\n                          ]\n                        },\n                        {\n                          \"scalar_type\": \"Int32\",\n                          \"nullable\": false\n                        }\n                      ]\n                    }\n                  }\n                }\n              ]\n            }\n          },\n          \"outputs\": [\n            15\n          ]\n        }\n      }\n    },\n    \"optimized\": {\n      \"global\": {\n        \"text\": \"t75:\\n  Finish limit=1 output=[#0]\\n    ArrangeBy keys=[[#0]]\\n      ReadGlobalFromSameDataflow t74\\n\\nt74:\\n  Project (#15)\\n    Map (error(\\\"division by zero\\\"))\\n      ReadIndex on=mz_sources mz_sources_ind=[*** full scan ***]\\n\\nTarget cluster: mz_catalog_server\\n\",\n        \"json\": {\n          \"plans\": [\n            {\n              \"id\": \"t75\",\n              \"plan\": {\n                \"ArrangeBy\": {\n                  \"input\": {\n                    \"Get\": {\n                      \"id\": {\n                        \"Global\": {\n                          \"Transient\": 74\n                        }\n                      },\n                      \"typ\": {\n                        \"column_types\": [\n                          {\n                            \"scalar_type\": \"Int32\",\n                            \"nullable\": false\n                          }\n                        ],\n                        \"keys\": []\n                      },\n                      \"access_strategy\": \"SameDataflow\"\n                    }\n                  },\n                  \"keys\": [\n                    [\n                      {\n                        \"Column\": 0\n                      }\n                    ]\n                  ]\n                }\n              }\n            },\n            {\n              \"id\": \"t74\",\n              \"plan\": {\n                \"Project\": {\n                  \"input\": {\n                    \"Map\": {\n                      \"input\": {\n                        \"Get\": {\n                          \"id\": {\n                            \"Global\": {\n                              \"System\": 463\n                            }\n                          },\n                          \"typ\": {\n                            \"column_types\": [\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"Oid\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": {\n                                  \"Array\": \"MzAclItem\"\n                                },\n                                \"nullable\": false\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              },\n                              {\n                                \"scalar_type\": \"String\",\n                                \"nullable\": true\n                              }\n                            ],\n                            \"keys\": [\n                              [\n                                0\n                              ],\n                              [\n                                1\n                              ]\n                            ]\n                          },\n                          \"access_strategy\": {\n                            \"Index\": [\n                              [\n                                {\n                                  \"System\": 739\n                                },\n                                \"FullScan\"\n                              ]\n                            ]\n                          }\n                        }\n                      },\n                      \"scalars\": [\n                        {\n                          \"Literal\": [\n                            {\n                              \"Err\": \"DivisionByZero\"\n                            },\n                            {\n                              \"scalar_type\": \"Int32\",\n                              \"nullable\": false\n                            }\n                          ]\n                        }\n                      ]\n                    }\n                  },\n                  \"outputs\": [\n                    15\n                  ]\n                }\n              }\n            }\n          ],\n          \"sources\": []\n        }\n      },\n      \"fast_path\": {\n        \"text\": \"Explained Query (fast path):\\n  Finish limit=1 output=[#0]\\n    Project (#15)\\n      Map (error(\\\"division by zero\\\"))\\n        ReadIndex on=mz_catalog.mz_sources mz_sources_ind=[*** full scan ***]\\n\\nTarget cluster: mz_catalog_server\\n\",\n        \"json\": {\n          \"plans\": [\n            {\n              \"id\": \"Explained Query (fast path)\",\n              \"plan\": {\n                \"PeekExisting\": [\n                  {\n                    \"System\": 463\n                  },\n                  {\n                    \"System\": 739\n                  },\n                  null,\n                  {\n                    \"mfp\": {\n                      \"expressions\": [\n                        {\n                          \"Literal\": [\n                            {\n                              \"Err\": \"DivisionByZero\"\n                            },\n                            {\n                              \"scalar_type\": \"Int32\",\n                              \"nullable\": false\n                            }\n                          ]\n                        }\n                      ],\n                      \"predicates\": [],\n                      \"projection\": [\n                        15\n                      ],\n                      \"input_arity\": 15\n                    }\n                  }\n                ]\n              }\n            }\n          ],\n          \"sources\": []\n        }\n      }\n    }\n  },\n  \"insights\": {\n    \"imports\": {\n      \"s739\": {\n        \"name\": {\n          \"schema\": \"mz_catalog\",\n          \"item\": \"mz_sources_ind\"\n        },\n        \"type\": \"compute\"\n      }\n    },\n    \"fast_path_clusters\": {},\n    \"fast_path_limit\": null,\n    \"persist_count\": []\n  },\n  \"cluster\": {\n    \"name\": \"mz_catalog_server\",\n    \"id\": {\n      \"System\": 2\n    }\n  },\n  \"redacted_sql\": \"SELECT '<REDACTED>' / '<REDACTED>' FROM [s463 AS mz_catalog.mz_sources] LIMIT '<REDACTED>'\"\n}","code":"MZ001","severity":"notice"}}
{"type":"CommandStarting","payload":{"has_rows":false,"is_streaming":false}}
{"type":"Error","payload":{"message":"division by zero","code":"XX000"}}
{"type":"ReadyForQuery","payload":"I"}

ws-text rows=2 fixtimestamp=true
{"query": "SUBSCRIBE t"}
----
{"type":"CommandStarting","payload":{"has_rows":true,"is_streaming":true}}
{"type":"Rows","payload":{"columns":[{"name":"mz_timestamp","type_oid":1700,"type_len":-1,"type_mod":2555908},{"name":"mz_diff","type_oid":20,"type_len":8,"type_mod":-1},{"name":"i","type_oid":23,"type_len":4,"type_mod":-1}]}}
{"type":"Row","payload":["<TIMESTAMP>","1","1"]}
{"type":"Row","payload":["<TIMESTAMP>","1","2"]}

# The above query never completes, so don't put anything below this.
