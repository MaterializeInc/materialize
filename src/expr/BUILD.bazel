# Code generated by cargo-gazelle DO NOT EDIT

# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

load("@crates_io//:defs.bzl", "aliases", "all_crate_deps")
load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_doc_test", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "mz_expr",
    srcs = glob(["src/**/*.rs"]),
    aliases = aliases(
        normal = True,
        proc_macro = True,
    ),
    compile_data = ["Cargo.toml"],
    crate_features = ["default"],
    data = [],
    disable_pipelining = False,
    proc_macro_deps = [] + all_crate_deps(proc_macro = True),
    rustc_env = {},
    rustc_flags = [],
    version = "0.0.0",
    deps = [
        ":mz_expr_build_script",
        "//src/lowertest:mz_lowertest",
        "//src/ore:mz_ore",
        "//src/persist-types:mz_persist_types",
        "//src/pgrepr:mz_pgrepr",
        "//src/pgtz:mz_pgtz",
        "//src/proto:mz_proto",
        "//src/regexp:mz_regexp",
        "//src/repr:mz_repr",
        "//src/sql-parser:mz_sql_parser",
        "//src/sql-pretty:mz_sql_pretty",
    ] + all_crate_deps(normal = True),
)

alias(
    name = "expr",
    actual = "mz_expr",
)

rust_test(
    name = "mz_expr_lib_tests",
    size = "medium",
    aliases = aliases(
        normal = True,
        normal_dev = True,
        proc_macro = True,
        proc_macro_dev = True,
    ),
    compile_data = [],
    crate = ":mz_expr",
    crate_features = ["default"],
    data = [],
    env = {},
    proc_macro_deps = [] + all_crate_deps(
        proc_macro = True,
        proc_macro_dev = True,
    ),
    rustc_env = {},
    rustc_flags = [],
    version = "0.0.0",
    deps = [
        "//src/expr-test-util:mz_expr_test_util",
        "//src/lowertest:mz_lowertest",
        "//src/ore:mz_ore",
        "//src/persist-types:mz_persist_types",
        "//src/pgrepr:mz_pgrepr",
        "//src/pgtz:mz_pgtz",
        "//src/proto:mz_proto",
        "//src/regexp:mz_regexp",
        "//src/repr:mz_repr",
        "//src/sql-parser:mz_sql_parser",
        "//src/sql-pretty:mz_sql_pretty",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)

rust_doc_test(
    name = "mz_expr_doc_test",
    crate = ":mz_expr",
    deps = [
        "//src/expr-test-util:mz_expr_test_util",
        "//src/lowertest:mz_lowertest",
        "//src/ore:mz_ore",
        "//src/persist-types:mz_persist_types",
        "//src/pgrepr:mz_pgrepr",
        "//src/pgtz:mz_pgtz",
        "//src/proto:mz_proto",
        "//src/regexp:mz_regexp",
        "//src/repr:mz_repr",
        "//src/sql-parser:mz_sql_parser",
        "//src/sql-pretty:mz_sql_pretty",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)

filegroup(
    name = "all_protos",
    srcs = [
        "src/id.proto",
        "src/linear.proto",
        "src/relation.proto",
        "src/relation/func.proto",
        "src/row/collection.proto",
        "src/scalar.proto",
        "src/scalar/func/format.proto",
        "src/scalar/like_pattern.proto",
        "//src/pgtz:all_protos",
        "//src/proto:all_protos",
        "//src/repr:all_protos",
    ],
)

cargo_build_script(
    name = "mz_expr_build_script",
    srcs = ["build.rs"],
    build_script_env = {},
    compile_data = [],
    data = [":all_protos"],
    proc_macro_deps = [] + all_crate_deps(build_proc_macro = True),
    rustc_env = {},
    rustc_flags = [],
    deps = ["//src/build-tools:mz_build_tools"] + all_crate_deps(build = True),
)

rust_test(
    name = "mz_expr_test_runner_tests",
    size = "large",
    srcs = ["tests/test_runner.rs"],
    aliases = aliases(
        normal = True,
        normal_dev = True,
        proc_macro = True,
        proc_macro_dev = True,
    ),
    compile_data = [],
    crate_features = [],
    crate_name = "test_runner",
    data = [],
    env = {},
    proc_macro_deps = [] + all_crate_deps(
        proc_macro = True,
        proc_macro_dev = True,
    ),
    rustc_env = {},
    rustc_flags = [],
    version = "0.0.0",
    deps = [
        ":mz_expr",
        "//src/expr-test-util:mz_expr_test_util",
        "//src/lowertest:mz_lowertest",
        "//src/ore:mz_ore",
        "//src/persist-types:mz_persist_types",
        "//src/pgrepr:mz_pgrepr",
        "//src/pgtz:mz_pgtz",
        "//src/proto:mz_proto",
        "//src/regexp:mz_regexp",
        "//src/repr:mz_repr",
        "//src/sql-parser:mz_sql_parser",
        "//src/sql-pretty:mz_sql_pretty",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)
