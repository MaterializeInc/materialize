[package]
name = "mz-fivetran-destination"
description = "Fivetran destination for Materialize."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[dependencies]
async-compression = { version = "0.4.5", features = ["gzip", "tokio", "zstd"] }
bytes = "1.3.0"
clap = { version = "4.5.23", features = ["derive", "env"] }
csv-async = { version = "1.2.6", default-features = false, features = ["tokio"] }
futures = "0.3.25"
itertools = "0.12.1"
mz-ore = { path = "../ore", features = ["cli", "id_gen"], default-features = false }
mz-pgrepr = { path = "../pgrepr", default-features = false }
mz-sql-parser = { path = "../sql-parser", default-features = false }
openssl = { version = "0.10.48", features = ["vendored"] }
postgres-openssl = "0.5.0"
postgres-protocol = { version = "0.6.5" }
prost = { version = "0.13.2", features = ["no-recursion-limit"] }
prost-types = { version = "0.13.2" }
serde = { version = "1.0.152", features = ["derive"] }
serde_json = "1.0.125"
sha2 = "0.10.6"
socket2 = "0.5.3"
thiserror = "1.0.37"
tonic = { version = "0.12.1", features = ["gzip"] }
tokio = { version = "1.38.0", features = ["rt"] }
tokio-postgres = { version = "0.7.8" }
tokio-stream = { version = "0.1.11", features = ["net"] }
tokio-util = { version = "0.7.4", features = ["io"] }
tracing = "0.1.37"
tracing-core = "0.1.30"
tracing-subscriber = "0.3.16"
workspace-hack = { version = "0.0.0", path = "../workspace-hack", optional = true }

[dev-dependencies]
insta = "1.32"

[build-dependencies]
mz-build-tools = { path = "../build-tools", default-features = false }
prost-build = "0.13.2"
reqwest = { version = "0.11.13", features = ["blocking", "native-tls-vendored"] }
tonic-build = "0.12.1"

[features]
default = ["mz-build-tools/default", "workspace-hack"]

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]

[package.metadata.cargo-gazelle.lib]
disable_pipelining = true

[package.metadata.cargo-gazelle.build]
# We depend on protobuf files that live in the fivetran-sdk submodule that
# cargo-gazelle cannot find.
skip_proto_search = true
data = ["@fivetran_sdk//:all_protos"]

[package.metadata.cargo-gazelle.test.lib]
env = { INSTA_WORKSPACE_ROOT = "." }
