[package]
name = "mz-interchange"
description = "Translations for various data serialization formats."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[[bench]]
name = "mz-interchange-bench"
path = "benches/benches.rs"
harness = false

[dependencies]
anyhow = { workspace = true }
byteorder = { workspace = true }
chrono = { workspace = true, default-features = false, features = ["std"] }
clap = { workspace = true, features = ["derive"] }
differential-dataflow = { workspace = true }
itertools = { workspace = true }
once_cell = { workspace = true }
maplit = { workspace = true }
mz-avro = { workspace = true, features = ["snappy"] }
mz-avro-derive = { workspace = true }
mz-ccsr = { workspace = true }
mz-ore = { workspace = true, features = ["network"] }
mz-repr = { workspace = true }
ordered-float = { workspace = true, features = ["serde"] }
prost = { workspace = true, features = ["no-recursion-limit"] }
prost-reflect = { workspace = true }
serde_json = { workspace = true }
timely = { workspace = true, default-features = false, features = ["bincode"] }
tokio = { workspace = true, features = ["macros", "net", "rt", "rt-multi-thread", "time"] }
tracing = { workspace = true }
uuid = { workspace = true, features = ["serde"] }
workspace-hack = { version = "0.0.0", path = "../workspace-hack" }

[dev-dependencies]
criterion = { workspace = true, features = ["async_tokio"] }
tokio = { workspace = true, features = ["macros"] }

[build-dependencies]
prost-build = { workspace = true }
protobuf-src = { workspace = true }

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]
