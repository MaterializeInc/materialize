# Code generated by cargo-gazelle DO NOT EDIT

# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

load("@crates_io//:defs.bzl", "aliases", "all_crate_deps")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_doc_test", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "mz_lsp_server",
    srcs = glob(["src/**/*.rs"]),
    aliases = aliases(
        normal = True,
        proc_macro = True,
    ),
    compile_data = [],
    crate_features = [],
    data = [],
    proc_macro_deps = [] + all_crate_deps(proc_macro = True),
    rustc_env = {},
    rustc_flags = [],
    version = "0.3.0",
    deps = [
        "//src/build-info:mz_build_info",
        "//src/ore:mz_ore",
        "//src/sql-lexer:mz_sql_lexer",
        "//src/sql-parser:mz_sql_parser",
        "//src/sql-pretty:mz_sql_pretty",
    ] + all_crate_deps(normal = True),
)

rust_test(
    name = "mz_lsp_server_lib_tests",
    size = "medium",
    aliases = aliases(
        normal = True,
        normal_dev = True,
        proc_macro = True,
        proc_macro_dev = True,
    ),
    compile_data = [],
    crate = ":mz_lsp_server",
    crate_features = [],
    data = [],
    env = {},
    proc_macro_deps = [] + all_crate_deps(
        proc_macro = True,
        proc_macro_dev = True,
    ),
    rustc_env = {},
    rustc_flags = [],
    version = "0.3.0",
    deps = [
        "//src/build-info:mz_build_info",
        "//src/ore:mz_ore",
        "//src/sql-lexer:mz_sql_lexer",
        "//src/sql-parser:mz_sql_parser",
        "//src/sql-pretty:mz_sql_pretty",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)

rust_doc_test(
    name = "mz_lsp_server_doc_test",
    crate = ":mz_lsp_server",
    deps = [
        "//src/build-info:mz_build_info",
        "//src/ore:mz_ore",
        "//src/sql-lexer:mz_sql_lexer",
        "//src/sql-parser:mz_sql_parser",
        "//src/sql-pretty:mz_sql_pretty",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)

rust_test(
    name = "mz_lsp_server_test_tests",
    size = "large",
    srcs = ["tests/test.rs"],
    aliases = aliases(
        normal = True,
        normal_dev = True,
        proc_macro = True,
        proc_macro_dev = True,
    ),
    compile_data = [],
    crate_features = [],
    crate_name = "test",
    data = [],
    env = {},
    proc_macro_deps = [] + all_crate_deps(
        proc_macro = True,
        proc_macro_dev = True,
    ),
    rustc_env = {},
    rustc_flags = [],
    version = "0.3.0",
    deps = [
        ":mz_lsp_server",
        "//src/build-info:mz_build_info",
        "//src/ore:mz_ore",
        "//src/sql-lexer:mz_sql_lexer",
        "//src/sql-parser:mz_sql_parser",
        "//src/sql-pretty:mz_sql_pretty",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)

rust_binary(
    name = "mz_lsp_server_bin",
    srcs = glob(["src/**/*.rs"]),
    aliases = aliases(
        normal = True,
        proc_macro = True,
    ),
    compile_data = [],
    crate_root = "src/main.rs",
    data = [],
    env = {},
    features = [],
    proc_macro_deps = [] + all_crate_deps(proc_macro = True),
    rustc_env = {},
    rustc_flags = [],
    version = "0.3.0",
    deps = [
        ":mz_lsp_server",
        "//src/build-info:mz_build_info",
        "//src/ore:mz_ore",
        "//src/sql-lexer:mz_sql_lexer",
        "//src/sql-parser:mz_sql_parser",
        "//src/sql-pretty:mz_sql_pretty",
    ] + all_crate_deps(normal = True),
)
