[package]
name = "materialized"
description = "Streaming SQL materialized views."
version = "0.6.2-dev"
authors = ["Materialize, Inc."]
license = "proprietary"
edition = "2018"
publish = false
default-run = "materialized"
build = "build/main.rs"

[package.metadata.deb]
assets = [
    ["../../misc/dist/materialized.service", "lib/systemd/system/", "644"],
    ["target/release/materialized", "usr/bin/", "755"],
]
conflicts = "materialized"
depends = "$auto"
maintainer-scripts = "misc/dist/deb-scripts"

[package.metadata.deb.variants.materialized]
conflicts = "materialized-unstable"
name = "materialized"

[package.metadata.deb.variants.materialized-unstable]
conflicts = "materialized"
name = "materialized-unstable"

[dependencies]
anyhow = "1.0.38"
askama = { version = "0.10.5", features = ["serde-json"] }
async-stream = "0.3.0"
async-trait = "0.1.42"
backtrace = "0.3.55"
build-info = { path = "../build-info" }
cfg-if = "1.0.0"
comm = { path = "../comm" }
compile-time-run = "0.2.11"
coord = { path = "../coord" }
dataflow = { path = "../dataflow" }
dataflow-types = { path = "../dataflow-types" }
differential-dataflow = { git = "https://github.com/TimelyDataflow/differential-dataflow.git" }
futures = "0.3.9"
getopts = "0.2.0"
hex = "0.4.0"
hyper = { version = "0.14.0", features = ["http1", "server"] }
include_dir = "0.6.0"
itertools = "0.9.0"
krb5-src = { version = "0.2.3", features = ["binaries"] }
lazy_static = "1.4.0"
log = "0.4.13"
mz-process-collector = { path = "../mz-process-collector" }
num_cpus = "1.0.0"
openssl = { version = "0.10.32", features = ["vendored"] }
openssl-sys = { version = "0.9.59", features = ["vendored"] }
ore = { path = "../ore" }
os_info = "3.0.1"
parse_duration = "2.1.0"
pgwire = { path = "../pgwire" }
prof = { path = "../prof", features = ["auto-jemalloc"] }
prometheus = { git = "https://github.com/MaterializeInc/rust-prometheus.git", default-features = false }
rdkafka-sys = { git = "https://github.com/fede1024/rust-rdkafka.git", features = ["cmake-build", "libz-static"] }
repr = { path = "../repr" }
reqwest = { version = "0.11.0", features = ["json"] }
rlimit = "0.5.3"
semver = "0.11.0"
serde = { version = "1.0.0", features = ["derive"] }
serde_json = "1.0.0"
shell-words = "1.0.0"
sql = { path = "../sql" }
sql-parser = { path = "../sql-parser" }
sysctl = "0.4.0"
# v0.15.4+ fail to cross compile on macOS.
# See: https://github.com/GuillaumeGomez/sysinfo/pull/404
sysinfo = "=0.15.3"
tempfile = "3.1.0"
timely = { git = "https://github.com/TimelyDataflow/timely-dataflow", default-features = false, features = ["bincode"] }
tokio = { version = "1.0.2", features = ["sync"] }
tokio-openssl = "0.6.0"
tracing = "0.1.21"
# TODO(benesch): we can use the default features here once tracing-subscriber
# does not enable chrono's "oldtime" feature.
tracing-subscriber = { version = "0.2.7", default-features = false, features = ["ansi", "env-filter", "fmt", "tracing-log"] }
url = "2.0.0"

[target.'cfg(not(target_os = "macos"))'.dependencies]
# According to jemalloc developers, `background_threads` should always be
# enabled, except in "esoteric" situations that don't apply to Materialize
# (Namely: if the application relies on new threads not being created for whatever reason)
#
# See: https://github.com/jemalloc/jemalloc/issues/956#issuecomment-316224733
jemallocator = { version = "0.3.0", features = ["profiling", "unprefixed_malloc_on_supported_platforms", "background_threads"] }

[dev-dependencies]
assert_cmd = "1.0.2"
chrono = { version = "0.4.0", default-features = false, features = ["std"] }
datadriven = "0.5.0"
fallible-iterator = "0.2.0"
itertools = "0.9.0"
pgrepr = { path = "../pgrepr" }
pgtest = { path = "../pgtest" }
postgres = { version = "0.19.0", features = ["with-chrono-0_4"] }
postgres-openssl = "0.5.0"
postgres_array = "0.11.0"
predicates = "1.0.6"
repr = { path = "../repr" }
reqwest = { version = "0.11.0", features = ["blocking"] }
serde_json = "1.0.0"
tokio-postgres = { version = "0.7.0", features = ["with-chrono-0_4"] }

[build-dependencies]
anyhow = "1.0.38"
flate2 = "1.0.19"
hex = "0.4.2"
hex-literal = "0.3.1"
reqwest = { version = "0.11.0", features = ["blocking"] }
sha2 = "0.9.2"
tar = "0.4.30"
walkdir = "2.3.1"

[features]
# When enabled, static assets for the web UI are loaded from disk on every HTTP
# request rather than compiled into the binary. This vastly speeds up the
# iteration cycle when developing the web UI.
#
# WARNING: For development use only! When enabled, may allow unrestricted read
# access to the file system.
dev-web = []
