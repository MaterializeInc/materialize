// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

package mz_persist_client.internal.state;

message ProtoU64Antichain {
    repeated int64 elements = 1;
}

message ProtoU64Description {
    ProtoU64Antichain lower = 1;
    ProtoU64Antichain upper = 2;
    ProtoU64Antichain since = 3;
}

message ProtoHollowBatchPart {
    ProtoU64Description desc = 1;
    string key = 2;
}

message ProtoHollowBatch {
    ProtoU64Description desc = 1;
    repeated string keys = 2;
    uint64 len = 3;
}

message ProtoTrace {
    ProtoU64Antichain since = 1;
    repeated ProtoHollowBatch spine = 2;
}

message ProtoReaderState {
    string reader_id = 1;
    ProtoU64Antichain since = 2;
    uint64 seqno = 3;
    uint64 last_heartbeat_timestamp_ms = 4;
}

message ProtoWriterState {
    string writer_id = 1;
    uint64 last_heartbeat_timestamp_ms = 2;
    uint64 lease_duration_ms = 3;
}

message ProtoStateRollup {
    string applier_version = 11;

    string shard_id = 1;
    string key_codec = 2;
    string val_codec = 3;
    string ts_codec = 4;
    string diff_codec = 5;
    uint64 seqno = 6;
    uint64 last_gc_req = 10;
    ProtoTrace trace = 7;
    repeated ProtoReaderState readers = 8;
    repeated ProtoWriterState writers = 9;
}

message ProtoLeasedBatchMetadata {
    message ProtoLeasedBatchMetadataSnapshot {
        ProtoU64Antichain as_of = 1;
    }

    message ProtoLeasedBatchMetadataListen {
        ProtoU64Antichain as_of = 1;
        ProtoU64Antichain until = 2;
    }

    oneof kind {
        ProtoLeasedBatchMetadataSnapshot snapshot = 1;
        ProtoLeasedBatchMetadataListen listen = 2;
    }
}

message ProtoLeasedBatch {
    string shard_id = 1;
    ProtoLeasedBatchMetadata reader_metadata = 2;
    ProtoHollowBatch batch = 3;
    optional uint64 leased_seqno = 4;
    string reader_id = 5;
}
