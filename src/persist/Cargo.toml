[package]
name = "mz-persist"
description = "Abstraction for Materialize dataplane persistence."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false
# Since we intentionally will only ever have one bench target, auto discovery of
# benches is unnecessary. Turning it off allows us to have helper code in
# src/benches.
autobenches = false

# Disable the ability to use benches in the library because the bench harness
# isn't overridable there and the stock one prevents using Criterion specific
# flags, e.g. `cargo bench -p persist -- --baseline=foo`.
[lib]
bench = false

# NB: This is meant to be a strong, independent abstraction boundary. Please
# don't leak in dependencies on other Materialize packages.
[dependencies]
anyhow = { workspace = true, features = ["backtrace"] }
arrow2 = { workspace = true, features = ["io_ipc", "io_parquet"] }
async-trait = { workspace = true }
aws-config = { workspace = true, default-features = false, features = ["native-tls"] }
aws-credential-types = { workspace = true, features = ["hardcoded-credentials"] }
aws-sdk-s3 = { workspace = true, default-features = false, features = ["native-tls", "rt-tokio"]  }
aws-types = { workspace = true }
base64 = { workspace = true }
bytes = { workspace = true }
deadpool-postgres = { workspace = true }
differential-dataflow = { workspace = true }
fail = { workspace = true, features = ["failpoints"] }
futures-util = { workspace = true }
once_cell = { workspace = true }
md-5 = { workspace = true }
mz-aws-s3-util = { workspace = true }
mz-ore = { workspace = true, default-features = false, features = ["metrics", "async", "bytes_"] }
mz-persist-types = { workspace = true }
mz-proto = { workspace = true }
openssl = { workspace = true, features = ["vendored"] }
openssl-sys = { workspace = true, features = ["vendored"] }
postgres-openssl = { workspace = true }
prometheus = { workspace = true, default-features = false }
prost = { workspace = true, features = ["no-recursion-limit"] }
rand = { workspace = true, features = ["small_rng"] }
serde = { workspace = true, features = ["derive"] }
timely = { workspace = true, default-features = false, features = ["bincode"] }
tokio = { workspace = true, default-features = false, features = ["fs", "macros", "sync", "rt", "rt-multi-thread"] }
tokio-postgres = { workspace = true }
tracing = { workspace = true }
url = { workspace = true }
uuid = { workspace = true, features = ["v4"] }
workspace-hack = { version = "0.0.0", path = "../workspace-hack" }

[dev-dependencies]
mz-ore = { workspace = true, default-features = false, features = ["test"] }
serde_json = { workspace = true }
tempfile = { workspace = true }

[build-dependencies]
prost-build = { workspace = true }
protobuf-src = { workspace = true }

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]
