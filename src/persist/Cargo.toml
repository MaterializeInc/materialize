[package]
name = "mz-persist"
description = "Abstraction for Materialize dataplane persistence."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false
# Since we intentionally will only ever have one bench target, auto discovery of
# benches is unnecessary. Turning it off allows us to have helper code in
# src/benches.
autobenches = false

# Disable the ability to use benches in the library because the bench harness
# isn't overridable there and the stock one prevents using Criterion specific
# flags, e.g. `cargo bench -p persist -- --baseline=foo`.
[lib]
bench = false

# NB: This is meant to be a strong, independent abstraction boundary. Please
# don't leak in dependencies on other Materialize packages.
[dependencies]
anyhow = { version = "1.0.66", features = ["backtrace"] }
arrow2 = { git = "https://github.com/jorgecarleitao/arrow2.git", features = ["io_ipc", "io_parquet"] }
async-trait = "0.1.59"
aws-config = { version = "0.53.0", default-features = false, features = ["native-tls"] }
aws-credential-types = { version = "0.53.0", features = ["hardcoded-credentials"] }
aws-sdk-s3 = { version = "0.23.0", default-features = false, features = ["native-tls", "rt-tokio"]  }
aws-types = "0.53.0"
base64 = "0.13.1"
bytes = "1.3.0"
deadpool-postgres = "0.10.3"
differential-dataflow = { git = "https://github.com/TimelyDataflow/differential-dataflow.git" }
fail = { version = "0.5.1", features = ["failpoints"] }
futures-util = "0.3.25"
once_cell = "1.16.0"
md-5 = "0.10.5"
mz-aws-s3-util = { path = "../aws-s3-util" }
mz-ore = { path = "../ore", default-features = false, features = ["metrics", "async"] }
mz-persist-types = { path = "../persist-types" }
mz-proto = { path = "../proto" }
openssl = { version = "0.10.43", features = ["vendored"] }
openssl-sys = { version = "0.9.80", features = ["vendored"] }
postgres-openssl = { git = "https://github.com/MaterializeInc/rust-postgres" }
prost = { version = "0.11.3", features = ["no-recursion-limit"] }
rand = { version = "0.8.5", features = ["small_rng"] }
serde = { version = "1.0.152", features = ["derive"] }
timely = { git = "https://github.com/TimelyDataflow/timely-dataflow", default-features = false, features = ["bincode"] }
tokio = { version = "1.24.2", default-features = false, features = ["fs", "macros", "sync", "rt", "rt-multi-thread"] }
tokio-postgres = { git = "https://github.com/MaterializeInc/rust-postgres" }
tracing = "0.1.37"
url = "2.3.1"
uuid = { version = "1.2.2", features = ["v4"] }
workspace-hack = { version = "0.0.0", path = "../workspace-hack" }

[dev-dependencies]
mz-ore = { path = "../ore", default-features = false, features = ["test"] }
serde_json = "1.0.89"
tempfile = "3.2.0"

[build-dependencies]
prost-build = "0.11.2"
protobuf-src = "1.1.0"

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]
