[package]
name = "mz-prof-http"
description = "Route HTTP requests to various profiling functions"
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[dependencies]
askama = { version = "0.12.1", default-features = false, features = ["config", "serde-json"] }
axum = "0.8.4"
axum-extra = { version = "0.10.1", features = ["typed-header"] }
bytesize = "1.3.0"
cfg-if = "1.0.0"
headers = "0.4.0"
http = "1.2.0"
include_dir = "0.7.4"
mappings = "0.6.0"
mime = "0.3.16"
mz-build-info = { path = "../build-info", default-features = false }
mz-http-util = { path = "../http-util", default-features = false }
mz-ore = { path = "../ore", default-features = false }
mz-prof = { path = "../prof", default-features = false }
jemalloc_pprof = { version = "0.6", optional = true }
pprof_util = "0.6"
serde = { version = "1.0.219", features = ["derive"] }
tokio = { version = "1.44.1", features = ["time"] }
tracing = { version = "0.1.37", optional = true }
workspace-hack = { version = "0.0.0", path = "../workspace-hack", optional = true }

[build-dependencies]
anyhow = "1.0.98"
mz-npm = { path = "../npm", default-features = false }

[features]
default = ["workspace-hack"]
# When enabled, static assets for the web UI are loaded from disk on every HTTP
# request rather than compiled into the binary. This vastly speeds up the
# iteration cycle when developing the web UI.
#
# WARNING: For development use only! When enabled, may allow unrestricted read
# access to the file system.
dev-web = ["tracing"]
# Whether to enable profiling features that depend on jemalloc.
jemalloc = ["mz-prof/jemalloc", "jemalloc_pprof"]

[package.metadata.cargo-udeps.ignore]
# "bytesize" not used on linux
normal = ["bytesize", "workspace-hack"]

[package.metadata.cargo-gazelle.lib]
compile_data = ["templates/*", "src/http/static/**/*"]

[package.metadata.cargo-gazelle]
# We manually write this BUILD.bazel file because we need to carefully
# configure when `jemalloc` gets used for ASAN.
skip_generating = true
