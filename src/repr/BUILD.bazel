# Code generated by cargo-gazelle DO NOT EDIT

# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

load("@crates_io//:defs.bzl", "aliases", "all_crate_deps")
load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_doc_test", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "mz_repr",
    srcs = glob(["src/**/*.rs"]),
    aliases = aliases(
        normal = True,
        proc_macro = True,
    ),
    compile_data = ["Cargo.toml"],
    crate_features = [
        "default",
        "tracing-subscriber",
        "tracing_",
    ],
    data = [],
    disable_pipelining = False,
    proc_macro_deps = [] + all_crate_deps(proc_macro = True),
    rustc_env = {},
    rustc_flags = [],
    version = "0.0.0",
    deps = [
        ":mz_repr_build_script",
        "//src/lowertest:mz_lowertest",
        "//src/ore:mz_ore",
        "//src/persist-types:mz_persist_types",
        "//src/pgtz:mz_pgtz",
        "//src/proto:mz_proto",
        "//src/sql-parser:mz_sql_parser",
    ] + all_crate_deps(normal = True),
)

alias(
    name = "repr",
    actual = "mz_repr",
)

rust_test(
    name = "mz_repr_lib_tests",
    size = "medium",
    aliases = aliases(
        normal = True,
        normal_dev = True,
        proc_macro = True,
        proc_macro_dev = True,
    ),
    compile_data = [],
    crate = ":mz_repr",
    crate_features = [
        "default",
        "tracing-subscriber",
        "tracing_",
    ],
    data = [] + glob(["src/adt/snapshots/*"]),
    env = {"INSTA_WORKSPACE_ROOT": "."},
    proc_macro_deps = [] + all_crate_deps(
        proc_macro = True,
        proc_macro_dev = True,
    ),
    rustc_env = {},
    rustc_flags = [],
    version = "0.0.0",
    deps = [
        "//src/lowertest:mz_lowertest",
        "//src/ore:mz_ore",
        "//src/persist:mz_persist",
        "//src/persist-types:mz_persist_types",
        "//src/pgtz:mz_pgtz",
        "//src/proto:mz_proto",
        "//src/sql-parser:mz_sql_parser",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)

rust_doc_test(
    name = "mz_repr_doc_test",
    crate = ":mz_repr",
    deps = [
        "//src/lowertest:mz_lowertest",
        "//src/ore:mz_ore",
        "//src/persist:mz_persist",
        "//src/persist-types:mz_persist_types",
        "//src/pgtz:mz_pgtz",
        "//src/proto:mz_proto",
        "//src/sql-parser:mz_sql_parser",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)

filegroup(
    name = "all_protos",
    srcs = [
        "src/adt/array.proto",
        "src/adt/char.proto",
        "src/adt/date.proto",
        "src/adt/datetime.proto",
        "src/adt/interval.proto",
        "src/adt/mz_acl_item.proto",
        "src/adt/numeric.proto",
        "src/adt/range.proto",
        "src/adt/regex.proto",
        "src/adt/timestamp.proto",
        "src/adt/varchar.proto",
        "src/antichain.proto",
        "src/catalog_item_id.proto",
        "src/global_id.proto",
        "src/refresh_schedule.proto",
        "src/relation_and_scalar.proto",
        "src/role_id.proto",
        "src/row.proto",
        "src/strconv.proto",
        "src/timestamp.proto",
        "src/url.proto",
        "//src/proto:all_protos",
    ],
)

cargo_build_script(
    name = "mz_repr_build_script",
    srcs = ["build.rs"],
    build_script_env = {},
    compile_data = [],
    data = [":all_protos"],
    proc_macro_deps = [] + all_crate_deps(build_proc_macro = True),
    rustc_env = {},
    rustc_flags = [],
    deps = ["//src/build-tools:mz_build_tools"] + all_crate_deps(build = True),
)

rust_test(
    name = "mz_repr_strconv_tests",
    size = "large",
    srcs = ["tests/strconv.rs"],
    aliases = aliases(
        normal = True,
        normal_dev = True,
        proc_macro = True,
        proc_macro_dev = True,
    ),
    compile_data = [],
    crate_features = [],
    crate_name = "strconv",
    data = [],
    env = {},
    proc_macro_deps = [] + all_crate_deps(
        proc_macro = True,
        proc_macro_dev = True,
    ),
    rustc_env = {},
    rustc_flags = [],
    version = "0.0.0",
    deps = [
        ":mz_repr",
        "//src/lowertest:mz_lowertest",
        "//src/ore:mz_ore",
        "//src/persist:mz_persist",
        "//src/persist-types:mz_persist_types",
        "//src/pgtz:mz_pgtz",
        "//src/proto:mz_proto",
        "//src/sql-parser:mz_sql_parser",
    ] + all_crate_deps(
        normal = True,
        normal_dev = True,
    ),
)
