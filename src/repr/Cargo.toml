[package]
name = "mz-repr"
description = "The core data types for Materialize."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[[bench]]
name = "row"
harness = false

[[bench]]
name = "strconv"
harness = false

[[bench]]
name = "packed"
harness = false

[[bench]]
name = "data_types"
harness = false

[dependencies]
anyhow = "1.0.66"
arrow = { version = "53.3.0", default-features = false }
bitflags = "1.3.2"
bytes = "1.3.0"
cfg-if = "1.0.0"
columnar = "0.2.2"
columnation = "0.1.0"
chrono = { version = "0.4.35", default-features = false, features = ["serde", "std"] }
compact_bytes = "0.1.2"
dec = "0.4.8"
differential-dataflow = "0.13.5"
enum-kinds = "0.5.1"
flatcontainer = "0.5.0"
hex = "0.4.3"
itertools = "0.12.1"
mz-lowertest = { path = "../lowertest", default-features = false }
mz-ore = { path = "../ore", features = [
    "bytes_",
    "flatcontainer",
    "id_gen",
    "smallvec",
    "region",
    "stack",
    "test",
    "tracing_",
], default-features = false }
mz-persist-types = { path = "../persist-types", default-features = false }
mz-pgtz = { path = "../pgtz", default-features = false }
mz-proto = { path = "../proto", features = ["chrono"], default-features = false }
mz-sql-parser = { path = "../sql-parser", default-features = false }
num-traits = "0.2.15"
num_enum = "0.5.7"
ordered-float = { version = "4.2.0", features = ["serde"] }
postgres-protocol = { version = "0.6.5" }
prost = { version = "0.13.2", features = ["no-recursion-limit"] }
regex = "1.7.0"
ryu = "1.0.12"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = { version = "1.0.125", features = ["arbitrary_precision", "preserve_order"] }
smallvec = { version = "1.10.0", features = ["serde", "union"] }
static_assertions = "1.1"
strsim = "0.11.1"
timely = "0.17.1"
tokio-postgres = { version = "0.7.8" }
tracing-core = "0.1.30"
url = { version = "2.3.1", features = ["serde"] }
uuid = { version = "1.7.0", features = ["serde"] }
proptest = { version = "1.6.0", default-features = false, features = ["std"] }
proptest-derive = { version = "0.5.1", features = ["boxed_union"] }
thiserror = "1.0.37"
tracing = { version = "0.1.37" }

# for the tracing_ feature
tracing-subscriber = { version = "0.3.16", default-features = false, optional = true }
workspace-hack = { version = "0.0.0", path = "../workspace-hack", optional = true }

[dev-dependencies]
criterion = { version = "0.5.1" }
insta = { version = "1.33.0", features = ["json"] }
mz-persist = { path = "../persist" }
rand = "0.8.5"

[build-dependencies]
mz-build-tools = { path = "../build-tools", default-features = false }
prost-build = "0.13.2"

[features]
default = [
    "mz-build-tools/default",
    "mz-persist-types/default",
    "mz-pgtz/default",
    "mz-proto/default",
    "workspace-hack",
]
tracing_ = ["tracing-subscriber"]

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]

[package.metadata.cargo-gazelle.lib]
# `num_enum` which depends on `proc-macro-crate` tries to read from the Cargo.toml at compile time.
compile_data = ["Cargo.toml"]
# Explicitly enable pipelining.
disable_pipelining = false

[package.metadata.cargo-gazelle.test.lib]
data = ["src/adt/snapshots/*"]
env = { INSTA_WORKSPACE_ROOT = "." }
