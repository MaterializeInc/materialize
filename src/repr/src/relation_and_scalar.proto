// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

// Note: protobuf does not support cyclic imports. Thus, this file contains
// both, definitions from relation.rs and scalar.rs

syntax = "proto3";

package mz_repr.relation_and_scalar;

import "google/protobuf/empty.proto";
import "repr/src/adt/char.proto";
import "repr/src/adt/numeric.proto";
import "repr/src/adt/varchar.proto";
import "repr/src/global_id.proto";

message ProtoRelationType {
    message ProtoKey {
        repeated uint64 keys = 1;
    }
    repeated ProtoColumnType column_types = 1;
    repeated ProtoKey keys = 2;
}

message ProtoColumnName {
    optional string value = 1;
}

message ProtoColumnType {
    ProtoScalarType scalar_type = 1;
    bool nullable = 2;
}

message ProtoRelationDesc {
    ProtoRelationType typ = 1;
    repeated ProtoColumnName names = 2;
}

message ProtoScalarType {
    message ProtoChar {
        adt.char.ProtoCharLength length = 1;
    }

    message ProtoVarChar {
        adt.varchar.ProtoVarCharMaxLength max_length = 1;
    }

    message ProtoList {
        reserved 2;
        reserved "custom_oid";
        ProtoScalarType element_type = 1;
        optional global_id.ProtoGlobalId custom_id = 3;
    }

    message ProtoRecordField {
        ProtoColumnName ColumnName = 1; // TODO: Create and use ProtoColumnName
        ProtoColumnType ColumnType = 2; // TODO: Create and use ProtoColumnType
    }

    message ProtoRecord {
        reserved 2;
        reserved "custom_oid";
        repeated ProtoRecordField fields = 1;
        optional global_id.ProtoGlobalId custom_id = 4;
    }

    message ProtoMap {
        reserved 2;
        reserved "custom_oid";
        ProtoScalarType value_type = 1;
        optional global_id.ProtoGlobalId custom_id = 3;
    }

    oneof kind  {
        google.protobuf.Empty Bool = 1;
        google.protobuf.Empty Int16 = 2;
        google.protobuf.Empty Int32 = 3;
        google.protobuf.Empty Int64 = 4;
        google.protobuf.Empty Float32 = 5;
        google.protobuf.Empty Float64 = 6;
        adt.numeric.ProtoOptionalNumericMaxScale Numeric = 7;
        google.protobuf.Empty Date = 8;
        google.protobuf.Empty Time = 9;
        google.protobuf.Empty Timestamp = 10;
        google.protobuf.Empty TimestampTz = 11;
        google.protobuf.Empty Interval = 12;
        google.protobuf.Empty PgLegacyChar = 13;
        google.protobuf.Empty Bytes = 14;
        google.protobuf.Empty String = 15;
        ProtoChar Char = 16;
        ProtoVarChar VarChar = 17;
        google.protobuf.Empty Jsonb = 18;
        google.protobuf.Empty Uuid = 19;
        ProtoScalarType Array = 20;
        ProtoList List = 21;
        ProtoRecord Record = 22;
        google.protobuf.Empty Oid = 23;
        ProtoMap Map = 24;
        google.protobuf.Empty RegProc = 25;
        google.protobuf.Empty RegType = 26;
        google.protobuf.Empty RegClass = 27;
        google.protobuf.Empty Int2Vector = 28;
    }
}
