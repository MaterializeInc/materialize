# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License in the LICENSE file at the
# root of this repository, or online at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

parse-statement
ALTER ROLE arjun
----
ALTER ROLE arjun
=>
AlterRole(AlterRoleStatement { name: Ident("arjun"), options: [], variable: None })

parse-statement
ALTER ROLE frank SUPERUSER
----
ALTER ROLE frank SUPERUSER
=>
AlterRole(AlterRoleStatement { name: Ident("frank"), options: [SuperUser], variable: None })

parse-statement
ALTER ROLE other_usr LOGIN NOSUPERUSER SUPERUSER NOLOGIN INHERIT NOINHERIT CREATECLUSTER NOCREATECLUSTER CREATEDB NOCREATEDB CREATEROLE NOCREATEROLE
----
ALTER ROLE other_usr LOGIN NOSUPERUSER SUPERUSER NOLOGIN INHERIT NOINHERIT CREATECLUSTER NOCREATECLUSTER CREATEDB NOCREATEDB CREATEROLE NOCREATEROLE
=>
AlterRole(AlterRoleStatement { name: Ident("other_usr"), options: [Login, NoSuperUser, SuperUser, NoLogin, Inherit, NoInherit, CreateCluster, NoCreateCluster, CreateDB, NoCreateDB, CreateRole, NoCreateRole], variable: None })

parse-statement
ALTER ROLE bad.qualification
----
error: Expected end of statement, found dot
ALTER ROLE bad.qualification
              ^

parse-statement
ALTER ROLE usr WITH LOGIN
----
ALTER ROLE usr LOGIN
=>
AlterRole(AlterRoleStatement { name: Ident("usr"), options: [Login], variable: None })

parse-statement
ALTER ROLE usr WITH badopt
----
error: Expected end of statement, found identifier "badopt"
ALTER ROLE usr WITH badopt
                    ^

parse-statement
ALTER ROLE parker SET cluster TO my_cluster
----
ALTER ROLE parker SET cluster = my_cluster
=>
AlterRole(AlterRoleStatement { name: Ident("parker"), options: [], variable: Some(Set { name: Ident("cluster"), value: Values([Ident(Ident("my_cluster"))]) }) })

parse-statement
ALTER ROLE parker RESET cluster
----
ALTER ROLE parker RESET cluster
=>
AlterRole(AlterRoleStatement { name: Ident("parker"), options: [], variable: Some(Reset { name: Ident("cluster") }) })
