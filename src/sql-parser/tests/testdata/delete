# Copyright 2020 sqlparser-rs contributors. All rights reserved.
# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# This file is derived from the sqlparser-rs project, available at
# https://github.com/andygrove/sqlparser-rs. It was incorporated
# directly into Materialize on December 21, 2019.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License in the LICENSE file at the
# root of this repository, or online at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

parse-statement roundtrip
DELETE FROM table
----
DELETE FROM table

parse-statement
DELETE FROM table
----
DELETE FROM table
=>
Delete(DeleteStatement { table_name: Name(UnresolvedItemName([Ident("table")])), alias: None, using: [], selection: None })

parse-statement
DELETE FROM table as t2
----
DELETE FROM table AS t2
=>
Delete(DeleteStatement { table_name: Name(UnresolvedItemName([Ident("table")])), alias: Some(TableAlias { name: Ident("t2"), columns: [], strict: false }), using: [], selection: None })

parse-statement
DELETE FROM table USING a, b
----
DELETE FROM table USING a, b
=>
Delete(DeleteStatement { table_name: Name(UnresolvedItemName([Ident("table")])), alias: None, using: [TableWithJoins { relation: Table { name: Name(UnresolvedItemName([Ident("a")])), alias: None }, joins: [] }, TableWithJoins { relation: Table { name: Name(UnresolvedItemName([Ident("b")])), alias: None }, joins: [] }], selection: None })

parse-statement roundtrip
DELETE FROM foo WHERE name = 5
----
DELETE FROM foo WHERE name = 5

parse-statement
DELETE FROM foo WHERE name = 5
----
DELETE FROM foo WHERE name = 5
=>
Delete(DeleteStatement { table_name: Name(UnresolvedItemName([Ident("foo")])), alias: None, using: [], selection: Some(Op { op: Op { namespace: None, op: "=" }, expr1: Identifier([Ident("name")]), expr2: Some(Value(Number("5"))) }) })
