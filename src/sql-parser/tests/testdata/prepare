# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License in the LICENSE file at the
# root of this repository, or online at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

parse-statement
PREPARE a AS SELECT 1 + $1
----
PREPARE a AS SELECT 1 + $1
=>
Prepare(PrepareStatement { name: Ident("a"), stmt: Select(SelectStatement { query: Query { ctes: Simple([]), body: Select(Select { distinct: None, projection: [Expr { expr: Op { op: Op { namespace: None, op: "+" }, expr1: Value(Number("1")), expr2: Some(Parameter(1)) }, alias: None }], from: [], selection: None, group_by: [], having: None, options: [] }), order_by: [], limit: None, offset: None }, as_of: None }) })

parse-statement
EXECUTE a
----
EXECUTE a
=>
Execute(ExecuteStatement { name: Ident("a"), params: [] })

parse-statement
EXECUTE a (a, 'b', 1 + 2)
----
EXECUTE a (a, 'b', 1 + 2)
=>
Execute(ExecuteStatement { name: Ident("a"), params: [Identifier([Ident("a")]), Value(String("b")), Op { op: Op { namespace: None, op: "+" }, expr1: Value(Number("1")), expr2: Some(Value(Number("2"))) }] })

parse-statement
DEALLOCATE a
----
DEALLOCATE a
=>
Deallocate(DeallocateStatement { name: Some(Ident("a")) })

parse-statement
DEALLOCATE ALL
----
DEALLOCATE ALL
=>
Deallocate(DeallocateStatement { name: None })

parse-statement
DEALLOCATE PREPARE a
----
DEALLOCATE a
=>
Deallocate(DeallocateStatement { name: Some(Ident("a")) })
