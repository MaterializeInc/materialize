[package]
name = "mz-storage-client"
description = "The public API for the storage layer."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[dependencies]
anyhow = "1.0.100"
async-trait = "0.1.89"
chrono = { version = "0.4.39", default-features = false, features = ["std"] }
differential-dataflow = "0.17.0"
futures = "0.3.31"
itertools = { version = "0.14.0" }
mz-ccsr = { path = "../ccsr" }
mz-cluster-client = { path = "../cluster-client" }
mz-controller-types = { path = "../controller-types" }
mz-dyncfg = { path = "../dyncfg" }
mz-dyncfgs = { path = "../dyncfgs" }
mz-kafka-util = { path = "../kafka-util" }
mz-ore = { path = "../ore", features = ["async", "chrono", "process", "tracing"] }
mz-persist-client = { path = "../persist-client" }
mz-persist-types = { path = "../persist-types" }
mz-repr = { path = "../repr" }
mz-service = { path = "../service" }
mz-storage-types = { path = "../storage-types" }
mz-txn-wal = { path = "../txn-wal" }
prometheus = { version = "0.13.4", default-features = false }
rdkafka = { version = "0.29.0", features = [
    "cmake-build",
    "ssl-vendored",
    "libz-static",
    "zstd",
] }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = { version = "1.0.145" }
smallvec = { version = "1.15.1", features = ["serde", "union"] }
timely = "0.24.0"
tokio = { version = "1.44.1", features = [
    "fs",
    "rt",
    "sync",
    "test-util",
    "time",
] }
tracing = "0.1.37"
uuid = "1.18.1"
workspace-hack = { version = "0.0.0", path = "../workspace-hack", optional = true }

[dev-dependencies]
mz-build-info = { path = "../build-info" }
mz-secrets = { path = "../secrets" }

[features]
default = ["workspace-hack"]

[package.metadata.cargo-udeps.ignore]
# only used on linux
normal = ["inotify", "workspace-hack"]
