[package]
name = "mz-storage-client"
description = "The public API for the storage layer."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[dependencies]
anyhow = { workspace = true }
async-stream = { workspace = true }
async-trait = { workspace = true }
aws-config = { workspace = true, default-features = false, features = ["native-tls"] }
aws-credential-types = { workspace = true, features = ["hardcoded-credentials"] }
aws-types = { workspace = true }
bytes = { workspace = true }
chrono = { workspace = true, default-features = false, features = ["std"] }
dec = { workspace = true }
derivative = { workspace = true }
differential-dataflow = { workspace = true }
futures = { workspace = true }
http = { workspace = true }
itertools = { workspace = true }
once_cell = { workspace = true }
mz-build-info = { workspace = true }
mz-ccsr = { workspace = true }
mz-cloud-resources = { workspace = true }
mz-cluster-client = { workspace = true }
mz-expr = { workspace = true }
mz-interchange = { workspace = true }
mz-kafka-util = { workspace = true }
mz-ore = { workspace = true, features = ["async", "tracing_"] }
mz-persist = { workspace = true }
mz-persist-client = { workspace = true }
mz-persist-types = { workspace = true }
mz-postgres-util = { workspace = true }
mz-proto = { workspace = true, features = ["tokio-postgres"] }
mz-repr = { workspace = true }
mz-rocksdb = { workspace = true }
mz-secrets = { workspace = true }
mz-service = { workspace = true }
mz-ssh-util = { workspace = true }
mz-stash = { workspace = true }
mz-timely-util = { workspace = true }
openssh = { workspace = true, default-features = false, features = ["native-mux"] }
proptest = { workspace = true, default-features = false, features = ["std"]}
prometheus = { workspace = true, default-features = false }
proptest-derive = { workspace = true, features = ["boxed_union"]}
prost = { workspace = true, features = ["no-recursion-limit"] }
rdkafka = { workspace = true, features = ["cmake-build", "ssl-vendored", "libz-static", "zstd"] }
regex = { workspace = true }
scopeguard = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
thiserror = { workspace = true }
timely = { workspace = true, default-features = false, features = ["bincode"] }
tokio = { workspace = true, features = ["fs", "rt", "sync", "test-util"] }
tokio-postgres = { workspace = true, features = ["serde"] }
tokio-stream = { workspace = true }
tonic = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
url = { workspace = true, features = ["serde"] }
uuid = { workspace = true, features = ["serde", "v4"] }
workspace-hack = { version = "0.0.0", path = "../workspace-hack" }

[build-dependencies]
prost-build = { workspace = true }
protobuf-src = { workspace = true }
tonic-build = { workspace = true }

[dev-dependencies]
itertools = { workspace = true }
tokio = { workspace = true, features = ["test-util"] }

[package.metadata.cargo-udeps.ignore]
# only used on linux
normal = ["inotify", "workspace-hack"]
