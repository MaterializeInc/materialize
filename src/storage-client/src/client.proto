// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

// buf breaking: ignore (does currently not require backward-compatibility)

syntax = "proto3";

import "proto/src/proto.proto";
import "proto/src/chrono.proto";
import "repr/src/antichain.proto";
import "repr/src/global_id.proto";
import "cluster-client/src/client.proto";
import "storage-types/src/parameters.proto";
import "storage-types/src/sources.proto";
import "storage-types/src/sinks.proto";

import "google/protobuf/empty.proto";

package mz_storage_client.client;

service ProtoStorage {
    rpc CommandResponseStream (stream ProtoStorageCommand) returns (stream ProtoStorageResponse);
}

message ProtoCompaction {
    mz_repr.global_id.ProtoGlobalId id = 1;
    mz_repr.antichain.ProtoU64Antichain frontier = 2;
}

message ProtoAllowCompaction {
    repeated ProtoCompaction collections = 1;
}

message ProtoRunIngestionCommand {
    reserved 3;
    reserved "update";

    mz_repr.global_id.ProtoGlobalId id = 1;
    mz_storage_types.sources.ProtoIngestionDescription description = 2;
}

message ProtoCreateSources {
    repeated ProtoRunIngestionCommand sources = 1;
}

message ProtoRunSinkCommand {
    reserved 3;
    reserved "update";

    mz_repr.global_id.ProtoGlobalId id = 1;
    mz_storage_types.sinks.ProtoStorageSinkDesc description = 2;
}

message ProtoRunSinks {
    repeated ProtoRunSinkCommand sinks = 1;
}

message ProtoFrontierUppersKind {
    repeated ProtoTrace traces = 1;
}

message ProtoTrace {
    mz_repr.global_id.ProtoGlobalId id = 1;
    mz_repr.antichain.ProtoU64Antichain upper = 2;
}

message ProtoStorageCommand {
    message ProtoCreateTimely {
        mz_cluster_client.client.ProtoTimelyConfig config = 1;
        mz_cluster_client.client.ProtoClusterStartupEpoch epoch = 2;
    }

    oneof kind {
        ProtoCreateTimely create_timely = 6;
        ProtoCreateSources create_sources = 1;
        ProtoAllowCompaction allow_compaction = 2;
        google.protobuf.Empty initialization_complete = 3;
        ProtoRunSinks run_sinks = 4;
        mz_storage_types.parameters.ProtoStorageParameters update_configuration = 5;
    }
}

message ProtoStorageResponse {
    message ProtoSourceStatisticsUpdate {
        mz_repr.global_id.ProtoGlobalId id = 1;
        uint64 worker_id = 2;
        bool snapshot_committed = 3;
        uint64 messages_received = 4;
        uint64 updates_staged = 5;
        uint64 updates_committed = 6;
        uint64 bytes_received = 7;
        uint64 envelope_state_bytes = 8;
        uint64 envelope_state_records = 9;
        optional int64 rehydration_latency_ms = 10;
    }
    message ProtoSinkStatisticsUpdate {
        mz_repr.global_id.ProtoGlobalId id = 1;
        uint64 worker_id = 2;
        uint64 messages_staged = 3;
        uint64 messages_committed = 5;
        uint64 bytes_staged = 4;
        uint64 bytes_committed = 6;
    }
    message ProtoStatisticsUpdates {
        repeated ProtoSourceStatisticsUpdate source_updates = 1;
        repeated ProtoSinkStatisticsUpdate sink_updates = 2;
    }

    message ProtoStatus {
        oneof kind {
            google.protobuf.Empty starting = 1;
            google.protobuf.Empty running = 2;
            google.protobuf.Empty paused = 3;
            google.protobuf.Empty stalled = 4;
            google.protobuf.Empty ceased = 5;
            google.protobuf.Empty dropped = 6;
        }
    }

    message ProtoStatusUpdate {
        mz_repr.global_id.ProtoGlobalId id = 1;
        ProtoStatus status = 2;
        mz_proto.chrono.ProtoNaiveDateTime timestamp = 3;
        optional string error = 4;
        repeated string hints = 5;
        map<string, string> namespaced_errors = 6;
    }

    message ProtoStatusUpdates {
        repeated ProtoStatusUpdate updates = 1;
    }

    message ProtoDroppedIds {
        repeated mz_repr.global_id.ProtoGlobalId ids = 1;
    }

    oneof kind {
        ProtoFrontierUppersKind frontier_uppers = 1;
        ProtoDroppedIds dropped_ids = 2;
        ProtoStatisticsUpdates stats = 3;
        ProtoStatusUpdates status_updates = 4;
    }
}
