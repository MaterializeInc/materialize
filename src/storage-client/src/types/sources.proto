// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

import "google/protobuf/empty.proto";

import "postgres-util/src/desc.proto";
import "proto/src/proto.proto";
import "repr/src/chrono.proto";
import "repr/src/global_id.proto";
import "repr/src/relation_and_scalar.proto";
import "repr/src/row.proto";
import "storage-client/src/controller.proto";
import "storage-client/src/types/connections.proto";
import "storage-client/src/types/connections/aws.proto";
import "storage-client/src/types/errors.proto";
import "storage-client/src/types/instances.proto";
import "storage-client/src/types/sources/encoding.proto";
import "expr/src/scalar.proto";

package mz_storage_client.types.sources;

message ProtoMzOffset {
  uint64 offset = 1;
}


message ProtoIncludedColumnSource {
    oneof kind {
        google.protobuf.Empty partition = 1;
        google.protobuf.Empty offset = 2;
        google.protobuf.Empty timestamp = 3;
        google.protobuf.Empty topic = 4;
        google.protobuf.Empty headers = 5;
    }
}

message ProtoKeyEnvelope {
    oneof kind {
        google.protobuf.Empty none = 1;
        google.protobuf.Empty flattened = 2;
        string named = 3;
    }
}

message ProtoTimeline {
    oneof kind {
        google.protobuf.Empty epoch_milliseconds = 1;
        string external = 2;
        string user = 3;
    }
}

message ProtoSourceEnvelope {
    oneof kind {
        ProtoNoneEnvelope none = 1;
        ProtoDebeziumEnvelope debezium = 2;
        ProtoUpsertEnvelope upsert = 3;
        google.protobuf.Empty cdc_v2 = 4;
    }
}

message ProtoNoneEnvelope {
    ProtoKeyEnvelope key_envelope = 1;
    uint64 key_arity = 2;
}

message ProtoUpsertEnvelope {
    ProtoUpsertStyle style = 1;
    repeated uint64 key_indices = 2;
    uint64 source_arity = 3;
}

message ProtoUpsertStyle {
    message ProtoDebezium {
        uint64 after_idx = 1;
    }

    oneof kind {
        ProtoKeyEnvelope default = 1;
        ProtoDebezium debezium = 2;
    }
}

message ProtoIncludedColumnPos {
    string name = 1;
    uint64 pos = 2;
}

message ProtoDebeziumEnvelope {
    uint64 before_idx = 1;
    uint64 after_idx = 2;
    ProtoDebeziumDedupProjection dedup = 3;
}

message ProtoDebeziumTransactionMetadata {
    mz_repr.global_id.ProtoGlobalId tx_metadata_global_id = 1;
    uint64 tx_status_idx = 2;
    uint64 tx_transaction_id_idx = 3;
    uint64 tx_data_collections_idx = 4;
    uint64 tx_data_collections_data_collection_idx = 5;
    uint64 tx_data_collections_event_count_idx = 6;
    string tx_data_collection_name = 7;
    uint64 data_transaction_idx = 8;
    uint64 data_transaction_id_idx = 9;
}

message ProtoDebeziumDedupProjection {
    uint64 op_idx = 1;
    uint64 source_idx = 2;
    uint64 snapshot_idx = 3;
    ProtoDebeziumSourceProjection source_projection = 4;
    ProtoDebeziumTransactionMetadata tx_metadata = 6;
}

message ProtoDebeziumSourceProjection {
    message ProtoMySql {
        uint64 file = 1;
        uint64 pos = 2;
        uint64 row = 3;
    }

    message ProtoPostgres {
        uint64 sequence = 1;
        uint64 lsn = 2;
    }

    message ProtoSqlServer {
        uint64 change_lsn = 1;
        uint64 event_serial_no = 2;
    }

    oneof kind {
        ProtoMySql my_sql = 1;
        ProtoPostgres postgres = 2;
        ProtoSqlServer sql_server = 3;
    }
}

message ProtoKafkaSourceConnection {
    mz_storage_client.types.connections.ProtoKafkaConnection connection = 1;
    mz_repr.global_id.ProtoGlobalId connection_id = 13;
    string topic = 2;
    map<int32, int64> start_offsets = 3;
    optional string group_id_prefix = 4;
    optional mz_proto.ProtoU128 environment_id = 5;
    optional string environment_name = 12;
    ProtoIncludedColumnPos include_timestamp = 6;
    ProtoIncludedColumnPos include_partition = 7;
    ProtoIncludedColumnPos include_topic = 8;
    ProtoIncludedColumnPos include_offset = 9;
    ProtoIncludedColumnPos include_headers = 10;
}

message ProtoSourceDesc {
    ProtoSourceConnection connection = 1;
    mz_storage_client.types.sources.encoding.ProtoSourceDataEncoding encoding = 2;
    ProtoSourceEnvelope envelope = 3;
    repeated ProtoIncludedColumnSource metadata_columns = 4;
    mz_proto.ProtoDuration timestamp_interval = 5;
}

message ProtoSourceConnection {
    reserved 2, 3, 5;
    oneof kind {
        ProtoKafkaSourceConnection kafka = 1;
        ProtoPostgresSourceConnection postgres = 4;
        ProtoLoadGeneratorSourceConnection loadgen = 6;
        ProtoTestScriptSourceConnection testscript = 7;
    }
}

message ProtoSourceData {
    oneof kind {
        mz_repr.row.ProtoRow ok = 1;
        errors.ProtoDataflowError err = 2;
    }
}

message ProtoPostgresSourceConnection {
    message ProtoPostgresTableCast {
        repeated mz_expr.scalar.ProtoMirScalarExpr column_casts = 1;
    }

    mz_repr.global_id.ProtoGlobalId connection_id = 6;
    mz_storage_client.types.connections.ProtoPostgresConnection connection = 1;
    string publication = 2;
    ProtoPostgresSourcePublicationDetails details = 4;
    repeated ProtoPostgresTableCast table_casts = 5;
    // Describes the position in the source's publication that the table cast
    // correlates to; meant to be iterated over in tandem with table_casts
    repeated uint64 table_cast_pos = 7;
}

message ProtoPostgresSourcePublicationDetails {
    repeated mz_postgres_util.desc.ProtoPostgresTableDesc tables = 1;
    string slot = 2;
}

message ProtoLoadGeneratorSourceConnection {
    reserved 1;
    oneof generator {
        ProtoCounterLoadGenerator counter = 6;
        google.protobuf.Empty auction = 3;
        ProtoTpchLoadGenerator tpch = 4;
        google.protobuf.Empty datums = 5;
    }
    optional uint64 tick_micros = 2;
}

message ProtoTestScriptSourceConnection {
    string desc_json = 1;
}

message ProtoCounterLoadGenerator {
    // Must be non-negative,
    // but kept as int64 to make downstream logic simpler
    optional int64 max_cardinality = 1;
}

message ProtoTpchLoadGenerator {
    int64 count_supplier = 1;
    int64 count_part = 2;
    int64 count_customer = 3;
    int64 count_orders = 4;
    int64 count_clerk = 5;
}

message ProtoCompression {
    oneof kind {
        google.protobuf.Empty gzip = 1;
        google.protobuf.Empty none = 2;
    }
}

message ProtoIngestionDescription {
    message ProtoSourceImport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        mz_storage_client.controller.ProtoCollectionMetadata storage_metadata = 2;
    }
    message ProtoSourceExport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        uint64 output_index = 2;
        mz_storage_client.controller.ProtoCollectionMetadata storage_metadata = 3;
    }
    repeated ProtoSourceImport source_imports = 1;
    repeated ProtoSourceExport source_exports = 2;
    mz_storage_client.controller.ProtoCollectionMetadata ingestion_metadata = 3;
    ProtoSourceDesc desc = 4;
    reserved 5;
    mz_storage_client.types.instances.ProtoStorageInstanceId instance_id = 6;
    mz_repr.global_id.ProtoGlobalId remap_collection_id = 7;
}
