[package]
name = "mz-storage-controller"
description = "Implementation of the Storage controller API."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[dependencies]
anyhow = "1.0.66"
async-trait = "0.1.83"
bytes = "1.3.0"
chrono = { version = "0.4.35", default-features = false, features = ["std"] }
derivative = "2.2.0"
differential-dataflow = "0.13.5"
futures = "0.3.25"
itertools = { version = "0.12.1" }
mz-build-info = { path = "../build-info" }
mz-cluster-client = { path = "../cluster-client" }
mz-controller-types = { path = "../controller-types" }
mz-dyncfg = { path = "../dyncfg" }
mz-dyncfgs = { path = "../dyncfgs" }
mz-ore = { path = "../ore", features = ["async", "chrono", "tracing_"] }
mz-persist-client = { path = "../persist-client" }
mz-persist-types = { path = "../persist-types" }
mz-proto = { path = "../proto", features = ["tokio-postgres"] }
mz-repr = { path = "../repr" }
mz-service = { path = "../service" }
mz-storage-client = { path = "../storage-client" }
mz-storage-types = { path = "../storage-types" }
mz-timely-util = { path = "../timely-util" }
mz-tls-util = { path = "../tls-util" }
mz-txn-wal = { path = "../txn-wal" }
proptest = { version = "1.6.0", default-features = false, features = ["std"] }
prost = { version = "0.13.2", features = ["no-recursion-limit"] }
serde = { version = "1.0.152", features = ["derive"] }
serde_json = { version = "1.0.125" }
timely = "0.17.1"
tokio = { version = "1.38.0", features = ["fs", "rt", "sync", "test-util", "time"] }
tokio-postgres = { version = "0.7.8", features = ["serde"] }
tokio-stream = "0.1.11"
tracing = "0.1.37"
uuid = "1.2.2"
workspace-hack = { version = "0.0.0", path = "../workspace-hack", optional = true }

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]

[features]
default = ["workspace-hack"]
