[package]
name = "mz-storage-types"
description = "Shared types for the `mz-storage*` crates"
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[lints]
workspace = true

[[bench]]
name = "row"
harness = false

[dependencies]
anyhow = "1.0.66"
arrow = { version = "52.1.0", default-features = false }
async-trait = "0.1.68"
aws-config = { version = "1.2.0", default-features = false, features = ["sso"] }
aws-credential-types = { version = "1.1.1", features = ["hardcoded-credentials"] }
aws-sdk-sts = { version = "1.7.0", default-features = false, features = ["rt-tokio"] }
aws-types = "1.1.1"
bytes = "1.3.0"
columnation = { git = "https://github.com/frankmcsherry/columnation" }
dec = "0.4.8"
derivative = "2.2.0"
differential-dataflow = "0.12.0"
fail = { version = "0.5.1", features = ["failpoints"] }
futures = "0.3.25"
itertools = { version = "0.10.5" }
mysql_async = { version = "0.34.1", default-features = false, features = ["minimal", "native-tls-tls"] }
mz-aws-util = { path = "../aws-util" }
mz-ccsr = { path = "../ccsr" }
mz-cloud-resources = { path = "../cloud-resources" }
mz-dyncfg = { path = "../dyncfg" }
mz-expr = { path = "../expr" }
mz-interchange = { path = "../interchange" }
mz-kafka-util = { path = "../kafka-util" }
mz-ore = { path = "../ore", features = ["async", "tracing_"] }
mz-mysql-util = { path = "../mysql-util" }
mz-persist-types = { path = "../persist-types" }
mz-pgcopy = { path = "../pgcopy" }
mz-postgres-util = { path = "../postgres-util" }
mz-proto = { path = "../proto", features = ["tokio-postgres"] }
mz-repr = { path = "../repr" }
mz-rocksdb-types = { path = "../rocksdb-types" }
mz-secrets = { path = "../secrets" }
mz-service = { path = "../service" }
mz-ssh-util = { path = "../ssh-util" }
mz-sql-parser = { path = "../sql-parser" }
mz-timely-util = { path = "../timely-util" }
mz-tls-util = { path = "../tls-util" }
mz-tracing = { path = "../tracing" }
native-tls = "0.2.11"
num_enum = "0.5.7"
once_cell = "1.16.0"
openssl = { version = "0.10.48", features = ["vendored"] }
proptest = { version = "1.0.0", default-features = false, features = ["std"] }
proptest-derive = { version = "0.3.0", features = ["boxed_union"] }
prost = { version = "0.11.3", features = ["no-recursion-limit"] }
rdkafka = { version = "0.29.0", features = ["cmake-build", "ssl-vendored", "libz-static", "zstd"] }
regex = "1.7.0"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = { version = "1.0.89", features = ["preserve_order"] }
thiserror = "1.0.37"
timely = { version = "0.12.0", default-features = false, features = ["bincode"] }
tokio = { version = "1.38.0", features = ["fs", "rt", "sync", "test-util", "time"] }
tokio-postgres = { version = "0.7.8", features = ["serde"] }
tracing = "0.1.37"
url = { version = "2.3.1", features = ["serde"] }
uuid = { version = "1.7.0", features = ["serde", "v4"] }
workspace-hack = { version = "0.0.0", path = "../workspace-hack" }

[dev-dependencies]
base64 = "0.13.1"
criterion = { version = "0.4.0" }
insta = { version = "1.32", features = ["json"] }
mz-persist = { path = "../persist" }
rand = "0.8.5"

[build-dependencies]
mz-build-tools = { path = "../build-tools", default-features = false }
prost-build = "0.11.2"
tonic-build = "0.9.2"

[features]
default = ["mz-build-tools/default"]

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]

[package.metadata.cargo-gazelle.test.lib]
data = ["src/snapshots/**"]

[package.metadata.cargo-gazelle.test.lib.env]
INSTA_WORKSPACE_ROOT = "."
