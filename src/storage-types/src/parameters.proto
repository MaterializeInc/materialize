// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

package mz_storage_types.parameters;

import "dyncfg/src/dyncfg.proto";
import "proto/src/proto.proto";
import "rocksdb-types/src/config.proto";
import "service/src/params.proto";
import "tracing/src/params.proto";

message ProtoStorageParameters {
  reserved 1, 2, 3, 25, 12, 16, 26, 31, 39;
  uint64 keep_n_source_status_history_entries = 4;
  mz_rocksdb_types.config.ProtoRocksDbTuningParameters upsert_rocksdb_tuning_config = 5;
  bool finalize_shards = 6;
  uint64 keep_n_sink_status_history_entries = 7;
  mz_tracing.params.ProtoTracingParameters tracing = 8;
  ProtoUpsertAutoSpillConfig upsert_auto_spill_config = 9;
  ProtoStorageMaxInflightBytesConfig storage_dataflow_max_inflight_bytes_config = 10;
  mz_service.params.ProtoGrpcClientParameters grpc_client = 11;
  uint64 shrink_upsert_unused_buffers_by_ratio = 13;
  reserved 14, 15;
  mz_proto.ProtoDuration pg_source_snapshot_statement_timeout = 17;
  bool record_namespaced_errors = 18;
  uint64 keep_n_privatelink_status_history_entries = 19;
  ProtoSshTimeoutConfig ssh_timeout_config = 20;
  ProtoKafkaTimeouts kafka_timeout_config = 21;
  mz_proto.ProtoDuration statistics_interval = 22;
  mz_proto.ProtoDuration statistics_collection_interval = 23;
  ProtoPgSourceSnapshotConfig pg_snapshot_config = 24;
  mz_proto.ProtoDuration user_storage_managed_collections_batch_duration = 28;
  ProtoMySqlSourceTimeouts mysql_source_timeouts = 29;
  mz_proto.ProtoDuration pg_source_wal_sender_timeout = 32;
  optional mz_proto.ProtoDuration pg_source_connect_timeout = 33;
  optional uint32 pg_source_tcp_keepalives_retries = 34;
  optional mz_proto.ProtoDuration pg_source_tcp_keepalives_idle = 35;
  optional mz_proto.ProtoDuration pg_source_tcp_keepalives_interval = 36;
  optional mz_proto.ProtoDuration pg_source_tcp_user_timeout = 37;
  bool pg_source_tcp_configure_server = 38;
  mz_proto.ProtoDuration replica_status_history_retention_window = 40;

  mz_dyncfg.ConfigUpdates dyncfg_updates = 30;

  reserved 27;
  reserved "enable_dependency_read_hold_asserts";
}

message ProtoPgSourceSnapshotConfig {
  bool collect_strict_count = 1;
  bool fallback_to_strict_count = 2;
  bool wait_for_count = 3;
}

message ProtoMySqlSourceTimeouts {
  optional mz_proto.ProtoDuration tcp_keepalive = 1;
  optional mz_proto.ProtoDuration snapshot_max_execution_time = 2;
  optional mz_proto.ProtoDuration snapshot_lock_wait_timeout = 3;
}

message ProtoKafkaTimeouts {
  reserved 6;
  bool keepalive = 1;
  mz_proto.ProtoDuration socket_timeout = 2;
  mz_proto.ProtoDuration transaction_timeout = 5;
  mz_proto.ProtoDuration socket_connection_setup_timeout = 3;
  mz_proto.ProtoDuration fetch_metadata_timeout = 4;
  mz_proto.ProtoDuration progress_record_fetch_timeout = 7;
}
message ProtoSshTimeoutConfig {
  mz_proto.ProtoDuration check_interval = 1;
  mz_proto.ProtoDuration connect_timeout = 2;
  mz_proto.ProtoDuration keepalives_idle = 3;
}

message ProtoUpsertAutoSpillConfig {
  bool allow_spilling_to_disk = 1;
  uint64 spill_to_disk_threshold_bytes = 2;
}

message ProtoStorageMaxInflightBytesConfig {
  reserved 2, 3, 5;
  optional uint64 max_in_flight_bytes_default = 1;
  bool disk_only = 4;
  optional double max_in_flight_bytes_cluster_size_fraction = 6;
}
