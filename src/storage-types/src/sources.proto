// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

import "google/protobuf/empty.proto";

import "proto/src/proto.proto";
import "repr/src/global_id.proto";
import "repr/src/row.proto";
import "storage-types/src/controller.proto";
import "storage-types/src/errors.proto";
import "storage-types/src/instances.proto";
import "storage-types/src/sources/encoding.proto";
import "storage-types/src/sources/envelope.proto";
import "storage-types/src/sources/kafka.proto";
import "storage-types/src/sources/load_generator.proto";
import "storage-types/src/sources/mysql.proto";
import "storage-types/src/sources/postgres.proto";
import "storage-types/src/sources/testscript.proto";

package mz_storage_types.sources;

message ProtoMzOffset {
  uint64 offset = 1;
}

message ProtoTimeline {
    oneof kind {
        google.protobuf.Empty epoch_milliseconds = 1;
        string external = 2;
        string user = 3;
    }
}

message ProtoSourceDesc {
    reserved 4;
    ProtoSourceConnection connection = 1;
    mz_storage_types.sources.encoding.ProtoSourceDataEncoding encoding = 2;
    mz_storage_types.sources.envelope.ProtoSourceEnvelope envelope = 3;
    mz_proto.ProtoDuration timestamp_interval = 5;
}

message ProtoSourceConnection {
    reserved 2, 3, 5;
    oneof kind {
        mz_storage_types.sources.kafka.ProtoKafkaSourceConnection kafka = 1;
        mz_storage_types.sources.postgres.ProtoPostgresSourceConnection postgres = 4;
        mz_storage_types.sources.load_generator.ProtoLoadGeneratorSourceConnection loadgen = 6;
        mz_storage_types.sources.testscript.ProtoTestScriptSourceConnection testscript = 7;
        mz_storage_types.sources.mysql.ProtoMySqlSourceConnection mysql = 8;
    }
}

message ProtoSourceData {
    oneof kind {
        mz_repr.row.ProtoRow ok = 1;
        errors.ProtoDataflowError err = 2;
    }
}

message ProtoCompression {
    oneof kind {
        google.protobuf.Empty gzip = 1;
        google.protobuf.Empty none = 2;
    }
}

message ProtoIngestionDescription {
    message ProtoSourceImport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        mz_storage_types.controller.ProtoCollectionMetadata storage_metadata = 2;
    }
    message ProtoSourceExport {
        mz_repr.global_id.ProtoGlobalId id = 1;
        uint64 output_index = 2;
        mz_storage_types.controller.ProtoCollectionMetadata storage_metadata = 3;
    }
    repeated ProtoSourceImport source_imports = 1;
    repeated ProtoSourceExport source_exports = 2;
    mz_storage_types.controller.ProtoCollectionMetadata ingestion_metadata = 3;
    ProtoSourceDesc desc = 4;
    reserved 5;
    mz_storage_types.instances.ProtoStorageInstanceId instance_id = 6;
    mz_repr.global_id.ProtoGlobalId remap_collection_id = 7;
}
