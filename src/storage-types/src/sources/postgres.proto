// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

import "google/protobuf/empty.proto";
import "postgres-util/src/desc.proto";
import "repr/src/global_id.proto";
import "storage-types/src/connections.proto";
import "expr/src/scalar.proto";

package mz_storage_types.sources.postgres;

message ProtoCastType {
    oneof kind {
        google.protobuf.Empty natural = 1;
        google.protobuf.Empty text = 2;
    }
}

message ProtoPostgresTableCast {
    repeated mz_expr.scalar.ProtoMirScalarExpr column_casts = 1;
    repeated ProtoCastType column_cast_types = 2;
}

message ProtoPostgresSourceConnection {
    reserved 5, 7;
    mz_repr.global_id.ProtoGlobalId connection_id = 6;
    mz_storage_types.connections.ProtoPostgresConnection connection = 1;
    string publication = 2;
    ProtoPostgresSourcePublicationDetails details = 4;
}

message ProtoPostgresSourcePublicationDetails {
    // This field is deprecated, but kept around to migrate old sources since this
    // field is serialized as proto in the catalog.
    repeated mz_postgres_util.desc.ProtoPostgresTableDesc deprecated_tables = 1;

    string slot = 2;
    optional uint64 timeline_id = 3;
    string database = 4;
}

message ProtoPostgresSourceExportDetails {
    mz_postgres_util.desc.ProtoPostgresTableDesc table = 1;
    ProtoPostgresTableCast table_cast = 2;
}

message ProtoPostgresSourceExportStatementDetails {
    mz_postgres_util.desc.ProtoPostgresTableDesc table = 1;
}
