// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

package mz_storage_types.sources.postgres;

import "expr/src/scalar.proto";
import "google/protobuf/empty.proto";
import "postgres-util/src/desc.proto";
import "repr/src/catalog_item_id.proto";
import "storage-types/src/connections.proto";

message ProtoCastType {
  oneof kind {
    google.protobuf.Empty natural = 1;
    google.protobuf.Empty text = 2;
  }
}

message ProtoPostgresColumnCast {
  mz_expr.scalar.ProtoMirScalarExpr cast = 1;
  ProtoCastType cast_type = 2;
}

message ProtoPostgresSourceConnection {
  reserved 5, 7;
  mz_repr.catalog_item_id.ProtoCatalogItemId connection_id = 6;
  mz_storage_types.connections.ProtoPostgresConnection connection = 1;
  string publication = 2;
  ProtoPostgresSourcePublicationDetails details = 4;
}

message ProtoPostgresSourcePublicationDetails {
  reserved 1;

  string slot = 2;
  optional uint64 timeline_id = 3;
  string database = 4;
}

message ProtoPostgresSourceExportDetails {
  mz_postgres_util.desc.ProtoPostgresTableDesc table = 1;
  repeated ProtoPostgresColumnCast column_casts = 2;
}

// NOTE: this message is encoded and stored as part of source export
// statement options
// Be extra careful about changes, ensuring that all changes are backwards
// compatible
message ProtoPostgresSourceExportStatementDetails {
  mz_postgres_util.desc.ProtoPostgresTableDesc table = 1;
}
