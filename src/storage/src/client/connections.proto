// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

import "kafka-util/src/addr.proto";
import "repr/src/global_id.proto";
import "repr/src/url.proto";
import "storage/src/client/errors.proto";

package mz_storage.client.connections;

message ProtoStringOrSecret {
    oneof kind {
        string string = 1;
        mz_repr.global_id.ProtoGlobalId secret = 2;
    }
}

message ProtoKafkaConnectionSslConfig {
    mz_repr.global_id.ProtoGlobalId key = 1;
    mz_repr.global_id.ProtoGlobalId key_password = 2;
    ProtoStringOrSecret certificate = 3;
    ProtoStringOrSecret certificate_authority = 4;
}

message ProtoKafkaConnectionSaslConfig {
    string mechanisms = 1;
    ProtoStringOrSecret username = 2;
    mz_repr.global_id.ProtoGlobalId password = 3;
    ProtoStringOrSecret certificate_authority = 4;
}

message ProtoKafkaConnectionSecurity {
    oneof kind {
        ProtoKafkaConnectionSslConfig ssl = 1;
        ProtoKafkaConnectionSaslConfig sasl = 2;
    }
}

message ProtoKafkaConnection {
    reserved 1, 2;
    reserved "broker", "options";
    repeated string brokers = 3;
    optional ProtoKafkaConnectionSecurity security = 4;
}

message ProtoCsrConnection {
    mz_repr.url.ProtoUrl url = 1;
    repeated ProtoStringOrSecret root_certs = 2;
    ProtoCsrConnectionTlsIdentity tls_identity = 3;
    ProtoCsrConnectionHttpAuth http_auth = 4;
}

message ProtoCsrConnectionTlsIdentity {
    ProtoStringOrSecret cert = 1;
    mz_repr.global_id.ProtoGlobalId key = 2;
}

message ProtoCsrConnectionHttpAuth {
    ProtoStringOrSecret username = 1;
    mz_repr.global_id.ProtoGlobalId password = 2;
}
