[package]
name = "mz-testdrive"
description = "Integration test driver for Materialize."
version = "0.0.0"
edition.workspace = true
rust-version.workspace = true
publish = false

[dependencies]
anyhow = { workspace = true }
async-compression = { workspace = true, features = ["tokio", "gzip"] }
async-trait = { workspace = true }
atty = { workspace = true }
aws-config = { workspace = true, default-features = false, features = ["native-tls"] }
aws-credential-types = { workspace = true, features = ["hardcoded-credentials"] }
aws-sdk-sts = { workspace = true, default-features = false, features = ["native-tls", "rt-tokio"] }
aws-types = { workspace = true }
byteorder = { workspace = true }
bytes = { workspace = true }
chrono = { workspace = true, default-features = false, features = ["std"] }
clap = { workspace = true, features = ["derive"] }
flate2 = { workspace = true }
futures = { workspace = true }
globset = { workspace = true }
hex = { workspace = true }
http = { workspace = true }
humantime = { workspace = true }
itertools = { workspace = true }
junit-report = { workspace = true }
once_cell = { workspace = true }
maplit = { workspace = true }
md-5 = { workspace = true }
mysql_async = { workspace = true }
mz-avro = { workspace = true, features = ["snappy"] }
mz-aws-s3-util = { workspace = true }
mz-ccsr = { workspace = true }
mz-adapter = { workspace = true }
mz-expr = { workspace = true }
mz-interchange = { workspace = true }
mz-kafka-util = { workspace = true }
mz-ore = { workspace = true, features = ["async"] }
mz-pgrepr = { workspace = true }
mz-postgres-util = { workspace = true }
mz-repr = { workspace = true }
mz-sql = { workspace = true }
mz-sql-parser = { workspace = true }
mz-stash = { workspace = true }
postgres_array = { workspace = true }
prost = { workspace = true, features = ["no-recursion-limit"] }
prost-reflect = { workspace = true, features = ["serde"] }
protobuf-src = { workspace = true }
rand = { workspace = true }
rdkafka = { workspace = true, features = ["cmake-build", "ssl-vendored", "libz-static", "zstd"] }
regex = { workspace = true }
reqwest = { workspace = true, features = ["native-tls-vendored"] }
serde = { workspace = true }
serde_json = { workspace = true, features = ["raw_value"] }
similar = { workspace = true }
tempfile = { workspace = true }
termcolor = { workspace = true }
tiberius = { workspace = true, default-features = false }
time = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
tokio = { workspace = true, features = ["process"] }
tokio-postgres = { workspace = true, features = ["with-chrono-0_4", "with-serde_json-1"] }
tokio-stream = { workspace = true }
tokio-util = { workspace = true, features = ["compat"] }
url = { workspace = true }
uuid = { workspace = true }
walkdir = { workspace = true }
workspace-hack = { version = "0.0.0", path = "../workspace-hack" }

[package.metadata.cargo-udeps.ignore]
normal = ["workspace-hack"]
