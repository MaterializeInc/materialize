# Copyright Materialize, Inc. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

cat
(defsource x [int32 int64 int32])
----
ok

opt
(join [(get x) (get x)] [[#0 #3]])
----
----
%0 =
| Get x (u0)
| ArrangeBy (#0)

%1 =
| Get x (u0)

%2 =
| Join %0 %1 (= #0 #3)
| | implementation = Differential %1 %0.(#0)
| | demand = (#0..#2, #4, #5)
| Project (#0..#2, #0, #4, #5)
----
----

# tests single-input predicates properly get pushed out of join equivalences
# using different combinations of literals and non-literals with different multiplicities

opt
(join [(get x)] [[#0 #1 #2]])
----
%0 =
| Get x (u0)
| Filter ((isnull(#0) && isnull(#1)) || (#0 = #1)), ((isnull(#0) && isnull(#2)) || (#0 = #2))

opt
(join [(get x)] [[#0 #2 #1 #2]])
----
%0 =
| Get x (u0)
| Filter ((isnull(#0) && isnull(#1)) || (#0 = #1)), ((isnull(#0) && isnull(#2)) || (#0 = #2))

opt
(join [(get x)] [[#0 #1 5]])
----
%0 =
| Get x (u0)
| Filter (#0 = 5), (#1 = 5)

opt
(join [(get x)] [[5 #0 #1]])
----
%0 =
| Get x (u0)
| Filter (#0 = 5), (#1 = 5)

opt
(join [(get x) (get x)] [[5 #0 5 #3]])
----
----
%0 =
| Get x (u0)
| Filter (#0 = 5)
| ArrangeBy ()

%1 =
| Get x (u0)
| Filter (#0 = 5)

%2 =
| Join %0 %1
| | implementation = Differential %1 %0.()
| | demand = (#0..#5)
----
----

opt
(join [(get x) (get x)] [[5 9 #0 #3]])
----
%0 =
| Constant
