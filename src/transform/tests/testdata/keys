# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Test that the test runner can properly construct sources with keys
# and report on key information in plans

cat
(defsource x ([int32 int64 int32] [[0] [1]]))
----
ok

build format=types
(map (get x) [4145])
----
error: Object spec [Ident { sym: get, span: bytes(10019..10022) }, Ident { sym: x, span: bytes(10023..10024) }] (type Vec<MirScalarExpr>) has unsupported delimiter Parenthesis

# Run tests where a transform occuring depends on the input keys.

## Joins of the same input to itself on the key of the input can be converted
## into a project

opt format=types
(join [(get x) (get x)] [[#0 #3]])
----
error: Object spec [Ident { sym: get, span: bytes(10043..10046) }, Ident { sym: x, span: bytes(10047..10048) }] (type Vec<MirScalarExpr>) has unsupported delimiter Parenthesis

steps format=types
(join [(get x) (get x)] [[#0 #3] [#2 #5]])
----
error: Object spec [Ident { sym: get, span: bytes(10079..10082) }, Ident { sym: x, span: bytes(10083..10084) }] (type Vec<MirScalarExpr>) has unsupported delimiter Parenthesis

opt format=types
(join [(get x) (get x)] [[#2 #5]])
----
error: Object spec [Ident { sym: get, span: bytes(10123..10126) }, Ident { sym: x, span: bytes(10127..10128) }] (type Vec<MirScalarExpr>) has unsupported delimiter Parenthesis
