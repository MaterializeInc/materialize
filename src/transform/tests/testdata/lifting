# Copyright Materialize, Inc. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

cat
(defsource x [int32 int64])
----
ok

# Discard literals that are not projected.
build apply=LiteralLifting
(project
  (map (get x) [1 2 3 4])
  [#5 #3])
----
%0 =
| Get x (u0)
| Map 2, 4
| Project (#3, #2)


# Merge nested Map operators within a Project
build apply=LiteralLifting
(project
  (map (map (get x) [1]) [2])
  [#2 #3])
----
%0 =
| Get x (u0)
| Map 1, 2
| Project (#2, #3)

# Map: Permute columns to put literals at the end
build apply=LiteralLifting
(project
  (map (map (get x) [1 #0 2]) [3 #2 4])
  [#3 #6])
----
%0 =
| Get x (u0)
| Map #0, 1
| Project (#0, #1, #3, #2)
| Map #2, 2, 3
| Project (#0..#3, #5, #6, #4)
| Project (#3, #6)


build apply=(LiteralLifting,ProjectionLifting,LiteralLifting)
(project
  (map (map (get x) [1 #0 2]) [3 #2 4])
  [#3 #6])
----
%0 =
| Get x (u0)
| Map #0
| Map 1, 1
| Project (#0..#2, #4, #3)
| Project (#2, #4)

opt
(project
  (map (map (get x) [1 #0 2]) [3 #2 4])
  [#3 #6])
----
%0 =
| Get x (u0)
| Map 1
| Project (#0, #2)

# Extract common values in all rows in Constant operator
build
(constant [[1 2 3] [1 4 3]] [int32 int64 int32])
----
%0 =
| Constant (1, 2, 3) (1, 4, 3)

build apply=LiteralLifting
(constant [[1 2 3] [1 4 3]] [int32 int64 int32])
----
%0 =
| Constant (2) (4)
| Map 1
| Project (#1, #0)
| Map 3
