# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Define a source with a set of columns.
cat
(defsource x [int32 int64])
----
ok

# Build builds the IR exactly as written, and performs no optimizations on it.
build
(get x)
----
Get x

# Can build nested expressions.
build
(filter (get x) [#0])
----
Filter #0
  Get x

build
(filter
  (map (get x) [true])
  [#0 #1])
----
Filter #0 AND #1
  Map (true)
    Get x

# If the `apply` flag is passed to build with the name of a transform, that
# transform will be applied (once).
build apply=PredicatePushdown
(filter
  (map (get x) [true])
  [#0 #1])
----
Map (true)
  Filter #0 AND #1
    Get x

# If `opt` is used instead of `build`, the full optimizer is run on the IR.
opt
(project
  (map (get x) [#0 #1])
  [#3])
----
Project (#1)
  Get x

build
(join
  [(get x) (get x)]
  [[#0 #2] [#1 #3]])
----
Join on=(#0 = #2 AND #1 = #3)
  Get x
  Get x

build
(negate (constant [[1]] [int64]))
----
Negate
  Constant
    - (1)
