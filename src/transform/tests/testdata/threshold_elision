# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

cat
(defsource x [int64 int64])
(defsource y [int64 int64])
----
ok

# simple positive test
# (select * from x) except all (select * from x where a < 7)
build apply=ThresholdElision
(threshold
  (union [
    (get x)
    (negate
      (filter (get x) [(call_binary lt #0 (7 Int64))]))]))
----
Union
  Get x
  Negate
    Filter (#0 < 7)
      Get x

# simple positive test
# (select * from x) except all (select * from x where a < 7)
build apply=ThresholdElision
(threshold
  (union [
    (get x)
    (negate
      (filter (get x) [(call_binary lt #0 (7 Int64))]))]))
----
Union
  Get x
  Negate
    Filter (#0 < 7)
      Get x


# simple negative test: EXCEPT ALL
# (select * from x) except all (select * from y where a < 7)
build apply=ThresholdElision
(threshold
  (union [
    (get x)
    (negate
      (filter (get y) [(call_binary lt #0 (7 Int64))]))]))
----
Threshold
  Union
    Get x
    Negate
      Filter (#0 < 7)
        Get y

# simple positive test: EXCEPT
# (select * from x) except (select * from x where a < 7)
build apply=ThresholdElision
(threshold
  (union [
    (reduce (get x) [#1 #2] [])
    (negate
      (reduce (filter (get x) [(call_binary lt #0 (7 Int64))]) [#1 #2] [])) ]))
----
Union
  Distinct group_by=[#1, #2]
    Get x
  Negate
    Distinct group_by=[#1, #2]
      Filter (#0 < 7)
        Get x

# simple positive test: EXCEPT where the lhs has a Negate
# with r as (select * from x except select * from x where a < 7)
# select * from r except all select * from r where a > 9;
build apply=ThresholdElision
(let z
    (threshold
      (union [
        (get x)
        (negate
          (filter (get x) [(call_binary lt #0 (7 Int64))])) ]))
    (threshold
      (union [
        (get z)
        (negate
          (filter (get z) [(call_binary gt #0 (9 Int64))])) ])))
----
Return
  Union
    Get l0
    Negate
      Filter (#0 > 9)
        Get l0
With
  cte l0 =
    Union
      Get x
      Negate
        Filter (#0 < 7)
          Get x

# simple negative test: EXCEPT
# (select * from x) except (select * from y where a > 7)
build apply=ThresholdElision
(threshold
  (union [
    (reduce (get x) [#1 #2] [])
    (negate
      (reduce (filter (get y) [(call_binary lt #0 (7 Int64))]) [#1 #2] [])) ]))
----
Threshold
  Union
    Distinct group_by=[#1, #2]
      Get x
    Negate
      Distinct group_by=[#1, #2]
        Filter (#0 < 7)
          Get y

# positive test: EXCEPT where the lhs has a Negate
# with r as (select * from x except select * from x where a < 7)
# select * from r except all select * from r where a > 9;
build apply=ThresholdElision
(let z
    (threshold
      (union [
        (get x)
        (negate
          (filter (get x) [(call_binary lt #0 (7 Int64))])) ]))
    (threshold
      (union [
        (get z)
        (negate
          (filter (get z) [(call_binary gt #0 (9 Int64))])) ])))
----
Return
  Union
    Get l0
    Negate
      Filter (#0 > 9)
        Get l0
With
  cte l0 =
    Union
      Get x
      Negate
        Filter (#0 < 7)
          Get x
