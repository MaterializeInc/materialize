
dataDir=/var/lib/zookeeper/data
dataLogDir=/var/lib/zookeeper/log

{# optional properties #}
{% set other_props = {
  'ZOOKEEPER_CLIENT_PORT' : 'clientPort',
  'ZOOKEEPER_TICK_TIME': 'tickTime',
  'ZOOKEEPER_GLOBAL_OUTSTANDING_LIMIT' : 'globalOutstandingLimit',
  'ZOOKEEPER_PRE_ALLOC_SIZE': 'preAllocSize',
  'ZOOKEEPER_SNAP_COUNT': 'snapCount',
  'ZOOKEEPER_TRACE_FILE': 'traceFile',
  'ZOOKEEPER_MAX_CLIENT_CNXNS' : 'maxClientCnxns',
  'ZOOKEEPER_CLIENT_PORT_ADDRESS' : 'clientPortAddress',
  'ZOOKEEPER_MIN_SESSION_TIMEOUT' : 'minSessionTimeout',
  'ZOOKEEPER_MAX_SESSION_TIMEOUT' : 'maxSessionTimeout',
  'ZOOKEEPER_FSYNC_WARNING_THRESHOLDMS' : 'fsync.warningthresholdms',
  'ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT' : 'autopurge.snapRetainCount',
  'ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL': 'autopurge.purgeInterval',
  'ZOOKEEPER_SYNC_ENABLED': 'syncEnabled',
  'ZOOKEEPER_ELECTION_ALG' : 'electionAlg',
  'ZOOKEEPER_INIT_LIMIT': 'initLimit',
  'ZOOKEEPER_LEADER_SERVES': 'leaderServes',
  'ZOOKEEPER_SYNC_LIMIT' : 'syncLimit',
  'ZOOKEEPER_CNX_TIMEOUT': 'cnxTimeout',
  'ZOOKEEPER_FORCE_SYNC': 'forceSync',
  'ZOOKEEPER_JUTE_MAX_BUFFER': 'jute.maxbuffer',
  'ZOOKEEPER_SKIP_ACL': 'skipACL',
  'ZOOKEEPER_QUORUM_LISTEN_ON_ALL_IPS': 'quorumListenOnAllIPs',
  'ZOOKEEPER_CLIENT_CNXN_SOCKET' : 'clientCnxnSocket',
  'ZOOKEEPER_SECURE_CLIENT_PORT' : 'secureClientPort',
  'ZOOKEEPER_SERVER_CNXN_SOCKET' : 'serverCnxnSocket',
  'ZOOKEEPER_X509_AUTHENTICATION_PROVIDER_SUPER_USER' : 'X509AuthenticationProvider.superUser',
  'ZOOKEEPER_SSL_AUTH_PROVIDER' : 'ssl.authProvider',
  'ZOOKEEPER_SSL_CLIENT_AUTH' : 'ssl.clientAuth',
  'ZOOKEEPER_SSL_KEYSTORE_LOCATION' : 'ssl.keyStore.location',
  'ZOOKEEPER_SSL_KEYSTORE_PASSWORD' : 'ssl.keyStore.password',
  'ZOOKEEPER_SSL_KEYSTORE_TYPE' : 'ssl.keyStore.type',
  'ZOOKEEPER_SSL_TRUSTSTORE_LOCATION' : 'ssl.trustStore.location',
  'ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD' : 'ssl.trustStore.password',
  'ZOOKEEPER_SSL_TRUSTSTORE_TYPE' : 'ssl.trustStore.type',
  'ZOOKEEPER_SSL_ENABLED_PROTOCOLS' : 'ssl.enabledProtocols',
  'ZOOKEEPER_SSL_CONTEXT_SUPPLIER_CLASS' : 'ssl.context.supplier.class',
  'ZOOKEEPER_SSL_CIPHER_SUITES' : 'ssl.ciphersuites',
  'ZOOKEEPER_SSL_HOSTNAME_VERIFICATION' : 'ssl.hostnameVerification',
  'ZOOKEEPER_SSL_CRL' : 'ssl.crl',
  'ZOOKEEPER_SSL_OCPS' : 'ssl.ocsp',
  'ZOOKEEPER_SSL_HANDSHAKE_DETECTION_TIMEOUT_MILLIS' : 'ssl.handshakeDetectionTimeoutMillis',
  'ZOOKEEPER_SSL_QUORUM' : 'sslQuorum',
  'ZOOKEEPER_SSL_QUORUM_CLIENT_AUTH' : 'ssl.quorum.clientAuth',
  'ZOOKEEPER_SSL_QUORUM_KEYSTORE_LOCATION' : 'ssl.quorum.keyStore.location',
  'ZOOKEEPER_SSL_QUORUM_KEYSTORE_PASSWORD' : 'ssl.quorum.keyStore.password',
  'ZOOKEEPER_SSL_QUORUM_KEYSTORE_TYPE' : 'ssl.quorum.keyStore.type',
  'ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_LOCATION' : 'ssl.quorum.trustStore.location',
  'ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_PASSWORD' : 'ssl.quorum.trustStore.password',
  'ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_TYPE' : 'ssl.quorum.trustStore.type',
  'ZOOKEEPER_SSL_QUORUM_ENABLED_PROTOCOLS' : 'ssl.quorum.enabledProtocols',
  'ZOOKEEPER_SSL_QUORUM_CIPHER_SUITES' : 'ssl.quorum.ciphersuites',
  'ZOOKEEPER_SSL_QUORUM_CONTEXT_SUPPLIER_CLASS' : 'ssl.quorum.context.supplier.class',
  'ZOOKEEPER_SSL_QUORUM_HOSTNAME_VERIFICATION' : 'ssl.quorum.hostnameVerification',
  'ZOOKEEPER_SSL_QUORUM_CRL' : 'ssl.quorum.crl',
  'ZOOKEEPER_SSL_QUORUM_OCPS' : 'ssl.quorum.ocsp',
  'ZOOKEEPER_SSL_QUORUM_HANDSHAKE_DETECTION_TIMEOUT_MILLIS' : 'ssl.quorum.handshakeDetectionTimeoutMillis',
  'ZOOKEEPER_SERVER_CNXN_FACTORY' : 'serverCnxnFactory',
  'ZOOKEEPER_AUTH_PROVIDER_X509' : 'authProvider.x509',
  'ZOOKEEPER_AUTH_PROVIDER_SASL' : 'authProvider.sasl',
  'ZOOKEEPER_CLIENT_PORT_UNIFICATION' : 'client.portUnification',
  'ZOOKEEPER_ADMIN_ENABLE_SERVER' : 'admin.enableServer',
  'ZOOKEEPER_ADMIN_SERVER_ADDRESS' : 'admin.serverAddress',
  'ZOOKEEPER_ADMIN_SERVER_PORT' : 'admin.serverPort',
  'ZOOKEEPER_ADMIN_IDLE_TIMEOUT' : 'admin.idleTimeout',
  'ZOOKEEPER_ADMIN_COMMAND_URL' : 'admin.commandURL'
 } -%}

{% for k, property in other_props.items() -%}
{% if env.get(k) != None -%}
{{property}}={{env[k]}}
{% endif -%}
{% endfor -%}

{% if env['ZOOKEEPER_SERVERS'] %}
{% set servers = env['ZOOKEEPER_SERVERS'].split(';') %}
{% for server in servers %}
server.{{ loop.index }}={{server}}
{% endfor %}
{% endif %}

{% if env['ZOOKEEPER_GROUPS'] %}
{% set groups = env['ZOOKEEPER_GROUPS'].split(';') %}
{% for group in groups %}
group.{{ loop.index }}={{group}}
{% endfor %}
{% endif %}

{% if env['ZOOKEEPER_WEIGHTS'] %}
{% set weights = env['ZOOKEEPER_WEIGHTS'].split(';') %}
{% for weight in weights %}
weight.{{ loop.index }}={{weight}}
{% endfor %}
{% endif %}
