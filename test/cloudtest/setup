#!/usr/bin/env bash

# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

set -euo pipefail

cd "$(dirname "$0")/../.."

. misc/shlib/shlib.bash
. test/cloudtest/config.bash

if ! kind get clusters | grep -q "$K8S_CLUSTER_NAME"; then
    CLUSTER_YAML=${CLOUDTEST_CLUSTER_DEFINITION_FILE:-"misc/kind/cluster.yaml"}
    echo "Using cluster definition specified in ${CLUSTER_YAML}"

    run kind create cluster --name="$K8S_CLUSTER_NAME" --config="${CLUSTER_YAML}" --wait=60s

    run kubectl --context="$K8S_CONTEXT" taint nodes --selector=environmentd=true "environmentd=true:NoSchedule"
fi

run kubectl create namespace materialize
run kubectl create namespace materialize-environment
run kubectl apply -f misc/helm-charts/testing/minio.yaml
run kubectl apply -f misc/helm-charts/testing/postgres.yaml
run kubectl apply -f misc/helm-charts/testing/redpanda.yaml
run helm install --wait materialize-operator misc/helm-charts/operator
run helm install --wait staging-env misc/helm-charts/environmentd --set environment.name=12345678-1234-1234-1234-123456789012

for f in misc/kind/configmaps/*; do
    run kubectl --context="$K8S_CONTEXT" apply -f "$f"
done

run kubectl --context="$K8S_CONTEXT" rollout restart -n kube-system deployment/coredns
