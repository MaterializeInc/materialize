# Copyright Materialize, Inc. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

version: '3.7'

mzworkflows:
  kafka-exactly-once:
    env:
      KAFKA_VERSION: latest
      # when testing this on your local machine update SEED
      # when running this repeatedly to ensure topics don't clash
      SEED: ${SEED:-1}
    steps:
      - step: workflow
        workflow: start-deps

      - step: run
        service: testdrive-svc
        command: --seed ${SEED} --kafka-option=group.id=group1 before-restart.td

      - step: kill-services
        services: [materialized]

      - step: start-services
        services: [materialized]

      - step: wait-for-mz
        service: materialized

      - step: run
        service: testdrive-svc
        command: --seed ${SEED} --no-reset --kafka-option=group.id=group2 after-restart.td

  start-deps:
    steps:
      - step: start-services
        services: [kafka, schema-registry, materialized]
      - step: wait-for-tcp
        host: kafka
        port: 9092
        timeout_secs: 120
      - step: wait-for-tcp
        host: schema-registry
        port: 8081
      - step: wait-for-mz
        service: materialized

services:
  testdrive-svc:
    mzbuild: testdrive
    entrypoint:
      - bash
      - -c
      - >-
        testdrive
        --kafka-addr=kafka:9092
        --schema-registry-url=http://schema-registry:8081
        --materialized-url=postgres://materialize@materialized:6875
        $$*
      - bash
    volumes:
      - .:/workdir
      - mzdata:/share/mzdata
    propagate-uid-gid: true
    init: true

  materialized:
    mzbuild: materialized
    command: >-
      --data-directory=/share/mzdata
      -w1
      --disable-telemetry
    environment:
      - MZ_DEV=1
      - MZ_LOG=${MZ_LOG:-dataflow::sink::kafka=debug,dataflow::source::kafka=debug,coord::timestamp=debug,dataflow::source=debug,info}
    ports:
      - 6875
    volumes:
      - mzdata:/share/mzdata

  zookeeper:
    image: confluentinc/cp-zookeeper:$KAFKA_VERSION
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:$KAFKA_VERSION
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_MIN_INSYNC_REPLICAS=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1

  schema-registry:
    image: confluentinc/cp-schema-registry:$KAFKA_VERSION
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=localhost
    depends_on: [kafka, zookeeper]

volumes:
  mzdata:
