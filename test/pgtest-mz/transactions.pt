# Test implicit and explicit transaction semantics in ways that
# MZ differs from PG.
# See pgtest/transactions.pt for more details

# Verify implicit transactions are properly upgraded
send
Query {"query": "CREATE TABLE t (a INT)"}
Parse {"query": "INSERT INTO t VALUES (1)"}
Bind
Execute
Sync
----

until err_field_typs=M ignore=RowDescription
ReadyForQuery
ReadyForQuery
----
CommandComplete {"tag":"CREATE TABLE"}
ReadyForQuery {"status":"I"}
ParseComplete
BindComplete
CommandComplete {"tag":"INSERT 0 1"}
ReadyForQuery {"status":"I"}

# PG permits commits writes that are part of read-only txns, but
# we do not if the read involves a timestamp
send
Parse {"query": "INSERT INTO t VALUES (2)"}
Bind
Execute
Parse {"query": "BEGIN READ ONLY"}
Bind
Execute
Parse {"query": "SELECT * FROM t"}
Bind
Execute
Parse {"query": "COMMIT"}
Bind
Execute
Sync
----

until err_field_typs=M ignore=RowDescription
ReadyForQuery
----
ParseComplete
BindComplete
CommandComplete {"tag":"INSERT 0 1"}
ParseComplete
BindComplete
CommandComplete {"tag":"BEGIN"}
ParseComplete
BindComplete
ErrorResponse {"fields":[{"typ":"M","value":"transaction in write-only mode"}]}
ReadyForQuery {"status":"E"}
