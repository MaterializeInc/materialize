# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# https://github.com/MaterializeInc/advent-of-code-2023/blob/main/week1/aoc_1208.md

mode cockroach

statement ok
CREATE TABLE steps_input (input TEXT);

statement ok
CREATE TABLE paths (state TEXT, left TEXT, right TEXT);

# no data

query T multiline
EXPLAIN WITH MUTUALLY RECURSIVE
    route(step TEXT, steps INT) AS (
        SELECT substring(input, steps, 1), steps
        FROM steps_input, generate_series(1, length(input)) steps
    ),

    -- Part 1: Start at 'AAA` and go until `ZZZ`.
    pos1(state TEXT, steps INT) AS (
        SELECT 'AAA', 0
        UNION ALL
        SELECT
            CASE WHEN route.step = 'L' THEN paths.left
                 WHEN route.step = 'R' THEN paths.right
                 ELSE '???'
            END,
            pos1.steps + 1
        FROM paths, pos1, route
        WHERE pos1.state = paths.state
          AND 1 + (pos1.steps % 263) = route.steps
          AND pos1.state != 'ZZZ'
          AND pos1.state != '???'
    ),
    part1(part1 INT) AS (SELECT steps FROM pos1 WHERE pos1.state = 'ZZZ'),

    -- Part 2: Start at all '**A` and go until all at '**Z'
    pos2(start TEXT, state TEXT, steps INT) AS (
        SELECT state, state, 0
        FROM paths
        WHERE substring(state, 3, 1) = 'A'
        UNION ALL
        SELECT
            pos2.start,
            CASE WHEN route.step = 'L' THEN paths.left
                 WHEN route.step = 'R' THEN paths.right
                 ELSE '???'
            END,
            pos2.steps + 1
        FROM paths, pos2, route
        WHERE pos2.state = paths.state
          AND 1 + (pos2.steps % 263) = route.steps
          AND substring(pos2.state, 3, 1) != 'Z'
    )

SELECT * FROM pos2 WHERE substring(state, 3, 1) = 'Z';
----
Explained Query:
  With Mutually Recursive
    cte l0 =
      Union
        Project (#0, #0, #3)
          Filter ("A" = substr(#0, 3, 1))
            Map (0)
              ReadStorage materialize.public.paths
        Project (#3, #8, #9)
          Map (case when (#7 = "L") then #1 else case when (#7 = "R") then #2 else "???" end end, (#5 + 1))
            Join on=(#0 = #4 AND #6 = (1 + (#5 % 263))) type=delta
              ArrangeBy keys=[[#0]]
                Filter ("Z" != substr(#0, 3, 1))
                  ReadStorage materialize.public.paths
              ArrangeBy keys=[[#1], [(1 + (#2 % 263))]]
                Filter ("Z" != substr(#1, 3, 1))
                  Get l0
              ArrangeBy keys=[[#0]]
                Project (#1, #2)
                  Map (substr(#0, #1, 1))
                    FlatMap generate_series(1, char_length(#0), 1)
                      ReadStorage materialize.public.steps_input
  Return
    Filter ("Z" = substr(#1, 3, 1))
      Get l0

Source materialize.public.steps_input
Source materialize.public.paths

Target cluster: quickstart

EOF
