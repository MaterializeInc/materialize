# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

mode cockroach

simple conn=mz_system,user=mz_system
ALTER SYSTEM SET enable_connection_validation_syntax TO true;
----
COMPLETE 0

simple conn=mz_system,user=mz_system
ALTER SYSTEM SET enable_index_options = on;
----
COMPLETE 0

simple conn=mz_system,user=mz_system
ALTER SYSTEM SET enable_rbac_checks TO false;
----
COMPLETE 0

query error must be owner of TABLE mz_catalog.mz_tables
ALTER TABLE mz_tables RENAME TO foo;

query error must be owner of SOURCE mz_internal.mz_storage_shards
ALTER SOURCE mz_internal.mz_storage_shards RENAME TO foo;

simple conn=mz_system,user=mz_system
ALTER TABLE mz_tables RENAME TO foo;
----
db error: ERROR: system item 'mz_catalog.mz_tables' cannot be modified

simple conn=mz_system,user=mz_system
ALTER SOURCE mz_internal.mz_storage_shards RENAME TO foo;
----
db error: ERROR: system item 'mz_internal.mz_storage_shards' cannot be modified

query error Expected one of TIMESTAMP or RETAIN, found SIZE
ALTER SOURCE mz_internal.mz_storage_shards RESET (size);

statement ok
CREATE CONNECTION c TO KAFKA (BROKER 'localhost:9092', SECURITY PROTOCOL PLAINTEXT) WITH (VALIDATE = false);

query TTT
SHOW CONNECTIONS
----
c   kafka   (empty)

statement ok
ALTER CONNECTION c RENAME TO d;

query TTT
SHOW CONNECTIONS
----
d   kafka   (empty)

statement ok
CREATE CLUSTER other_cluster SIZE '1', REPLICATION FACTOR 0

query error db error: ERROR: ALTER \.\.\. SET CLUSTER syntax is not available
ALTER MATERIALIZED VIEW does_not_exist SET CLUSTER quickstart

query error db error: ERROR: ALTER \.\.\. SET CLUSTER syntax is not available
ALTER SOURCE does_not_exist SET CLUSTER quickstart

query error db error: ERROR: ALTER \.\.\. SET CLUSTER syntax is not available
ALTER SINK does_not_exist SET CLUSTER quickstart

simple conn=mz_system,user=mz_system
ALTER SYSTEM SET enable_alter_set_cluster = on;
----
COMPLETE 0

statement ok
CREATE VIEW v AS SELECT 1

statement ok
CREATE MATERIALIZED VIEW mv AS SELECT 1

statement ok
ALTER MATERIALIZED VIEW mv SET CLUSTER quickstart

query error db error: ERROR: unknown cluster 'does_not_exist'
ALTER MATERIALIZED VIEW mv SET CLUSTER does_not_exist

query error db error: ERROR: ALTER SET CLUSTER are not supported
ALTER MATERIALIZED VIEW mv SET CLUSTER other_cluster

query error db error: ERROR: ALTER VIEW SET CLUSTER is not supported, for more information consult the documentation at https://materialize\.com/docs/sql/alter\-set\-cluster/
ALTER VIEW mv SET CLUSTER quickstart

query error db error: ERROR: v is a view not a materialized view
ALTER MATERIALIZED VIEW v SET CLUSTER quickstart

query error db error: ERROR: ALTER SINK SET CLUSTER not yet supported, see https://github\.com/MaterializeInc/materialize/discussions/29606 for more details
ALTER SINK v SET CLUSTER quickstart

statement ok
CREATE SOURCE s FROM LOAD GENERATOR COUNTER WITH (RETAIN HISTORY FOR '5m')

query T
SELECT create_sql FROM (SHOW CREATE MATERIALIZED VIEW mv)
----
CREATE MATERIALIZED VIEW "materialize"."public"."mv" IN CLUSTER "quickstart" WITH (REFRESH = ON COMMIT) AS SELECT 1

statement ok
ALTER MATERIALIZED VIEW mv SET (RETAIN HISTORY FOR '1m')

query T
SELECT create_sql FROM (SHOW CREATE MATERIALIZED VIEW mv)
----
CREATE MATERIALIZED VIEW "materialize"."public"."mv" IN CLUSTER "quickstart" WITH (REFRESH = ON COMMIT, RETAIN HISTORY = FOR '1m') AS SELECT 1

statement ok
ALTER MATERIALIZED VIEW mv RESET (RETAIN HISTORY)

query T
SELECT create_sql FROM (SHOW CREATE MATERIALIZED VIEW mv)
----
CREATE MATERIALIZED VIEW "materialize"."public"."mv" IN CLUSTER "quickstart" WITH (REFRESH = ON COMMIT) AS SELECT 1

statement ok
CREATE TABLE t (a INT) WITH (RETAIN HISTORY FOR '1000 hours')

query T
SELECT create_sql FROM (SHOW CREATE TABLE t)
----
CREATE TABLE "materialize"."public"."t" ("a" "pg_catalog"."int4") WITH (RETAIN HISTORY = FOR '1000 hours')

statement ok
CREATE INDEX i ON t(a)

statement ok
ALTER TABLE t SET (RETAIN HISTORY FOR '1m')

query T
SELECT create_sql FROM (SHOW CREATE TABLE t)
----
CREATE TABLE "materialize"."public"."t" ("a" "pg_catalog"."int4") WITH (RETAIN HISTORY = FOR '1m')

statement ok
ALTER TABLE t RESET (RETAIN HISTORY)

query T
SELECT create_sql FROM (SHOW CREATE TABLE t)
----
CREATE TABLE "materialize"."public"."t" ("a" "pg_catalog"."int4")

statement ok
ALTER SOURCE s SET (RETAIN HISTORY FOR '1m')

query T
SELECT create_sql FROM (SHOW CREATE SOURCE s)
----
CREATE SOURCE "materialize"."public"."s" IN CLUSTER "quickstart" FROM LOAD GENERATOR COUNTER EXPOSE PROGRESS AS "materialize"."public"."s_progress" WITH (RETAIN HISTORY = FOR '1m')

statement ok
ALTER SOURCE s RESET (RETAIN HISTORY)

query T
SELECT create_sql FROM (SHOW CREATE SOURCE s)
----
CREATE SOURCE "materialize"."public"."s" IN CLUSTER "quickstart" FROM LOAD GENERATOR COUNTER EXPOSE PROGRESS AS "materialize"."public"."s_progress"

statement ok
ALTER INDEX i SET (RETAIN HISTORY FOR '1m')

query T
SELECT create_sql FROM (SHOW CREATE INDEX i)
----
CREATE INDEX "i" IN CLUSTER "quickstart" ON "materialize"."public"."t" ("a") WITH (RETAIN HISTORY = FOR '1m')

statement ok
ALTER INDEX i SET (RETAIN HISTORY = FOR '1000 hours')

query T
SELECT create_sql FROM (SHOW CREATE INDEX i)
----
CREATE INDEX "i" IN CLUSTER "quickstart" ON "materialize"."public"."t" ("a") WITH (RETAIN HISTORY = FOR '1000 hours')

statement ok
ALTER INDEX i RESET (RETAIN HISTORY)

query T
SELECT create_sql FROM (SHOW CREATE INDEX i)
----
CREATE INDEX "i" IN CLUSTER "quickstart" ON "materialize"."public"."t" ("a")
