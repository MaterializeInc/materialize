# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# apd is for refactoring decimal/numeric in parallel development to the main
# branch

mode cockroach

query T
SELECT pg_typeof('0.2'::apd)
----
apd

query T
SELECT ('0.2'::apd)::text
----
0.2

query T
SELECT ('-0.2'::apd)::text
----
-0.2

query T
SELECT (-'0.2'::apd)::text
----
-0.2

query T
SELECT ('2'::apd)::text
----
2

query T
SELECT ('-2'::apd)::text
----
-2

query T
SELECT (-'2'::apd)::text
----
-2

query T
SELECT ('20'::apd)::text
----
20

query T
SELECT ('-20'::apd)::text
----
-20

query T
SELECT ('-1.2e20'::apd)::text
----
-120000000000000000000

query T
SELECT ('1.2e-20'::apd)::text
----
0.000000000000000000012

query T
SELECT ('    1.2'::apd)::text
----
1.2

query T
SELECT ('1.2    '::apd)::text
----
1.2

query error invalid input syntax for type apd: "1.   2"
SELECT ('1.   2'::apd)::text

query error invalid input syntax for type apd: "-123abc456"
SELECT ('-123abc456'::apd)::text;

query T
SELECT ('-0.0'::apd)::text
----
0

# Max precision is 39
query T
SELECT ('-123456789012345678.901234567890123456789'::apd)::text
----
-123456789012345678.901234567890123456789

query T
SELECT ('-0.000000000000000000000000000000000000001'::apd)::text
----
-0.000000000000000000000000000000000000001

# However, we'll round fractional component to not exceed 39 digits of precision
query T
SELECT ('-123456789012345678.901234567890123456789123'::apd)::text
----
-123456789012345678.901234567890123456789

# We won't round non-decimal places, i.e. overflow
query error "-123456789012345678901234567890123456789123" is out of range for type apd: exceeds maximum precision 39
SELECT ('-123456789012345678901234567890123456789123'::apd)::text

query error "-1.2e40" is out of range for type apd: exceeds maximum precision 39
SELECT ('-1.2e40'::apd)::text

# If most significant digit is outside of precision bounds, error, i.e. underflow
query error "1.2e-40" is out of range for type apd: exceeds maximum precision 39
SELECT ('1.2e-40'::apd)::text

# Special values

query T
SELECT ('NaN'::apd)::text
----
NaN

query error invalid input syntax for type apd: "-NaN"
SELECT ('-NaN'::apd)::text

query error invalid input syntax for type apd: "Infinity"
SELECT ('Infinity'::apd)::text

query error invalid input syntax for type apd: "-Infinity"
SELECT ('-Infinity'::apd)::text

# Casts

## int4 to apd
query TTT
SELECT 7::apd::text, -7::apd::text, 0::apd::text
----
7  -7  0

query TTT
SELECT 7::apd(39,3)::text, -7::apd(39,3)::text, 0::apd(39,3)::text
----
7  -7  0

query TT
SELECT 2147483647::apd::text, -2147483648::apd::text
----
2147483647  -2147483648

query error numeric field overflow
SELECT 12::apd(39,38)::text

## apd to int4
query III
SELECT '7'::apd::int, '7.3'::apd::int, '7.5'::apd::int
----
7  7  8

query III
SELECT '-7'::apd::int, '-7.3'::apd::int, '-7.5'::apd::int
----
-7  -7  -8

query II
SELECT '0'::apd::int, '-0'::apd::int
----
0  0

query error integer out of range
SELECT '2147483648'::apd::int4

query error integer out of range
SELECT '-2147483649'::apd::int4

## int8 to apd
query TTT
SELECT 7::int8::apd::text, -7::int8::apd::text, 0::int8::apd::text
----
7  -7  0

query TTT
SELECT 7::int8::apd(39,3)::text, -7::int8::apd(39,3)::text, 0::int8::apd(39,3)::text
----
7  -7  0

query TT
SELECT 9223372036854775807::apd::text, -9223372036854775808::apd::text
----
9223372036854775807  -9223372036854775808

query error numeric field overflow
SELECT 12::int8::apd(39,38)::text

## apd to int8
query III
SELECT '7'::apd::int8, '7.3'::apd::int8, '7.5'::apd::int8
----
7  7  8

query III
SELECT '-7'::apd::int8, '-7.3'::apd::int8, '-7.5'::apd::int8
----
-7  -7  -8

query II
SELECT '0'::apd::int8, '-0'::apd::int8
----
0  0

query error integer out of range
SELECT '9223372036854775808'::apd::int4

query error integer out of range
SELECT '-9223372036854775809'::apd::int4

# apd to float4
query RRRR
SELECT '1.234'::apd::float4, '1234.567891234567'::apd::float4, '0.000000000000000123456789123456789012345'::apd::float4, '-0.000000000000000123456789123456789012345'::apd::float4
----
1.234  1234.5679  0.0000000000000001234568  -0.0000000000000001234568

query RRR
SELECT '0.000'::apd::float4, '3.40282347E+38'::apd::float4, '-3.40282347E+38'::apd::float4
----
0  340282350000000000000000000000000000000  -340282350000000000000000000000000000000

query R
SELECT 'NaN'::apd::float4
----
NaN

query R
SELECT '9E-39'::apd::float4;
----
0.000000000000000000000000000000000000009000002

query error real out of range
SELECT '9E+38'::apd::float4

# float4 to apd
query TTT
SELECT 1.23::float4::apd::text, -1.23::float4::apd::text, 1.23::float4::apd(38,1)::text
----
1.23  -1.23  1.2

query TT
SELECT 'NaN'::float4::apd::text, '-NaN'::float4::apd::text;
----
NaN NaN

query TT
SELECT '3.40282347E+38'::float4::apd::text, '-3.40282347E+38'::float4::apd::text
----
340282350000000000000000000000000000000  -340282350000000000000000000000000000000

query error function casting real to apd is only defined for finite arguments
SELECT 'infinity'::float4::apd::text

query error numeric field overflow
SELECT '12.34'::float4::apd(39,38)::text;

# apd to float8
query RRRR
SELECT '1.234'::apd::float8, '1234.567891234567'::apd::float8, '0.000000000000000123456789123456789012345'::apd::float8, '-0.000000000000000123456789123456789012345'::apd::float8
----
1.234  1234.567891234567  0.00000000000000012345678912345679  -0.00000000000000012345678912345679

query RRR
SELECT '0.000'::apd::float8, '3.40282347E+38'::apd::float8, '-3.40282347E+38'::apd::float8
----
0  340282347000000000000000000000000000000  -340282347000000000000000000000000000000

query R
SELECT 'NaN'::apd::float8
----
NaN

query RR
SELECT '9E-39'::apd::float8, '9E+38'::apd::float8;
----
0.000000000000000000000000000000000000008999999999999999  900000000000000000000000000000000000000

# float8 to apd
query TTT
SELECT 1.23::float8::apd::text, -1.23::float8::apd::text, 1.23::float8::apd(38,1)::text
----
1.23  -1.23  1.2

query TT
SELECT 'NaN'::float8::apd::text, '-NaN'::float8::apd::text;
----
NaN NaN

query TT
SELECT '3.40282347E+38'::float8::apd::text, '-3.40282347E+38'::float8::apd::text
----
340282347000000000000000000000000000000  -340282347000000000000000000000000000000

query error numeric field overflow
SELECT '1.7976931348623157E+308'::float8::apd::text

query error numeric field overflow
SELECT '-1.7976931348623157E+308'::float8::apd::text

query error function casting double precision to apd is only defined for finite arguments
SELECT 'infinity'::float8::apd::text

query error numeric field overflow
SELECT '12.34'::float8::apd(39,38)::text;

# jsonb to apd
# - note that these just defer to other casts, so don't need as-extensive of testing

query T
SELECT ('1'::jsonb)::apd::text;
----
1

query T
SELECT ('1.2'::jsonb)::apd::text;
----
1.2

query error cannot cast jsonb string to type apd
SELECT ('"Infinity"'::jsonb)::apd::text;

query error cannot cast jsonb string to type apd
SELECT ('"-Infinity"'::jsonb)::apd::text;

query error cannot cast jsonb string to type apd
SELECT ('"NaN"'::jsonb)::apd::text;

# not a number
query error cannot cast jsonb array to type apd
SELECT ('[1]'::jsonb)::apd::text;

# not a number
query error cannot cast jsonb string to type apd
SELECT ('"1"'::jsonb)::apd::text;

# Addition
query T
SELECT ('1'::apd + '2'::apd)::text
----
3

query T
SELECT ('1.23'::apd + '2.34'::apd)::text
----
3.57

query T
SELECT ('1.23'::apd + '-2.34'::apd)::text
----
-1.11

query T
SELECT ('1.23'::apd + -'2.34'::apd)::text
----
-1.11

query T
SELECT ('1.23'::apd + '-1.23'::apd)::text
----
0

query T
SELECT ('3402823669209384634633746074317682'::apd + '3402823669209384634633746074317682'::apd)::text
----
6805647338418769269267492148635364

query T
SELECT ('3402823669209384.634633746074317682'::apd + '3402823669209384.634633746074317682'::apd)::text
----
6805647338418769.269267492148635364

# Values rounded to fit precision
query T
SELECT ('1e38'::apd + '1e-39'::apd)::text
----
100000000000000000000000000000000000000

# Limited precision means losing commutativity
query T
SELECT ('1e38'::apd + '1e-39'::apd + '-1e38'::apd)::text
----
0

query T
SELECT ('1e38'::apd + '-1e38'::apd + '1e-39'::apd)::text
----
0.000000000000000000000000000000000000001

query error value out of range: overflow
SELECT ('999999999999999999999999999999999999999'::apd + '1'::apd)::text

query error value out of range: overflow
SELECT ('790123449679012344967901234496790123392'::apd + '790123449679012344967901234496790123392'::apd)::text

query T
SELECT ('NaN'::apd + '2'::apd)::text
----
NaN

# Subtraction
query T
SELECT ('1'::apd - '2'::apd)::text
----
-1

query T
SELECT ('1.23'::apd - '2.34'::apd)::text
----
-1.11

query T
SELECT ('1.23'::apd - '-2.34'::apd)::text
----
3.57

query T
SELECT ('-1.23'::apd - '-2.34'::apd)::text
----
1.11

query T
SELECT (-('1.23'::apd - '2.34'::apd))::text
----
1.11

query T
SELECT ('1.23'::apd - '1.23'::apd)::text
----
0

query T
SELECT ('-3402823669209384634633746074317682'::apd - '3402823669209384634633746074317682'::apd)::text
----
-6805647338418769269267492148635364

query error value out of range: overflow
SELECT ('-790123449679012344967901234496790123392'::apd - '790123449679012344967901234496790123392'::apd)::text

query T
SELECT ('NaN'::apd - '2'::apd)::text
----
NaN

# Limited precision means losing commutativity
query T
SELECT ('1e38'::apd - '1e-39'::apd - '1e38'::apd)::text
----
0

query T
SELECT ('1e38'::apd - '1e38'::apd - '1e-39'::apd)::text
----
-0.000000000000000000000000000000000000001

# Multiplication
query T
SELECT ('1.1'::apd * '2.2'::apd)::text
----
2.42

query T
SELECT ('1.1'::apd * '-2.2'::apd)::text
----
-2.42

query T
SELECT ('-1.1'::apd * '2.2'::apd)::text
----
-2.42

query T
SELECT ('-1.1'::apd * '-2.2'::apd)::text
----
2.42

query T
SELECT ('-1.1'::apd * '.2'::apd)::text
----
-0.22

query T
SELECT ('.1'::apd * '-2.2'::apd)::text
----
-0.22

query T
SELECT (-('.1'::apd * '2.2'::apd))::text
----
-0.22

query error value out of range: overflow
SELECT ('123456789012345678901234567890123456789'::apd * '10'::apd)::text

query error value out of range: underflow
SELECT ('1E-39'::apd * '.1'::apd)::text

# Results are rounded to 39 digits of precision
query T
SELECT ('.123456789012345678901234567890123456789'::apd * '.1'::apd)::text
----
0.012345678901234567890123456789012345679

query T
SELECT ('3402823669209384.634633746074317682'::apd * '3402823669209384.634633746074317682'::apd)::text
----
11579208923731619542357098500868.7900057

# known bad behavior in old i128 implementation
query T
SELECT ('1.50000000'::apd * '1.50000000'::apd)::text
----
2.25

query T
SELECT ('NaN'::apd * '2'::apd)::text
----
NaN

query T
SELECT ('0'::apd * '-1'::apd)::text
----
0

# Division
query T
SELECT ('1'::apd / '2'::apd)::text;
----
0.5

query T
SELECT ('2.0'::apd / '1'::apd)::text;
----
2

query T
SELECT ('1'::apd / '0.5'::apd)::text;
----
2

query T
SELECT ('2.0'::apd / '1.1'::apd)::text;
----
1.81818181818181818181818181818181818182

query T
SELECT ('1'::apd / '11'::apd)::text;
----
0.090909090909090909090909090909090909091

query error value out of range: overflow
SELECT ('1'::apd / '0.000000000000000000000000000000000000001'::apd)::text;

query error value out of range: overflow
SELECT ('123456789012345678901234567890123456789'::apd / '.1'::apd)::text

query error value out of range: underflow
SELECT ('1E-39'::apd / '10'::apd)::text

# Round results to 39 digits of precision
query T
SELECT ('.123456789012345678901234567890123456789'::apd / '10'::apd)::text
----
0.012345678901234567890123456789012345679

query T
SELECT ('11579208923731619542357098500868.7900057'::apd / '3402823669209384.634633746074317682'::apd)::text
----
3402823669209384.63463374607431768200001

query error division by zero
SELECT ('1'::apd / '0'::apd)::text

query error division by zero
SELECT ('1'::apd / '0.0'::apd)::text;

query error division by zero
SELECT ('1'::apd / ('-1'::apd + '1.0'::apd))::text;

query error division by zero
SELECT ('0'::apd / '0'::apd)::text;

# Improve results of the bug that precipitated the refactor
query R
SELECT 1::NUMERIC(38, 10) / 1.2103500000::numeric(38, 10);
----
0.826000000000

query T
SELECT ('1'::apd / '1.21035'::apd)::text
----
0.826207295410418473995125376957078531003

query T
SELECT ('NaN'::apd / '2'::apd)::text
----
NaN

query T
SELECT ('2'::apd / 'NaN'::apd)::text
----
NaN

query T
SELECT ('0'::apd / '-1'::apd)::text
----
0

# mod

query T
SELECT ('3'::apd % '2'::apd)::text
----
1

query T
SELECT ('23'::apd % '4'::apd)::text
----
3

query T
SELECT ('4'::apd % '2'::apd)::text
----
0

query T
SELECT ('17.8'::apd % '4'::apd)::text
----
1.8

query T
SELECT ('20.1'::apd % '4.1'::apd)::text
----
3.7

query T
SELECT ('-16.3'::apd % '4.1'::apd)::text
----
-4

query T
SELECT ('20.1'::apd % '-4.1'::apd)::text
----
3.7

query T
SELECT ('-20.1'::apd % '-4.1'::apd)::text
----
-3.7

query T
SELECT ('NaN'::apd % '-4.1'::apd)::text
----
NaN

query T
SELECT ('-20.1'::apd % 'NaN'::apd)::text
----
NaN

query error division by zero
SELECT ('2'::apd % '0'::apd)::text

# Specify scale
query T
SELECT ('0.2'::apd(39,1))::text;
----
0.2

query T
SELECT ('0.2'::apd(39,3))::text;
----
0.2

query T
SELECT ('0.002'::apd(39,1))::text;
----
0

query T
SELECT ('0.12'::apd(39,2) + '0.2'::apd(39,1))::text;
----
0.32

query T
SELECT ('0.12'::apd(39,1) + '0.2'::apd(39,2))::text;
----
0.3

query T
SELECT ('0.12'::apd + '0.2'::apd)::apd(39,3)::text;
----
0.32

query T
SELECT ('0.12'::apd + '0.2'::apd)::apd(39,1)::text;
----
0.3

query T
SELECT ('0.12'::apd(39,2) * '0.2'::apd(39,1))::text;
----
0.024

query T
SELECT ('0.12'::apd(39,1) * '0.2'::apd(39,2))::text;
----
0.02

query T
SELECT ('0.12'::apd * '0.2'::apd)::apd(39,3)::text;
----
0.024

query T
SELECT ('0.14'::apd * '0.2'::apd)::apd(39,2)::text;
----
0.03

query T
SELECT ('0.12'::apd * '0.2'::apd)::apd(39,1)::text;
----
0

query T
SELECT ('NaN'::apd(39,1))::text;
----
NaN

query error precision for type apd must be within \[1-39\], have 40
SELECT ('0.2'::apd(40,1))::text;

query error scale for type apd must be within \[0-39\], have 40
SELECT ('0.2'::apd(39,40))::text;

query error apd scale 39 must be between 0 and precision 1
SELECT ('0.2'::apd(1,39))::text;

query error numeric field overflow
SELECT ('12345678901234567890'::apd(39,3) * '12345678901234567890'::apd(39,3))::apd(39,3)::text;

# Adding a scale "prevents" rounding
## This value is within range, but requires 37 digits of precision left of the decimal
query T
SELECT '98765432109876543210987654321098765432.109'::apd::text
----
98765432109876543210987654321098765432.1

## When expressly requesting scale of 3, only have 36 digits of precision left of the decimal
query error numeric field overflow
SELECT '98765432109876543210987654321098765432.109'::apd(39,3)::text

query error numeric field overflow
SELECT '1'::apd(39,39)::text

## Multiplication w/ numeric field overflow
query T
SELECT ('1234567890123456789.012345'::apd * '1234567890123456789.012345'::apd)::text;
----
1524157875323883675049533479957338669.12

query error numeric field overflow
SELECT ('1234567890123456789.012345'::apd * '1234567890123456789.012345'::apd)::apd(39,3)::text;

## Addition w/ numeric field overflow
query T
SELECT ('999999999999999999999999999999999999.123'::apd + '1'::apd)::text
----
1000000000000000000000000000000000000.12

query error numeric field overflow
SELECT ('999999999999999999999999999999999999.123'::apd + '1'::apd)::apd(39,3)::text

# Successive operations

## regression test for #6858
query T
SELECT ('-0.0'::apd - '1'::apd  * '-0.0 '::apd)::text;
----
0

# Negate is nop on NaN and 0
query T
SELECT (-'NaN'::apd)::text;
----
NaN

query T
SELECT (-'0'::apd)::text;
----
0

query T
SELECT (-'0.00'::apd)::text;
----
0

query T
SELECT (-('0.1'::apd - '0.10'::apd))::text;
----
0

# Abs
query T
SELECT abs('-1'::apd)::text;
----
1

query T
SELECT abs(-'1'::apd)::text;
----
1

query T
SELECT abs('-7e-38'::apd)::text;
----
0.00000000000000000000000000000000000007

query T
SELECT abs('1'::apd - '1e38'::apd)::text;
----
99999999999999999999999999999999999999

query T
SELECT abs('-0.00'::apd)::text;
----
0

query T
SELECT abs('NaN'::apd)::text;
----
NaN

# round

query TT
SELECT round('1.4'::apd)::text, round('1.5'::apd)::text
----
1  2

query TT
SELECT round('-1.4'::apd)::text, round('-1.5'::apd)::text
----
-1  -2

query T
SELECT round('NaN'::apd)::text
----
NaN

query T
SELECT round('1.29'::apd, 1)::text
----
1.3

query T
SELECT round('1.23'::apd, 4)::text
----
1.23

query T
SELECT round('.1234567890123456789012345678901234567890'::apd, 1)::text
----
0.1

query T
SELECT round('.1234567890123456789012345678901234567890'::apd, 39)::text
----
0.123456789012345678901234567890123456789

query T
SELECT round('.1234567890123456789012345678901234567890'::apd, 41)::text
----
0.123456789012345678901234567890123456789

query T
SELECT round('.1234567890123456789012345678901234567'::apd, 37)::text
----
0.1234567890123456789012345678901234567

query T
SELECT round('.1234567890123456789012345678901234567'::apd, 39)::text
----
0.1234567890123456789012345678901234567

query T
SELECT round('6e38'::apd, 39)::text
----
600000000000000000000000000000000000000

query T
SELECT round('19.87'::apd, -1)::text
----
20

query T
SELECT round('99.9'::apd, -1)::text
----
100

query T
SELECT round('123456789012345.6789012345678901234567890'::apd, -7)::text
----
123456790000000

query T
SELECT round('123456789012345.6789012345678901234567890'::apd, -16)::text
----
0

query T
SELECT round('5.6e10'::apd, -10)::text;
----
60000000000

query T
SELECT round('5.6e10'::apd, 10)::text;
----
56000000000

query T
SELECT round('9.876e38'::apd, -37)::text;
----
990000000000000000000000000000000000000

# properly rounded value exceeds max precision
query error value out of range: overflow
SELECT round('9.876e38'::apd, -38)::text;

query error value out of range: overflow
SELECT round('9e38'::apd, -39)::text;

# however, if the "place" argument exceeds the number of digits, the result is
# zero
query T
SELECT round('9e38'::apd, -40)::text;
----
0

query T
SELECT round ('-0.10212864 '::APD, -900)::text
----
0

# ceil

query TTT
SELECT ceil('1.234'::apd)::text, ceil('-1.234'::apd)::text, ceil('NaN'::apd)::text
----
2  -1  NaN

query T
SELECT ceil('-0.6'::apd)::text;
----
0

# floor

query TTT
SELECT floor('1.234'::apd)::text, floor('-1.234'::apd)::text, floor('NaN'::apd)::text
----
1  -2  NaN

# Exponential calculations

## Pow
query TT
SELECT pow('2'::apd, '3'::apd)::text, pow('2.5'::apd, '-3.5'::apd)::text
----
8 0.040477154050155255449585837368738797232

query TT
SELECT pow('1'::apd, '9e38'::apd)::text, pow('9e38'::apd, '1'::apd)::text
----
1  900000000000000000000000000000000000000

query TT
SELECT pow('0'::apd, '0'::apd)::text, pow('0.00'::apd, '-0.000'::apd)::text
----
1  1

query TT
SELECT pow('1'::apd, '9e-39'::apd)::text, pow('9e-39'::apd, '1'::apd)::text
----
1  0.000000000000000000000000000000000000009

query TT
SELECT pow('NaN'::apd, '-2.5'::apd)::text, pow('-2.5'::apd, 'NaN'::apd)::text;
----
NaN NaN

query error value out of range: overflow
SELECT pow('999'::apd, '9999'::apd)::text;

query error value out of range: underflow
SELECT pow('999'::apd, '-9999'::apd)::text;

query error zero raised to a negative power is undefined
SELECT pow('0'::apd, '-1'::apd)::text

query error function pow cannot return complex numbers
SELECT pow('-1'::apd, '-.1'::apd)::text

# Square root
query TTT
SELECT sqrt('2'::apd)::text, sqrt('3'::apd)::text, sqrt('0'::apd)::text
----
1.41421356237309504880168872420969807857  1.73205080756887729352744634150587236694  0

query T
SELECT sqrt('.98765432109876543210'::apd)::text
----
0.993807990055808231173954156543476014651

query TT
SELECT sqrt('9e38'::apd)::text, sqrt('9e-39'::apd)::text
----
30000000000000000000  0.00000000000000000009486832980505137996

query error cannot take square root of a negative number
SELECT sqrt('-2'::apd)::text

## Exp, i.e. e^x
query T
SELECT exp('1'::apd)::text
----
2.71828182845904523536028747135266249776

query T
SELECT exp('2'::apd)::text
----
7.38905609893065022723042746057500781318

query T
SELECT exp('2.0'::apd)::text
----
7.38905609893065022723042746057500781318

query T
SELECT exp('-1'::apd)::text
----
0.367879441171442321595523770161460867446

query T
SELECT exp('-1.0'::apd)::text
----
0.367879441171442321595523770161460867446

query T
SELECT exp('1.5'::apd)::text
----
4.48168907033806482260205546011927581901

query T
SELECT exp('.5'::apd)::text
----
1.64872127070012814684865078781416357165

query T
SELECT exp('NaN'::apd)::text
----
NaN

query error value out of range: overflow
SELECT exp('50000'::apd)::text

query error value out of range: underflow
SELECT exp('-50000'::apd)::text

# Logarithmic calculations

query TTT
SELECT ln('2.0'::apd)::text, ln('2.5'::apd)::text, ln('5000'::apd)::text
----
0.693147180559945309417232121458176568076  0.91629073187415506518352721176801107145  8.51719319141623742665473369727928026233

query error function ln is not defined for negative numbers
SELECT ln('-100.000'::apd)::text

query error function ln is not defined for zero
SELECT ln('0'::apd)::text

query TTT
SELECT log('10.0'::apd)::text, log('100.000'::apd)::text, log('5000'::apd)::text
----
1  2  3.69897000433601880478626110527550697323

query T
SELECT ln(exp('2'::apd))::text
----
2

query error function log10 is not defined for negative numbers
SELECT log('-100.000'::apd)::text

query error function log10 is not defined for zero
SELECT log('0'::apd)::text

# This documented behavior of the library:
# > Inexact results will almost always be correctly rounded, but may be up to 1
# > ulp (unit in last place) in error in rare cases.
# See decNumberLog10 at http://speleotrove.com/decimal/dnnumb.html
query T
SELECT log('2'::apd, '64'::apd)::text
----
5.99999999999999999999999999999999999999

# However, doesn't happen everywhere
query T
SELECT log('2'::apd, '128'::apd)::text
----
7

query T
SELECT log('128'::apd, '2'::apd)::text
----
0.142857142857142857142857142857142857143

query T
SELECT log('9e38'::apd, '1e-39'::apd)::text
----
-1.00117464716582763094927800807557636035

query T
SELECT log('1e-39'::apd, '9e38'::apd)::text
----
-0.99882673101126474037410399503872386201

query error function log is not defined for zero
SELECT log('0'::apd, '2'::apd)::text

query error function log is not defined for negative numbers
SELECT log('-1'::apd, '2'::apd)::text

query error function log is not defined for zero
SELECT log('128'::apd, '0'::apd)::text

query error function log is not defined for negative numbers
SELECT log('128'::apd, '-1'::apd)::text

query error division by zero
select log('1'::apd, '2'::apd)::text;

# Equality
# Tests binary combination of values from set {0, 0.00, 1, 1.00, 1.2, -1.00, NaN}
# including self-combinations using each equality operator

query T
SELECT '0'::apd = '0'::apd;
----
true

query T
SELECT '0'::apd < '0'::apd;
----
false

query T
SELECT '0'::apd <= '0'::apd;
----
true

query T
SELECT '0'::apd > '0'::apd;
----
false

query T
SELECT '0'::apd >= '0'::apd;
----
true

query T
SELECT '0'::apd <> '0'::apd;
----
false

query T
SELECT '0'::apd = '0.00'::apd;
----
true

query T
SELECT '0'::apd < '0.00'::apd;
----
false

query T
SELECT '0'::apd <= '0.00'::apd;
----
true

query T
SELECT '0'::apd > '0.00'::apd;
----
false

query T
SELECT '0'::apd >= '0.00'::apd;
----
true

query T
SELECT '0'::apd <> '0.00'::apd;
----
false

query T
SELECT '0'::apd = '1'::apd;
----
false

query T
SELECT '0'::apd < '1'::apd;
----
true

query T
SELECT '0'::apd <= '1'::apd;
----
true

query T
SELECT '0'::apd > '1'::apd;
----
false

query T
SELECT '0'::apd >= '1'::apd;
----
false

query T
SELECT '0'::apd <> '1'::apd;
----
true

query T
SELECT '0'::apd = '1.00'::apd;
----
false

query T
SELECT '0'::apd < '1.00'::apd;
----
true

query T
SELECT '0'::apd <= '1.00'::apd;
----
true

query T
SELECT '0'::apd > '1.00'::apd;
----
false

query T
SELECT '0'::apd >= '1.00'::apd;
----
false

query T
SELECT '0'::apd <> '1.00'::apd;
----
true

query T
SELECT '0'::apd = '1.2'::apd;
----
false

query T
SELECT '0'::apd < '1.2'::apd;
----
true

query T
SELECT '0'::apd <= '1.2'::apd;
----
true

query T
SELECT '0'::apd > '1.2'::apd;
----
false

query T
SELECT '0'::apd >= '1.2'::apd;
----
false

query T
SELECT '0'::apd <> '1.2'::apd;
----
true

query T
SELECT '0'::apd = '-1.00'::apd;
----
false

query T
SELECT '0'::apd < '-1.00'::apd;
----
false

query T
SELECT '0'::apd <= '-1.00'::apd;
----
false

query T
SELECT '0'::apd > '-1.00'::apd;
----
true

query T
SELECT '0'::apd >= '-1.00'::apd;
----
true

query T
SELECT '0'::apd <> '-1.00'::apd;
----
true

query T
SELECT '0'::apd = 'NaN'::apd;
----
false

query T
SELECT '0'::apd < 'NaN'::apd;
----
true

query T
SELECT '0'::apd <= 'NaN'::apd;
----
true

query T
SELECT '0'::apd > 'NaN'::apd;
----
false

query T
SELECT '0'::apd >= 'NaN'::apd;
----
false

query T
SELECT '0'::apd <> 'NaN'::apd;
----
true

query T
SELECT '0.00'::apd = '0.00'::apd;
----
true

query T
SELECT '0.00'::apd < '0.00'::apd;
----
false

query T
SELECT '0.00'::apd <= '0.00'::apd;
----
true

query T
SELECT '0.00'::apd > '0.00'::apd;
----
false

query T
SELECT '0.00'::apd >= '0.00'::apd;
----
true

query T
SELECT '0.00'::apd <> '0.00'::apd;
----
false

query T
SELECT '0.00'::apd = '1'::apd;
----
false

query T
SELECT '0.00'::apd < '1'::apd;
----
true

query T
SELECT '0.00'::apd <= '1'::apd;
----
true

query T
SELECT '0.00'::apd > '1'::apd;
----
false

query T
SELECT '0.00'::apd >= '1'::apd;
----
false

query T
SELECT '0.00'::apd <> '1'::apd;
----
true

query T
SELECT '0.00'::apd = '1.00'::apd;
----
false

query T
SELECT '0.00'::apd < '1.00'::apd;
----
true

query T
SELECT '0.00'::apd <= '1.00'::apd;
----
true

query T
SELECT '0.00'::apd > '1.00'::apd;
----
false

query T
SELECT '0.00'::apd >= '1.00'::apd;
----
false

query T
SELECT '0.00'::apd <> '1.00'::apd;
----
true

query T
SELECT '0.00'::apd = '1.2'::apd;
----
false

query T
SELECT '0.00'::apd < '1.2'::apd;
----
true

query T
SELECT '0.00'::apd <= '1.2'::apd;
----
true

query T
SELECT '0.00'::apd > '1.2'::apd;
----
false

query T
SELECT '0.00'::apd >= '1.2'::apd;
----
false

query T
SELECT '0.00'::apd <> '1.2'::apd;
----
true

query T
SELECT '0.00'::apd = '-1.00'::apd;
----
false

query T
SELECT '0.00'::apd < '-1.00'::apd;
----
false

query T
SELECT '0.00'::apd <= '-1.00'::apd;
----
false

query T
SELECT '0.00'::apd > '-1.00'::apd;
----
true

query T
SELECT '0.00'::apd >= '-1.00'::apd;
----
true

query T
SELECT '0.00'::apd <> '-1.00'::apd;
----
true

query T
SELECT '0.00'::apd = 'NaN'::apd;
----
false

query T
SELECT '0.00'::apd < 'NaN'::apd;
----
true

query T
SELECT '0.00'::apd <= 'NaN'::apd;
----
true

query T
SELECT '0.00'::apd > 'NaN'::apd;
----
false

query T
SELECT '0.00'::apd >= 'NaN'::apd;
----
false

query T
SELECT '0.00'::apd <> 'NaN'::apd;
----
true

query T
SELECT '1'::apd = '1'::apd;
----
true

query T
SELECT '1'::apd < '1'::apd;
----
false

query T
SELECT '1'::apd <= '1'::apd;
----
true

query T
SELECT '1'::apd > '1'::apd;
----
false

query T
SELECT '1'::apd >= '1'::apd;
----
true

query T
SELECT '1'::apd <> '1'::apd;
----
false

query T
SELECT '1'::apd = '1.00'::apd;
----
true

query T
SELECT '1'::apd < '1.00'::apd;
----
false

query T
SELECT '1'::apd <= '1.00'::apd;
----
true

query T
SELECT '1'::apd > '1.00'::apd;
----
false

query T
SELECT '1'::apd >= '1.00'::apd;
----
true

query T
SELECT '1'::apd <> '1.00'::apd;
----
false

query T
SELECT '1'::apd = '1.2'::apd;
----
false

query T
SELECT '1'::apd < '1.2'::apd;
----
true

query T
SELECT '1'::apd <= '1.2'::apd;
----
true

query T
SELECT '1'::apd > '1.2'::apd;
----
false

query T
SELECT '1'::apd >= '1.2'::apd;
----
false

query T
SELECT '1'::apd <> '1.2'::apd;
----
true

query T
SELECT '1'::apd = '-1.00'::apd;
----
false

query T
SELECT '1'::apd < '-1.00'::apd;
----
false

query T
SELECT '1'::apd <= '-1.00'::apd;
----
false

query T
SELECT '1'::apd > '-1.00'::apd;
----
true

query T
SELECT '1'::apd >= '-1.00'::apd;
----
true

query T
SELECT '1'::apd <> '-1.00'::apd;
----
true

query T
SELECT '1'::apd = 'NaN'::apd;
----
false

query T
SELECT '1'::apd < 'NaN'::apd;
----
true

query T
SELECT '1'::apd <= 'NaN'::apd;
----
true

query T
SELECT '1'::apd > 'NaN'::apd;
----
false

query T
SELECT '1'::apd >= 'NaN'::apd;
----
false

query T
SELECT '1'::apd <> 'NaN'::apd;
----
true

query T
SELECT '1.00'::apd = '1.00'::apd;
----
true

query T
SELECT '1.00'::apd < '1.00'::apd;
----
false

query T
SELECT '1.00'::apd <= '1.00'::apd;
----
true

query T
SELECT '1.00'::apd > '1.00'::apd;
----
false

query T
SELECT '1.00'::apd >= '1.00'::apd;
----
true

query T
SELECT '1.00'::apd <> '1.00'::apd;
----
false

query T
SELECT '1.00'::apd = '1.2'::apd;
----
false

query T
SELECT '1.00'::apd < '1.2'::apd;
----
true

query T
SELECT '1.00'::apd <= '1.2'::apd;
----
true

query T
SELECT '1.00'::apd > '1.2'::apd;
----
false

query T
SELECT '1.00'::apd >= '1.2'::apd;
----
false

query T
SELECT '1.00'::apd <> '1.2'::apd;
----
true

query T
SELECT '1.00'::apd = '-1.00'::apd;
----
false

query T
SELECT '1.00'::apd < '-1.00'::apd;
----
false

query T
SELECT '1.00'::apd <= '-1.00'::apd;
----
false

query T
SELECT '1.00'::apd > '-1.00'::apd;
----
true

query T
SELECT '1.00'::apd >= '-1.00'::apd;
----
true

query T
SELECT '1.00'::apd <> '-1.00'::apd;
----
true

query T
SELECT '1.00'::apd = 'NaN'::apd;
----
false

query T
SELECT '1.00'::apd < 'NaN'::apd;
----
true

query T
SELECT '1.00'::apd <= 'NaN'::apd;
----
true

query T
SELECT '1.00'::apd > 'NaN'::apd;
----
false

query T
SELECT '1.00'::apd >= 'NaN'::apd;
----
false

query T
SELECT '1.00'::apd <> 'NaN'::apd;
----
true

query T
SELECT '1.2'::apd = '1.2'::apd;
----
true

query T
SELECT '1.2'::apd < '1.2'::apd;
----
false

query T
SELECT '1.2'::apd <= '1.2'::apd;
----
true

query T
SELECT '1.2'::apd > '1.2'::apd;
----
false

query T
SELECT '1.2'::apd >= '1.2'::apd;
----
true

query T
SELECT '1.2'::apd <> '1.2'::apd;
----
false

query T
SELECT '1.2'::apd = '-1.00'::apd;
----
false

query T
SELECT '1.2'::apd < '-1.00'::apd;
----
false

query T
SELECT '1.2'::apd <= '-1.00'::apd;
----
false

query T
SELECT '1.2'::apd > '-1.00'::apd;
----
true

query T
SELECT '1.2'::apd >= '-1.00'::apd;
----
true

query T
SELECT '1.2'::apd <> '-1.00'::apd;
----
true

query T
SELECT '1.2'::apd = 'NaN'::apd;
----
false

query T
SELECT '1.2'::apd < 'NaN'::apd;
----
true

query T
SELECT '1.2'::apd <= 'NaN'::apd;
----
true

query T
SELECT '1.2'::apd > 'NaN'::apd;
----
false

query T
SELECT '1.2'::apd >= 'NaN'::apd;
----
false

query T
SELECT '1.2'::apd <> 'NaN'::apd;
----
true

query T
SELECT '-1.00'::apd = '-1.00'::apd;
----
true

query T
SELECT '-1.00'::apd < '-1.00'::apd;
----
false

query T
SELECT '-1.00'::apd <= '-1.00'::apd;
----
true

query T
SELECT '-1.00'::apd > '-1.00'::apd;
----
false

query T
SELECT '-1.00'::apd >= '-1.00'::apd;
----
true

query T
SELECT '-1.00'::apd <> '-1.00'::apd;
----
false

query T
SELECT '-1.00'::apd = 'NaN'::apd;
----
false

query T
SELECT '-1.00'::apd < 'NaN'::apd;
----
true

query T
SELECT '-1.00'::apd <= 'NaN'::apd;
----
true

query T
SELECT '-1.00'::apd > 'NaN'::apd;
----
false

query T
SELECT '-1.00'::apd >= 'NaN'::apd;
----
false

query T
SELECT '-1.00'::apd <> 'NaN'::apd;
----
true

query T
SELECT 'NaN'::apd = 'NaN'::apd;
----
true

query T
SELECT 'NaN'::apd < 'NaN'::apd;
----
false

query T
SELECT 'NaN'::apd <= 'NaN'::apd;
----
true

query T
SELECT 'NaN'::apd > 'NaN'::apd;
----
false

query T
SELECT 'NaN'::apd >= 'NaN'::apd;
----
true

query T
SELECT 'NaN'::apd <> 'NaN'::apd;
----
false

# NaN is larger than large numbers
query T
SELECT 'NaN'::apd > '9e38'::apd;
----
true

# Scale doesn't affect equality
query T
SELECT '9'::apd(39,5) = '9'::apd;
----
true

query T
SELECT '9'::apd(39,5) = '9'::apd(39,10);
----
true

# Values are rounded before comparison
query T
SELECT '123456789012345678901234567890123456789.0'::apd = '123456789012345678901234567890123456789.4999'::apd;
----
true

query T
SELECT '1.00123'::apd(39,2) = '1'::apd;
----
true

query T
SELECT '1.23456789'::apd(39,2) < '1.23456789'::apd(39,3);
----
true

query T
SELECT '1.23456789'::apd(39,5) < '1.23456789'::apd(39,4);
----
true

query T
select (max(a))::text from (select a from unnest(ARRAY['1.4'::apd(39,5), '1.8'::apd(39,4)]) a);
----
1.8

query T
select (min(a))::text from (select a from unnest(ARRAY['1.4'::apd(39,5), '1.8'::apd(39,4)]) a);
----
1.4

query T
select (max(a))::text from (select a from unnest(ARRAY['NaN'::apd(39,5), '1.4'::apd(39,5), '1.8'::apd(39,4)]) a);
----
NaN

query T
select (min(a))::text from (select a from unnest(ARRAY['NaN'::apd(39,5), '1.4'::apd(39,5), '1.8'::apd(39,4)]) a);
----
1.4

query T
select (max(a))::text from (select a from unnest(ARRAY[]::apd[]) a);
----
NULL

query T
select (min(a))::text from (select a from unnest(ARRAY[]::apd[]) a);
----
NULL

# Distinct, except
# regression tests for #6877 #6912

query T
SELECT DISTINCT column1::text FROM (
    VALUES
        ('0.1'::apd),
        ('0.10'::apd),
        ('0.100'::apd),
        ('0.1000'::apd),
        ('0.10000'::apd)
);
----
0.1

query T
SELECT column1::text FROM (
    SELECT * FROM (
        VALUES ('0.1'::apd)
    ) EXCEPT ALL
        SELECT * FROM (
            VALUES ('0.1000'::apd)
        )
)
----
