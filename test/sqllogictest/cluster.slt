# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Basic tests of the `CREATE CLUSTER` and `DROP CLUSTER` DDL statements.

mode cockroach

statement ok
CREATE CLUSTER foo

statement ok
DROP CLUSTER foo

# Creating cluster w/ remote replica works.

statement ok
CREATE CLUSTER foo REPLICA r1 (REMOTE ('localhost:1234'))

statement error cluster 'foo' already exists
CREATE CLUSTER foo REPLICA r1 (REMOTE ('localhost:1234'))

statement error cannot create multiple replicas named 'r1' on cluster 'bar'
CREATE CLUSTER bar REPLICA r1 (REMOTE ('localhost:1234')), REPLICA r1 (REMOTE ('localhost:1234'))

statement ok
CREATE CLUSTER bar REPLICA r1 (REMOTE ('localhost:1235')), REPLICA r2 (REMOTE ('localhost:1236'))

query TT rowsort
SELECT * FROM mz_clusters
----
1 default
2 foo
3 bar

query T rowsort
SHOW CLUSTERS
----
bar
default
foo

query T rowsort
SHOW CLUSTERS LIKE 'd%'
----
default

# Test invalid option combinations.

statement error Expected INTROSPECTION, found SIZE
CREATE CLUSTER baz SIZE 'small'

statement error only one of REMOTE or SIZE may be specified
CREATE CLUSTER baz REPLICA r1 (REMOTE ('localhost:1234'), SIZE 'small')

# Test `cluster` session variable.

query T
SHOW cluster
----
default

statement ok
SET cluster = 'bar'

query T
SHOW cluster
----
bar

statement ok
CREATE MATERIALIZED VIEW v AS SELECT 1

statement ok
SET cluster = 'default'

query T
SELECT * FROM v
----
1

query TTTTTTT
SHOW INDEXES ON v IN CLUSTER bar;
----
bar v v_primary_idx 1 ?column? NULL false

query T
SELECT
	mz_clusters.name
FROM
	mz_clusters JOIN mz_indexes ON mz_clusters.id = mz_indexes.cluster_id
WHERE
	mz_indexes.name = 'v_primary_idx';
----
bar

# Test invalid setting of `cluster`.

# It's okay to set the `cluster` variable to an invalid cluster.
statement ok
SET cluster = 'bad'

# But you can't do any reads on that cluster.
statement error unknown cluster 'bad'
SELECT * FROM v

# Nor can you create indexes on that cluster.
statement error unknown cluster 'bad'
CREATE MATERIALIZED VIEW v2 AS SELECT 1

# But you can create unmaterialized views on that cluster.
statement ok
CREATE VIEW unmat AS SELECT 1

# Test `CREATE INDEX ... IN CLUSTER`.
statement ok
SET cluster = 'default'

query T
SELECT name FROM mz_indexes WHERE name NOT LIKE 'mz_%';
----
v_primary_idx

statement ok
CREATE DEFAULT INDEX IN CLUSTER bar ON v

query TTTTTTT
SHOW INDEXES ON v IN CLUSTER bar;
----
bar v v_primary_idx 1 ?column? NULL false
bar v v_primary_idx1 1 ?column? NULL false

statement error unknown cluster 'noexist'
CREATE DEFAULT INDEX IN CLUSTER noexist ON v

# Test invalid DROPs.

query T
SHOW cluster
----
default

statement error unknown cluster 'baz'
DROP CLUSTER baz

statement error cannot drop cluster with active indexes, sinks, or replicas
DROP CLUSTER bar

query TTTTTTT
SHOW INDEXES IN CLUSTER bar WHERE on_name = 'v';
----
bar v v_primary_idx 1 ?column? NULL false
bar v v_primary_idx1 1 ?column? NULL false

statement ok
DROP INDEX v_primary_idx

statement ok
DROP INDEX v_primary_idx1

# Test valid DROPs

statement ok
DROP CLUSTER bar

statement ok
DROP CLUSTER foo

statement ok
CREATE CLUSTER baz REPLICA r1 (REMOTE ('localhost:1234'))

statement ok
CREATE DEFAULT INDEX IN CLUSTER baz ON v

statement error cannot drop cluster with active indexes, sinks, or replicas
DROP CLUSTER baz

statement ok
DROP CLUSTER baz CASCADE

query T
SELECT name FROM mz_indexes WHERE name NOT LIKE 'mz_%';
----

# Test that dropping a cluster and re-creating it with the same name is valid if introspection sources are enabled
statement ok
CREATE CLUSTER foo REPLICA r1 (REMOTE ('localhost:1234')) INTROSPECTION GRANULARITY '1s'

statement ok
DROP CLUSTER foo

statement ok
CREATE CLUSTER foo REPLICA r1 (REMOTE ('localhost:1234')) INTROSPECTION GRANULARITY '1s'

statement ok
DROP CLUSTER foo

# Test that bad cluster sizes don't cause a crash

statement error unknown cluster replica size
CREATE CLUSTER foo REPLICA a (SIZE 'lol')

statement ok
CREATE CLUSTER foo REPLICA a (SIZE '1')

statement ok
CREATE CLUSTER foo2 REPLICA a (SIZE '32')

statement ok
CREATE CLUSTER foo3 REPLICA a (SIZE '2-2')

statement ok
DROP CLUSTER foo, foo2, foo3 CASCADE

# Test that introspection source indexes are created and dropped correctly

# There are 17 introspection sources
query I
SELECT COUNT(name) FROM mz_indexes WHERE cluster_id = 1;
----
17

query I
SELECT COUNT(name) FROM mz_indexes WHERE cluster_id <> 1;
----
0

statement ok
CREATE CLUSTER test REPLICA foo (SIZE '1');

query I
SELECT COUNT(name) FROM mz_indexes;
----
34

statement ok
DROP CLUSTER test;

query T
SELECT COUNT(name) FROM mz_indexes;
----
17

statement ok
CREATE CLUSTER REPLICA default.size_1 SIZE '1';

query TT
SHOW CLUSTER REPLICAS
----
default default_replica
default size_1

statement ok
CREATE CLUSTER foo REPLICA size_1 (SIZE '1'), REPLICA size_2 (SIZE '2')

query TT
SHOW CLUSTER REPLICAS
----
default default_replica
default size_1
foo size_1
foo size_2

statement ok
DROP CLUSTER REPLICA IF EXISTS default.bar

statement ok
DROP CLUSTER REPLICA IF EXISTS bar.foo

statement ok
DROP CLUSTER REPLICA IF EXISTS default.foo

query error CLUSTER foo has no CLUSTER REPLICA named foo
DROP CLUSTER REPLICA default.size_1, foo.foo

statement ok
DROP CLUSTER REPLICA default.size_1

statement ok
DROP CLUSTER REPLICA foo.size_1, foo.size_2

query TT
SHOW CLUSTER REPLICAS
----
default default_replica

statement ok
CREATE CLUSTER REPLICA default.foo_bar SIZE '1'

statement ok
CREATE CLUSTER REPLICA default."foo-bar" SIZE '1'

statement ok
DROP CLUSTER REPLICA default.foo_bar

statement ok
CREATE CLUSTER REPLICA default."好-好" SIZE '1'

statement ok
CREATE CLUSTER REPLICA default."好_好" SIZE '1'

# clusters wo replicas cannot service selects

statement ok
CREATE CLUSTER empty

statement ok
SET cluster = empty

query error CLUSTER "empty" has no replicas available to service request
SELECT 1;


# Phillip's tests

statement error zero-length delimited identifier
CREATE CLUSTER REPLICA default."" SIZE '1';

statement error unknown cluster
CREATE CLUSTER REPLICA no_such_cluster.size_1 SIZE '1';

statement error expected String or bare identifier
CREATE CLUSTER foo REPLICA size_2 (SIZE NULL);

statement error unknown cluster replica size
CREATE CLUSTER foo REPLICA size_2 (SIZE '');

statement error unknown cluster replica size
CREATE CLUSTER foo REPLICA size_2 (SIZE 'no_such_size');

statement error expected String or bare identifier
CREATE CLUSTER foo REPLICA size_2 (SIZE 1);

statement error unknown cluster replica size
CREATE CLUSTER foo REPLICA size_2 (SIZE a);

statement ok
DROP CLUSTER foo CASCADE;

statement ok
CREATE CLUSTER foo REPLICA size_2 (SIZE '1');

statement ok
SET cluster=foo

statement ok
CREATE TABLE t1 (f1 INTEGER);

statement ok
INSERT INTO t1 VALUES (1);

query I
SELECT * FROM t1;
----
1

statement error unknown cluster
DROP CLUSTER REPLICA no_such_cluster.bar

# Availability zones
# Note that we don't support availability zones configured with slt, so they
# can't be meaningfully specified

statement error unknown cluster replica availability zone a
CREATE CLUSTER REPLICA default.replica SIZE '1', AVAILABILITY ZONE 'a'

statement error AVAILABILITY ZONE specified more than once
CREATE CLUSTER REPLICA default.replica AVAILABILITY ZONE 'a', AVAILABILITY ZONE 'b'

statement error cannot specify AVAILABILITY ZONE and REMOTE
CREATE CLUSTER REPLICA default.replica REMOTE ('host1'), AVAILABILITY ZONE 'a'

statement error cannot specify AVAILABILITY ZONE and REMOTE
CREATE CLUSTER REPLICA default.replica REMOTE ('host1'), AVAILABILITY ZONE 'a'

statement error cannot specify AVAILABILITY ZONE and REMOTE
CREATE CLUSTER REPLICA default.replica AVAILABILITY ZONE 'a', REMOTE ('host1')
