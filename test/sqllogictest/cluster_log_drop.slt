# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Ensure correct log creation and destruction on `CREATE CLUSTER`, `DROP CLUSTER` DDL statements.

mode cockroach

# Start from a pristine server state
reset-server

# This test checks if the sources in mz_catalog are also present in a postfixed way.
# If this test fails and you added new introspection source and if the new
# source depends on per replica introspection data, consider adding it also in
# a per replica postfixed fashion. Adding it to DEFAULT_LOG_VARIANTS should do
# this automatically. If the new source does not use per replica data,
# increment the counter.
query T rowsort
SELECT (SELECT COUNT(*) FROM mz_catalog.mz_sources WHERE name NOT LIKE '%_1' AND name NOT LIKE '%_2' AND name NOT LIKE '%_3') - (SELECT COUNT(*) FROM mz_catalog.mz_sources WHERE name LIKE '%_1');
----
4

# This test checks if the views in mz_catalog are also present in a postfixed
# way. If this test fails and you added new view that uses introspection
# sources: also add it in a per replica postfixed way, see DEFAULT_LOG_VIEWS.
# If your view does not involve introspection data, increment this counter.
query T rowsort
SELECT (SELECT COUNT(*) FROM mz_catalog.mz_views WHERE name NOT LIKE '%_1' AND name NOT LIKE '%_2' AND name NOT LIKE '%_3') - (SELECT COUNT(*) FROM mz_catalog.mz_views WHERE name LIKE '%_1');
----
35


# The default and system clusters also have log sources, thus we should have 3 set active at boot.
# Check the presence of one source and one view
query T rowsort
select COUNT(*) from mz_catalog.mz_sources WHERE name LIKE 'mz_active_peeks_%';
----
3

query T rowsort
select COUNT(*) from mz_catalog.mz_views WHERE name LIKE 'mz_compute_frontiers_%';
----
3

statement ok
CREATE CLUSTER c1 REPLICAS (r1 (SIZE '1'), r2 (SIZE '2'));

query T rowsort
select COUNT(*) from mz_catalog.mz_sources WHERE name LIKE 'mz_active_peeks_%';
----
5

query T rowsort
select COUNT(*) from mz_catalog.mz_views WHERE name LIKE 'mz_compute_frontiers_%';
----
5

statement ok
DROP CLUSTER REPLICA c1.r1;

query T rowsort
select COUNT(*) from mz_catalog.mz_sources WHERE name LIKE 'mz_active_peeks_%';
----
4

query T rowsort
select COUNT(*) from mz_catalog.mz_views WHERE name LIKE 'mz_compute_frontiers_%';
----
4

statement ok
DROP CLUSTER c1;

query T rowsort
select COUNT(*) from mz_catalog.mz_sources WHERE name LIKE 'mz_active_peeks_%';
----
3

query T rowsort
select COUNT(*) from mz_catalog.mz_views WHERE name LIKE 'mz_compute_frontiers_%';
----
3
