# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

mode cockroach

query T multiline
EXPLAIN RAW PLAN FOR SELECT * FROM (SELECT 1)
----
%0 =
| Constant ()
| Map 1

EOF

query T multiline
EXPLAIN RAW PLAN FOR SELECT (SELECT (SELECT 1))
----
%0 =
| Constant ()
| Map select(%1)
| |
| | %1 =
| | | Constant ()
| | | Map select(%2)
| | | |
| | | | %2 =
| | | | | Constant ()
| | | | | Map 1
| | | |
| |

EOF

query T multiline
EXPLAIN TYPED RAW PLAN FOR SELECT * FROM (SELECT 1)
----
%0 =
| Constant ()
| | types = ()
| | keys = ()
| Map 1
| | types = (integer)
| | keys = ()

EOF

query T multiline
EXPLAIN RAW PLAN FOR SELECT (SELECT column2), (SELECT (SELECT column1)) FROM (VALUES (1, 'b'))
----
%0 =
| CallTable wrap2(1, "b")
| Map select(%1), select(%2)
| |
| | %1 =
| | | Constant ()
| | | Map #^1
| |
| |
| | %2 =
| | | Constant ()
| | | Map select(%3)
| | | |
| | | | %3 =
| | | | | Constant ()
| | | | | Map #^^0
| | | |
| |
| Project (#2, #3)

EOF

query T multiline
EXPLAIN TYPED RAW PLAN FOR SELECT (SELECT column2), (SELECT (SELECT column1)) FROM (VALUES (1, 'b'))
----
%0 =
| CallTable wrap2(1, "b")
| | types = (integer, text)
| | keys = ()
| Map select(%1), select(%2)
| | types = (integer, text, text?, integer?)
| | keys = ()
| |
| | %1 =
| | | Constant ()
| | | | types = ()
| | | | keys = ()
| | | Map #^1
| | | | types = (text)
| | | | keys = ()
| |
| |
| | %2 =
| | | Constant ()
| | | | types = ()
| | | | keys = ()
| | | Map select(%3)
| | | | types = (integer?)
| | | | keys = ()
| | | |
| | | | %3 =
| | | | | Constant ()
| | | | | | types = ()
| | | | | | keys = ()
| | | | | Map #^^0
| | | | | | types = (integer)
| | | | | | keys = ()
| | | |
| |
| Project (#2, #3)
| | types = (text?, integer?)
| | keys = ()

EOF

query T multiline
EXPLAIN DECORRELATED PLAN FOR SELECT * FROM (SELECT 1)
----
%0 = Let l0 =
| Constant ()

%1 =
| Constant ()

%2 = Let l1 =
| Join %0 %1
| | implementation = Unimplemented

%3 =
| Get %2 (l1)
| Map 1
| Project (#0)

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN FOR SELECT * FROM (SELECT 1)
----
%0 =
| Constant (1)

EOF

query T multiline
EXPLAIN PLAN FOR SELECT * FROM (SELECT 1)
----
%0 =
| Constant (1)

EOF

statement ok
CREATE VIEW foo AS SELECT * FROM (SELECT 1)

query T multiline
EXPLAIN DECORRELATED PLAN FOR VIEW foo
----
%0 = Let l0 =
| Constant ()

%1 =
| Constant ()

%2 = Let l1 =
| Join %0 %1
| | implementation = Unimplemented

%3 =
| Get %2 (l1)
| Map 1
| Project (#0)

EOF

query T multiline
EXPLAIN PLAN FOR VIEW foo
----
%0 =
| Constant (1)

EOF

query T multiline
EXPLAIN TYPED DECORRELATED PLAN FOR VIEW foo
----
%0 = Let l0 =
| Constant ()
| | types = ()
| | keys = (())

%1 =
| Constant ()
| | types = ()
| | keys = (())

%2 = Let l1 =
| Join %0 %1
| | implementation = Unimplemented
| | types = ()
| | keys = (())

%3 =
| Get %2 (l1)
| | types = ()
| | keys = (())
| Map 1
| | types = (integer)
| | keys = (())
| Project (#0)
| | types = (integer)
| | keys = (())

EOF

# These currently all fail - https://github.com/MaterializeInc/materialize/issues/2498
#
# query T multiline
# EXPLAIN PLAN FOR SELECT $1
# ----
#
# EOF
#
# query T multiline
# EXPLAIN RAW PLAN FOR SELECT $1
# ----
#
# EOF
#
# query T multiline
# EXPLAIN TYPED RAW PLAN FOR SELECT $1
# ----
#
# EOF

# Testing that ORDER/LIMIT that would be stripped into RowSetFinishing still show up in the EXPLAIN

statement ok
CREATE TABLE ordered (x int, y text)

query T multiline
EXPLAIN RAW PLAN FOR SELECT * FROM ordered ORDER BY y asc, x desc LIMIT 5
----
%0 =
| Get materialize.public.ordered (u2)

Finish order_by=(#1 asc, #0 desc) limit=5 offset=0 project=(#0, #1)

EOF

query T multiline
EXPLAIN DECORRELATED PLAN FOR SELECT * FROM ordered ORDER BY y asc, x desc LIMIT 5
----
%0 = Let l0 =
| Constant ()

%1 =
| Get materialize.public.ordered (u2)

%2 =
| Join %0 %1
| | implementation = Unimplemented

Finish order_by=(#1 asc, #0 desc) limit=5 offset=0 project=(#0, #1)

EOF

query T multiline
EXPLAIN TYPED OPTIMIZED PLAN FOR SELECT * FROM ordered ORDER BY y asc, x desc LIMIT 5
----
Source materialize.public.ordered (u2):
| Project (#0, #1)

Query:
%0 =
| Get materialize.public.ordered (u2)
| | types = (integer?, text?)
| | keys = ()

Finish order_by=(#1 asc, #0 desc) limit=5 offset=0 project=(#0, #1)

EOF

statement ok
CREATE VIEW ordered_view AS SELECT * FROM ordered ORDER BY y asc, x desc LIMIT 5

query T multiline
EXPLAIN TYPED OPTIMIZED PLAN FOR VIEW ordered_view
----
Source materialize.public.ordered (u2):
| Project (#0, #1)

Query:
%0 =
| Get materialize.public.ordered (u2)
| | types = (integer?, text?)
| | keys = ()
| TopK group=() order=(#1 asc, #0 desc) limit=5 offset=0
| | types = (integer?, text?)
| | keys = ()

EOF

# Ensure mz_logical_timestamp doesn't panic in the context of EXPLAIN, which
# doesn't actually execute the query at any particular timestamp.
query T multiline
EXPLAIN SELECT mz_logical_timestamp()
----
%0 =
| Constant ()
| Map mz_logical_timestamp()

EOF

query T multiline
EXPLAIN PHYSICAL PLAN FOR SELECT * FROM ordered
----
Source materialize.public.ordered (u2):
{
  "predicates": [],
  "projection": [
    0,
    1
  ]
}

Query:
{
  "Get": {
    "id": {
      "Global": {
        "User": 2
      }
    },
    "keys": {
      "raw": true,
      "arranged": []
    },
    "mfp": {
      "expressions": [],
      "predicates": [],
      "projection": [
        0,
        1
      ],
      "input_arity": 2
    },
    "key_val": null
  }
}

EOF

query T multiline
EXPLAIN TYPED PHYSICAL PLAN FOR SELECT * FROM ordered
----
Source materialize.public.ordered (u2):
{
  "predicates": [],
  "projection": [
    0,
    1
  ]
}

Query:
{
  "Get": {
    "id": {
      "Global": {
        "User": 2
      }
    },
    "keys": {
      "raw": true,
      "arranged": []
    },
    "mfp": {
      "expressions": [],
      "predicates": [],
      "projection": [
        0,
        1
      ],
      "input_arity": 2
    },
    "key_val": null
  }
}

EOF

query T multiline
EXPLAIN PHYSICAL PLAN FOR VIEW ordered_view
----
Source materialize.public.ordered (u2):
{
  "predicates": [],
  "projection": [
    0,
    1
  ]
}

Query:
{
  "TopK": {
    "input": {
      "Get": {
        "id": {
          "Global": {
            "User": 2
          }
        },
        "keys": {
          "raw": true,
          "arranged": []
        },
        "mfp": {
          "expressions": [],
          "predicates": [],
          "projection": [
            0,
            1
          ],
          "input_arity": 2
        },
        "key_val": null
      }
    },
    "top_k_plan": {
      "Basic": {
        "group_key": [],
        "order_key": [
          {
            "column": 1,
            "desc": false
          },
          {
            "column": 0,
            "desc": true
          }
        ],
        "limit": 5,
        "offset": 0,
        "arity": 2
      }
    }
  }
}

EOF

query T multiline
EXPLAIN TYPED PHYSICAL PLAN FOR VIEW ordered_view
----
Source materialize.public.ordered (u2):
{
  "predicates": [],
  "projection": [
    0,
    1
  ]
}

Query:
{
  "TopK": {
    "input": {
      "Get": {
        "id": {
          "Global": {
            "User": 2
          }
        },
        "keys": {
          "raw": true,
          "arranged": []
        },
        "mfp": {
          "expressions": [],
          "predicates": [],
          "projection": [
            0,
            1
          ],
          "input_arity": 2
        },
        "key_val": null
      }
    },
    "top_k_plan": {
      "Basic": {
        "group_key": [],
        "order_key": [
          {
            "column": 1,
            "desc": false
          },
          {
            "column": 0,
            "desc": true
          }
        ],
        "limit": 5,
        "offset": 0,
        "arity": 2
      }
    }
  }
}

EOF

query T multiline
EXPLAIN PHYSICAL PLAN FOR SELECT * FROM ordered ORDER BY y asc, x desc LIMIT 5
----
Source materialize.public.ordered (u2):
{
  "predicates": [],
  "projection": [
    0,
    1
  ]
}

Query:
{
  "Get": {
    "id": {
      "Global": {
        "User": 2
      }
    },
    "keys": {
      "raw": true,
      "arranged": []
    },
    "mfp": {
      "expressions": [],
      "predicates": [],
      "projection": [
        0,
        1
      ],
      "input_arity": 2
    },
    "key_val": null
  }
}

Finish order_by=(#1 asc, #0 desc) limit=5 offset=0 project=(#0, #1)

EOF

query T multiline
EXPLAIN TYPED PHYSICAL PLAN FOR SELECT * FROM ordered ORDER BY y asc, x desc LIMIT 5
----
Source materialize.public.ordered (u2):
{
  "predicates": [],
  "projection": [
    0,
    1
  ]
}

Query:
{
  "Get": {
    "id": {
      "Global": {
        "User": 2
      }
    },
    "keys": {
      "raw": true,
      "arranged": []
    },
    "mfp": {
      "expressions": [],
      "predicates": [],
      "projection": [
        0,
        1
      ],
      "input_arity": 2
    },
    "key_val": null
  }
}

Finish order_by=(#1 asc, #0 desc) limit=5 offset=0 project=(#0, #1)

EOF
