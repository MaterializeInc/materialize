# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

statement ok
CREATE TABLE t (
  a int,
  b text,
  c date
)

statement ok
CREATE TABLE u (
  d int
)

statement ok
CREATE TABLE v (
  e double,
  f bool
)

#### NULL propagation ####

# Union that does not propagate a null
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(column_types) AS TEXT FOR (SELECT * FROM v WHERE f) UNION ALL (SELECT * FROM v WHERE e IS NOT NULL)
----
Explained Query
  Union // { column_types: ["double precision?", "boolean?"] }
    Filter #1 // { column_types: ["double precision?", "boolean"] }
      Get materialize.public.v // { column_types: ["double precision?", "boolean?"] }
    Filter (#0) IS NOT NULL // { column_types: ["double precision", "boolean?"] }
      Get materialize.public.v // { column_types: ["double precision?", "boolean?"] }

Source materialize.public.v
  Demand (#0, #1)

EOF

# Union that does propagate a null
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(column_types) AS TEXT FOR (SELECT * FROM v WHERE e = 1.25) UNION ALL (SELECT * FROM v WHERE e IS NOT NULL)
----
Explained Query
  Union // { column_types: ["double precision", "boolean?"] }
    Filter (#0 = 1.25) // { column_types: ["double precision", "boolean?"] }
      Get materialize.public.v // { column_types: ["double precision?", "boolean?"] }
    Filter (#0) IS NOT NULL // { column_types: ["double precision", "boolean?"] }
      Get materialize.public.v // { column_types: ["double precision?", "boolean?"] }

Source materialize.public.v
  Demand (#0, #1)

EOF

# Constant + reduce
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(column_types) AS TEXT FOR
(SELECT 1 as a, 'hello' as b, null::date as c)
EXCEPT
(SELECT sum(a) as a, max(b) as b, c FROM t GROUP BY c)
----
Explained Query
  Threshold // { column_types: ["bigint?", "text?", "date?"] }
    Union // { column_types: ["bigint?", "text?", "date?"] }
      Negate // { column_types: ["bigint?", "text?", "date?"] }
        Project (#1, #2, #0) // { column_types: ["bigint?", "text?", "date?"] }
          Reduce group_by=[#2] aggregates=[sum(#0), max(#1)] // { column_types: ["date?", "bigint?", "text?"] }
            Get materialize.public.t // { column_types: ["integer?", "text?", "date?"] }
      Constant // { column_types: ["bigint?", "text?", "date?"] }
        - (1, "hello", null)

Source materialize.public.t
  Demand (#0..=#2)

EOF

#### Correct column scalar type ####

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(column_types) AS TEXT FOR
SELECT t.* FROM u LEFT OUTER JOIN t on t.a = u.d
----
Explained Query
  Let // { column_types: ["integer?", "text?", "date?"] }
    Union // { column_types: ["integer?", "text?", "date?"] }
      Map (null, null, null) // { column_types: ["integer?", "text?", "date?"] }
        Union // { column_types: [] }
          Negate // { column_types: [] }
            Project () // { column_types: [] }
              Join on=(#0 = #1) type=differential // { column_types: ["integer?", "integer"] }
                Get materialize.public.u // { column_types: ["integer?"] }
                ArrangeBy keys=[[#0]] // { column_types: ["integer"] }
                  Distinct group_by=[#0] // { column_types: ["integer"] }
                    Project (#0) // { column_types: ["integer"] }
                      Get l0 // { column_types: ["integer", "text?", "date?"] }
          Project () // { column_types: [] }
            Get materialize.public.u // { column_types: ["integer?"] }
      Get l0 // { column_types: ["integer", "text?", "date?"] }
    Where
      l0 =
        Project (#0, #2, #3) // { column_types: ["integer", "text?", "date?"] }
          Join on=(#0 = #1) type=differential // { column_types: ["integer", "integer", "text?", "date?"] }
            ArrangeBy keys=[[#0]] // { column_types: ["integer"] }
              Filter (#0) IS NOT NULL // { column_types: ["integer"] }
                Get materialize.public.u // { column_types: ["integer?"] }
            Filter (#0) IS NOT NULL // { column_types: ["integer", "text?", "date?"] }
              Get materialize.public.t // { column_types: ["integer?", "text?", "date?"] }

Source materialize.public.t
  Demand (#0..=#2)
  Filter (#0) IS NOT NULL
Source materialize.public.u
  Demand (#0)

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(column_types) AS TEXT FOR
(SELECT null::boolean as f1, 10 as f2) EXCEPT (SELECT min(f), count(*) FROM v WHERE (select d::double FROM u) = v.e GROUP BY e LIMIT 1)
----
Explained Query
  Threshold // { column_types: ["boolean?", "bigint"] }
    Union // { column_types: ["boolean?", "bigint"] }
      Negate // { column_types: ["boolean?", "bigint"] }
        TopK limit=1 monotonic=false // { column_types: ["boolean?", "bigint"] }
          Project (#1, #2) // { column_types: ["boolean?", "bigint"] }
            Reduce group_by=[#0] aggregates=[min(#1), count(true)] // { column_types: ["double precision", "boolean?", "bigint"] }
              Project (#0, #1) // { column_types: ["double precision", "boolean?"] }
                Join on=(#0 = #2) type=differential // { column_types: ["double precision", "boolean?", "double precision"] }
                  ArrangeBy keys=[[#0]] // { column_types: ["double precision", "boolean?"] }
                    Filter (#0) IS NOT NULL // { column_types: ["double precision", "boolean?"] }
                      Get materialize.public.v // { column_types: ["double precision?", "boolean?"] }
                  Union // { column_types: ["double precision"] }
                    Project (#1) // { column_types: ["double precision"] }
                      Filter (#1) IS NOT NULL // { column_types: ["integer?", "double precision"] }
                        Map (integer_to_double(#0)) // { column_types: ["integer?", "double precision?"] }
                          Get materialize.public.u // { column_types: ["integer?"] }
                    Map (error("more than one record produced in subquery")) // { column_types: ["double precision"] }
                      Project () // { column_types: [] }
                        Filter error("more than one record produced in subquery") AND (#0 > 1) // { column_types: ["bigint"] }
                          Reduce aggregates=[count(true)] // { column_types: ["bigint"] }
                            Project () // { column_types: [] }
                              Get materialize.public.u // { column_types: ["integer?"] }
      Constant // { column_types: ["boolean?", "bigint"] }
        - (null, 10)

Source materialize.public.u
  Demand (#0)
Source materialize.public.v
  Demand (#0, #1)
  Filter (#0) IS NOT NULL

EOF
