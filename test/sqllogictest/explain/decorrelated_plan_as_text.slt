# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

statement ok
CREATE TABLE t (
  a int,
  b int
)

statement ok
CREATE VIEW ov AS SELECT * FROM t ORDER BY b asc, a desc LIMIT 5

statement ok
CREATE VIEW v AS
SELECT * FROM t WHERE a IS NOT NULL

statement ok
CREATE DEFAULT INDEX ON v

statement ok
CREATE MATERIALIZED VIEW mv AS
SELECT * FROM t WHERE a IS NOT NULL

mode cockroach

# Test constant error.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT 1 / 0
----
Project (#0)
  Map ((1 / 0))
    Constant
      - ()

EOF

# Test constant with two elements.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
(SELECT 1, 2) UNION ALL (SELECT 1, 2) UNION ALL (SELECT 3, 4)
----
Union
  Project (#2, #3)
    Map (#0, #1)
      Union
        Project (#2, #3)
          Map (#0, #1)
            Project (#0, #1)
              Map (1, 2)
                Constant
                  - ()
        Project (#2, #3)
          Map (#0, #1)
            Project (#0, #1)
              Map (1, 2)
                Constant
                  - ()
  Project (#2, #3)
    Map (#0, #1)
      Project (#0, #1)
        Map (3, 4)
          Constant
            - ()

EOF

# Test basic linear chains.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT 1, a + b as c FROM mv WHERE a > 0 and b < 0 and a + b > 0
----
Project (#2, #3)
  Map (1, (#0 + #1))
    Filter (((#0 > 0) AND (#1 < 0)) AND ((#0 + #1) > 0))
      CrossJoin
        Constant
          - ()
        Get materialize.public.mv

EOF

# Test table functions in the select clause (FlatMap).
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT generate_series(a, b) from t
----
Project (#2)
  Filter true
    FlatMap generate_series(#0, #1, 1)
      CrossJoin
        Constant
          - ()
        Get materialize.public.t

EOF

# Test Threshold, Union, Distinct, Negate.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT a FROM t EXCEPT SELECT b FROM mv
----
Threshold
  Union
    Distinct group_by=[#0]
      Project (#1)
        Map (#0)
          Project (#0)
            CrossJoin
              Constant
                - ()
              Get materialize.public.t
    Negate
      Distinct group_by=[#0]
        Project (#1)
          Map (#0)
            Project (#1)
              CrossJoin
                Constant
                  - ()
                Get materialize.public.mv

EOF

# Test Threshold, Union, Distinct, Negate.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT a FROM t EXCEPT ALL SELECT b FROM mv
----
Threshold
  Union
    Project (#1)
      Map (#0)
        Project (#0)
          CrossJoin
            Constant
              - ()
            Get materialize.public.t
    Negate
      Project (#1)
        Map (#0)
          Project (#1)
            CrossJoin
              Constant
                - ()
              Get materialize.public.mv

EOF

# Test TopK.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
VIEW ov
----
Project (#0, #1)
  TopK order_by=[#1 asc nulls_last, #0 desc nulls_first] limit=5 monotonic=false
    CrossJoin
      Constant
        - ()
      Get materialize.public.t

EOF

# Test Finish.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT * FROM t ORDER BY b asc, a desc LIMIT 5
----
Finish order_by=[#1 asc nulls_last, #0 desc nulls_first] limit=5 output=[#0, #1]
  CrossJoin
    Constant
      - ()
    Get materialize.public.t

EOF

# Test Reduce (global).
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT abs(min(a) - max(a)) FROM t
----
Return
  Project (#2)
    Map (abs((#0 - #1)))
      Union
        Get l0
        CrossJoin
          Project ()
            CrossJoin
              Union
                Negate
                  Distinct
                    Get l0
                Distinct
                  Constant
                    - ()
              Constant
                - ()
          Constant
            - (null, null)
With
  cte l0 =
    Reduce aggregates=[min(#0), max(#0)]
      CrossJoin
        Constant
          - ()
        Get materialize.public.t

EOF

# Test Reduce (local).
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT abs(min(a) - max(a)) FROM t GROUP BY b
----
Project (#3)
  Map (abs((#1 - #2)))
    Reduce group_by=[#2] aggregates=[min(#0), max(#0)]
      Project (#0..=#2)
        Map (#1)
          CrossJoin
            Constant
              - ()
            Get materialize.public.t

EOF

# Test EXISTS subqueries.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT * FROM t WHERE EXISTS(SELECT * FROM mv WHERE t.a < mv.a) AND EXISTS(SELECT * FROM mv WHERE t.b > mv.b)
----
Return
  Project (#0, #1)
    Filter #2
      Project (#0, #1, #3)
        Join on=(#1 = #2)
          Get l3
          Union
            Get l5
            CrossJoin
              Project (#0)
                Join on=(#0 = #1)
                  Union
                    Negate
                      Distinct group_by=[#0]
                        Get l5
                    Distinct group_by=[#0]
                      Get l4
                  Get l4
              Constant
                - (false)
With
  cte l5 =
    CrossJoin
      Distinct group_by=[#0]
        Filter (#0 > #2)
          CrossJoin
            Get l4
            Get materialize.public.mv
      Constant
        - (true)
  cte l4 =
    Distinct group_by=[#1]
      Get l3
  cte l3 =
    Project (#0, #1)
      Filter #2
        Project (#0, #1, #3)
          Join on=(#0 = #2)
            Get l0
            Union
              Get l2
              CrossJoin
                Project (#0)
                  Join on=(#0 = #1)
                    Union
                      Negate
                        Distinct group_by=[#0]
                          Get l2
                      Distinct group_by=[#0]
                        Get l1
                    Get l1
                Constant
                  - (false)
  cte l2 =
    CrossJoin
      Distinct group_by=[#0]
        Filter (#0 < #1)
          CrossJoin
            Get l1
            Get materialize.public.mv
      Constant
        - (true)
  cte l1 =
    Distinct group_by=[#0]
      Get l0
  cte l0 =
    Filter (true AND true)
      CrossJoin
        Constant
          - ()
        Get materialize.public.t

EOF

# Test SELECT subqueries.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT (SELECT v.a FROM v WHERE v.b = t.b LIMIT 1), (SELECT mv.a FROM mv WHERE mv.b = t.b LIMIT 1) FROM t
----
Return
  Project (#8, #9)
    Map (#4, #7)
      Join on=(eq(#0, #2, #5) AND eq(#1, #3, #6))
        Get l0
        Project (#0, #1, #3)
          Join on=(#1 = #2)
            Get l1
            Union
              Get l4
              CrossJoin
                Project (#0)
                  Join on=(#0 = #1)
                    Union
                      Negate
                        Distinct group_by=[#0]
                          Get l4
                      Distinct group_by=[#0]
                        Get l2
                    Get l2
                Constant
                  - (null)
        Project (#0, #1, #3)
          Join on=(#1 = #2)
            Get l5
            Union
              Get l8
              CrossJoin
                Project (#0)
                  Join on=(#0 = #1)
                    Union
                      Negate
                        Distinct group_by=[#0]
                          Get l8
                      Distinct group_by=[#0]
                        Get l6
                    Get l6
                Constant
                  - (null)
With
  cte l8 =
    Union
      Get l7
      Map (error("more than one record produced in subquery"))
        Project (#0)
          Filter (#1 > 1)
            Reduce group_by=[#0] aggregates=[count(*)]
              Get l7
  cte l7 =
    Project (#0, #1)
      TopK group_by=[#0] limit=1 monotonic=false
        Filter (#2 = #0)
          CrossJoin
            Get l6
            Get materialize.public.mv
  cte l6 =
    Distinct group_by=[#1]
      Get l5
  cte l5 =
    Distinct group_by=[#0, #1]
      Get l0
  cte l4 =
    Union
      Get l3
      Map (error("more than one record produced in subquery"))
        Project (#0)
          Filter (#1 > 1)
            Reduce group_by=[#0] aggregates=[count(*)]
              Get l3
  cte l3 =
    Project (#0, #1)
      TopK group_by=[#0] limit=1 monotonic=false
        Filter (#2 = #0)
          CrossJoin
            Get l2
            Get materialize.public.v
  cte l2 =
    Distinct group_by=[#1]
      Get l1
  cte l1 =
    Distinct group_by=[#0, #1]
      Get l0
  cte l0 =
    CrossJoin
      Constant
        - ()
      Get materialize.public.t

EOF

# Test CrossJoin derived from a comma join without a predicate.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT t1.a, t2.a FROM t as t1, t as t2
----
Project (#0, #2)
  Filter true
    Project (#0..=#3)
      CrossJoin
        CrossJoin
          Constant
            - ()
          Get materialize.public.t
        CrossJoin
          Constant
            - ()
          Get materialize.public.t

EOF

# Test CrossJoin derived from an INNER JOIN with a trivial ON clause.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT t1.a, t2.a FROM t as t1 INNER JOIN t as t2 ON true
----
Project (#0, #2)
  Filter true
    Project (#0..=#3)
      CrossJoin
        CrossJoin
          Constant
            - ()
          Get materialize.public.t
        CrossJoin
          Constant
            - ()
          Get materialize.public.t

EOF

# Test InnerJoin (comma syntax).
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT t1.a, t2.a
FROM
  t as t1,
  t as t2,
  t as t3
WHERE t1.b = t2.b AND t2.b = t3.b
----
Project (#0, #2)
  Filter ((#1 = #3) AND (#3 = #5))
    Filter true
      Project (#0..=#5)
        CrossJoin
          Filter true
            Project (#0..=#3)
              CrossJoin
                CrossJoin
                  Constant
                    - ()
                  Get materialize.public.t
                CrossJoin
                  Constant
                    - ()
                  Get materialize.public.t
          CrossJoin
            Constant
              - ()
            Get materialize.public.t

EOF

# Test InnerJoin (ON syntax).
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT t1.a, t2.a
FROM t as t1
INNER JOIN t as t2 ON t1.b = t2.b
INNER JOIN t as t3 ON t2.b = t3.b
----
Project (#0, #2)
  Filter (#3 = #5)
    Project (#0..=#5)
      CrossJoin
        Filter (#1 = #3)
          Project (#0..=#3)
            CrossJoin
              CrossJoin
                Constant
                  - ()
                Get materialize.public.t
              CrossJoin
                Constant
                  - ()
                Get materialize.public.t
        CrossJoin
          Constant
            - ()
          Get materialize.public.t

EOF

# Test InnerJoin (ON syntax).
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT t1.a, t2.a
FROM t as t1
LEFT JOIN t as t2 ON t1.b = t2.b
RIGHT JOIN t as t3 ON t2.b = t3.b
----
Return
  Project (#0, #2)
    Union
      Project (#2..=#5, #0, #1)
        Map (null, null, null, null)
          Union
            Negate
              Project (#0, #1)
                Join on=(#1 = #2)
                  Get l2
                  Distinct group_by=[#0]
                    Project (#3)
                      Get l3
            Get l2
      Get l3
With
  cte l3 =
    Filter (#3 = #5)
      Project (#0..=#5)
        CrossJoin
          Union
            Map (null, null)
              Union
                Negate
                  Project (#0, #1)
                    Join on=(#1 = #2)
                      Get l0
                      Distinct group_by=[#0]
                        Project (#1)
                          Get l1
                Get l0
            Get l1
          Get l2
  cte l2 =
    CrossJoin
      Constant
        - ()
      Get materialize.public.t
  cte l1 =
    Filter (#1 = #3)
      Project (#0..=#3)
        CrossJoin
          Get l0
          CrossJoin
            Constant
              - ()
            Get materialize.public.t
  cte l0 =
    CrossJoin
      Constant
        - ()
      Get materialize.public.t

EOF

# Test a single CTE.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
WITH x AS (SELECT t.a * t.b as v from t) SELECT a.v + b.v FROM x as a, x as b
----
Return
  Project (#2)
    Project (#0..=#2)
      Map ((#0 + #1))
        Filter true
          Project (#0, #1)
            CrossJoin
              Get l0
              Get l0
With
  cte l0 =
    Project (#2)
      Map ((#0 * #1))
        CrossJoin
          Constant
            - ()
          Get materialize.public.t

EOF

# Test multiple CTEs: a case where we cannot pull the let statement up through
# the join because the local l0 is correlated against the lhs of the enclosing join.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT
  *
FROM
  (
    SELECT * FROM t
  ) as r1
  CROSS JOIN LATERAL (
    WITH r2 as (
      SELECT MAX(r1.a * t.a) AS m FROM t
    )
    SELECT * FROM r2 WHERE r2.m != r1.a
  ) as r3
  CROSS JOIN LATERAL (
    WITH r4 as (
      SELECT MAX(r1.a * t.a) AS m FROM t
    )
    SELECT * FROM r4 WHERE r4.m != r1.a OR (r4.m IS NOT NULL AND r1.a IS NULL)
  ) as r5;
----
Return
  Filter true
    Project (#0..=#2, #4)
      Join on=(#0 = #3)
        Get l3
        Filter ((#1 != #0) OR ((#1) IS NOT NULL AND (#0) IS NULL))
          Union
            Get l5
            CrossJoin
              Project (#0)
                Join on=(#0 = #1)
                  Union
                    Negate
                      Distinct group_by=[#0]
                        Get l5
                    Distinct group_by=[#0]
                      Get l4
                  Get l4
              Constant
                - (null)
With
  cte l5 =
    Reduce group_by=[#0] aggregates=[max((#0 * #1))]
      CrossJoin
        Get l4
        Get materialize.public.t
  cte l4 =
    Distinct group_by=[#0]
      Get l3
  cte l3 =
    Filter true
      Project (#0, #1, #3)
        Join on=(#0 = #2)
          Get l0
          Filter (#1 != #0)
            Union
              Get l2
              CrossJoin
                Project (#0)
                  Join on=(#0 = #1)
                    Union
                      Negate
                        Distinct group_by=[#0]
                          Get l2
                      Distinct group_by=[#0]
                        Get l1
                    Get l1
                Constant
                  - (null)
  cte l2 =
    Reduce group_by=[#0] aggregates=[max((#0 * #1))]
      CrossJoin
        Get l1
        Get materialize.public.t
  cte l1 =
    Distinct group_by=[#0]
      Get l0
  cte l0 =
    CrossJoin
      Constant
        - ()
      Get materialize.public.t

EOF

# Test multiple CTEs: a case where we cannot pull the let statement up
# through the join because the local l0 is correlated against the lhs of
# the enclosing join.
query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR
SELECT
  *
FROM
  (
    SELECT * FROM t
  ) as r1
  CROSS JOIN LATERAL (
    WITH r4 as (
      SELECT MAX(r1.a * t.a) AS m FROM t
    )
    SELECT *
    FROM
      r4
      CROSS JOIN LATERAL (
        WITH r2 as (
          SELECT MAX(r1.a * t.a) AS m FROM t
        )
        SELECT * FROM r2 WHERE r1.a = r4.m AND r2.m > 5
      ) as r3
    WHERE a != r1.a
  ) as r5;
----
Return
  Filter true
    Project (#0, #1, #3, #4)
      Join on=(#0 = #2)
        Get l0
        Filter true AND (#0 != #0)
          Project (#0, #1, #4)
            Join on=(#1 = #2 AND #0 = #3)
              Get l3
              Filter ((#1 = #0) AND (#2 > 5))
                Union
                  Get l5
                  CrossJoin
                    Project (#0, #1)
                      Join on=(#0 = #2 AND #1 = #3)
                        Union
                          Negate
                            Distinct group_by=[#0, #1]
                              Get l5
                          Distinct group_by=[#0, #1]
                            Get l4
                        Get l4
                    Constant
                      - (null)
With
  cte l5 =
    Reduce group_by=[#0, #1] aggregates=[max((#1 * #2))]
      CrossJoin
        Get l4
        Get materialize.public.t
  cte l4 =
    Distinct group_by=[#1, #0]
      Get l3
  cte l3 =
    Union
      Get l2
      CrossJoin
        Project (#0)
          Join on=(#0 = #1)
            Union
              Negate
                Distinct group_by=[#0]
                  Get l2
              Distinct group_by=[#0]
                Get l1
            Get l1
        Constant
          - (null)
  cte l2 =
    Reduce group_by=[#0] aggregates=[max((#0 * #1))]
      CrossJoin
        Get l1
        Get materialize.public.t
  cte l1 =
    Distinct group_by=[#0]
      Get l0
  cte l0 =
    CrossJoin
      Constant
        - ()
      Get materialize.public.t

EOF

query T multiline
EXPLAIN DECORRELATED PLAN AS TEXT FOR SELECT COUNT(*);
----
Return
  Union
    Get l0
    CrossJoin
      Project ()
        CrossJoin
          Union
            Negate
              Distinct
                Get l0
            Distinct
              Constant
                - ()
          Constant
            - ()
      Constant
        - (0)
With
  cte l0 =
    Reduce aggregates=[count(*)]
      Constant
        - ()

EOF
