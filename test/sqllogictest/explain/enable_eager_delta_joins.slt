# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Test the ability to catch plan changes using the `enable eager delta joins`
# config flag in EXPLAIN. This test can be deleted when the feature flag is
# removed.

mode cockroach

simple conn=mz_system,user=mz_system
ALTER SYSTEM SET enable_eager_delta_joins TO false;
----
COMPLETE 0

statement ok
CREATE TABLE t1 (
  x int,
  y int
);

statement ok
CREATE TABLE t2 (
  x int,
  y int
);

statement ok
CREATE TABLE t3 (
  x int,
  y int
);

# Test materialized views
# -----------------------

# A query that will produce different plans depending on the value of the
# `enable eager delta joins` feature flag.
statement ok
CREATE MATERIALIZED VIEW mv AS
SELECT
  t1.y as c1,
  t2.y as c2,
  t3.y as c3
FROM
  t1, t2, t3
where
  t1.x = t2.x AND
  t2.y = t3.y;

# EXPLAIN and EXPLAIN REPLAN should coincide.
query T multiline
EXPLAIN WITH(join implementations)
MATERIALIZED VIEW mv;
----
materialize.public.mv:
  Project (#1, #3, #3)
    Join on=(#0 = #2 AND #3 = #4) type=differential
      implementation
        %0:t1[#0]K » %1:t2[#0]K » %2:t3[#0]K
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL
          ReadStorage materialize.public.t1
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL AND (#1) IS NOT NULL
          ReadStorage materialize.public.t2
      ArrangeBy keys=[[#0]]
        Project (#1)
          Filter (#1) IS NOT NULL
            ReadStorage materialize.public.t3

Source materialize.public.t1
  filter=((#0) IS NOT NULL)
Source materialize.public.t2
  filter=((#0) IS NOT NULL AND (#1) IS NOT NULL)
Source materialize.public.t3
  filter=((#1) IS NOT NULL)

EOF

# EXPLAIN and EXPLAIN REPLAN should coincide.
query T multiline
EXPLAIN WITH(join implementations)
REPLAN MATERIALIZED VIEW mv;
----
materialize.public.mv:
  Project (#1, #3, #3)
    Join on=(#0 = #2 AND #3 = #4) type=differential
      implementation
        %0:t1[#0]K » %1:t2[#0]K » %2:t3[#0]K
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL
          ReadStorage materialize.public.t1
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL AND (#1) IS NOT NULL
          ReadStorage materialize.public.t2
      ArrangeBy keys=[[#0]]
        Project (#1)
          Filter (#1) IS NOT NULL
            ReadStorage materialize.public.t3

Source materialize.public.t1
  filter=((#0) IS NOT NULL)
Source materialize.public.t2
  filter=((#0) IS NOT NULL AND (#1) IS NOT NULL)
Source materialize.public.t3
  filter=((#1) IS NOT NULL)

EOF

# EXPLAIN REPLAN WITH(enable eager delta joins) should differ.
query T multiline
EXPLAIN WITH(join implementations, enable eager delta joins)
REPLAN MATERIALIZED VIEW mv;
----
materialize.public.mv:
  Project (#1, #3, #3)
    Join on=(#0 = #2 AND #3 = #4) type=delta
      implementation
        %0:t1 » %1:t2[#0]K » %2:t3[#0]K
        %1:t2 » %0:t1[#0]K » %2:t3[#0]K
        %2:t3 » %1:t2[#1]K » %0:t1[#0]K
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL
          ReadStorage materialize.public.t1
      ArrangeBy keys=[[#0], [#1]]
        Filter (#0) IS NOT NULL AND (#1) IS NOT NULL
          ReadStorage materialize.public.t2
      ArrangeBy keys=[[#0]]
        Project (#1)
          Filter (#1) IS NOT NULL
            ReadStorage materialize.public.t3

Source materialize.public.t1
  filter=((#0) IS NOT NULL)
Source materialize.public.t2
  filter=((#0) IS NOT NULL AND (#1) IS NOT NULL)
Source materialize.public.t3
  filter=((#1) IS NOT NULL)

EOF

# Test indexed views
# ------------------

# Same as above, but as an indexed view.
statement ok
CREATE VIEW v AS
SELECT
  t1.y as c1,
  t2.y as c2,
  t3.y as c3
FROM
  t1, t2, t3
where
  t1.x = t2.x AND
  t2.y = t3.y;

statement ok
CREATE INDEX v_idx ON v(c1);

# EXPLAIN and EXPLAIN REPLAN should coincide.
query T multiline
EXPLAIN WITH(join implementations)
INDEX v_idx;
----
materialize.public.v_idx:
  ArrangeBy keys=[[#0]]
    ReadGlobalFromSameDataflow materialize.public.v

materialize.public.v:
  Project (#1, #3, #3)
    Join on=(#0 = #2 AND #3 = #4) type=differential
      implementation
        %0:t1[#0]K » %1:t2[#0]K » %2:t3[#0]K
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL
          ReadStorage materialize.public.t1
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL AND (#1) IS NOT NULL
          ReadStorage materialize.public.t2
      ArrangeBy keys=[[#0]]
        Project (#1)
          Filter (#1) IS NOT NULL
            ReadStorage materialize.public.t3

Source materialize.public.t1
  filter=((#0) IS NOT NULL)
Source materialize.public.t2
  filter=((#0) IS NOT NULL AND (#1) IS NOT NULL)
Source materialize.public.t3
  filter=((#1) IS NOT NULL)

EOF

# EXPLAIN and EXPLAIN REPLAN should coincide.
query T multiline
EXPLAIN WITH(join implementations)
REPLAN INDEX v_idx;
----
materialize.public.v_idx:
  ArrangeBy keys=[[#0]]
    ReadGlobalFromSameDataflow materialize.public.v

materialize.public.v:
  Project (#1, #3, #3)
    Join on=(#0 = #2 AND #3 = #4) type=differential
      implementation
        %0:t1[#0]K » %1:t2[#0]K » %2:t3[#0]K
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL
          ReadStorage materialize.public.t1
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL AND (#1) IS NOT NULL
          ReadStorage materialize.public.t2
      ArrangeBy keys=[[#0]]
        Project (#1)
          Filter (#1) IS NOT NULL
            ReadStorage materialize.public.t3

Source materialize.public.t1
  filter=((#0) IS NOT NULL)
Source materialize.public.t2
  filter=((#0) IS NOT NULL AND (#1) IS NOT NULL)
Source materialize.public.t3
  filter=((#1) IS NOT NULL)

EOF

# EXPLAIN REPLAN WITH(enable eager delta joins) should differ.
query T multiline
EXPLAIN WITH(join implementations, enable eager delta joins)
REPLAN INDEX v_idx;
----
materialize.public.v_idx:
  ArrangeBy keys=[[#0]]
    ReadGlobalFromSameDataflow materialize.public.v

materialize.public.v:
  Project (#1, #3, #3)
    Join on=(#0 = #2 AND #3 = #4) type=delta
      implementation
        %0:t1 » %1:t2[#0]K » %2:t3[#0]K
        %1:t2 » %0:t1[#0]K » %2:t3[#0]K
        %2:t3 » %1:t2[#1]K » %0:t1[#0]K
      ArrangeBy keys=[[#0]]
        Filter (#0) IS NOT NULL
          ReadStorage materialize.public.t1
      ArrangeBy keys=[[#0], [#1]]
        Filter (#0) IS NOT NULL AND (#1) IS NOT NULL
          ReadStorage materialize.public.t2
      ArrangeBy keys=[[#0]]
        Project (#1)
          Filter (#1) IS NOT NULL
            ReadStorage materialize.public.t3

Source materialize.public.t1
  filter=((#0) IS NOT NULL)
Source materialize.public.t2
  filter=((#0) IS NOT NULL AND (#1) IS NOT NULL)
Source materialize.public.t3
  filter=((#1) IS NOT NULL)

EOF
