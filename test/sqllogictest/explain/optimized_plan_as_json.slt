# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Test requires stable IDs
reset-server

statement ok
CREATE TABLE t (
  a int,
  b int
)

statement ok
CREATE TABLE u (
  c int,
  d int
)

statement ok
CREATE TABLE v (
  e int,
  f int
)

statement ok
CREATE INDEX t_a_idx ON T(a);

statement ok
CREATE VIEW ov AS SELECT * FROM t ORDER BY b asc, a desc LIMIT 5

statement ok
CREATE VIEW iv AS
SELECT * FROM t WHERE a IS NOT NULL

statement ok
CREATE DEFAULT INDEX ON iv

statement ok
CREATE MATERIALIZED VIEW mv AS
SELECT * FROM t WHERE a IS NOT NULL

mode cockroach

# Test constant error.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT 1 / 0
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Constant": {
          "rows": {
            "Err": "DivisionByZero"
          },
          "typ": {
            "column_types": [
              {
                "scalar_type": "Int32",
                "nullable": false
              }
            ],
            "keys": []
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test constant with two elements.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
(SELECT 1, 2) UNION ALL (SELECT 1, 2) UNION ALL (SELECT 3, 4)
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Constant": {
          "rows": {
            "Ok": [
              [
                {
                  "data": [
                    4,
                    1,
                    0,
                    0,
                    0,
                    4,
                    2,
                    0,
                    0,
                    0
                  ]
                },
                2
              ],
              [
                {
                  "data": [
                    4,
                    3,
                    0,
                    0,
                    0,
                    4,
                    4,
                    0,
                    0,
                    0
                  ]
                },
                1
              ]
            ]
          },
          "typ": {
            "column_types": [
              {
                "scalar_type": "Int32",
                "nullable": false
              },
              {
                "scalar_type": "Int32",
                "nullable": false
              }
            ],
            "keys": []
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test basic linear chains (fast path).
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT 1, a + b as c FROM t WHERE a > 0 and b < 0 and a + b > 0
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Project": {
          "outputs": [
            3,
            2
          ],
          "input": {
            "Filter": {
              "predicates": [
                {
                  "CallBinary": {
                    "func": "Lt",
                    "expr1": {
                      "Column": 1
                    },
                    "expr2": {
                      "Literal": [
                        {
                          "Ok": {
                            "data": [
                              4,
                              0,
                              0,
                              0,
                              0
                            ]
                          }
                        },
                        {
                          "scalar_type": "Int32",
                          "nullable": false
                        }
                      ]
                    }
                  }
                },
                {
                  "CallBinary": {
                    "func": "Gt",
                    "expr1": {
                      "Column": 0
                    },
                    "expr2": {
                      "Literal": [
                        {
                          "Ok": {
                            "data": [
                              4,
                              0,
                              0,
                              0,
                              0
                            ]
                          }
                        },
                        {
                          "scalar_type": "Int32",
                          "nullable": false
                        }
                      ]
                    }
                  }
                },
                {
                  "CallBinary": {
                    "func": "Gt",
                    "expr1": {
                      "Column": 2
                    },
                    "expr2": {
                      "Literal": [
                        {
                          "Ok": {
                            "data": [
                              4,
                              0,
                              0,
                              0,
                              0
                            ]
                          }
                        },
                        {
                          "scalar_type": "Int32",
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "input": {
                "Map": {
                  "scalars": [
                    {
                      "CallBinary": {
                        "func": "AddInt32",
                        "expr1": {
                          "Column": 0
                        },
                        "expr2": {
                          "Column": 1
                        }
                      }
                    },
                    {
                      "Literal": [
                        {
                          "Ok": {
                            "data": [
                              4,
                              1,
                              0,
                              0,
                              0
                            ]
                          }
                        },
                        {
                          "scalar_type": "Int32",
                          "nullable": false
                        }
                      ]
                    }
                  ],
                  "input": {
                    "Get": {
                      "id": {
                        "Global": {
                          "User": 1
                        }
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          },
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test basic linear chains (slow path).
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT 1, a + b as c FROM mv WHERE a > 0 and b < 0 and a + b > 0
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Project": {
          "outputs": [
            3,
            2
          ],
          "input": {
            "Filter": {
              "predicates": [
                {
                  "CallBinary": {
                    "func": "Lt",
                    "expr1": {
                      "Column": 1
                    },
                    "expr2": {
                      "Literal": [
                        {
                          "Ok": {
                            "data": [
                              4,
                              0,
                              0,
                              0,
                              0
                            ]
                          }
                        },
                        {
                          "scalar_type": "Int32",
                          "nullable": false
                        }
                      ]
                    }
                  }
                },
                {
                  "CallBinary": {
                    "func": "Gt",
                    "expr1": {
                      "Column": 0
                    },
                    "expr2": {
                      "Literal": [
                        {
                          "Ok": {
                            "data": [
                              4,
                              0,
                              0,
                              0,
                              0
                            ]
                          }
                        },
                        {
                          "scalar_type": "Int32",
                          "nullable": false
                        }
                      ]
                    }
                  }
                },
                {
                  "CallBinary": {
                    "func": "Gt",
                    "expr1": {
                      "Column": 2
                    },
                    "expr2": {
                      "Literal": [
                        {
                          "Ok": {
                            "data": [
                              4,
                              0,
                              0,
                              0,
                              0
                            ]
                          }
                        },
                        {
                          "scalar_type": "Int32",
                          "nullable": false
                        }
                      ]
                    }
                  }
                }
              ],
              "input": {
                "Map": {
                  "scalars": [
                    {
                      "CallBinary": {
                        "func": "AddInt32",
                        "expr1": {
                          "Column": 0
                        },
                        "expr2": {
                          "Column": 1
                        }
                      }
                    },
                    {
                      "Literal": [
                        {
                          "Ok": {
                            "data": [
                              4,
                              1,
                              0,
                              0,
                              0
                            ]
                          }
                        },
                        {
                          "scalar_type": "Int32",
                          "nullable": false
                        }
                      ]
                    }
                  ],
                  "input": {
                    "Get": {
                      "id": {
                        "Global": {
                          "User": 8
                        }
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": false
                          },
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": [
    {
      "id": "materialize.public.mv",
      "op": {
        "expressions": [],
        "predicates": [
          [
            1,
            {
              "CallBinary": {
                "func": "Gt",
                "expr1": {
                  "Column": 0
                },
                "expr2": {
                  "Literal": [
                    {
                      "Ok": {
                        "data": [
                          4,
                          0,
                          0,
                          0,
                          0
                        ]
                      }
                    },
                    {
                      "scalar_type": "Int32",
                      "nullable": false
                    }
                  ]
                }
              }
            }
          ],
          [
            2,
            {
              "CallBinary": {
                "func": "Lt",
                "expr1": {
                  "Column": 1
                },
                "expr2": {
                  "Literal": [
                    {
                      "Ok": {
                        "data": [
                          4,
                          0,
                          0,
                          0,
                          0
                        ]
                      }
                    },
                    {
                      "scalar_type": "Int32",
                      "nullable": false
                    }
                  ]
                }
              }
            }
          ],
          [
            2,
            {
              "CallBinary": {
                "func": "Gt",
                "expr1": {
                  "CallBinary": {
                    "func": "AddInt32",
                    "expr1": {
                      "Column": 0
                    },
                    "expr2": {
                      "Column": 1
                    }
                  }
                },
                "expr2": {
                  "Literal": [
                    {
                      "Ok": {
                        "data": [
                          4,
                          0,
                          0,
                          0,
                          0
                        ]
                      }
                    },
                    {
                      "scalar_type": "Int32",
                      "nullable": false
                    }
                  ]
                }
              }
            }
          ]
        ],
        "projection": [
          0,
          1
        ],
        "input_arity": 2
      }
    }
  ]
}
EOF

# Test table functions in the select clause (FlatMap).
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT generate_series(a, b) from t
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Project": {
          "outputs": [
            2
          ],
          "input": {
            "FlatMap": {
              "func": "GenerateSeriesInt32",
              "exprs": [
                {
                  "Column": 0
                },
                {
                  "Column": 1
                },
                {
                  "Literal": [
                    {
                      "Ok": {
                        "data": [
                          4,
                          1,
                          0,
                          0,
                          0
                        ]
                      }
                    },
                    {
                      "scalar_type": "Int32",
                      "nullable": false
                    }
                  ]
                }
              ],
              "input": {
                "Get": {
                  "id": {
                    "Global": {
                      "User": 1
                    }
                  },
                  "typ": {
                    "column_types": [
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      },
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      }
                    ],
                    "keys": []
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test Threshold, Union, Distinct, Negate.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT a FROM t EXCEPT SELECT b FROM mv
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Threshold": {
          "input": {
            "Union": {
              "base": {
                "Reduce": {
                  "group_key": [
                    {
                      "Column": 0
                    }
                  ],
                  "aggregates": [],
                  "monotonic": false,
                  "expected_group_size": null,
                  "input": {
                    "Project": {
                      "outputs": [
                        0
                      ],
                      "input": {
                        "Get": {
                          "id": {
                            "Global": {
                              "User": 1
                            }
                          },
                          "typ": {
                            "column_types": [
                              {
                                "scalar_type": "Int32",
                                "nullable": true
                              },
                              {
                                "scalar_type": "Int32",
                                "nullable": true
                              }
                            ],
                            "keys": []
                          }
                        }
                      }
                    }
                  }
                }
              },
              "inputs": [
                {
                  "Negate": {
                    "input": {
                      "Reduce": {
                        "group_key": [
                          {
                            "Column": 0
                          }
                        ],
                        "aggregates": [],
                        "monotonic": false,
                        "expected_group_size": null,
                        "input": {
                          "Project": {
                            "outputs": [
                              1
                            ],
                            "input": {
                              "Get": {
                                "id": {
                                  "Global": {
                                    "User": 8
                                  }
                                },
                                "typ": {
                                  "column_types": [
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": false
                                    },
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": true
                                    }
                                  ],
                                  "keys": []
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test Threshold, Union, Distinct, Negate.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT a FROM t EXCEPT ALL SELECT b FROM mv
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Threshold": {
          "input": {
            "Union": {
              "base": {
                "Project": {
                  "outputs": [
                    0
                  ],
                  "input": {
                    "Get": {
                      "id": {
                        "Global": {
                          "User": 1
                        }
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          },
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              },
              "inputs": [
                {
                  "Negate": {
                    "input": {
                      "Project": {
                        "outputs": [
                          1
                        ],
                        "input": {
                          "Get": {
                            "id": {
                              "Global": {
                                "User": 8
                              }
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": false
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ],
                              "keys": []
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test TopK.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
VIEW ov
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "TopK": {
          "group_key": [],
          "order_key": [
            {
              "column": 1,
              "desc": false,
              "nulls_last": true
            },
            {
              "column": 0,
              "desc": true,
              "nulls_last": false
            }
          ],
          "limit": 5,
          "offset": 0,
          "monotonic": false,
          "input": {
            "Get": {
              "id": {
                "Global": {
                  "User": 1
                }
              },
              "typ": {
                "column_types": [
                  {
                    "scalar_type": "Int32",
                    "nullable": true
                  },
                  {
                    "scalar_type": "Int32",
                    "nullable": true
                  }
                ],
                "keys": []
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test Finish.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT * FROM t ORDER BY b asc, a desc LIMIT 5
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Get": {
          "id": {
            "Global": {
              "User": 1
            }
          },
          "typ": {
            "column_types": [
              {
                "scalar_type": "Int32",
                "nullable": true
              },
              {
                "scalar_type": "Int32",
                "nullable": true
              }
            ],
            "keys": []
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test Reduce (global).
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT abs(min(a) - max(a)) FROM t
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Let": {
          "id": 0,
          "value": {
            "Reduce": {
              "group_key": [],
              "aggregates": [
                {
                  "func": "MinInt32",
                  "expr": {
                    "Column": 0
                  },
                  "distinct": false
                },
                {
                  "func": "MaxInt32",
                  "expr": {
                    "Column": 0
                  },
                  "distinct": false
                }
              ],
              "monotonic": false,
              "expected_group_size": null,
              "input": {
                "Project": {
                  "outputs": [
                    0
                  ],
                  "input": {
                    "Get": {
                      "id": {
                        "Global": {
                          "User": 1
                        }
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          },
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              }
            }
          },
          "body": {
            "Project": {
              "outputs": [
                2
              ],
              "input": {
                "Map": {
                  "scalars": [
                    {
                      "CallUnary": {
                        "func": {
                          "AbsInt32": null
                        },
                        "expr": {
                          "CallBinary": {
                            "func": "SubInt32",
                            "expr1": {
                              "Column": 0
                            },
                            "expr2": {
                              "Column": 1
                            }
                          }
                        }
                      }
                    }
                  ],
                  "input": {
                    "Union": {
                      "base": {
                        "Get": {
                          "id": {
                            "Local": 0
                          },
                          "typ": {
                            "column_types": [
                              {
                                "scalar_type": "Int32",
                                "nullable": true
                              },
                              {
                                "scalar_type": "Int32",
                                "nullable": true
                              }
                            ],
                            "keys": [
                              []
                            ]
                          }
                        }
                      },
                      "inputs": [
                        {
                          "Map": {
                            "scalars": [
                              {
                                "Literal": [
                                  {
                                    "Ok": {
                                      "data": [
                                        0
                                      ]
                                    }
                                  },
                                  {
                                    "scalar_type": "Int32",
                                    "nullable": true
                                  }
                                ]
                              },
                              {
                                "Literal": [
                                  {
                                    "Ok": {
                                      "data": [
                                        0
                                      ]
                                    }
                                  },
                                  {
                                    "scalar_type": "Int32",
                                    "nullable": true
                                  }
                                ]
                              }
                            ],
                            "input": {
                              "Union": {
                                "base": {
                                  "Negate": {
                                    "input": {
                                      "Project": {
                                        "outputs": [],
                                        "input": {
                                          "Get": {
                                            "id": {
                                              "Local": 0
                                            },
                                            "typ": {
                                              "column_types": [
                                                {
                                                  "scalar_type": "Int32",
                                                  "nullable": true
                                                },
                                                {
                                                  "scalar_type": "Int32",
                                                  "nullable": true
                                                }
                                              ],
                                              "keys": [
                                                []
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "inputs": [
                                  {
                                    "Constant": {
                                      "rows": {
                                        "Ok": [
                                          [
                                            {
                                              "data": []
                                            },
                                            1
                                          ]
                                        ]
                                      },
                                      "typ": {
                                        "column_types": [],
                                        "keys": []
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test Reduce (local).
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT abs(min(a) - max(a)) FROM t GROUP BY b
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Project": {
          "outputs": [
            3
          ],
          "input": {
            "Map": {
              "scalars": [
                {
                  "CallUnary": {
                    "func": {
                      "AbsInt32": null
                    },
                    "expr": {
                      "CallBinary": {
                        "func": "SubInt32",
                        "expr1": {
                          "Column": 1
                        },
                        "expr2": {
                          "Column": 2
                        }
                      }
                    }
                  }
                }
              ],
              "input": {
                "Reduce": {
                  "group_key": [
                    {
                      "Column": 1
                    }
                  ],
                  "aggregates": [
                    {
                      "func": "MinInt32",
                      "expr": {
                        "Column": 0
                      },
                      "distinct": false
                    },
                    {
                      "func": "MaxInt32",
                      "expr": {
                        "Column": 0
                      },
                      "distinct": false
                    }
                  ],
                  "monotonic": false,
                  "expected_group_size": null,
                  "input": {
                    "Get": {
                      "id": {
                        "Global": {
                          "User": 1
                        }
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          },
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test EXISTS subqueries.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT * FROM t WHERE EXISTS(SELECT * FROM mv WHERE t.a < mv.a) AND EXISTS(SELECT * FROM mv WHERE t.b > mv.b)
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Let": {
          "id": 0,
          "value": {
            "Project": {
              "outputs": [
                0,
                1
              ],
              "input": {
                "Join": {
                  "equivalences": [
                    [
                      {
                        "Column": 0
                      },
                      {
                        "Column": 2
                      }
                    ]
                  ],
                  "implementation": {
                    "Differential": [
                      [
                        0,
                        [
                          {
                            "Column": 0
                          }
                        ]
                      ],
                      [
                        [
                          1,
                          [
                            {
                              "Column": 0
                            }
                          ],
                          {
                            "unique_key": true,
                            "key_length": 1,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 1
                          }
                        ]
                      ]
                    ]
                  },
                  "inputs": [
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 0
                            }
                          ]
                        ],
                        "input": {
                          "Get": {
                            "id": {
                              "Global": {
                                "User": 1
                              }
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ],
                              "keys": []
                            }
                          }
                        }
                      }
                    },
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 0
                            }
                          ]
                        ],
                        "input": {
                          "Reduce": {
                            "group_key": [
                              {
                                "Column": 0
                              }
                            ],
                            "aggregates": [],
                            "monotonic": false,
                            "expected_group_size": null,
                            "input": {
                              "Project": {
                                "outputs": [
                                  0
                                ],
                                "input": {
                                  "Filter": {
                                    "predicates": [
                                      {
                                        "CallBinary": {
                                          "func": "Lt",
                                          "expr1": {
                                            "Column": 0
                                          },
                                          "expr2": {
                                            "Column": 1
                                          }
                                        }
                                      }
                                    ],
                                    "input": {
                                      "Join": {
                                        "equivalences": [],
                                        "implementation": {
                                          "Differential": [
                                            [
                                              1,
                                              []
                                            ],
                                            [
                                              [
                                                0,
                                                [],
                                                {
                                                  "unique_key": false,
                                                  "key_length": 0,
                                                  "arranged": true,
                                                  "filters": {
                                                    "literal_equality": false,
                                                    "like": false,
                                                    "is_null": false,
                                                    "literal_inequality": 0,
                                                    "any_filter": false
                                                  },
                                                  "input": 0
                                                }
                                              ]
                                            ]
                                          ]
                                        },
                                        "inputs": [
                                          {
                                            "ArrangeBy": {
                                              "keys": [
                                                []
                                              ],
                                              "input": {
                                                "Reduce": {
                                                  "group_key": [
                                                    {
                                                      "Column": 0
                                                    }
                                                  ],
                                                  "aggregates": [],
                                                  "monotonic": false,
                                                  "expected_group_size": null,
                                                  "input": {
                                                    "Project": {
                                                      "outputs": [
                                                        0
                                                      ],
                                                      "input": {
                                                        "Get": {
                                                          "id": {
                                                            "Global": {
                                                              "User": 1
                                                            }
                                                          },
                                                          "typ": {
                                                            "column_types": [
                                                              {
                                                                "scalar_type": "Int32",
                                                                "nullable": true
                                                              },
                                                              {
                                                                "scalar_type": "Int32",
                                                                "nullable": true
                                                              }
                                                            ],
                                                            "keys": []
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "ArrangeBy": {
                                              "keys": [
                                                []
                                              ],
                                              "input": {
                                                "Project": {
                                                  "outputs": [
                                                    0
                                                  ],
                                                  "input": {
                                                    "Get": {
                                                      "id": {
                                                        "Global": {
                                                          "User": 8
                                                        }
                                                      },
                                                      "typ": {
                                                        "column_types": [
                                                          {
                                                            "scalar_type": "Int32",
                                                            "nullable": false
                                                          },
                                                          {
                                                            "scalar_type": "Int32",
                                                            "nullable": true
                                                          }
                                                        ],
                                                        "keys": []
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "body": {
            "Project": {
              "outputs": [
                0,
                1
              ],
              "input": {
                "Join": {
                  "equivalences": [
                    [
                      {
                        "Column": 1
                      },
                      {
                        "Column": 2
                      }
                    ]
                  ],
                  "implementation": {
                    "Differential": [
                      [
                        0,
                        [
                          {
                            "Column": 1
                          }
                        ]
                      ],
                      [
                        [
                          1,
                          [
                            {
                              "Column": 0
                            }
                          ],
                          {
                            "unique_key": true,
                            "key_length": 1,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 1
                          }
                        ]
                      ]
                    ]
                  },
                  "inputs": [
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 1
                            }
                          ]
                        ],
                        "input": {
                          "Get": {
                            "id": {
                              "Local": 0
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ],
                              "keys": []
                            }
                          }
                        }
                      }
                    },
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 0
                            }
                          ]
                        ],
                        "input": {
                          "Reduce": {
                            "group_key": [
                              {
                                "Column": 0
                              }
                            ],
                            "aggregates": [],
                            "monotonic": false,
                            "expected_group_size": null,
                            "input": {
                              "Project": {
                                "outputs": [
                                  0
                                ],
                                "input": {
                                  "Filter": {
                                    "predicates": [
                                      {
                                        "CallBinary": {
                                          "func": "Gt",
                                          "expr1": {
                                            "Column": 0
                                          },
                                          "expr2": {
                                            "Column": 1
                                          }
                                        }
                                      }
                                    ],
                                    "input": {
                                      "Join": {
                                        "equivalences": [],
                                        "implementation": {
                                          "Differential": [
                                            [
                                              1,
                                              []
                                            ],
                                            [
                                              [
                                                0,
                                                [],
                                                {
                                                  "unique_key": false,
                                                  "key_length": 0,
                                                  "arranged": true,
                                                  "filters": {
                                                    "literal_equality": false,
                                                    "like": false,
                                                    "is_null": false,
                                                    "literal_inequality": 0,
                                                    "any_filter": false
                                                  },
                                                  "input": 0
                                                }
                                              ]
                                            ]
                                          ]
                                        },
                                        "inputs": [
                                          {
                                            "ArrangeBy": {
                                              "keys": [
                                                []
                                              ],
                                              "input": {
                                                "Reduce": {
                                                  "group_key": [
                                                    {
                                                      "Column": 0
                                                    }
                                                  ],
                                                  "aggregates": [],
                                                  "monotonic": false,
                                                  "expected_group_size": null,
                                                  "input": {
                                                    "Project": {
                                                      "outputs": [
                                                        1
                                                      ],
                                                      "input": {
                                                        "Get": {
                                                          "id": {
                                                            "Local": 0
                                                          },
                                                          "typ": {
                                                            "column_types": [
                                                              {
                                                                "scalar_type": "Int32",
                                                                "nullable": true
                                                              },
                                                              {
                                                                "scalar_type": "Int32",
                                                                "nullable": true
                                                              }
                                                            ],
                                                            "keys": []
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "ArrangeBy": {
                                              "keys": [
                                                []
                                              ],
                                              "input": {
                                                "Project": {
                                                  "outputs": [
                                                    1
                                                  ],
                                                  "input": {
                                                    "Get": {
                                                      "id": {
                                                        "Global": {
                                                          "User": 8
                                                        }
                                                      },
                                                      "typ": {
                                                        "column_types": [
                                                          {
                                                            "scalar_type": "Int32",
                                                            "nullable": false
                                                          },
                                                          {
                                                            "scalar_type": "Int32",
                                                            "nullable": true
                                                          }
                                                        ],
                                                        "keys": []
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test SELECT subqueries.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT (SELECT iv.a FROM iv WHERE iv.b = t.b LIMIT 1), (SELECT mv.a FROM mv WHERE mv.b = t.b LIMIT 1) FROM t
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Let": {
          "id": 0,
          "value": {
            "Project": {
              "outputs": [
                1
              ],
              "input": {
                "Get": {
                  "id": {
                    "Global": {
                      "User": 1
                    }
                  },
                  "typ": {
                    "column_types": [
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      },
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      }
                    ],
                    "keys": []
                  }
                }
              }
            }
          },
          "body": {
            "Let": {
              "id": 1,
              "value": {
                "Reduce": {
                  "group_key": [
                    {
                      "Column": 0
                    }
                  ],
                  "aggregates": [],
                  "monotonic": false,
                  "expected_group_size": null,
                  "input": {
                    "Get": {
                      "id": {
                        "Local": 0
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              },
              "body": {
                "Let": {
                  "id": 2,
                  "value": {
                    "ArrangeBy": {
                      "keys": [
                        [
                          {
                            "Column": 0
                          }
                        ]
                      ],
                      "input": {
                        "Get": {
                          "id": {
                            "Local": 1
                          },
                          "typ": {
                            "column_types": [
                              {
                                "scalar_type": "Int32",
                                "nullable": true
                              }
                            ],
                            "keys": [
                              [
                                0
                              ]
                            ]
                          }
                        }
                      }
                    }
                  },
                  "body": {
                    "Let": {
                      "id": 3,
                      "value": {
                        "TopK": {
                          "group_key": [
                            0
                          ],
                          "order_key": [],
                          "limit": 1,
                          "offset": 0,
                          "monotonic": false,
                          "input": {
                            "Project": {
                              "outputs": [
                                0,
                                1
                              ],
                              "input": {
                                "Join": {
                                  "equivalences": [
                                    [
                                      {
                                        "Column": 0
                                      },
                                      {
                                        "Column": 2
                                      }
                                    ]
                                  ],
                                  "implementation": {
                                    "Differential": [
                                      [
                                        1,
                                        [
                                          {
                                            "Column": 1
                                          }
                                        ]
                                      ],
                                      [
                                        [
                                          0,
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ],
                                          {
                                            "unique_key": true,
                                            "key_length": 1,
                                            "arranged": true,
                                            "filters": {
                                              "literal_equality": false,
                                              "like": false,
                                              "is_null": false,
                                              "literal_inequality": 0,
                                              "any_filter": false
                                            },
                                            "input": 0
                                          }
                                        ]
                                      ]
                                    ]
                                  },
                                  "inputs": [
                                    {
                                      "Get": {
                                        "id": {
                                          "Local": 2
                                        },
                                        "typ": {
                                          "column_types": [
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": true
                                            }
                                          ],
                                          "keys": [
                                            [
                                              0
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "ArrangeBy": {
                                        "keys": [
                                          [
                                            {
                                              "Column": 1
                                            }
                                          ]
                                        ],
                                        "input": {
                                          "Filter": {
                                            "predicates": [
                                              {
                                                "CallUnary": {
                                                  "func": {
                                                    "Not": null
                                                  },
                                                  "expr": {
                                                    "CallUnary": {
                                                      "func": {
                                                        "IsNull": null
                                                      },
                                                      "expr": {
                                                        "Column": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "input": {
                                              "Get": {
                                                "id": {
                                                  "Global": {
                                                    "User": 6
                                                  }
                                                },
                                                "typ": {
                                                  "column_types": [
                                                    {
                                                      "scalar_type": "Int32",
                                                      "nullable": false
                                                    },
                                                    {
                                                      "scalar_type": "Int32",
                                                      "nullable": true
                                                    }
                                                  ],
                                                  "keys": []
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "body": {
                        "Let": {
                          "id": 4,
                          "value": {
                            "TopK": {
                              "group_key": [
                                0
                              ],
                              "order_key": [],
                              "limit": 1,
                              "offset": 0,
                              "monotonic": false,
                              "input": {
                                "Project": {
                                  "outputs": [
                                    0,
                                    1
                                  ],
                                  "input": {
                                    "Join": {
                                      "equivalences": [
                                        [
                                          {
                                            "Column": 0
                                          },
                                          {
                                            "Column": 2
                                          }
                                        ]
                                      ],
                                      "implementation": {
                                        "Differential": [
                                          [
                                            1,
                                            [
                                              {
                                                "Column": 1
                                              }
                                            ]
                                          ],
                                          [
                                            [
                                              0,
                                              [
                                                {
                                                  "Column": 0
                                                }
                                              ],
                                              {
                                                "unique_key": true,
                                                "key_length": 1,
                                                "arranged": true,
                                                "filters": {
                                                  "literal_equality": false,
                                                  "like": false,
                                                  "is_null": false,
                                                  "literal_inequality": 0,
                                                  "any_filter": false
                                                },
                                                "input": 0
                                              }
                                            ]
                                          ]
                                        ]
                                      },
                                      "inputs": [
                                        {
                                          "Get": {
                                            "id": {
                                              "Local": 2
                                            },
                                            "typ": {
                                              "column_types": [
                                                {
                                                  "scalar_type": "Int32",
                                                  "nullable": true
                                                }
                                              ],
                                              "keys": [
                                                [
                                                  0
                                                ]
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "ArrangeBy": {
                                            "keys": [
                                              [
                                                {
                                                  "Column": 1
                                                }
                                              ]
                                            ],
                                            "input": {
                                              "Filter": {
                                                "predicates": [
                                                  {
                                                    "CallUnary": {
                                                      "func": {
                                                        "Not": null
                                                      },
                                                      "expr": {
                                                        "CallUnary": {
                                                          "func": {
                                                            "IsNull": null
                                                          },
                                                          "expr": {
                                                            "Column": 1
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                ],
                                                "input": {
                                                  "Get": {
                                                    "id": {
                                                      "Global": {
                                                        "User": 8
                                                      }
                                                    },
                                                    "typ": {
                                                      "column_types": [
                                                        {
                                                          "scalar_type": "Int32",
                                                          "nullable": false
                                                        },
                                                        {
                                                          "scalar_type": "Int32",
                                                          "nullable": true
                                                        }
                                                      ],
                                                      "keys": []
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "body": {
                            "Project": {
                              "outputs": [
                                2,
                                4
                              ],
                              "input": {
                                "Join": {
                                  "equivalences": [
                                    [
                                      {
                                        "Column": 0
                                      },
                                      {
                                        "Column": 1
                                      },
                                      {
                                        "Column": 3
                                      }
                                    ]
                                  ],
                                  "implementation": {
                                    "DeltaQuery": [
                                      [
                                        [
                                          1,
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ],
                                          {
                                            "unique_key": true,
                                            "key_length": 1,
                                            "arranged": true,
                                            "filters": {
                                              "literal_equality": false,
                                              "like": false,
                                              "is_null": false,
                                              "literal_inequality": 0,
                                              "any_filter": false
                                            },
                                            "input": 1
                                          }
                                        ],
                                        [
                                          2,
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ],
                                          {
                                            "unique_key": true,
                                            "key_length": 1,
                                            "arranged": true,
                                            "filters": {
                                              "literal_equality": false,
                                              "like": false,
                                              "is_null": false,
                                              "literal_inequality": 0,
                                              "any_filter": false
                                            },
                                            "input": 2
                                          }
                                        ]
                                      ],
                                      [
                                        [
                                          2,
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ],
                                          {
                                            "unique_key": true,
                                            "key_length": 1,
                                            "arranged": true,
                                            "filters": {
                                              "literal_equality": false,
                                              "like": false,
                                              "is_null": false,
                                              "literal_inequality": 0,
                                              "any_filter": false
                                            },
                                            "input": 2
                                          }
                                        ],
                                        [
                                          0,
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ],
                                          {
                                            "unique_key": false,
                                            "key_length": 1,
                                            "arranged": true,
                                            "filters": {
                                              "literal_equality": false,
                                              "like": false,
                                              "is_null": false,
                                              "literal_inequality": 0,
                                              "any_filter": false
                                            },
                                            "input": 0
                                          }
                                        ]
                                      ],
                                      [
                                        [
                                          1,
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ],
                                          {
                                            "unique_key": true,
                                            "key_length": 1,
                                            "arranged": true,
                                            "filters": {
                                              "literal_equality": false,
                                              "like": false,
                                              "is_null": false,
                                              "literal_inequality": 0,
                                              "any_filter": false
                                            },
                                            "input": 1
                                          }
                                        ],
                                        [
                                          0,
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ],
                                          {
                                            "unique_key": false,
                                            "key_length": 1,
                                            "arranged": true,
                                            "filters": {
                                              "literal_equality": false,
                                              "like": false,
                                              "is_null": false,
                                              "literal_inequality": 0,
                                              "any_filter": false
                                            },
                                            "input": 0
                                          }
                                        ]
                                      ]
                                    ]
                                  },
                                  "inputs": [
                                    {
                                      "ArrangeBy": {
                                        "keys": [
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ]
                                        ],
                                        "input": {
                                          "Get": {
                                            "id": {
                                              "Local": 0
                                            },
                                            "typ": {
                                              "column_types": [
                                                {
                                                  "scalar_type": "Int32",
                                                  "nullable": true
                                                }
                                              ],
                                              "keys": []
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "ArrangeBy": {
                                        "keys": [
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ]
                                        ],
                                        "input": {
                                          "Union": {
                                            "base": {
                                              "Get": {
                                                "id": {
                                                  "Local": 3
                                                },
                                                "typ": {
                                                  "column_types": [
                                                    {
                                                      "scalar_type": "Int32",
                                                      "nullable": true
                                                    },
                                                    {
                                                      "scalar_type": "Int32",
                                                      "nullable": false
                                                    }
                                                  ],
                                                  "keys": [
                                                    [
                                                      0
                                                    ]
                                                  ]
                                                }
                                              }
                                            },
                                            "inputs": [
                                              {
                                                "Map": {
                                                  "scalars": [
                                                    {
                                                      "Literal": [
                                                        {
                                                          "Ok": {
                                                            "data": [
                                                              0
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "scalar_type": "Int32",
                                                          "nullable": true
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "input": {
                                                    "Union": {
                                                      "base": {
                                                        "Negate": {
                                                          "input": {
                                                            "Project": {
                                                              "outputs": [
                                                                0
                                                              ],
                                                              "input": {
                                                                "Get": {
                                                                  "id": {
                                                                    "Local": 3
                                                                  },
                                                                  "typ": {
                                                                    "column_types": [
                                                                      {
                                                                        "scalar_type": "Int32",
                                                                        "nullable": true
                                                                      },
                                                                      {
                                                                        "scalar_type": "Int32",
                                                                        "nullable": false
                                                                      }
                                                                    ],
                                                                    "keys": [
                                                                      [
                                                                        0
                                                                      ]
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "inputs": [
                                                        {
                                                          "Get": {
                                                            "id": {
                                                              "Local": 1
                                                            },
                                                            "typ": {
                                                              "column_types": [
                                                                {
                                                                  "scalar_type": "Int32",
                                                                  "nullable": true
                                                                }
                                                              ],
                                                              "keys": [
                                                                [
                                                                  0
                                                                ]
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "ArrangeBy": {
                                        "keys": [
                                          [
                                            {
                                              "Column": 0
                                            }
                                          ]
                                        ],
                                        "input": {
                                          "Union": {
                                            "base": {
                                              "Get": {
                                                "id": {
                                                  "Local": 4
                                                },
                                                "typ": {
                                                  "column_types": [
                                                    {
                                                      "scalar_type": "Int32",
                                                      "nullable": true
                                                    },
                                                    {
                                                      "scalar_type": "Int32",
                                                      "nullable": false
                                                    }
                                                  ],
                                                  "keys": [
                                                    [
                                                      0
                                                    ]
                                                  ]
                                                }
                                              }
                                            },
                                            "inputs": [
                                              {
                                                "Map": {
                                                  "scalars": [
                                                    {
                                                      "Literal": [
                                                        {
                                                          "Ok": {
                                                            "data": [
                                                              0
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "scalar_type": "Int32",
                                                          "nullable": true
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "input": {
                                                    "Union": {
                                                      "base": {
                                                        "Negate": {
                                                          "input": {
                                                            "Project": {
                                                              "outputs": [
                                                                0
                                                              ],
                                                              "input": {
                                                                "Get": {
                                                                  "id": {
                                                                    "Local": 4
                                                                  },
                                                                  "typ": {
                                                                    "column_types": [
                                                                      {
                                                                        "scalar_type": "Int32",
                                                                        "nullable": true
                                                                      },
                                                                      {
                                                                        "scalar_type": "Int32",
                                                                        "nullable": false
                                                                      }
                                                                    ],
                                                                    "keys": [
                                                                      [
                                                                        0
                                                                      ]
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "inputs": [
                                                        {
                                                          "Get": {
                                                            "id": {
                                                              "Local": 1
                                                            },
                                                            "typ": {
                                                              "column_types": [
                                                                {
                                                                  "scalar_type": "Int32",
                                                                  "nullable": true
                                                                }
                                                              ],
                                                              "keys": [
                                                                [
                                                                  0
                                                                ]
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": [
    {
      "id": "materialize.public.mv",
      "op": {
        "expressions": [],
        "predicates": [
          [
            2,
            {
              "CallUnary": {
                "func": {
                  "Not": null
                },
                "expr": {
                  "CallUnary": {
                    "func": {
                      "IsNull": null
                    },
                    "expr": {
                      "Column": 1
                    }
                  }
                }
              }
            }
          ]
        ],
        "projection": [
          0,
          1
        ],
        "input_arity": 2
      }
    }
  ]
}
EOF

# Test outer joins (ON syntax).
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT t1.a, t2.a
FROM t as t1
LEFT JOIN t as t2 ON t1.b = t2.b
RIGHT JOIN t as t3 ON t2.b = t3.b
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Let": {
          "id": 0,
          "value": {
            "Filter": {
              "predicates": [
                {
                  "CallUnary": {
                    "func": {
                      "Not": null
                    },
                    "expr": {
                      "CallUnary": {
                        "func": {
                          "IsNull": null
                        },
                        "expr": {
                          "Column": 1
                        }
                      }
                    }
                  }
                }
              ],
              "input": {
                "Get": {
                  "id": {
                    "Global": {
                      "User": 1
                    }
                  },
                  "typ": {
                    "column_types": [
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      },
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      }
                    ],
                    "keys": []
                  }
                }
              }
            }
          },
          "body": {
            "Let": {
              "id": 1,
              "value": {
                "ArrangeBy": {
                  "keys": [
                    [
                      {
                        "Column": 1
                      }
                    ]
                  ],
                  "input": {
                    "Get": {
                      "id": {
                        "Local": 0
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          },
                          {
                            "scalar_type": "Int32",
                            "nullable": false
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              },
              "body": {
                "Let": {
                  "id": 2,
                  "value": {
                    "Project": {
                      "outputs": [
                        0,
                        1,
                        2
                      ],
                      "input": {
                        "Join": {
                          "equivalences": [
                            [
                              {
                                "Column": 1
                              },
                              {
                                "Column": 3
                              },
                              {
                                "Column": 4
                              }
                            ]
                          ],
                          "implementation": {
                            "DeltaQuery": [
                              [
                                [
                                  1,
                                  [
                                    {
                                      "Column": 1
                                    }
                                  ],
                                  {
                                    "unique_key": false,
                                    "key_length": 1,
                                    "arranged": true,
                                    "filters": {
                                      "literal_equality": false,
                                      "like": false,
                                      "is_null": false,
                                      "literal_inequality": 0,
                                      "any_filter": false
                                    },
                                    "input": 1
                                  }
                                ],
                                [
                                  2,
                                  [
                                    {
                                      "Column": 0
                                    }
                                  ],
                                  {
                                    "unique_key": false,
                                    "key_length": 1,
                                    "arranged": true,
                                    "filters": {
                                      "literal_equality": false,
                                      "like": false,
                                      "is_null": false,
                                      "literal_inequality": 0,
                                      "any_filter": false
                                    },
                                    "input": 2
                                  }
                                ]
                              ],
                              [
                                [
                                  0,
                                  [
                                    {
                                      "Column": 1
                                    }
                                  ],
                                  {
                                    "unique_key": false,
                                    "key_length": 1,
                                    "arranged": true,
                                    "filters": {
                                      "literal_equality": false,
                                      "like": false,
                                      "is_null": false,
                                      "literal_inequality": 0,
                                      "any_filter": false
                                    },
                                    "input": 0
                                  }
                                ],
                                [
                                  2,
                                  [
                                    {
                                      "Column": 0
                                    }
                                  ],
                                  {
                                    "unique_key": false,
                                    "key_length": 1,
                                    "arranged": true,
                                    "filters": {
                                      "literal_equality": false,
                                      "like": false,
                                      "is_null": false,
                                      "literal_inequality": 0,
                                      "any_filter": false
                                    },
                                    "input": 2
                                  }
                                ]
                              ],
                              [
                                [
                                  0,
                                  [
                                    {
                                      "Column": 1
                                    }
                                  ],
                                  {
                                    "unique_key": false,
                                    "key_length": 1,
                                    "arranged": true,
                                    "filters": {
                                      "literal_equality": false,
                                      "like": false,
                                      "is_null": false,
                                      "literal_inequality": 0,
                                      "any_filter": false
                                    },
                                    "input": 0
                                  }
                                ],
                                [
                                  1,
                                  [
                                    {
                                      "Column": 1
                                    }
                                  ],
                                  {
                                    "unique_key": false,
                                    "key_length": 1,
                                    "arranged": true,
                                    "filters": {
                                      "literal_equality": false,
                                      "like": false,
                                      "is_null": false,
                                      "literal_inequality": 0,
                                      "any_filter": false
                                    },
                                    "input": 1
                                  }
                                ]
                              ]
                            ]
                          },
                          "inputs": [
                            {
                              "Get": {
                                "id": {
                                  "Local": 1
                                },
                                "typ": {
                                  "column_types": [
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": true
                                    },
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": false
                                    }
                                  ],
                                  "keys": []
                                }
                              }
                            },
                            {
                              "Get": {
                                "id": {
                                  "Local": 1
                                },
                                "typ": {
                                  "column_types": [
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": true
                                    },
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": false
                                    }
                                  ],
                                  "keys": []
                                }
                              }
                            },
                            {
                              "ArrangeBy": {
                                "keys": [
                                  [
                                    {
                                      "Column": 0
                                    }
                                  ]
                                ],
                                "input": {
                                  "Project": {
                                    "outputs": [
                                      1
                                    ],
                                    "input": {
                                      "Get": {
                                        "id": {
                                          "Local": 0
                                        },
                                        "typ": {
                                          "column_types": [
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": true
                                            },
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": false
                                            }
                                          ],
                                          "keys": []
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "body": {
                    "Union": {
                      "base": {
                        "Map": {
                          "scalars": [
                            {
                              "Literal": [
                                {
                                  "Ok": {
                                    "data": [
                                      0
                                    ]
                                  }
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ]
                            },
                            {
                              "Literal": [
                                {
                                  "Ok": {
                                    "data": [
                                      0
                                    ]
                                  }
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ]
                            }
                          ],
                          "input": {
                            "Union": {
                              "base": {
                                "Negate": {
                                  "input": {
                                    "Project": {
                                      "outputs": [],
                                      "input": {
                                        "Join": {
                                          "equivalences": [
                                            [
                                              {
                                                "Column": 0
                                              },
                                              {
                                                "Column": 1
                                              }
                                            ]
                                          ],
                                          "implementation": {
                                            "Differential": [
                                              [
                                                0,
                                                [
                                                  {
                                                    "Column": 0
                                                  }
                                                ]
                                              ],
                                              [
                                                [
                                                  1,
                                                  [
                                                    {
                                                      "Column": 0
                                                    }
                                                  ],
                                                  {
                                                    "unique_key": true,
                                                    "key_length": 1,
                                                    "arranged": true,
                                                    "filters": {
                                                      "literal_equality": false,
                                                      "like": false,
                                                      "is_null": false,
                                                      "literal_inequality": 0,
                                                      "any_filter": false
                                                    },
                                                    "input": 1
                                                  }
                                                ]
                                              ]
                                            ]
                                          },
                                          "inputs": [
                                            {
                                              "ArrangeBy": {
                                                "keys": [
                                                  [
                                                    {
                                                      "Column": 0
                                                    }
                                                  ]
                                                ],
                                                "input": {
                                                  "Project": {
                                                    "outputs": [
                                                      1
                                                    ],
                                                    "input": {
                                                      "Get": {
                                                        "id": {
                                                          "Global": {
                                                            "User": 1
                                                          }
                                                        },
                                                        "typ": {
                                                          "column_types": [
                                                            {
                                                              "scalar_type": "Int32",
                                                              "nullable": true
                                                            },
                                                            {
                                                              "scalar_type": "Int32",
                                                              "nullable": true
                                                            }
                                                          ],
                                                          "keys": []
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "ArrangeBy": {
                                                "keys": [
                                                  [
                                                    {
                                                      "Column": 0
                                                    }
                                                  ]
                                                ],
                                                "input": {
                                                  "Reduce": {
                                                    "group_key": [
                                                      {
                                                        "Column": 0
                                                      }
                                                    ],
                                                    "aggregates": [],
                                                    "monotonic": false,
                                                    "expected_group_size": null,
                                                    "input": {
                                                      "Project": {
                                                        "outputs": [
                                                          1
                                                        ],
                                                        "input": {
                                                          "Get": {
                                                            "id": {
                                                              "Local": 2
                                                            },
                                                            "typ": {
                                                              "column_types": [
                                                                {
                                                                  "scalar_type": "Int32",
                                                                  "nullable": true
                                                                },
                                                                {
                                                                  "scalar_type": "Int32",
                                                                  "nullable": false
                                                                },
                                                                {
                                                                  "scalar_type": "Int32",
                                                                  "nullable": true
                                                                }
                                                              ],
                                                              "keys": []
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "inputs": [
                                {
                                  "Project": {
                                    "outputs": [],
                                    "input": {
                                      "Get": {
                                        "id": {
                                          "Global": {
                                            "User": 1
                                          }
                                        },
                                        "typ": {
                                          "column_types": [
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": true
                                            },
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": true
                                            }
                                          ],
                                          "keys": []
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "inputs": [
                        {
                          "Project": {
                            "outputs": [
                              0,
                              2
                            ],
                            "input": {
                              "Get": {
                                "id": {
                                  "Local": 2
                                },
                                "typ": {
                                  "column_types": [
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": true
                                    },
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": false
                                    },
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": true
                                    }
                                  ],
                                  "keys": []
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test multiple CTEs: a case where we cannot pull the let statement up through
# the join because the local l0 is correlated against the lhs of the enclosing join.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT
  *
FROM
  (
    SELECT * FROM t
  ) as r1
  CROSS JOIN LATERAL (
    WITH r2 as (
      SELECT MAX(r1.a * t.a) AS m FROM t
    )
    SELECT * FROM r2 WHERE r2.m != r1.a
  ) as r3
  CROSS JOIN LATERAL (
    WITH r4 as (
      SELECT MAX(r1.a * t.a) AS m FROM t
    )
    SELECT * FROM r4 WHERE r4.m != r1.a OR (r4.m IS NOT NULL AND r1.a IS NULL)
  ) as r5;
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Let": {
          "id": 0,
          "value": {
            "Project": {
              "outputs": [
                0
              ],
              "input": {
                "Get": {
                  "id": {
                    "Global": {
                      "User": 1
                    }
                  },
                  "typ": {
                    "column_types": [
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      },
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      }
                    ],
                    "keys": []
                  }
                }
              }
            }
          },
          "body": {
            "Let": {
              "id": 1,
              "value": {
                "ArrangeBy": {
                  "keys": [
                    []
                  ],
                  "input": {
                    "Get": {
                      "id": {
                        "Local": 0
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              },
              "body": {
                "Let": {
                  "id": 2,
                  "value": {
                    "Project": {
                      "outputs": [
                        0,
                        1,
                        3
                      ],
                      "input": {
                        "Filter": {
                          "predicates": [
                            {
                              "CallBinary": {
                                "func": "NotEq",
                                "expr1": {
                                  "Column": 0
                                },
                                "expr2": {
                                  "Column": 3
                                }
                              }
                            }
                          ],
                          "input": {
                            "Join": {
                              "equivalences": [
                                [
                                  {
                                    "Column": 0
                                  },
                                  {
                                    "Column": 2
                                  }
                                ]
                              ],
                              "implementation": {
                                "Differential": [
                                  [
                                    0,
                                    [
                                      {
                                        "Column": 0
                                      }
                                    ]
                                  ],
                                  [
                                    [
                                      1,
                                      [
                                        {
                                          "Column": 0
                                        }
                                      ],
                                      {
                                        "unique_key": true,
                                        "key_length": 1,
                                        "arranged": true,
                                        "filters": {
                                          "literal_equality": false,
                                          "like": false,
                                          "is_null": false,
                                          "literal_inequality": 0,
                                          "any_filter": true
                                        },
                                        "input": 1
                                      }
                                    ]
                                  ]
                                ]
                              },
                              "inputs": [
                                {
                                  "ArrangeBy": {
                                    "keys": [
                                      [
                                        {
                                          "Column": 0
                                        }
                                      ]
                                    ],
                                    "input": {
                                      "Get": {
                                        "id": {
                                          "Global": {
                                            "User": 1
                                          }
                                        },
                                        "typ": {
                                          "column_types": [
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": true
                                            },
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": true
                                            }
                                          ],
                                          "keys": []
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "ArrangeBy": {
                                    "keys": [
                                      [
                                        {
                                          "Column": 0
                                        }
                                      ]
                                    ],
                                    "input": {
                                      "Reduce": {
                                        "group_key": [
                                          {
                                            "Column": 0
                                          }
                                        ],
                                        "aggregates": [
                                          {
                                            "func": "MaxInt32",
                                            "expr": {
                                              "CallBinary": {
                                                "func": "MulInt32",
                                                "expr1": {
                                                  "Column": 0
                                                },
                                                "expr2": {
                                                  "Column": 1
                                                }
                                              }
                                            },
                                            "distinct": false
                                          }
                                        ],
                                        "monotonic": false,
                                        "expected_group_size": null,
                                        "input": {
                                          "Join": {
                                            "equivalences": [],
                                            "implementation": {
                                              "Differential": [
                                                [
                                                  1,
                                                  []
                                                ],
                                                [
                                                  [
                                                    0,
                                                    [],
                                                    {
                                                      "unique_key": false,
                                                      "key_length": 0,
                                                      "arranged": true,
                                                      "filters": {
                                                        "literal_equality": false,
                                                        "like": false,
                                                        "is_null": false,
                                                        "literal_inequality": 0,
                                                        "any_filter": false
                                                      },
                                                      "input": 0
                                                    }
                                                  ]
                                                ]
                                              ]
                                            },
                                            "inputs": [
                                              {
                                                "ArrangeBy": {
                                                  "keys": [
                                                    []
                                                  ],
                                                  "input": {
                                                    "Reduce": {
                                                      "group_key": [
                                                        {
                                                          "Column": 0
                                                        }
                                                      ],
                                                      "aggregates": [],
                                                      "monotonic": false,
                                                      "expected_group_size": null,
                                                      "input": {
                                                        "Get": {
                                                          "id": {
                                                            "Local": 0
                                                          },
                                                          "typ": {
                                                            "column_types": [
                                                              {
                                                                "scalar_type": "Int32",
                                                                "nullable": true
                                                              }
                                                            ],
                                                            "keys": []
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "Get": {
                                                  "id": {
                                                    "Local": 1
                                                  },
                                                  "typ": {
                                                    "column_types": [
                                                      {
                                                        "scalar_type": "Int32",
                                                        "nullable": true
                                                      }
                                                    ],
                                                    "keys": []
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "body": {
                    "Project": {
                      "outputs": [
                        0,
                        1,
                        2,
                        4
                      ],
                      "input": {
                        "Filter": {
                          "predicates": [
                            {
                              "CallVariadic": {
                                "func": "Or",
                                "exprs": [
                                  {
                                    "CallBinary": {
                                      "func": "NotEq",
                                      "expr1": {
                                        "Column": 0
                                      },
                                      "expr2": {
                                        "Column": 4
                                      }
                                    }
                                  },
                                  {
                                    "CallVariadic": {
                                      "func": "And",
                                      "exprs": [
                                        {
                                          "CallUnary": {
                                            "func": {
                                              "Not": null
                                            },
                                            "expr": {
                                              "CallUnary": {
                                                "func": {
                                                  "IsNull": null
                                                },
                                                "expr": {
                                                  "Column": 4
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "CallUnary": {
                                            "func": {
                                              "IsNull": null
                                            },
                                            "expr": {
                                              "Column": 0
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ],
                          "input": {
                            "Join": {
                              "equivalences": [
                                [
                                  {
                                    "Column": 0
                                  },
                                  {
                                    "Column": 3
                                  }
                                ]
                              ],
                              "implementation": {
                                "Differential": [
                                  [
                                    0,
                                    [
                                      {
                                        "Column": 0
                                      }
                                    ]
                                  ],
                                  [
                                    [
                                      1,
                                      [
                                        {
                                          "Column": 0
                                        }
                                      ],
                                      {
                                        "unique_key": true,
                                        "key_length": 1,
                                        "arranged": true,
                                        "filters": {
                                          "literal_equality": false,
                                          "like": false,
                                          "is_null": true,
                                          "literal_inequality": 0,
                                          "any_filter": false
                                        },
                                        "input": 1
                                      }
                                    ]
                                  ]
                                ]
                              },
                              "inputs": [
                                {
                                  "ArrangeBy": {
                                    "keys": [
                                      [
                                        {
                                          "Column": 0
                                        }
                                      ]
                                    ],
                                    "input": {
                                      "Get": {
                                        "id": {
                                          "Local": 2
                                        },
                                        "typ": {
                                          "column_types": [
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": false
                                            },
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": true
                                            },
                                            {
                                              "scalar_type": "Int32",
                                              "nullable": false
                                            }
                                          ],
                                          "keys": []
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "ArrangeBy": {
                                    "keys": [
                                      [
                                        {
                                          "Column": 0
                                        }
                                      ]
                                    ],
                                    "input": {
                                      "Reduce": {
                                        "group_key": [
                                          {
                                            "Column": 0
                                          }
                                        ],
                                        "aggregates": [
                                          {
                                            "func": "MaxInt32",
                                            "expr": {
                                              "CallBinary": {
                                                "func": "MulInt32",
                                                "expr1": {
                                                  "Column": 0
                                                },
                                                "expr2": {
                                                  "Column": 1
                                                }
                                              }
                                            },
                                            "distinct": false
                                          }
                                        ],
                                        "monotonic": false,
                                        "expected_group_size": null,
                                        "input": {
                                          "Join": {
                                            "equivalences": [],
                                            "implementation": {
                                              "Differential": [
                                                [
                                                  1,
                                                  []
                                                ],
                                                [
                                                  [
                                                    0,
                                                    [],
                                                    {
                                                      "unique_key": false,
                                                      "key_length": 0,
                                                      "arranged": true,
                                                      "filters": {
                                                        "literal_equality": false,
                                                        "like": false,
                                                        "is_null": false,
                                                        "literal_inequality": 0,
                                                        "any_filter": false
                                                      },
                                                      "input": 0
                                                    }
                                                  ]
                                                ]
                                              ]
                                            },
                                            "inputs": [
                                              {
                                                "ArrangeBy": {
                                                  "keys": [
                                                    []
                                                  ],
                                                  "input": {
                                                    "Reduce": {
                                                      "group_key": [
                                                        {
                                                          "Column": 0
                                                        }
                                                      ],
                                                      "aggregates": [],
                                                      "monotonic": false,
                                                      "expected_group_size": null,
                                                      "input": {
                                                        "Project": {
                                                          "outputs": [
                                                            0
                                                          ],
                                                          "input": {
                                                            "Get": {
                                                              "id": {
                                                                "Local": 2
                                                              },
                                                              "typ": {
                                                                "column_types": [
                                                                  {
                                                                    "scalar_type": "Int32",
                                                                    "nullable": false
                                                                  },
                                                                  {
                                                                    "scalar_type": "Int32",
                                                                    "nullable": true
                                                                  },
                                                                  {
                                                                    "scalar_type": "Int32",
                                                                    "nullable": false
                                                                  }
                                                                ],
                                                                "keys": []
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "Get": {
                                                  "id": {
                                                    "Local": 1
                                                  },
                                                  "typ": {
                                                    "column_types": [
                                                      {
                                                        "scalar_type": "Int32",
                                                        "nullable": true
                                                      }
                                                    ],
                                                    "keys": []
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test cross join.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT t1.a, t2.a FROM t as t1, t as t2
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Let": {
          "id": 0,
          "value": {
            "ArrangeBy": {
              "keys": [
                []
              ],
              "input": {
                "Project": {
                  "outputs": [
                    0
                  ],
                  "input": {
                    "Get": {
                      "id": {
                        "Global": {
                          "User": 1
                        }
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          },
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              }
            }
          },
          "body": {
            "Join": {
              "equivalences": [],
              "implementation": {
                "Differential": [
                  [
                    1,
                    []
                  ],
                  [
                    [
                      0,
                      [],
                      {
                        "unique_key": false,
                        "key_length": 0,
                        "arranged": true,
                        "filters": {
                          "literal_equality": false,
                          "like": false,
                          "is_null": false,
                          "literal_inequality": 0,
                          "any_filter": false
                        },
                        "input": 0
                      }
                    ]
                  ]
                ]
              },
              "inputs": [
                {
                  "Get": {
                    "id": {
                      "Local": 0
                    },
                    "typ": {
                      "column_types": [
                        {
                          "scalar_type": "Int32",
                          "nullable": true
                        }
                      ],
                      "keys": []
                    }
                  }
                },
                {
                  "Get": {
                    "id": {
                      "Local": 0
                    },
                    "typ": {
                      "column_types": [
                        {
                          "scalar_type": "Int32",
                          "nullable": true
                        }
                      ],
                      "keys": []
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Test cyclic join.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT t1.a, t2.a
FROM
  t as t1,
  t as t2,
  t as t3
WHERE t1.b = t2.b AND t2.b = t3.b
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Let": {
          "id": 0,
          "value": {
            "Filter": {
              "predicates": [
                {
                  "CallUnary": {
                    "func": {
                      "Not": null
                    },
                    "expr": {
                      "CallUnary": {
                        "func": {
                          "IsNull": null
                        },
                        "expr": {
                          "Column": 1
                        }
                      }
                    }
                  }
                }
              ],
              "input": {
                "Get": {
                  "id": {
                    "Global": {
                      "User": 1
                    }
                  },
                  "typ": {
                    "column_types": [
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      },
                      {
                        "scalar_type": "Int32",
                        "nullable": true
                      }
                    ],
                    "keys": []
                  }
                }
              }
            }
          },
          "body": {
            "Let": {
              "id": 1,
              "value": {
                "ArrangeBy": {
                  "keys": [
                    [
                      {
                        "Column": 1
                      }
                    ]
                  ],
                  "input": {
                    "Get": {
                      "id": {
                        "Local": 0
                      },
                      "typ": {
                        "column_types": [
                          {
                            "scalar_type": "Int32",
                            "nullable": true
                          },
                          {
                            "scalar_type": "Int32",
                            "nullable": false
                          }
                        ],
                        "keys": []
                      }
                    }
                  }
                }
              },
              "body": {
                "Project": {
                  "outputs": [
                    0,
                    2
                  ],
                  "input": {
                    "Join": {
                      "equivalences": [
                        [
                          {
                            "Column": 1
                          },
                          {
                            "Column": 3
                          },
                          {
                            "Column": 4
                          }
                        ]
                      ],
                      "implementation": {
                        "DeltaQuery": [
                          [
                            [
                              1,
                              [
                                {
                                  "Column": 1
                                }
                              ],
                              {
                                "unique_key": false,
                                "key_length": 1,
                                "arranged": true,
                                "filters": {
                                  "literal_equality": false,
                                  "like": false,
                                  "is_null": false,
                                  "literal_inequality": 0,
                                  "any_filter": false
                                },
                                "input": 1
                              }
                            ],
                            [
                              2,
                              [
                                {
                                  "Column": 0
                                }
                              ],
                              {
                                "unique_key": false,
                                "key_length": 1,
                                "arranged": true,
                                "filters": {
                                  "literal_equality": false,
                                  "like": false,
                                  "is_null": false,
                                  "literal_inequality": 0,
                                  "any_filter": false
                                },
                                "input": 2
                              }
                            ]
                          ],
                          [
                            [
                              0,
                              [
                                {
                                  "Column": 1
                                }
                              ],
                              {
                                "unique_key": false,
                                "key_length": 1,
                                "arranged": true,
                                "filters": {
                                  "literal_equality": false,
                                  "like": false,
                                  "is_null": false,
                                  "literal_inequality": 0,
                                  "any_filter": false
                                },
                                "input": 0
                              }
                            ],
                            [
                              2,
                              [
                                {
                                  "Column": 0
                                }
                              ],
                              {
                                "unique_key": false,
                                "key_length": 1,
                                "arranged": true,
                                "filters": {
                                  "literal_equality": false,
                                  "like": false,
                                  "is_null": false,
                                  "literal_inequality": 0,
                                  "any_filter": false
                                },
                                "input": 2
                              }
                            ]
                          ],
                          [
                            [
                              0,
                              [
                                {
                                  "Column": 1
                                }
                              ],
                              {
                                "unique_key": false,
                                "key_length": 1,
                                "arranged": true,
                                "filters": {
                                  "literal_equality": false,
                                  "like": false,
                                  "is_null": false,
                                  "literal_inequality": 0,
                                  "any_filter": false
                                },
                                "input": 0
                              }
                            ],
                            [
                              1,
                              [
                                {
                                  "Column": 1
                                }
                              ],
                              {
                                "unique_key": false,
                                "key_length": 1,
                                "arranged": true,
                                "filters": {
                                  "literal_equality": false,
                                  "like": false,
                                  "is_null": false,
                                  "literal_inequality": 0,
                                  "any_filter": false
                                },
                                "input": 1
                              }
                            ]
                          ]
                        ]
                      },
                      "inputs": [
                        {
                          "Get": {
                            "id": {
                              "Local": 1
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": false
                                }
                              ],
                              "keys": []
                            }
                          }
                        },
                        {
                          "Get": {
                            "id": {
                              "Local": 1
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": false
                                }
                              ],
                              "keys": []
                            }
                          }
                        },
                        {
                          "ArrangeBy": {
                            "keys": [
                              [
                                {
                                  "Column": 0
                                }
                              ]
                            ],
                            "input": {
                              "Project": {
                                "outputs": [
                                  1
                                ],
                                "input": {
                                  "Get": {
                                    "id": {
                                      "Local": 0
                                    },
                                    "typ": {
                                      "column_types": [
                                        {
                                          "scalar_type": "Int32",
                                          "nullable": true
                                        },
                                        {
                                          "scalar_type": "Int32",
                                          "nullable": false
                                        }
                                      ],
                                      "keys": []
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Create indexes required for differential join tests

statement ok
CREATE INDEX u_c_idx ON U(c);

statement ok
CREATE INDEX u_d_idx ON U(d);

statement ok
CREATE INDEX v_e_idx ON V(e);

# Test a differential join.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT a, b, c, d, e, f
FROM t, u, v
WHERE a = c and d = e and b = f
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Project": {
          "outputs": [
            0,
            1,
            0,
            3,
            3,
            1
          ],
          "input": {
            "Filter": {
              "predicates": [
                {
                  "CallUnary": {
                    "func": {
                      "Not": null
                    },
                    "expr": {
                      "CallUnary": {
                        "func": {
                          "IsNull": null
                        },
                        "expr": {
                          "Column": 0
                        }
                      }
                    }
                  }
                }
              ],
              "input": {
                "Join": {
                  "equivalences": [
                    [
                      {
                        "Column": 0
                      },
                      {
                        "Column": 2
                      }
                    ],
                    [
                      {
                        "Column": 1
                      },
                      {
                        "Column": 5
                      }
                    ],
                    [
                      {
                        "Column": 3
                      },
                      {
                        "Column": 4
                      }
                    ]
                  ],
                  "implementation": {
                    "Differential": [
                      [
                        1,
                        [
                          {
                            "Column": 0
                          }
                        ]
                      ],
                      [
                        [
                          0,
                          [
                            {
                              "Column": 0
                            }
                          ],
                          {
                            "unique_key": false,
                            "key_length": 1,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 0
                          }
                        ],
                        [
                          2,
                          [
                            {
                              "Column": 0
                            },
                            {
                              "Column": 1
                            }
                          ],
                          {
                            "unique_key": false,
                            "key_length": 2,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 2
                          }
                        ]
                      ]
                    ]
                  },
                  "inputs": [
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 0
                            }
                          ]
                        ],
                        "input": {
                          "Get": {
                            "id": {
                              "Global": {
                                "User": 1
                              }
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ],
                              "keys": []
                            }
                          }
                        }
                      }
                    },
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 0
                            }
                          ]
                        ],
                        "input": {
                          "Get": {
                            "id": {
                              "Global": {
                                "User": 2
                              }
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ],
                              "keys": []
                            }
                          }
                        }
                      }
                    },
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 0
                            },
                            {
                              "Column": 1
                            }
                          ]
                        ],
                        "input": {
                          "Filter": {
                            "predicates": [
                              {
                                "CallUnary": {
                                  "func": {
                                    "Not": null
                                  },
                                  "expr": {
                                    "CallUnary": {
                                      "func": {
                                        "IsNull": null
                                      },
                                      "expr": {
                                        "Column": 0
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "CallUnary": {
                                  "func": {
                                    "Not": null
                                  },
                                  "expr": {
                                    "CallUnary": {
                                      "func": {
                                        "IsNull": null
                                      },
                                      "expr": {
                                        "Column": 1
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "input": {
                              "Get": {
                                "id": {
                                  "Global": {
                                    "User": 3
                                  }
                                },
                                "typ": {
                                  "column_types": [
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": true
                                    },
                                    {
                                      "scalar_type": "Int32",
                                      "nullable": true
                                    }
                                  ],
                                  "keys": []
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF

# Create indexes required for delta join tests

statement ok
CREATE INDEX t_b_idx ON T(b);

# Test a delta join WITH.
query T multiline
EXPLAIN OPTIMIZED PLAN WITH(raw) AS JSON FOR
SELECT a, b, c, d, e, f
FROM t, u, v
WHERE b = c and d = e
----
{
  "plans": [
    {
      "id": "Explained Query",
      "plan": {
        "Project": {
          "outputs": [
            0,
            1,
            1,
            3,
            3,
            5
          ],
          "input": {
            "Filter": {
              "predicates": [
                {
                  "CallUnary": {
                    "func": {
                      "Not": null
                    },
                    "expr": {
                      "CallUnary": {
                        "func": {
                          "IsNull": null
                        },
                        "expr": {
                          "Column": 1
                        }
                      }
                    }
                  }
                },
                {
                  "CallUnary": {
                    "func": {
                      "Not": null
                    },
                    "expr": {
                      "CallUnary": {
                        "func": {
                          "IsNull": null
                        },
                        "expr": {
                          "Column": 3
                        }
                      }
                    }
                  }
                }
              ],
              "input": {
                "Join": {
                  "equivalences": [
                    [
                      {
                        "Column": 1
                      },
                      {
                        "Column": 2
                      }
                    ],
                    [
                      {
                        "Column": 3
                      },
                      {
                        "Column": 4
                      }
                    ]
                  ],
                  "implementation": {
                    "DeltaQuery": [
                      [
                        [
                          1,
                          [
                            {
                              "Column": 0
                            }
                          ],
                          {
                            "unique_key": false,
                            "key_length": 1,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 1
                          }
                        ],
                        [
                          2,
                          [
                            {
                              "Column": 0
                            }
                          ],
                          {
                            "unique_key": false,
                            "key_length": 1,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 2
                          }
                        ]
                      ],
                      [
                        [
                          0,
                          [
                            {
                              "Column": 1
                            }
                          ],
                          {
                            "unique_key": false,
                            "key_length": 1,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 0
                          }
                        ],
                        [
                          2,
                          [
                            {
                              "Column": 0
                            }
                          ],
                          {
                            "unique_key": false,
                            "key_length": 1,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 2
                          }
                        ]
                      ],
                      [
                        [
                          1,
                          [
                            {
                              "Column": 1
                            }
                          ],
                          {
                            "unique_key": false,
                            "key_length": 1,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 1
                          }
                        ],
                        [
                          0,
                          [
                            {
                              "Column": 1
                            }
                          ],
                          {
                            "unique_key": false,
                            "key_length": 1,
                            "arranged": true,
                            "filters": {
                              "literal_equality": false,
                              "like": false,
                              "is_null": false,
                              "literal_inequality": 0,
                              "any_filter": false
                            },
                            "input": 0
                          }
                        ]
                      ]
                    ]
                  },
                  "inputs": [
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 1
                            }
                          ]
                        ],
                        "input": {
                          "Get": {
                            "id": {
                              "Global": {
                                "User": 1
                              }
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ],
                              "keys": []
                            }
                          }
                        }
                      }
                    },
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 0
                            }
                          ],
                          [
                            {
                              "Column": 1
                            }
                          ]
                        ],
                        "input": {
                          "Get": {
                            "id": {
                              "Global": {
                                "User": 2
                              }
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ],
                              "keys": []
                            }
                          }
                        }
                      }
                    },
                    {
                      "ArrangeBy": {
                        "keys": [
                          [
                            {
                              "Column": 0
                            }
                          ]
                        ],
                        "input": {
                          "Get": {
                            "id": {
                              "Global": {
                                "User": 3
                              }
                            },
                            "typ": {
                              "column_types": [
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                },
                                {
                                  "scalar_type": "Int32",
                                  "nullable": true
                                }
                              ],
                              "keys": []
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  ],
  "sources": []
}
EOF
