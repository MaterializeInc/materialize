# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

statement ok
CREATE TABLE t (
  a int,
  b int
)

statement ok
CREATE MATERIALIZED VIEW mv AS
SELECT * FROM t WHERE a IS NOT NULL

statement ok
CREATE RECORDED VIEW rv AS
SELECT * FROM t WHERE a IS NOT NULL

mode cockroach

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT a + 1, b, 4 FROM mv WHERE a > 0 LIMIT 1
----
Finish limit=1 output=[#0..=#2]
  Project #2, #1, #3
    Map (#0 + 1), 4
      Filter (#0 > 0)
        Get materialize.public.mv

EOF

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT * FROM generate_series(1, 7)
----
CallTable generate_series(1, 7, 1)

EOF

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT a FROM t EXCEPT SELECT b FROM mv
----
Threshold
  Union
    Distinct
      Project #1
        Map #0
          Project #0
            Get materialize.public.t
    Negate
      Distinct
        Project #1
          Map #0
            Project #1
              Get materialize.public.mv

EOF


query T multiline
EXPLAIN RAW PLAN FOR
WITH x AS (SELECT t.a * t.b as v from t) SELECT x.v + 5 FROM x
----
%0 = Let x (l0) =
| Get materialize.public.t (u1)
| Map (#0 * #1)
| Project (#2)

%1 =
| Get x (l0) (%0)
| Map (#0 + 5)
| Project (#1)

EOF

# Directly nested 'Let' variants are rendered in a flattened way
query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
WITH A AS (SELECT 1 AS a), B as (SELECT a as b FROM A WHERE a > 0) SELECT * FROM A, B;
----
Let
  InnerJoin true
    Get l0
    Get l1
  Where
    l1 =
      Filter (#0 > 0)
        Get l0
    l0 =
      Map 1
        Constant
          - ()

EOF

statement ok
CREATE VIEW ov AS SELECT * FROM t ORDER BY b asc, a desc LIMIT 5

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
VIEW ov
----
Project #0, #1
  TopK order_by=[#1 asc nulls_last, #0 desc nulls_first] limit=5
    Get materialize.public.t

EOF

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT * FROM t ORDER BY b asc, a desc LIMIT 5
----
Finish order_by=[#1 asc nulls_last, #0 desc nulls_first] limit=5 output=[#0, #1]
  Get materialize.public.t

EOF

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT abs(min(a) - max(a)) FROM t GROUP BY b
----
Project #3
  Map abs((#1 - #2))
    Reduce group_by=[#2]  aggregates=[min(#0), max(#0)]
      Map #1
        Get materialize.public.t

EOF

# This should be something like
#
# Filter exists(%1)
# | Get materialize.public.t
# |
# | Subquery %1
# |   Filter (#^0 = #0)
# |     Get materialize.public.t
query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT * FROM t WHERE EXISTS(SELECT * FROM t as t1 WHERE t.a = t1.a)
----
Filter ???
  Get materialize.public.t

EOF

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT t1.a, t2.a FROM t as t1, t as t2
----
Project #0, #2
  InnerJoin true
    Get materialize.public.t
    Get materialize.public.t

EOF

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT t1.a, t2.a FROM t as t1, t as t2 WHERE t1.b = t2.b
----
Project #0, #2
  Filter (#1 = #3)
    InnerJoin true
      Get materialize.public.t
      Get materialize.public.t

EOF

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT t1.a, t2.a FROM t as t1 JOIN t as t2 ON t1.b = t2.b
----
Project #0, #2
  InnerJoin (#1 = #3)
    Get materialize.public.t
    Get materialize.public.t

EOF

query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT t1.a, t2.a FROM t as t1 JOIN t as t2 ON t1.b = t2.b
----
Project #0, #2
  InnerJoin (#1 = #3)
    Get materialize.public.t
    Get materialize.public.t

EOF


# A case where we cannot pull the let statement up through teh join,
# because the local l0 is correlated against the lhs of the enclosing join
query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT
  *
FROM
  (
    SELECT * FROM t
  ) as r1
  CROSS JOIN LATERAL (
    WITH r2 as (
      SELECT MAX(r1.a * t.a) AS m FROM t
    )
    SELECT * FROM r2 WHERE r2.m != r1.a
  ) as r3
  CROSS JOIN LATERAL (
    WITH r4 as (
      SELECT MAX(r1.a * t.a) AS m FROM t
    )
    SELECT * FROM r4 WHERE r4.m != r1.a OR (r4.m IS NOT NULL AND r1.a IS NULL)
  ) as r5;
----
InnerJoin true
  InnerJoin true
    Get materialize.public.t
    Let
      Filter (#0 != #^0)
        Get l0
      Where
        l0 =
          Reduce aggregates=[max((#^0 * #0))]
            Get materialize.public.t
  Let
    Filter ((#0 != #^0) || ((#0) IS NOT NULL && (#^0) IS NULL))
      Get l0
    Where
      l0 =
        Reduce aggregates=[max((#^0 * #0))]
          Get materialize.public.t

EOF


# A case where we cannot pull the let statement up through teh join,
# because the local l0 is correlated against the lhs of the enclosing join
query T multiline
EXPLAIN RAW PLAN AS TEXT FOR
SELECT
  *
FROM
  (
    SELECT * FROM t
  ) as r1
  CROSS JOIN LATERAL (
    WITH r4 as (
      SELECT MAX(r1.a * t.a) AS m FROM t
    )
    SELECT *
    FROM
      r4
      CROSS JOIN LATERAL (
        WITH r2 as (
          SELECT MAX(r1.a * t.a) AS m FROM t
        )
        SELECT * FROM r2 WHERE r1.a = r4.m AND r2.m > 5
      ) as r3
    WHERE a != r1.a
  ) as r5;
----
InnerJoin true
  Get materialize.public.t
  Let
    Filter (#^0 != #^0)
      InnerJoin true
        Get l0
        Let
          Filter ((#^^0 = #^0) && (#0 > 5))
            Get l1
          Where
            l1 =
              Reduce aggregates=[max((#^^0 * #0))]
                Get materialize.public.t
    Where
      l0 =
        Reduce aggregates=[max((#^0 * #0))]
          Get materialize.public.t

EOF


# query T multiline
# EXPLAIN RAW PLAN AS TEXT FOR
# SELECT
#   *
# FROM
#   T as X
# WHERE
#   NOT EXISTS (SELECT * FROM T as Y WHERE X.a = Y.b)
# LIMIT 10
# ----
# %0 =
# | Get materialize.public.t (u1)
# | Filter NOT(exists(%1))
# | |
# | | %1 =
# | | | Get materialize.public.t (u1)
# | | | Filter (#^0 = #1)
# | |

# Finish order_by=() limit=10 offset=0 project=(#0, #1)

# EOF

# query T multiline
# EXPLAIN RAW PLAN WITH (TYPES) AS TEXT FOR
# VIEW v
# ----
# %0 =
# | Get materialize.public.t (u1)
# | | types = (integer?, integer?)
# | | keys = ()
# | Filter NOT(isnull(#0))
# | | types = (integer?, integer?)
# | | keys = ()

# EOF

# query T multiline
# EXPLAIN RAW PLAN WITH (TYPES) AS TEXT FOR
# RECORDED VIEW rv
# ----
# %0 =
# | Get materialize.public.t (u1)
# | | types = (integer?, integer?)
# | | keys = ()
# | Filter NOT(isnull(#0))
# | | types = (integer?, integer?)
# | | keys = ()

# EOF
