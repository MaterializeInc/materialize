# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

mode cockroach

reset-server

# Test mz_aclitem type and functions

query T
SELECT mz_internal.make_mz_aclitem('u1', 'u2', 'CREATE')
----
u1=C/u2

query T
SELECT mz_internal.make_mz_aclitem('u1', 'u2', 'CREATE, USAGE')
----
u1=UC/u2

query T
SELECT mz_internal.make_mz_aclitem('u1', 'u2', 'CREATE')::text
----
default_owner=C/materialize

query T
SELECT mz_internal.make_mz_aclitem('u1', 'u2', 'CREATE, USAGE')::text
----
default_owner=UC/materialize

query T
SELECT mz_internal.make_mz_aclitem('p', 'u2', 'CREATE')
----
=C/u2

query T
SELECT mz_internal.make_mz_aclitem('p', 'u2', 'CREATE, USAGE')
----
=UC/u2

query T
SELECT mz_internal.make_mz_aclitem('p', 'u2', 'SELECT')::text
----
=r/materialize

query T
SELECT mz_internal.make_mz_aclitem('p', 'u2', 'INSERT, SELECT')::text
----
=ar/materialize

query error mz_aclitem grantor cannot be PUBLIC role
SELECT mz_internal.make_mz_aclitem('u1', 'p', 'CREATE')

query error mz_aclitem grantor cannot be PUBLIC role
SELECT mz_internal.make_mz_aclitem('u1', 'p', 'CREATE, USAGE')

query T
SELECT mz_internal.mz_aclitem_grantee(mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE'))
----
u1

query T
SELECT mz_internal.mz_aclitem_grantee(mz_internal.make_mz_aclitem('p', 'u2', 'DELETE'))
----
p

query T
SELECT mz_internal.mz_aclitem_grantor(mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE'))
----
u2

query T
SELECT mz_internal.mz_aclitem_privileges(mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE'))
----
d

query B
SELECT mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE') = mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE')
----
true

query B
SELECT mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE') <> mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE')
----
false

query B
SELECT mz_internal.make_mz_aclitem('u3', 'u2', 'DELETE') = mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE')
----
false

query B
SELECT mz_internal.make_mz_aclitem('u1', 'u3', 'DELETE') = mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE')
----
false

query B
SELECT mz_internal.make_mz_aclitem('u1', 'u3', 'DELETE, USAGE') = mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE')
----
false

query B
SELECT mz_internal.make_mz_aclitem('u3', 'u2', 'DELETE') <> mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE')
----
true

query B
SELECT mz_internal.make_mz_aclitem('u1', 'u3', 'DELETE') <> mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE')
----
true

query B
SELECT mz_internal.make_mz_aclitem('u1', 'u3', 'DELETE, USAGE') <> mz_internal.make_mz_aclitem('u1', 'u2', 'DELETE')
----
true

# RoleIds that don't exist are printed as IDs instead of names

query T
SELECT mz_internal.make_mz_aclitem('u99991', 'u2', 'CREATE')::text
----
u99991=C/materialize

query T
SELECT mz_internal.make_mz_aclitem('u1', 'u87398', 'CREATE')::text
----
default_owner=C/u87398

query T
SELECT mz_internal.make_mz_aclitem('u3251', 's345', 'CREATE')::text
----
u3251=C/s345
