# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

statement ok
CREATE TABLE t1 (a int, b int)

statement ok
INSERT INTO t1 values (1, 2)

query T multiline
EXPLAIN SELECT (record).f2 FROM (SELECT ROW(a, a) AS record FROM t1);
----
Source materialize.public.t1 (u1):
| Project (#0)

Query:
%0 =
| Get materialize.public.t1 (u1)
| Map #0
| Project (#2)

EOF

query T multiline
EXPLAIN SELECT record, (record).f2 FROM (SELECT ROW(a, a) AS record FROM t1);
----
Source materialize.public.t1 (u1):
| Project (#0)

Query:
%0 =
| Get materialize.public.t1 (u1)
| Map record_create(#0, #0), record_get[1](#2)
| Project (#2, #3)

EOF

query T multiline
EXPLAIN SELECT (COALESCE(record, ROW(NULL, NULL))).f2 FROM (SELECT ROW(a, a) AS record FROM t1)
----
Source materialize.public.t1 (u1):
| Project (#0)

Query:
%0 =
| Get materialize.public.t1 (u1)
| Map #0
| Project (#2)

EOF

query T
SELECT abc FROM (VALUES (1, 2, (3,4), ROW(5, 6, 7))) as abc;
----
(1,2,"(3,4)","(5,6,7)")

# MirScalarExpr::reduce() should transform
# Literal([c1, c2]) = record_create(e1, e2)
# into
# c1 = e1 AND c2 = e2
#
# If this test fails in the future, one possible reason is the canonical ordering having been changed between
# MirScalarExpr::Literal and MirScalarExpr::CallVariadic, because then the argument ordering of the `Eq` changes, so
# reduce() doesn't recognize the pattern anymore.

query T multiline
EXPLAIN PLAN FOR SELECT * FROM t1 WHERE (t1.a, t1.b) IN ((1,2))
----
Source materialize.public.t1 (u1):
| Filter (#0 = 1), (#1 = 2)
| Project (#0, #1)

Query:
%0 =
| Get materialize.public.t1 (u1)
| Filter (#0 = 1), (#1 = 2)

EOF
