# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Test temporal filtering operators

mode cockroach

# Two columns here represent a validity interval [a, b].
# These values must be castable to mz_timestamp, otherwise the BETWEEN will error.
statement ok
CREATE VIEW intervals (a, b) AS VALUES (1, 10), (1, 2), (2, 13), (3, 1), (0, 10), (5, 18446744073709551614)

# Select out rows when each are valid.
statement ok
CREATE MATERIALIZED VIEW valid AS
SELECT *
FROM intervals
WHERE mz_now() BETWEEN a AND b;

query II rowsort
select * from valid AS OF 2;
----
0  10
1  10
1  2
2  13

query II rowsort
select * from valid AS OF 3;
----
0  10
1  10
2  13

query II rowsort
select * from valid AS OF 11;
----
2  13
5  18446744073709551614

query II rowsort
select * from valid AS OF 14;
----
5  18446744073709551614

# Test that rows are not dropped just before the end of time.
# That big number there should be u64::MAX.
query II rowsort
select * from valid AS OF 18446744073709551614;
----
5  18446744073709551614


# We don't currently support specifying the max timestamp due to a limitation in linear.rs and the step_mz_timestamp internal function.
# That big number there should be u64::MAX.
statement ok
CREATE VIEW intervals_max (a, b) AS VALUES (0, 18446744073709551615)

statement ok
CREATE MATERIALIZED VIEW valid_max AS
SELECT *
FROM intervals_max
WHERE mz_now() BETWEEN a AND b

query error step mz_timestamp overflow
select * from valid_max AS OF 0

#
# Regression test for #6635
#
statement ok
CREATE TABLE events (
    content text,
    insert_ts numeric,
    delete_ts numeric
);

statement ok
CREATE MATERIALIZED VIEW valid_events AS
SELECT content, count(*)
FROM events
WHERE mz_now() >= insert_ts
  AND mz_now()  < delete_ts
GROUP BY content;


query TI rowsort
select * from valid_events;
----

statement error mz_logical_timestamp\(\) has been renamed to mz_now\(\)
CREATE VIEW mlt AS SELECT 1 WHERE mz_logical_timestamp() = 0;
