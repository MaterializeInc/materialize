# Copyright Materialize, Inc. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

mode cockroach

# Use a constant source for the data instead of a table because this optmization
# only applies to monotonic (append-only) sources and a TABLE is not.
statement ok
CREATE VIEW cities AS SELECT name, state, pop FROM (VALUES
    ('Nullsville', 'CA', NULL),
    ('Los_Angeles', 'CA', 3979576),
    ('Phoenix', 'AZ', 1680992),
    ('Houston', 'TX', 2320268),
    ('San_Diego', 'CA', 1423851),
    ('San_Francisco', 'CA', 881549),
    ('New_York', 'NY', 8336817),
    ('Dallas', 'TX', 1343573),
    ('San_Antonio', 'TX', 1547253),
    ('San_Jose', 'CA', 1021795),
    ('Chicago', 'IL', 2695598),
    ('Austin', 'TX', 978908),
    ('Nulltown', 'Nostate', NULL)
) t(name, state, pop)

mode standard

# Verify that the VALUES isn't just constant folded all the way to an answer.
query T multiline
EXPLAIN PLAN FOR SELECT state, name FROM
    (SELECT DISTINCT state FROM cities) grp,
    LATERAL (SELECT name, pop FROM cities WHERE state = grp.state ORDER BY pop DESC LIMIT 1)
----
%0 =
| Constant ("Austin", "TX", 978908) ("Dallas", "TX", 1343573) ("Nullsville", "CA", null) ("Chicago", "IL", 2695598) ("Houston", "TX", 2320268) ("Phoenix", "AZ", 1680992) ("New_York", "NY", 8336817) ("San_Jose", "CA", 1021795) ("Nulltown", "Nostate", null) ("San_Diego", "CA", 1423851) ("Los_Angeles", "CA", 3979576) ("San_Antonio", "TX", 1547253) ("San_Francisco", "CA", 881549)
| TopK group=(#1) order=(#2 desc) limit=1 offset=0
| Project (#1, #0)

EOF

mode cockroach

query TT rowsort
SELECT state, name FROM
    (SELECT DISTINCT state FROM cities) grp,
    LATERAL (SELECT name FROM cities WHERE state = grp.state ORDER BY pop DESC LIMIT 1)
----
AZ  Phoenix
CA  Los_Angeles
IL  Chicago
NY  New_York
Nostate Nulltown
TX  Houston

# Also check ASC to stress NULL handling in the monoid.
query TT rowsort
SELECT state, name FROM
    (SELECT DISTINCT state FROM cities) grp,
    LATERAL (SELECT name FROM cities WHERE state = grp.state ORDER BY pop LIMIT 1)
----
AZ  Phoenix
CA  Nullsville
IL  Chicago
NY  New_York
Nostate  Nulltown
TX  Austin

# TABLEs are currently monotonic because they don't yet support UPDATE or DELETE. Use the postgres
# passthrough behavior to test the behavior of this optimization in case that changes.

mode cockroach

statement ok
CREATE TABLE cities_t (
    name text NOT NULL,
    state text NOT NULL,
    pop int NOT NULL
)

statement ok
INSERT INTO cities_t VALUES
    ('Los_Angeles', 'CA', 3979576),
    ('San_Francisco', 'CA', 881549)

statement ok
CREATE MATERIALIZED VIEW topk AS SELECT state, name FROM
    (SELECT DISTINCT state FROM cities_t) grp,
    LATERAL (SELECT name FROM cities_t WHERE state = grp.state ORDER BY pop DESC LIMIT 1);

mode cockroach

query TT rowsort
SELECT * FROM topk;
----
CA  Los_Angeles

statement ok
DELETE FROM cities_t WHERE name = 'Los_Angeles';

query TT rowsort
SELECT * FROM topk;
----
CA  San_Francisco
