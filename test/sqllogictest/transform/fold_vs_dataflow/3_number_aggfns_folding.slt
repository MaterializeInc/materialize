# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# use mode cockroach because it "respects the scale of a Decimal type and the precision of a floating point number"
# even though mode standard would allow easier file comparisons with the other computation mode
mode cockroach

# -------------------------------
# aggregate functions with big numbers
# -------------------------------

statement ok
CREATE VIEW v_using_constant_folding (real1, double1, numeric1, tint1, tint2) AS
SELECT
 1e38::real, 1e38::double, 1e38::numeric, (-32767)::INT2, (-1)::INT2
UNION ALL
SELECT
 2, 2, 2, 32767::INT2, 1::INT2;

query IIIIIIIIIIIIIIIIIIIIIIII
SELECT
 SUM(real1), SUM(double1), SUM(numeric1),
 SUM(real1 + real1), SUM(double1 + double1), SUM(numeric1 + numeric1),
 MIN(real1), MIN(double1), MIN(numeric1),
 MIN(real1 + real1), MIN(double1 + double1), MIN(numeric1 + numeric1),
 MAX(real1), MAX(double1), MAX(numeric1),
 MAX(real1 + real1), MAX(double1 + double1), MAX(numeric1 + numeric1),
 AVG(real1), AVG(double1), AVG(numeric1),
 AVG(real1 + real1), AVG(double1 + double1), AVG(numeric1 + numeric1)
FROM v_using_constant_folding;
----
9223372036854775807  9223372036854775807  100000000000000000000000000000000000002  9223372036854775807  9223372036854775807  200000000000000000000000000000000000004  2  2  2  4  4  4  9223372036854775807  9223372036854775807  100000000000000000000000000000000000000  9223372036854775807  9223372036854775807  200000000000000000000000000000000000000  9223372036854775807  9223372036854775807  9223372036854775807  9223372036854775807  9223372036854775807  9223372036854775807

query T multiline
EXPLAIN
SELECT
 SUM(real1), SUM(double1), SUM(numeric1),
 SUM(real1 + real1), SUM(double1 + double1), SUM(numeric1 + numeric1),
 MIN(real1), MIN(double1), MIN(numeric1),
 MIN(real1 + real1), MIN(double1 + double1), MIN(numeric1 + numeric1),
 MAX(real1), MAX(double1), MAX(numeric1),
 MAX(real1 + real1), MAX(double1 + double1), MAX(numeric1 + numeric1),
 AVG(real1), AVG(double1), AVG(numeric1),
 AVG(real1 + real1), AVG(double1 + double1), AVG(numeric1 + numeric1)
FROM v_using_constant_folding;
----
Explained Query (fast path):
  Constant


EOF

query error
SELECT
 STDDEV(real1)
FROM v_using_constant_folding;

query T multiline
EXPLAIN
SELECT
 STDDEV(real1)
FROM v_using_constant_folding;
----
Explained Query (fast path):
  Error "value out of range: overflow"

EOF
