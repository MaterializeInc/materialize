# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Regression test for
# bug: https://github.com/MaterializeInc/database-issues/issues/2874
# fix: https://github.com/MaterializeInc/materialize/pull/9398

simple conn=mz_system,user=mz_system
ALTER SYSTEM SET unsafe_enable_table_keys = true
----
COMPLETE 0

statement ok
CREATE TABLE t1 (f1 INTEGER, f2 INTEGER, f3 INTEGER);

statement ok
CREATE VIEW v1 AS SELECT DISTINCT f1, f2, f3 FROM t1;

statement ok
CREATE DEFAULT INDEX ON v1

#
# The optimization kicks in (no Distinct in final plan) since
# all parts of the key are accounted for.
#

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1, f2 FROM v1 WHERE f1 = f3;
----
Explained Query (fast path):
  Project (#0{f1}, #1{f2})
    Filter (#0{f1} = #2{f3})
      ReadIndex on=materialize.public.v1 v1_primary_idx=[*** full scan ***]

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT f1, f2 FROM v1 WHERE f1 = f3 GROUP BY f1, f2;
----
Explained Query (fast path):
  Project (#0{f1}, #1{f2})
    Filter (#0{f1} = #2{f3})
      ReadIndex on=materialize.public.v1 v1_primary_idx=[*** full scan ***]

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1, f3 FROM v1 WHERE f1 = f2;
----
Explained Query (fast path):
  Project (#0{f1}, #2{f3})
    Filter (#0{f1} = #1{f2})
      ReadIndex on=materialize.public.v1 v1_primary_idx=[*** full scan ***]

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f2, f3 FROM v1 WHERE f1 = f2;
----
Explained Query (fast path):
  Project (#1{f2}, #2{f3})
    Filter (#0{f1} = #1{f2})
      ReadIndex on=materialize.public.v1 v1_primary_idx=[*** full scan ***]

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1 FROM v1 WHERE f1 = f2 AND f1 = f3;
----
Explained Query (fast path):
  Project (#0{f1})
    Filter (#0{f1} = #1{f2}) AND (#0{f1} = #2{f3})
      ReadIndex on=materialize.public.v1 v1_primary_idx=[*** full scan ***]

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1, f3 FROM v1 WHERE f1 = f2 AND f1 = f3;
----
Explained Query (fast path):
  Project (#0{f1}, #2{f3})
    Filter (#0{f1} = #1{f2}) AND (#0{f1} = #2{f3})
      ReadIndex on=materialize.public.v1 v1_primary_idx=[*** full scan ***]

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f2, f3 FROM v1 WHERE f1 = f2 AND f1 = f3;
----
Explained Query (fast path):
  Project (#1{f2}, #2{f3})
    Filter (#0{f1} = #1{f2}) AND (#0{f1} = #2{f3})
      ReadIndex on=materialize.public.v1 v1_primary_idx=[*** full scan ***]

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f2, f3 FROM v1 WHERE f1 = f2 AND f2 = f3;
----
Explained Query (fast path):
  Project (#1{f2}, #2{f3})
    Filter (#0{f1} = #1{f2}) AND (#1{f2} = #2{f3})
      ReadIndex on=materialize.public.v1 v1_primary_idx=[*** full scan ***]

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

#
# No optimization for those cases as not all parts of the key participate in the equality
#

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1 FROM v1 WHERE f1 = f3;
----
Explained Query:
  Distinct project=[#0{f1}] // { arity: 1 }
    Project (#0{f1}) // { arity: 1 }
      Filter (#0{f1} = #2{f3}) // { arity: 3 }
        ReadIndex on=v1 v1_primary_idx=[*** full scan ***] // { arity: 3 }

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1, f2 FROM v1 WHERE f1 + 1 = f3;
----
Explained Query:
  Distinct project=[#0{f1}, #1{f2}] // { arity: 2 }
    Project (#0{f1}, #1{f2}) // { arity: 2 }
      Filter (#2{f3} = (#0{f1} + 1)) // { arity: 3 }
        ReadIndex on=v1 v1_primary_idx=[*** full scan ***] // { arity: 3 }

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1, f2 FROM v1 WHERE f1 > f3;
----
Explained Query:
  Distinct project=[#0{f1}, #1{f2}] // { arity: 2 }
    Project (#0{f1}, #1{f2}) // { arity: 2 }
      Filter (#0{f1} > #2{f3}) // { arity: 3 }
        ReadIndex on=v1 v1_primary_idx=[*** full scan ***] // { arity: 3 }

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1 + 1, f2 FROM v1 WHERE f1 = f3;
----
Explained Query:
  Distinct project=[(#0{f1} + 1), #1{f2}] // { arity: 2 }
    Project (#0{f1}, #1{f2}) // { arity: 2 }
      Filter (#0{f1} = #2{f3}) // { arity: 3 }
        ReadIndex on=v1 v1_primary_idx=[*** full scan ***] // { arity: 3 }

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f2, f3 FROM v1 WHERE f1 = f2 OR f1 = f3;
----
Explained Query:
  Distinct project=[#0{f2}, #1{f3}] // { arity: 2 }
    Project (#1{f2}, #2{f3}) // { arity: 2 }
      Filter ((#0{f1} = #1{f2}) OR (#0{f1} = #2{f3})) // { arity: 3 }
        ReadIndex on=v1 v1_primary_idx=[*** full scan ***] // { arity: 3 }

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1 + 1 , f2 FROM v1 WHERE f1 + 1 = f3;
----
Explained Query:
  Distinct project=[#1{f3}, #0{f2}] // { arity: 2 }
    Project (#1{f2}, #2{f3}) // { arity: 2 }
      Filter (#2{f3} = (#0{f1} + 1)) // { arity: 3 }
        ReadIndex on=v1 v1_primary_idx=[*** full scan ***] // { arity: 3 }

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1 FROM v1 WHERE f1 = f3;
----
Explained Query:
  Distinct project=[#0{f1}] // { arity: 1 }
    Project (#0{f1}) // { arity: 1 }
      Filter (#0{f1} = #2{f3}) // { arity: 3 }
        ReadIndex on=v1 v1_primary_idx=[*** full scan ***] // { arity: 3 }

Used Indexes:
  - materialize.public.v1_primary_idx (*** full scan ***)

Target cluster: quickstart

EOF

#
# Tests with a relation that has columns that do not participate in the key
#

statement ok
CREATE TABLE t2 (f1 INTEGER, f2 INTEGER, f3 INTEGER, f4 INTEGER, PRIMARY KEY (f1, f2));

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1, f3 FROM t2 WHERE f2 = f3;
----
Explained Query:
  Project (#0{f1}, #2{f3}) // { arity: 2 }
    Filter (#1{f2} = #2{f3}) // { arity: 4 }
      ReadStorage materialize.public.t2 // { arity: 4 }

Source materialize.public.t2
  filter=((#1{f2} = #2{f3}))

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f3 FROM t2 WHERE f1 = f2 AND f2 = f3;
----
Explained Query:
  Project (#2{f3}) // { arity: 1 }
    Filter (#0{f1} = #1{f2}) AND (#1{f2} = #2{f3}) // { arity: 4 }
      ReadStorage materialize.public.t2 // { arity: 4 }

Source materialize.public.t2
  filter=((#0{f1} = #1{f2}) AND (#1{f2} = #2{f3}))

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f2 FROM t2 WHERE f1 = f3 AND f3 = f2;
----
Explained Query:
  Project (#1{f2}) // { arity: 1 }
    Filter (#0{f1} = #2{f3}) AND (#1{f2} = #2{f3}) // { arity: 4 }
      ReadStorage materialize.public.t2 // { arity: 4 }

Source materialize.public.t2
  filter=((#0{f1} = #2{f3}) AND (#1{f2} = #2{f3}))

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f1, f2, f3, f4 FROM t2 WHERE f1 = f3 AND f2 = f4;
----
Explained Query:
  Filter (#0{f1} = #2{f3}) AND (#1{f2} = #3{f4}) // { arity: 4 }
    ReadStorage materialize.public.t2 // { arity: 4 }

Source materialize.public.t2
  filter=((#0{f1} = #2{f3}) AND (#1{f2} = #3{f4}))

Target cluster: quickstart

EOF


query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f3, f4 FROM t2 WHERE f1 = f3 AND f2 = f4;
----
Explained Query:
  Project (#2{f3}, #3{f4}) // { arity: 2 }
    Filter (#0{f1} = #2{f3}) AND (#1{f2} = #3{f4}) // { arity: 4 }
      ReadStorage materialize.public.t2 // { arity: 4 }

Source materialize.public.t2
  filter=((#0{f1} = #2{f3}) AND (#1{f2} = #3{f4}))

Target cluster: quickstart

EOF

#
# No optimization for the cases below
#

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f2, f3 FROM t2 WHERE f3 = f4;
----
Explained Query:
  Distinct project=[#0{f2}, #1{f3}] // { arity: 2 }
    Project (#1{f2}, #2{f3}) // { arity: 2 }
      Filter (#2{f3} = #3{f4}) // { arity: 4 }
        ReadStorage materialize.public.t2 // { arity: 4 }

Source materialize.public.t2
  filter=((#2{f3} = #3{f4}))

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f2 FROM t2 WHERE f1 = f3;
----
Explained Query:
  Distinct project=[#0{f2}] // { arity: 1 }
    Project (#1{f2}) // { arity: 1 }
      Filter (#0{f1} = #2{f3}) // { arity: 4 }
        ReadStorage materialize.public.t2 // { arity: 4 }

Source materialize.public.t2
  filter=((#0{f1} = #2{f3}))

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f3, f4 FROM t2 WHERE f1 = f3;
----
Explained Query:
  Distinct project=[#0{f3}, #1{f4}] // { arity: 2 }
    Project (#2{f3}, #3{f4}) // { arity: 2 }
      Filter (#0{f1} = #2{f3}) // { arity: 4 }
        ReadStorage materialize.public.t2 // { arity: 4 }

Source materialize.public.t2
  filter=((#0{f1} = #2{f3}))

Target cluster: quickstart

EOF

query T multiline
EXPLAIN OPTIMIZED PLAN WITH(humanized expressions, arity, join implementations) AS VERBOSE TEXT FOR SELECT DISTINCT f3 FROM t2 WHERE f1 = f2;
----
Explained Query:
  Distinct project=[#0{f3}] // { arity: 1 }
    Project (#2{f3}) // { arity: 1 }
      Filter (#0{f1} = #1{f2}) // { arity: 4 }
        ReadStorage materialize.public.t2 // { arity: 4 }

Source materialize.public.t2
  filter=((#0{f1} = #1{f2}))

Target cluster: quickstart

EOF
