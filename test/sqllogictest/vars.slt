# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

mode cockroach

# Start from a pristine server
reset-server

query T
SHOW extra_float_digits
----
3

statement ok
SET extra_float_digits=2
----

query T
SHOW extra_float_digits
----
2

simple
SET extra_float_digits=1;
SHOW extra_float_digits;
----
COMPLETE 0
1
COMPLETE 1

query T
SHOW extra_float_digits
----
1

simple
SET extra_float_digits=0;
SHOW extra_float_digits;
ROLLBACK;
----
COMPLETE 0
0
COMPLETE 1
COMPLETE 0

query T
SHOW extra_float_digits
----
1

simple
SET LOCAL extra_float_digits=-1;
SHOW extra_float_digits;
----
COMPLETE 0
-1
COMPLETE 1

query T
SHOW extra_float_digits
----
1

simple
SET LOCAL extra_float_digits=-2;
SHOW extra_float_digits;
ROLLBACK
----
COMPLETE 0
-2
COMPLETE 1
COMPLETE 0

query T
SHOW extra_float_digits
----
1

# Test resetting a variable.

statement ok
SET extra_float_digits=42

statement ok
SET extra_float_digits=DEFAULT

query T
SHOW extra_float_digits
----
3

statement ok
SET extra_float_digits=42

simple
SET LOCAL extra_float_digits=DEFAULT;
SHOW extra_float_digits;
----
COMPLETE 0
3
COMPLETE 1

query T
SHOW extra_float_digits
----
42

statement ok
RESET extra_float_digits

query T
SHOW extra_float_digits
----
3

# Test that resetting a read-only variable succeeds.

statement ok
SET server_version=DEFAULT

statement ok
RESET server_version

# Test that resetting an unknown variable fails.

statement error unrecognized configuration parameter
SET does_not_exist = DEFAULT

statement error unrecognized configuration parameter
RESET does_not_exist

# Test transaction isolation

query T
SHOW transaction_isolation
----
strict serializable

statement ok
SET transaction_isolation = serializable

query T
SHOW transaction_isolation
----
serializable

statement ok
SET transaction_isolation = 'read committed'

query T
SHOW transaction_isolation
----
serializable

statement error invalid value for parameter "transaction_isolation": "snapshot isolation"
SET transaction_isolation = 'snapshot isolation'

statement ok
SET transaction_isolation = 'strict serializable'

query T
SHOW transaction_isolation
----
strict serializable

statement ok
SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL SERIALIZABLE

query T
SHOW transaction_isolation
----
serializable

statement ok
SET TRANSACTION ISOLATION LEVEL STRICT SERIALIZABLE

query T
SHOW transaction_isolation
----
serializable

statement ok
BEGIN;

statement ok
SET TRANSACTION ISOLATION LEVEL STRICT SERIALIZABLE

query T
SHOW transaction_isolation
----
strict serializable

statement ok
COMMIT

query T
SHOW transaction_isolation
----
serializable

## Last isolation level write wins
statement ok
SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL SERIALIZABLE, ISOLATION LEVEL STRICT SERIALIZABLE

query T
SHOW transaction_isolation
----
strict serializable

statement error Expected transaction mode, found EOF
SET TRANSACTION

statement error SET TRANSACTION <access-mode> are not supported
SET TRANSACTION READ ONLY

# Test that a failed transaction will not commit var changes.

statement ok
CREATE TABLE t (i INT);

simple conn=1
SET extra_float_digits=-3;
COMMIT;
BEGIN;
SET extra_float_digits=-4;
INSERT INTO t VALUES (1);
----
COMPLETE 0
COMPLETE 0
COMPLETE 0
COMPLETE 0
COMPLETE 1

simple conn=2
DROP TABLE t;
----
COMPLETE 0

simple conn=1
COMMIT;
----
db error: ERROR: unknown catalog item 'u1'

simple conn=1
SHOW extra_float_digits
----
-3
COMPLETE 1

# Test the user= syntax for sqllogictest itself.
simple conn=mz_system,user=mz_system
ALTER SYSTEM SET max_tables = 100
----
COMPLETE 0

statement error parameter "idle_in_transaction_session_timeout" requires a "duration" value
SET idle_in_transaction_session_timeout TO '-10ms'

statement error unrecognized configuration parameter
SELECT current_setting('unknown')

statement error does not exist
SELECT current_setting(true)

query T
SELECT current_setting('unknown', true)
----
NULL

query T
SELECT current_setting('unknown', 'true')
----
NULL

statement error does not exist
SELECT current_setting('datestyle', 3)

statement error unrecognized configuration parameter
SELECT current_setting('unknown', false)

query T
SELECT current_setting('dateSTYLE')
----
ISO, MDY

statement ok
SET cluster_replica = 'r1'

query T
SELECT current_setting('cluster') || '.' || current_setting('cluster_replica')
----
default.r1

query T
SELECT current_setting('max_tables')
----
100

# Test multi-valued variable planning.

simple
set datestyle = iso,mdy;
show datestyle;
set datestyle = iso, mdy;
show datestyle;
set datestyle = "iso,mdy";
show datestyle;
set datestyle = "iso, mdy";
show datestyle;
set datestyle = 'iso,mdy';
show datestyle;
set datestyle = 'iso, mdy';
show datestyle;
set datestyle = '"iso", "mdy", "iso", "mdy"', "mdy", "iso", "ISO", "IsO", "mDy";
show datestyle;
----
COMPLETE 0
ISO, MDY
COMPLETE 1
COMPLETE 0
ISO, MDY
COMPLETE 1
COMPLETE 0
ISO, MDY
COMPLETE 1
COMPLETE 0
ISO, MDY
COMPLETE 1
COMPLETE 0
ISO, MDY
COMPLETE 1
COMPLETE 0
ISO, MDY
COMPLETE 1
COMPLETE 0
ISO, MDY
COMPLETE 1

statement error parameter "database" cannot have value "one","two": expects a single value
set database = one, two

# Test invalid values for float vars
# TODO(jkosh44) the error messages here are bad, but the best we can do right now. A user will
# never see this anyway since it's only exposed to admins.

simple conn=mz_system,user=mz_system
ALTER SYSTEM SET max_credit_consumption_rate = '-100.5'
----
db error: ERROR: parameter "max_credit_consumption_rate" cannot have value "-100.5": only supports non-negative, non-NaN numeric values

simple conn=mz_system,user=mz_system
ALTER SYSTEM SET max_credit_consumption_rate = NaN
----
db error: ERROR: parameter "max_credit_consumption_rate" cannot have value "NaN": only supports non-negative, non-NaN numeric values

statement ok
SET SCHEMA 'non-resolvable-name'

statement ok
SET SCHEMA TO 'non-resolvable-name'

statement ok
SET SCHEMA = 'non-resolvable-name'

query T
SHOW SCHEMA
----
NULL

statement ok
SET SCHEMA TO 'public'

query T
SHOW SCHEMA
----
public

statement error Expected end of statement, found comma
SET SCHEMA TO public, private, playground

statement ok
CREATE SCHEMA s

statement ok
SET SCHEMA TO s

query T
SHOW SCHEMA
----
s

statement ok
RESET SCHEMA

query T
SHOW SCHEMA
----
public

statement ok
SET SCHEMA TO s

query T
SHOW SCHEMA
----
s

statement ok
SET SCHEMA TO DEFAULT

query T
SHOW SCHEMA
----
public

query error db error: ERROR: SHOW variable in subqueries not yet supported
SELECT * FROM (show client_encoding)
