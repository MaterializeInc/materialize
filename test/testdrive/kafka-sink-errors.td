# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

$ postgres-execute connection=postgres://mz_system:materialize@${testdrive.materialize-internal-sql-addr}
ALTER SYSTEM SET enable_kafka_config_denylist_options = true

#
# Test various errors that can happen at CREATE SINK time and check how they are reported to the user
#

> CREATE MATERIALIZED VIEW v1 (f1) AS VALUES (1);

> CREATE CONNECTION kafka_conn
  TO KAFKA (BROKER '${testdrive.kafka-addr}');

> CREATE CONNECTION IF NOT EXISTS csr_conn TO CONFLUENT SCHEMA REGISTRY (
    URL '${testdrive.schema-registry-url}'
  );

! CREATE SINK invalid_partition_count FROM v1
  INTO KAFKA CONNECTION kafka_conn (PARTITION COUNT = a, TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:invalid PARTITION COUNT: cannot use value as number

! CREATE SINK invalid_partition_count FROM v1
  INTO KAFKA CONNECTION kafka_conn (PARTITION COUNT = -2, TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:PARTION COUNT for sink topics must be a positive integer or -1 for broker default

! CREATE SINK invalid_replication_factor FROM v1
  INTO KAFKA CONNECTION kafka_conn (REPLICATION FACTOR = a, TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:invalid REPLICATION FACTOR: cannot use value as number

! CREATE SINK invalid_replication_factor FROM v1
  INTO KAFKA CONNECTION kafka_conn (REPLICATION FACTOR = -2, TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:REPLICATION FACTOR for sink topics must be a positive integer or -1 for broker default

! CREATE SINK invalid_acks FROM v1
  INTO KAFKA CONNECTION kafka_conn (ACKS = foo, TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:Invalid value for configuration property "request.required.acks" acks foo

# Ensure that a sink whose topic fails to create does not result in an
# orphaned linked cluster. See #17061.
> SELECT count(*) FROM mz_clusters WHERE name = 'materialize_public_invalid_acks'
0

! CREATE SINK invalid_key FROM v1
  INTO KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  KEY(f2)
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:No such column: f2

#
# Retention options
#
! CREATE SINK invalid_retention_ms FROM v1
  INTO KAFKA CONNECTION kafka_conn (RETENTION MS = a, TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:invalid RETENTION MS: cannot use value as number

! CREATE SINK invalid_retention_ms FROM v1
  INTO KAFKA CONNECTION kafka_conn (RETENTION MS = -2, TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:RETENTION MS for sink topics must be greater than or equal to -1

! CREATE SINK invalid_retention_bytes FROM v1
  INTO KAFKA CONNECTION kafka_conn (RETENTION BYTES = a, TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:invalid RETENTION BYTES: cannot use value as number

! CREATE SINK invalid_retention_bytes FROM v1
  INTO KAFKA CONNECTION kafka_conn (RETENTION BYTES = -2, TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:RETENTION BYTES for sink topics must be greater than or equal to -1

#
# Sink dependencies
#

> CREATE SINK s1 FROM v1
  INTO KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

! CREATE SINK s2 FROM s1
  INTO KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM
contains:catalog item 'materialize.public.s1' is a sink and so cannot be depended upon

! CREATE VIEW v2 AS SELECT * FROM s1
contains:catalog item 'materialize.public.s1' is a sink and so cannot be depended upon

! SELECT * FROM s1
contains:catalog item 'materialize.public.s1' is a sink and so cannot be depended upon

> DROP SINK s1

$ file-append path=invalid-keytab
nonsense

#
# FORMAT
#

! CREATE SINK invalid_format FROM v1
  INTO KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  ENVELOPE DEBEZIUM
contains:sink without format not yet supported

! CREATE SINK invalid_format FROM v1
  INTO KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT NO_SUCH_FORMAT
  ENVELOPE DEBEZIUM
contains:found identifier "no_such_format"

! CREATE SINK invalid_envelope FROM v1
  INTO KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-kafka-sink-errors-${testdrive.seed}')
  FORMAT JSON
contains:ENVELOPE clause is required

# Expect empty output
> SHOW SINKS
