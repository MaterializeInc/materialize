# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Try to trigger a race by creating source, rendering it, then dropping, in a loop.

$ set-arg-default single-replica-cluster=quickstart

# Must be a subset of the keys in the rows AND
# in a different order than the value.
$ set keyschema={
    "type": "record",
    "name": "Key",
    "fields": [
        {"name": "b", "type": "string"},
        {"name": "a", "type": "long"}
    ]
  }

$ set schema={
    "type" : "record",
    "name" : "envelope",
    "fields" : [
      {
        "name": "before",
        "type": [
          {
            "name": "row",
            "type": "record",
            "fields": [
              {
                  "name": "a",
                  "type": "long"
              },
              {
                "name": "data",
                "type": "string"
              },
              {
                  "name": "b",
                  "type": "string"
              }]
           },
           "null"
         ]
      },
      {
        "name": "after",
        "type": ["row", "null"]
      }
    ]
  }

$ kafka-create-topic topic=dbzupsert partitions=1

# Create some background load
#> CREATE SOURCE counter FROM LOAD GENERATOR COUNTER (TICK INTERVAL '1ms')
#> CREATE MATERIALIZED VIEW counter_mv AS SELECT max(counter) FROM counter;

$ kafka-ingest format=avro topic=dbzupsert key-format=avro key-schema=${keyschema} schema=${schema} repeat=1000000
{"b": "bdata", "a": ${kafka-ingest.iteration}} {"before": {"row": {"a": ${kafka-ingest.iteration}, "data": "fish", "b": "bdata"}}, "after": {"row": {"a": ${kafka-ingest.iteration}, "data": "fish2", "b": "bdata"}}}

> CREATE CONNECTION IF NOT EXISTS csr_conn TO CONFLUENT SCHEMA REGISTRY (
    URL '${testdrive.schema-registry-url}'
  );

> CREATE CONNECTION kafka_conn
  TO KAFKA (BROKER '${testdrive.kafka-addr}', SECURITY PROTOCOL PLAINTEXT);

> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv

> DROP SOURCE upsert CASCADE
> CREATE SOURCE upsert
  IN CLUSTER ${arg.single-replica-cluster}
  FROM KAFKA CONNECTION kafka_conn (TOPIC 'testdrive-dbzupsert-${testdrive.seed}')

> CREATE TABLE upsert_tbl FROM SOURCE upsert (REFERENCE "testdrive-dbzupsert-${testdrive.seed}")
  FORMAT AVRO USING CONFLUENT SCHEMA REGISTRY CONNECTION csr_conn
  ENVELOPE DEBEZIUM

> CREATE MATERIALIZED VIEW mv AS SELECT * FROM upsert_tbl
> CREATE DEFAULT INDEX ON mv
